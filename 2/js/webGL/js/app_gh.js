"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),Earth=function(){function e(t){_classCallCheck(this,e),this.linesCache=[],this.isAnimate=!1,this.radius=100,this.segments=60,this.rotateX=0,this.rotateY=0,this.rotateVX=0,this.rotateVY=0,this.rotateXMax=90*Math.PI/180,this.rotateTargetX=0,this.rotateTargetY=0,this.dragging=!1,this.apply(this,t),this.wrap=this.el.get?this.el.get(0):"string"==typeof this.el?document.getElementById(this.el):this.el,this.el=document.createElement("div"),this.el.className="user-select",this.el.style="user-select: none;",this.wrap.appendChild(this.el),this.containt=document.createElement("div"),this.containt.style="user-select: none;",this.wrap.appendChild(this.containt),this.initScene()}return _createClass(e,[{key:"apply",value:function(e,t){if(e&&t&&"object"==(void 0===t?"undefined":_typeof(t)))for(var i in t)e[i]=t[i];return e}},{key:"initScene",value:function(){var e=this;this.renderer||(this.renderer=new THREE.WebGLRenderer({antialias:!1,alpha:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.autoClear=!1,this.renderer.sortObjects=!1,this.renderer.generateMipmaps=!1,this.el.appendChild(this.renderer.domElement)),this.scene||(this.scene=new THREE.Scene,this.scene.matrixAutoUpdate=!1),this.camera||(this.camera=new THREE.PerspectiveCamera(12,window.innerWidth/window.innerHeight,1,2e4),this.camera.position.z=1200,this.camera.position.y=0,this.scene.add(this.camera)),this.rotating||(this.rotating=new THREE.Object3D,this.scene.add(this.rotating)),this.visualizationMesh||(this.visualizationMesh=new THREE.Object3D,this.rotating.add(this.visualizationMesh)),this.sphere||(this.sphere=new THREE.Mesh(new THREE.SphereGeometry(this.radius,this.segments,this.segments),new THREE.MeshLambertMaterial({map:new THREE.ImageUtils.loadTexture("js/webGL/images/map.png"),color:670536,transparent:!0,opacity:.6})),this.rotating.add(this.sphere));var t=new Image;t.src="js/webGL/images/map_inverted.png",t.onload=function(){e.rotating.add(e.showEarth(t))},this.ring(),this.initLinght(),this.initFlightLine({lon:-43,lat:-22},{lon:116,lat:40}),this.initFlightLine({lon:-179,lat:30},{lon:116,lat:40}),this.initFlightLine({lon:140,lat:35},{lon:116,lat:40}),this.initFlightLine({lon:121.5,lat:25},{lon:116,lat:40}),this.initFlightLine({lon:106.5,lat:6.2},{lon:116,lat:40}),this.initFlightLine({lon:149,lat:-35},{lon:116,lat:40}),THREEx.WindowResize(this.renderer,this.camera),this.initTrackballControls()}},{key:"ring",value:function(){var e=new THREE.CubeGeometry(480,480,1),t=new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture("js/webGL/images/radial_layers_medium.jpg"),opacity:.4,blending:THREE.AdditiveBlending}),i=new THREE.Mesh(e,t);this.scene.add(i)}},{key:"showEarth",value:function(e){var t,i=document.createElement("canvas");i.width=e.width,i.height=e.height;var n=i.getContext("2d");n.drawImage(e,0,0,e.width,e.height);for(var o=n.getImageData(0,0,i.width,i.height),r=new THREE.Geometry,a=0;a<o.data.length;a+=5){var s=a/4%i.width,l=(a/4-s)/i.width;if(a/5%2==1&&l%2==1){if(0===o.data[a]){var h=s,c=l,v=(c/(i.height/180)-90)/-1,d=h/(i.width/360)-180;r.vertices.push(this.getVector3(v,d,this.radius))}}}var m={color:{type:"c",value:new THREE.Color(670536)}},u=new THREE.ShaderMaterial({uniforms:m,vertexShader:"\n        void main() {\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 3.0;\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform vec3 color;\n        void main() {\n          gl_FragColor = vec4(color, 1.0);\n        }\n      ",blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0}),t=new THREE.ParticleSystem(r,u);return t.sortParticles=!0,t}},{key:"initFlightLine",value:function(e,t){var i,n={pos:{type:"f",value:[]}},o=new THREE.Geometry;if(Math.abs(e.lon-t.lon)>180){i=Math.ceil(Math.abs(-180-e.lon-(180-t.lon))/.08),i=Math.ceil(Math.abs(-180-e.lon-(180-t.lon))/.08);var r,a,s;a=-180-e.lon,s=180-t.lon,r=Math.ceil(i*Math.abs(a)/(s-a));for(var l=Math.abs(e.lon-t.lon)/i,h=Math.abs(e.lat-t.lat)/i,c=1;c<i;c++){var v,d;v=c<=r?e.lon+c*a/r:180-(c-r)*s/(i-r),e.lat>t.lat?d=e.lat-c*h:e.lat<t.lat&&(d=e.lat+c*h);var m,u=this.radius/10;if(c<=i/2)m=this.radius+4*u/(i+2)*c-c*(c-1)/2*8*u/(Math.pow(i,2)+2*i);else{var g=i-c;m=this.radius+4*u/(i+2)*g-g*(g-1)/2*8*u/(Math.pow(i,2)+2*i)}o.vertices.push(this.getVector3(d,v,m)),n.pos.value.push(c)}}else{i=Math.abs(e.lon-t.lon)>Math.abs(e.lat-t.lat)?Math.ceil(Math.abs(e.lon-t.lon)/.08):Math.ceil(Math.abs(e.lat-t.lat)/.08);for(var l=Math.abs(e.lon-t.lon)/i,h=Math.abs(e.lat-t.lat)/i,c=1;c<i;c++){var v,d;e.lon>t.lon?v=e.lon-c*l:e.lon<t.lon&&(v=e.lon+c*l),e.lat>t.lat?d=e.lat-c*h:e.lat<t.lat&&(d=e.lat+c*h);var m,u=this.radius/10;if(c<=i/2)m=this.radius+4*u/(i+2)*c-c*(c-1)/2*8*u/(Math.pow(i,2)+2*i);else{var g=i-c;m=this.radius+4*u/(i+2)*g-g*(g-1)/2*8*u/(Math.pow(i,2)+2*i)}o.vertices.push(this.getVector3(d,v,m)),n.pos.value.push(c)}}var p={c:{type:"f",value:1},p:{type:"f",value:1.4},glowColor:{type:"c",value:new THREE.Color(16776960)},viewVector:{type:"v3",value:this.camera.position},time:{type:"f",value:0},color:{type:"c",value:new THREE.Color(14713139)},texture:{type:"t",value:0,texture:THREE.ImageUtils.loadTexture("js/webGL/images/particleA.png")}},E=new THREE.ShaderMaterial({attributes:n,uniforms:p,vertexShader:"\n        uniform vec3 viewVector;\n        uniform float c;\n        uniform float p;\n        varying float intensity;\n        attribute float pos;\n        varying float vPos;\n        varying vec3 vNormal;\n        uniform float time;\n        void main() {\n          vPos = pos;\n          if(vPos >= time && vPos <= time + 60.0) {\n            //vNormal = normalize(normal);\n            gl_PointSize = 3.0;\n          } else {\n            gl_PointSize = 2.0;\n          }\n          //vec3 vNormal = normalize(normalMatrix * normal);\n          //vec3 vNormel = normalize(normalMatrix * viewVector);\n          //intensity = pow(c - dot(vNormal, vNormel), p);\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform float time;\n        uniform vec3 color;\n        varying vec3 vColor;\n        varying float vPos;\n        varying vec3 vNormal;\n        uniform sampler2D texture;\n        uniform vec3 glowColor;\n        varying float intensity;\n        void main() {\n          //float light = 1.0 - fract((1.0) + fract(time * 0.6));\n          //vec3 glow = glowColor * intensity;\n          if(vPos >= time && vPos <= time + 60.0) {\n            //gl_FragColor = vec4(vec3(light, 0.0, 0.0) * (1.0 - 0.5), 1.0);\n            //gl_FragColor = 2.0 * vec4(1.0, 0.0, 0.0, 1.0);\n            //gl_FragColor = vec4(color, 1.0);\n            //gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n            gl_FragColor = vec4(color, 1.0);\n            //gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n          } else {\n            gl_FragColor = vec4(color, 0.1);\n          }\n        }\n      ",blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0}),f=new THREE.ParticleSystem(o,E);this.rotating.add(f),this.linesCache.push(f),f.update=function(){this.material.uniforms.time.value>=this.geometry.vertices.length?this.material.uniforms.time.value=0:this.material.uniforms.time.value+=9.5,this.geometry.verticesNeedUpdate=!0}}},{key:"initMap",value:function(){THREE.EdgesGeometry||(THREE.Geometry.prototype.clone=function(){return(new THREE.Geometry).copy(this)},THREE.Geometry.prototype.copy=function(e){var t,i,n,o,r,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,i=s.length;t<i;t++)this.vertices.push(s[t].clone());var l=e.colors;for(t=0,i=l.length;t<i;t++)this.colors.push(l[t].clone());var h=e.faces;for(t=0,i=h.length;t<i;t++)this.faces.push(h[t].clone());for(t=0,i=e.faceVertexUvs.length;t<i;t++){var c=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),n=0,o=c.length;n<o;n++){var v=c[n],d=[];for(r=0,a=v.length;r<a;r++){var m=v[r];d.push(m.clone())}this.faceVertexUvs[t].push(d)}}var u=e.morphTargets;for(t=0,i=u.length;t<i;t++){var g={};if(g.name=u[t].name,void 0!==u[t].vertices)for(g.vertices=[],n=0,o=u[t].vertices.length;n<o;n++)g.vertices.push(u[t].vertices[n].clone());if(void 0!==u[t].normals)for(g.normals=[],n=0,o=u[t].normals.length;n<o;n++)g.normals.push(u[t].normals[n].clone());this.morphTargets.push(g)}var p=e.morphNormals;for(t=0,i=p.length;t<i;t++){var E={};if(void 0!==p[t].vertexNormals)for(E.vertexNormals=[],n=0,o=p[t].vertexNormals.length;n<o;n++){var f=p[t].vertexNormals[n],y={};y.a=f.a.clone(),y.b=f.b.clone(),y.c=f.c.clone(),E.vertexNormals.push(y)}if(void 0!==p[t].faceNormals)for(E.faceNormals=[],n=0,o=p[t].faceNormals.length;n<o;n++)E.faceNormals.push(p[t].faceNormals[n].clone());this.morphNormals.push(E)}return this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},THREE.EdgesGeometry=function(e,t){THREE.BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var i,n,o,r,a=[],s=Math.cos(THREE.Math.DEG2RAD*t),l=[0,0],h={},c=["a","b","c"];console.log(e),e.isBufferGeometry?(r=new THREE.Geometry,r.fromBufferGeometry(e)):r=e.clone(),r.mergeVertices(),r.computeFaceNormals();for(var v=r.vertices,d=r.faces,m=0,u=d.length;m<u;m++)for(var g=d[m],p=0;p<3;p++)i=g[c[p]],n=g[c[(p+1)%3]],l[0]=Math.min(i,n),l[1]=Math.max(i,n),o=l[0]+","+l[1],void 0===h[o]?h[o]={index1:l[0],index2:l[1],face1:m,face2:void 0}:h[o].face2=m;for(o in h){var E=h[o];if(void 0===E.face2||d[E.face1].normal.dot(d[E.face2].normal)<=s){var f=v[E.index1];a.push(f.x,f.y,f.z),f=v[E.index2],a.push(f.x,f.y,f.z)}}},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry),THREE.LineSegments||(THREE.LineSegments=function(e,t){THREE.Line.call(this,e,t),this.type="LineSegments"}),THREE.EdgesHelper||(THREE.EdgesHelper=function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new THREE.LineSegments(new THREE.EdgesGeometry(e.geometry),new THREE.LineBasicMaterial({color:void 0!==t?t:16777215}))});var e;for(var t in country_data){e=new Tessalator3D(country_data[t],0);country_data[t].data.cont,new THREE.Color(1063999);var i=country_data[t].mesh=new THREE.Mesh(e,new THREE.MeshLambertMaterial({emissive:1063999}));this.rotating.add(i)}}},{key:"initTrackballControls",value:function(){var e=this;this.mouseX=0,this.mouseY=0,this.pmouseX=0,this.pmouseY=0,this.pressX=0,this.pressY=0,this.keyboard=new THREEx.KeyboardState,this.onDocumentResize=function(e){},this.onDocumentMouseDown=function(e){this.dragging=!0,this.pressX=this.mouseX,this.pressY=this.mouseY,this.rotateTargetX=void 0,this.rotateTargetX=void 0},this.onDocumentMouseMove=function(e){this.pmouseX=this.mouseX,this.pmouseY=this.mouseY,this.mouseX=e.clientX-.5*window.innerWidth,this.mouseY=e.clientY-.5*window.innerHeight,this.dragging&&(0==this.keyboard.pressed("shift")?(this.rotateVY+=(this.mouseX-this.pmouseX)/2*Math.PI/180*.3,this.rotateVX+=(this.mouseY-this.pmouseY)/2*Math.PI/180*.3):(this.camera.position.x-=.5*(this.mouseX-this.pmouseX),this.camera.position.y+=.5*(this.mouseY-this.pmouseY)))},this.onDocumentMouseUp=function(e){this.dragging=!1},this.onMouseWheel=function(e){var t=0;e.wheelDelta?t=e.wheelDelta/120:e.detail&&(t=-e.detail/3),t&&(this.camera.scale.z+=.1*t,this.camera.scale.z=this.constrain(this.camera.scale.z,.7,5)),e.returnValue=!1},this.renderer.domElement.addEventListener("windowResize",function(t){e.onDocumentResize(t)},!1),this.renderer.domElement.addEventListener("mousedown",function(t){e.onDocumentMouseDown(t)},!0),this.renderer.domElement.addEventListener("mousemove",function(t){e.onDocumentMouseMove(t)},!0),this.renderer.domElement.addEventListener("mouseup",function(t){e.onDocumentMouseUp(t)},!1),this.renderer.domElement.addEventListener("mousewheel",function(t){e.onMouseWheel(t)},!1),this.renderer.domElement.addEventListener("DOMMouseScroll",function(t){e.onMouseWheel(window.event||t)},!1)}},{key:"initLinght",value:function(){var e=new THREE.PointLight(3394815,20);e.position.x=0,e.position.y=0,e.position.z=600,e.castShadow=!0,this.scene.add(e);var t=new THREE.PointLight(3394815,1.25,400,2);t.position.x=-50,t.position.y=150,t.position.z=600,this.scene.add(t);var i=new THREE.PointLight(3394815,1.25,400,2);i.position.x=100,i.position.y=50,i.position.z=600,this.scene.add(i);var n=new THREE.PointLight(3394815,1.25,400,2);n.position.x=0,n.position.y=-300,n.position.z=600,this.scene.add(n)}},{key:"getVector3",value:function(e,t,i){i=i||this.radius;var n=(90-e)*Math.PI/180,o=(t-180)*Math.PI/180,r=new THREE.Vector3;return r.x=-i*Math.sin(n)*Math.cos(o),r.y=i*Math.cos(n),r.z=i*Math.sin(n)*Math.sin(o),r}},{key:"isVersion49",value:function(){return 49==THREE.REVISION}},{key:"drawLine",value:function(e,t,i,n){var o=e.clone()[this.isVersion49()?"subSelf":"sub"](t).length(),r=(this.radius,e.clone()[this.isVersion49()?"lerpSelf":"lerp"](t,.5)),a=r.length();r.normalize(),r.multiplyScalar(a+.5*o);var s=(new THREE.Vector3).sub(e,t);s.normalize();var l=.5*o,h=e,c=r.clone()[this.isVersion49()?"addSelf":"add"](s.clone().multiplyScalar(l)),v=r.clone()[this.isVersion49()?"addSelf":"add"](s.clone().multiplyScalar(-l)),d=t,m=new THREE.CubicBezierCurve3(e,h,c,r),u=new THREE.CubicBezierCurve3(r,v,d,t),g=2*Math.floor(.5*o+6),p=m.getPoints(g);p=p.splice(0,p.length-1),p=p.concat(u.getPoints(g)),p.push(new THREE.Vector3(0,0,0));for(var E=new THREE.Geometry,f=0;f<p.length;f++)E.vertices.push(p[f]);E.size=30,this.rotating.add(this.getPoints(E,30,n))}},{key:"getPoints",value:function(e,t,i){var n=new THREE.Line(e,new THREE.LineBasicMaterial({opacity:1,blending:THREE.AdditiveBlending,transparent:!0,depthWrite:!1,vertexColors:!0}));n.renderDepth=!1;var o=new THREE.Geometry;for(var r in e.vertices)o.vertices.push(e.vertices[r]);var a={scale:{type:"v3",value:new THREE.Vector3(1,1,1)},time:{type:"f",value:0},color:{type:"c",value:new THREE.Color(47086)}};this.shaderMaterial=new THREE.ShaderMaterial({uniforms:a,vertexShader:"\n        uniform float time;\n        uniform vec3 scale;\n        varying vec3 vNormal;\n        void main() {\n          //vNormal = normal;\n          vec3 test = vec3(time, time, time);\n          vec3 newPosition = position * test;\n          //vec3 newPosition = position * scale;\n          //gl_PointSize = 10.0;\n          //gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n          //vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          //gl_PointSize = time;\n          //gl_PointSize = 2.0;\n          //gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform vec3 color;\n        varying vec3 vColor;\n        varying vec3 vNormal;\n        void main() {\n          //vec3 light = vec3(0.5, 0.2, 1.0);\n          //light = normalize(light);\n          //float dProd = max(0.0, dot(vNormal, light));\n          //gl_FragColor = vec4(dProd, dProd, dProd, 1.0);\n          //gl_FragColor = vec4(color, 1.0);\n          \n          gl_FragColor = 2.0 * vec4(1.0, 0.0, 0.0, 1.0);\n        }\n      "});var s=new THREE.ParticleSystem(o,this.shaderMaterial);return n.add(s),n}},{key:"getSplineOutline",value:function(e,t,i){var n=new THREE.LineBasicMaterial({color:14893105,opacity:1,linewidth:1e3});return new THREE.Line(e,n)}},{key:"getMesh",value:function(e,t,i){var n,o=new THREE.Geometry,r=[],a=new THREE.Geometry,s=[],l=new THREE.Color(4778678);for(var h in e.vertices){var c=e.vertices[h];r.push(l),n=l}THREE.GeometryUtils.merge(o,e);var v=n.clone(),d=e.vertices,m=Math.floor(t/10/e.vertices.length)+1;m=this.constrain(m,1,100);for(var u=e.size,h=0;h<m;h++){var g=h/m*d.length,p=this.constrain(Math.floor(g),0,d.length-1),E=d[p],f=E.clone();f.moveIndex=p,f.nextIndex=p+1,f.nextIndex>=d.length&&(f.nextIndex=0),f.lerpN=0,f.path=d,a.vertices.push(f),f.size=u,s.push(v)}o.colors=r;var y=new THREE.Line(o,new THREE.LineBasicMaterial({opacity:1,blending:THREE.AdditiveBlending,transparent:!0,depthWrite:!1,vertexColors:!0}));y.renderDepth=!1;var w={size:{type:"f",value:[]},customColor:{type:"c",value:[]}},T=new THREE.ShaderMaterial({uniforms:{amplitude:{type:"f",value:1},color:{type:"c",value:new THREE.Color(16777215)},texture:{type:"t",value:0,texture:THREE.ImageUtils.loadTexture("js/webGL/images/particleA.png")}},attributes:w,vertexShader:"\n      uniform float amplitude;\n      attribute float size;\n      attribute vec3 customColor;\n      varying vec3 vColor;\n      void main() {\n        vColor = customColor;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n      }",fragmentShader:"\n      uniform vec3 color;\n      uniform sampler2D texture;\n      varying vec3 vColor;\n      void main() {\n        gl_FragColor = vec4(color * vColor, 1.0);\n        gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      }",blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0});a.colors=s;var R=new THREE.ParticleSystem(a,T);R.dynamic=!0,y.add(R);for(var H=R.geometry.vertices,M=w.size.value,x=w.customColor.value,c=0;c<H.length;c++)M[c]=R.geometry.vertices[c].size,x[c]=s[c];return R.update=function(){for(var e in this.geometry.vertices){var t=this.geometry.vertices[e],i=t.path;i.length;t.lerpN+=.1,t.lerpN>1&&(t.lerpN=0,t.moveIndex=t.nextIndex,++t.nextIndex>=i.length&&(t.moveIndex=0,t.nextIndex=1));var n=i[t.moveIndex],o=i[t.nextIndex];t.copy(n),t.lerpSelf(o,t.lerpN)}this.geometry.verticesNeedUpdate=!0},y}},{key:"constrain",value:function(e,t,i){return e<t?e=t:e>i&&(e=i),e}},{key:"addItem",value:function(e){var t=e.source,i=e.target,n=t.latlon.split(","),o=i.latlon.split(",");this.drawLine(this.getVector3(n[1],n[0]),this.getVector3(o[1],o[0]))}},{key:"load",value:function(e){this.isAnimate||(this.animate(),this.isAnimate=!0);for(var t=0;t<e.length;t++)this.addItem(e[t])}}]),e}();