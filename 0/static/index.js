!function(t,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var e=n();for(var r in e)("object"==typeof exports?exports:t)[r]=e[r]}}(window,function(){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,e),a.l=!0,a.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=3)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* unused harmony export ACESFilmicToneMapping */\n/* unused harmony export AddEquation */\n/* unused harmony export AddOperation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AdditiveBlending; });\n/* unused harmony export AlphaFormat */\n/* unused harmony export AlwaysDepth */\n/* unused harmony export AlwaysStencilFunc */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AmbientLight; });\n/* unused harmony export AmbientLightProbe */\n/* unused harmony export AnimationClip */\n/* unused harmony export AnimationLoader */\n/* unused harmony export AnimationMixer */\n/* unused harmony export AnimationObjectGroup */\n/* unused harmony export AnimationUtils */\n/* unused harmony export ArcCurve */\n/* unused harmony export ArrayCamera */\n/* unused harmony export ArrowHelper */\n/* unused harmony export Audio */\n/* unused harmony export AudioAnalyser */\n/* unused harmony export AudioContext */\n/* unused harmony export AudioListener */\n/* unused harmony export AudioLoader */\n/* unused harmony export AxesHelper */\n/* unused harmony export AxisHelper */\n/* unused harmony export BackSide */\n/* unused harmony export BasicDepthPacking */\n/* unused harmony export BasicShadowMap */\n/* unused harmony export BinaryTextureLoader */\n/* unused harmony export Bone */\n/* unused harmony export BooleanKeyframeTrack */\n/* unused harmony export BoundingBoxHelper */\n/* unused harmony export Box2 */\n/* unused harmony export Box3 */\n/* unused harmony export Box3Helper */\n/* unused harmony export BoxBufferGeometry */\n/* unused harmony export BoxGeometry */\n/* unused harmony export BoxHelper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BufferAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return BufferGeometry; });\n/* unused harmony export BufferGeometryLoader */\n/* unused harmony export ByteType */\n/* unused harmony export Cache */\n/* unused harmony export Camera */\n/* unused harmony export CameraHelper */\n/* unused harmony export CanvasRenderer */\n/* unused harmony export CanvasTexture */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CatmullRomCurve3; });\n/* unused harmony export CineonToneMapping */\n/* unused harmony export CircleBufferGeometry */\n/* unused harmony export CircleGeometry */\n/* unused harmony export ClampToEdgeWrapping */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return Clock; });\n/* unused harmony export ClosedSplineCurve3 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return Color; });\n/* unused harmony export ColorKeyframeTrack */\n/* unused harmony export CompressedTexture */\n/* unused harmony export CompressedTextureLoader */\n/* unused harmony export ConeBufferGeometry */\n/* unused harmony export ConeGeometry */\n/* unused harmony export CubeCamera */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return BoxGeometry; });\n/* unused harmony export CubeReflectionMapping */\n/* unused harmony export CubeRefractionMapping */\n/* unused harmony export CubeTexture */\n/* unused harmony export CubeTextureLoader */\n/* unused harmony export CubeUVReflectionMapping */\n/* unused harmony export CubeUVRefractionMapping */\n/* unused harmony export CubicBezierCurve */\n/* unused harmony export CubicBezierCurve3 */\n/* unused harmony export CubicInterpolant */\n/* unused harmony export CullFaceBack */\n/* unused harmony export CullFaceFront */\n/* unused harmony export CullFaceFrontBack */\n/* unused harmony export CullFaceNone */\n/* unused harmony export Curve */\n/* unused harmony export CurvePath */\n/* unused harmony export CustomBlending */\n/* unused harmony export CylinderBufferGeometry */\n/* unused harmony export CylinderGeometry */\n/* unused harmony export Cylindrical */\n/* unused harmony export DataTexture */\n/* unused harmony export DataTexture2DArray */\n/* unused harmony export DataTexture3D */\n/* unused harmony export DataTextureLoader */\n/* unused harmony export DecrementStencilOp */\n/* unused harmony export DecrementWrapStencilOp */\n/* unused harmony export DefaultLoadingManager */\n/* unused harmony export DepthFormat */\n/* unused harmony export DepthStencilFormat */\n/* unused harmony export DepthTexture */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return DirectionalLight; });\n/* unused harmony export DirectionalLightHelper */\n/* unused harmony export DirectionalLightShadow */\n/* unused harmony export DiscreteInterpolant */\n/* unused harmony export DodecahedronBufferGeometry */\n/* unused harmony export DodecahedronGeometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return DoubleSide; });\n/* unused harmony export DstAlphaFactor */\n/* unused harmony export DstColorFactor */\n/* unused harmony export DynamicBufferAttribute */\n/* unused harmony export DynamicCopyUsage */\n/* unused harmony export DynamicDrawUsage */\n/* unused harmony export DynamicReadUsage */\n/* unused harmony export EdgesGeometry */\n/* unused harmony export EdgesHelper */\n/* unused harmony export EllipseCurve */\n/* unused harmony export EqualDepth */\n/* unused harmony export EqualStencilFunc */\n/* unused harmony export EquirectangularReflectionMapping */\n/* unused harmony export EquirectangularRefractionMapping */\n/* unused harmony export Euler */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return EventDispatcher; });\n/* unused harmony export ExtrudeBufferGeometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return ExtrudeGeometry; });\n/* unused harmony export Face3 */\n/* unused harmony export Face4 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return FaceColors; });\n/* unused harmony export FileLoader */\n/* unused harmony export FlatShading */\n/* unused harmony export Float32Attribute */\n/* unused harmony export Float32BufferAttribute */\n/* unused harmony export Float64Attribute */\n/* unused harmony export Float64BufferAttribute */\n/* unused harmony export FloatType */\n/* unused harmony export Fog */\n/* unused harmony export FogExp2 */\n/* unused harmony export Font */\n/* unused harmony export FontLoader */\n/* unused harmony export FrontFaceDirectionCCW */\n/* unused harmony export FrontFaceDirectionCW */\n/* unused harmony export FrontSide */\n/* unused harmony export Frustum */\n/* unused harmony export GammaEncoding */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return Geometry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return GeometryUtils; });\n/* unused harmony export GreaterDepth */\n/* unused harmony export GreaterEqualDepth */\n/* unused harmony export GreaterEqualStencilFunc */\n/* unused harmony export GreaterStencilFunc */\n/* unused harmony export GridHelper */\n/* unused harmony export Group */\n/* unused harmony export HalfFloatType */\n/* unused harmony export HemisphereLight */\n/* unused harmony export HemisphereLightHelper */\n/* unused harmony export HemisphereLightProbe */\n/* unused harmony export IcosahedronBufferGeometry */\n/* unused harmony export IcosahedronGeometry */\n/* unused harmony export ImageBitmapLoader */\n/* unused harmony export ImageLoader */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return ImageUtils; });\n/* unused harmony export ImmediateRenderObject */\n/* unused harmony export IncrementStencilOp */\n/* unused harmony export IncrementWrapStencilOp */\n/* unused harmony export InstancedBufferAttribute */\n/* unused harmony export InstancedBufferGeometry */\n/* unused harmony export InstancedInterleavedBuffer */\n/* unused harmony export InstancedMesh */\n/* unused harmony export Int16Attribute */\n/* unused harmony export Int16BufferAttribute */\n/* unused harmony export Int32Attribute */\n/* unused harmony export Int32BufferAttribute */\n/* unused harmony export Int8Attribute */\n/* unused harmony export Int8BufferAttribute */\n/* unused harmony export IntType */\n/* unused harmony export InterleavedBuffer */\n/* unused harmony export InterleavedBufferAttribute */\n/* unused harmony export Interpolant */\n/* unused harmony export InterpolateDiscrete */\n/* unused harmony export InterpolateLinear */\n/* unused harmony export InterpolateSmooth */\n/* unused harmony export InvertStencilOp */\n/* unused harmony export JSONLoader */\n/* unused harmony export KeepStencilOp */\n/* unused harmony export KeyframeTrack */\n/* unused harmony export LOD */\n/* unused harmony export LatheBufferGeometry */\n/* unused harmony export LatheGeometry */\n/* unused harmony export Layers */\n/* unused harmony export LensFlare */\n/* unused harmony export LessDepth */\n/* unused harmony export LessEqualDepth */\n/* unused harmony export LessEqualStencilFunc */\n/* unused harmony export LessStencilFunc */\n/* unused harmony export Light */\n/* unused harmony export LightProbe */\n/* unused harmony export LightShadow */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return Line; });\n/* unused harmony export Line3 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return LineBasicMaterial; });\n/* unused harmony export LineCurve */\n/* unused harmony export LineCurve3 */\n/* unused harmony export LineDashedMaterial */\n/* unused harmony export LineLoop */\n/* unused harmony export LinePieces */\n/* unused harmony export LineSegments */\n/* unused harmony export LineStrip */\n/* unused harmony export LinearEncoding */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return LinearFilter; });\n/* unused harmony export LinearInterpolant */\n/* unused harmony export LinearMipMapLinearFilter */\n/* unused harmony export LinearMipMapNearestFilter */\n/* unused harmony export LinearMipmapLinearFilter */\n/* unused harmony export LinearMipmapNearestFilter */\n/* unused harmony export LinearToneMapping */\n/* unused harmony export Loader */\n/* unused harmony export LoaderUtils */\n/* unused harmony export LoadingManager */\n/* unused harmony export LogLuvEncoding */\n/* unused harmony export LoopOnce */\n/* unused harmony export LoopPingPong */\n/* unused harmony export LoopRepeat */\n/* unused harmony export LuminanceAlphaFormat */\n/* unused harmony export LuminanceFormat */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return MOUSE; });\n/* unused harmony export Material */\n/* unused harmony export MaterialLoader */\n/* unused harmony export Math */\n/* unused harmony export MathUtils */\n/* unused harmony export Matrix3 */\n/* unused harmony export Matrix4 */\n/* unused harmony export MaxEquation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return Mesh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return MeshBasicMaterial; });\n/* unused harmony export MeshDepthMaterial */\n/* unused harmony export MeshDistanceMaterial */\n/* unused harmony export MeshFaceMaterial */\n/* unused harmony export MeshLambertMaterial */\n/* unused harmony export MeshMatcapMaterial */\n/* unused harmony export MeshNormalMaterial */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return MeshPhongMaterial; });\n/* unused harmony export MeshPhysicalMaterial */\n/* unused harmony export MeshStandardMaterial */\n/* unused harmony export MeshToonMaterial */\n/* unused harmony export MinEquation */\n/* unused harmony export MirroredRepeatWrapping */\n/* unused harmony export MixOperation */\n/* unused harmony export MultiMaterial */\n/* unused harmony export MultiplyBlending */\n/* unused harmony export MultiplyOperation */\n/* unused harmony export NearestFilter */\n/* unused harmony export NearestMipMapLinearFilter */\n/* unused harmony export NearestMipMapNearestFilter */\n/* unused harmony export NearestMipmapLinearFilter */\n/* unused harmony export NearestMipmapNearestFilter */\n/* unused harmony export NeverDepth */\n/* unused harmony export NeverStencilFunc */\n/* unused harmony export NoBlending */\n/* unused harmony export NoColors */\n/* unused harmony export NoToneMapping */\n/* unused harmony export NormalBlending */\n/* unused harmony export NotEqualDepth */\n/* unused harmony export NotEqualStencilFunc */\n/* unused harmony export NumberKeyframeTrack */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return Object3D; });\n/* unused harmony export ObjectLoader */\n/* unused harmony export ObjectSpaceNormalMap */\n/* unused harmony export OctahedronBufferGeometry */\n/* unused harmony export OctahedronGeometry */\n/* unused harmony export OneFactor */\n/* unused harmony export OneMinusDstAlphaFactor */\n/* unused harmony export OneMinusDstColorFactor */\n/* unused harmony export OneMinusSrcAlphaFactor */\n/* unused harmony export OneMinusSrcColorFactor */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return OrthographicCamera; });\n/* unused harmony export PCFShadowMap */\n/* unused harmony export PCFSoftShadowMap */\n/* unused harmony export PMREMGenerator */\n/* unused harmony export ParametricBufferGeometry */\n/* unused harmony export ParametricGeometry */\n/* unused harmony export Particle */\n/* unused harmony export ParticleBasicMaterial */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return ParticleSystem; });\n/* unused harmony export ParticleSystemMaterial */\n/* unused harmony export Path */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return PerspectiveCamera; });\n/* unused harmony export Plane */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return PlaneBufferGeometry; });\n/* unused harmony export PlaneGeometry */\n/* unused harmony export PlaneHelper */\n/* unused harmony export PointCloud */\n/* unused harmony export PointCloudMaterial */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return PointLight; });\n/* unused harmony export PointLightHelper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return Points; });\n/* unused harmony export PointsMaterial */\n/* unused harmony export PolarGridHelper */\n/* unused harmony export PolyhedronBufferGeometry */\n/* unused harmony export PolyhedronGeometry */\n/* unused harmony export PositionalAudio */\n/* unused harmony export PropertyBinding */\n/* unused harmony export PropertyMixer */\n/* unused harmony export QuadraticBezierCurve */\n/* unused harmony export QuadraticBezierCurve3 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return Quaternion; });\n/* unused harmony export QuaternionKeyframeTrack */\n/* unused harmony export QuaternionLinearInterpolant */\n/* unused harmony export REVISION */\n/* unused harmony export RGBADepthPacking */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return RGBAFormat; });\n/* unused harmony export RGBAIntegerFormat */\n/* unused harmony export RGBA_ASTC_10x10_Format */\n/* unused harmony export RGBA_ASTC_10x5_Format */\n/* unused harmony export RGBA_ASTC_10x6_Format */\n/* unused harmony export RGBA_ASTC_10x8_Format */\n/* unused harmony export RGBA_ASTC_12x10_Format */\n/* unused harmony export RGBA_ASTC_12x12_Format */\n/* unused harmony export RGBA_ASTC_4x4_Format */\n/* unused harmony export RGBA_ASTC_5x4_Format */\n/* unused harmony export RGBA_ASTC_5x5_Format */\n/* unused harmony export RGBA_ASTC_6x5_Format */\n/* unused harmony export RGBA_ASTC_6x6_Format */\n/* unused harmony export RGBA_ASTC_8x5_Format */\n/* unused harmony export RGBA_ASTC_8x6_Format */\n/* unused harmony export RGBA_ASTC_8x8_Format */\n/* unused harmony export RGBA_PVRTC_2BPPV1_Format */\n/* unused harmony export RGBA_PVRTC_4BPPV1_Format */\n/* unused harmony export RGBA_S3TC_DXT1_Format */\n/* unused harmony export RGBA_S3TC_DXT3_Format */\n/* unused harmony export RGBA_S3TC_DXT5_Format */\n/* unused harmony export RGBDEncoding */\n/* unused harmony export RGBEEncoding */\n/* unused harmony export RGBEFormat */\n/* unused harmony export RGBFormat */\n/* unused harmony export RGBIntegerFormat */\n/* unused harmony export RGBM16Encoding */\n/* unused harmony export RGBM7Encoding */\n/* unused harmony export RGB_ETC1_Format */\n/* unused harmony export RGB_PVRTC_2BPPV1_Format */\n/* unused harmony export RGB_PVRTC_4BPPV1_Format */\n/* unused harmony export RGB_S3TC_DXT1_Format */\n/* unused harmony export RGFormat */\n/* unused harmony export RGIntegerFormat */\n/* unused harmony export RawShaderMaterial */\n/* unused harmony export Ray */\n/* unused harmony export Raycaster */\n/* unused harmony export RectAreaLight */\n/* unused harmony export RedFormat */\n/* unused harmony export RedIntegerFormat */\n/* unused harmony export ReinhardToneMapping */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return RepeatWrapping; });\n/* unused harmony export ReplaceStencilOp */\n/* unused harmony export ReverseSubtractEquation */\n/* unused harmony export RingBufferGeometry */\n/* unused harmony export RingGeometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return Scene; });\n/* unused harmony export SceneUtils */\n/* unused harmony export ShaderChunk */\n/* unused harmony export ShaderLib */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return ShaderMaterial; });\n/* unused harmony export ShadowMaterial */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return Shape; });\n/* unused harmony export ShapeBufferGeometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return ShapeGeometry; });\n/* unused harmony export ShapePath */\n/* unused harmony export ShapeUtils */\n/* unused harmony export ShortType */\n/* unused harmony export Skeleton */\n/* unused harmony export SkeletonHelper */\n/* unused harmony export SkinnedMesh */\n/* unused harmony export SmoothShading */\n/* unused harmony export Sphere */\n/* unused harmony export SphereBufferGeometry */\n/* unused harmony export SphereGeometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return Spherical; });\n/* unused harmony export SphericalHarmonics3 */\n/* unused harmony export SphericalReflectionMapping */\n/* unused harmony export Spline */\n/* unused harmony export SplineCurve */\n/* unused harmony export SplineCurve3 */\n/* unused harmony export SpotLight */\n/* unused harmony export SpotLightHelper */\n/* unused harmony export SpotLightShadow */\n/* unused harmony export Sprite */\n/* unused harmony export SpriteMaterial */\n/* unused harmony export SrcAlphaFactor */\n/* unused harmony export SrcAlphaSaturateFactor */\n/* unused harmony export SrcColorFactor */\n/* unused harmony export StaticCopyUsage */\n/* unused harmony export StaticDrawUsage */\n/* unused harmony export StaticReadUsage */\n/* unused harmony export StereoCamera */\n/* unused harmony export StreamCopyUsage */\n/* unused harmony export StreamDrawUsage */\n/* unused harmony export StreamReadUsage */\n/* unused harmony export StringKeyframeTrack */\n/* unused harmony export SubtractEquation */\n/* unused harmony export SubtractiveBlending */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return TOUCH; });\n/* unused harmony export TangentSpaceNormalMap */\n/* unused harmony export TetrahedronBufferGeometry */\n/* unused harmony export TetrahedronGeometry */\n/* unused harmony export TextBufferGeometry */\n/* unused harmony export TextGeometry */\n/* unused harmony export Texture */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"N\", function() { return TextureLoader; });\n/* unused harmony export TorusBufferGeometry */\n/* unused harmony export TorusGeometry */\n/* unused harmony export TorusKnotBufferGeometry */\n/* unused harmony export TorusKnotGeometry */\n/* unused harmony export Triangle */\n/* unused harmony export TriangleFanDrawMode */\n/* unused harmony export TriangleStripDrawMode */\n/* unused harmony export TrianglesDrawMode */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"P\", function() { return TubeBufferGeometry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Q\", function() { return TubeGeometry; });\n/* unused harmony export UVMapping */\n/* unused harmony export Uint16Attribute */\n/* unused harmony export Uint16BufferAttribute */\n/* unused harmony export Uint32Attribute */\n/* unused harmony export Uint32BufferAttribute */\n/* unused harmony export Uint8Attribute */\n/* unused harmony export Uint8BufferAttribute */\n/* unused harmony export Uint8ClampedAttribute */\n/* unused harmony export Uint8ClampedBufferAttribute */\n/* unused harmony export Uncharted2ToneMapping */\n/* unused harmony export Uniform */\n/* unused harmony export UniformsLib */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R\", function() { return UniformsUtils; });\n/* unused harmony export UnsignedByteType */\n/* unused harmony export UnsignedInt248Type */\n/* unused harmony export UnsignedIntType */\n/* unused harmony export UnsignedShort4444Type */\n/* unused harmony export UnsignedShort5551Type */\n/* unused harmony export UnsignedShort565Type */\n/* unused harmony export UnsignedShortType */\n/* unused harmony export VSMShadowMap */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return Vector2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"T\", function() { return Vector3; });\n/* unused harmony export Vector4 */\n/* unused harmony export VectorKeyframeTrack */\n/* unused harmony export Vertex */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"U\", function() { return VertexColors; });\n/* unused harmony export VideoTexture */\n/* unused harmony export WebGLCubeRenderTarget */\n/* unused harmony export WebGLMultisampleRenderTarget */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"V\", function() { return WebGLRenderTarget; });\n/* unused harmony export WebGLRenderTargetCube */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"W\", function() { return WebGLRenderer; });\n/* unused harmony export WebGLUtils */\n/* unused harmony export WireframeGeometry */\n/* unused harmony export WireframeHelper */\n/* unused harmony export WrapAroundEnding */\n/* unused harmony export XHRLoader */\n/* unused harmony export ZeroCurvatureEnding */\n/* unused harmony export ZeroFactor */\n/* unused harmony export ZeroSlopeEnding */\n/* unused harmony export ZeroStencilOp */\n/* unused harmony export sRGBEncoding */\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\tObject.assign = function ( target ) {\n\n\t\tif ( target === undefined || target === null ) {\n\n\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t}\n\n\t\tvar output = Object( target );\n\n\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\tvar source = arguments[ index ];\n\n\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn output;\n\n\t};\n\n}\n\nvar REVISION = '113';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar VSMShadowMap = 3;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipmapNearestFilter = 1004;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipmapLinearFilter = 1005;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipmapNearestFilter = 1007;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipmapLinearFilter = 1008;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RedIntegerFormat = 1029;\nvar RGFormat = 1030;\nvar RGIntegerFormat = 1031;\nvar RGBIntegerFormat = 1032;\nvar RGBAIntegerFormat = 1033;\n\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\nvar ZeroStencilOp = 0;\nvar KeepStencilOp = 7680;\nvar ReplaceStencilOp = 7681;\nvar IncrementStencilOp = 7682;\nvar DecrementStencilOp = 7683;\nvar IncrementWrapStencilOp = 34055;\nvar DecrementWrapStencilOp = 34056;\nvar InvertStencilOp = 5386;\n\nvar NeverStencilFunc = 512;\nvar LessStencilFunc = 513;\nvar EqualStencilFunc = 514;\nvar LessEqualStencilFunc = 515;\nvar GreaterStencilFunc = 516;\nvar NotEqualStencilFunc = 517;\nvar GreaterEqualStencilFunc = 518;\nvar AlwaysStencilFunc = 519;\n\nvar StaticDrawUsage = 35044;\nvar DynamicDrawUsage = 35048;\nvar StreamDrawUsage = 35040;\nvar StaticReadUsage = 35045;\nvar DynamicReadUsage = 35049;\nvar StreamReadUsage = 35041;\nvar StaticCopyUsage = 35046;\nvar DynamicCopyUsage = 35050;\nvar StreamCopyUsage = 35042;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author thezwap\n */\n\nvar _lut = [];\n\nfor ( var i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nvar MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c2 = cos( b / 2 );\n\t\tvar s2 = sin( b / 2 );\n\n\t\tvar c13 = cos( ( a + c ) / 2 );\n\t\tvar s13 = sin( ( a + c ) / 2 );\n\n\t\tvar c1_3 = cos( ( a - c ) / 2 );\n\t\tvar s1_3 = sin( ( a - c ) / 2 );\n\n\t\tvar c3_1 = cos( ( c - a ) / 2 );\n\t\tvar s3_1 = sin( ( c - a ) / 2 );\n\n\t\tif ( order === 'XYX' ) {\n\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\n\t\t} else if ( order === 'YZY' ) {\n\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\n\t\t} else if ( order === 'ZXZ' ) {\n\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\n\t\t} else if ( order === 'XZX' ) {\n\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\n\t\t} else if ( order === 'YXY' ) {\n\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\n\t\t} else if ( order === 'ZYZ' ) {\n\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.internalFormat = null;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.defineProperties( Vector4.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.z = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.w = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _vector = new Vector3();\nvar _quaternion = new Quaternion();\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t},\n\n\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( v ) {\n\n\t\tvar denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tvar scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t},\n\n\treflect: function ( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t},\n\n\tangleTo: function ( v ) {\n\n\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tsetFromMatrix3Column: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\nvar _v1 = new Vector3();\nvar _m1 = new Matrix4();\nvar _zero = new Vector3( 0, 0, 0 );\nvar _one = new Vector3( 1, 1, 1 );\nvar _x = new Vector3();\nvar _y = new Vector3();\nvar _z = new Vector3();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function ( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t},\n\n\tlookAt: function ( eye, target, up ) {\n\n\t\tvar te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tvar det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tvar invSX = 1 / sx;\n\t\tvar invSY = 1 / sy;\n\t\tvar invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nvar _matrix = new Matrix4();\nvar _quaternion$1 = new Quaternion();\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = MathUtils.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t},\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function ( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$1.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t},\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\tenableAll: function () {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\tdisableAll: function () {\n\n\t\tthis.mask = 0;\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\nvar _object3DId = 0;\n\nvar _v1$1 = new Vector3();\nvar _q1 = new Quaternion();\nvar _m1$1 = new Matrix4();\nvar _target = new Vector3();\n\nvar _position = new Vector3();\nvar _scale = new Vector3();\nvar _quaternion$2 = new Quaternion();\n\nvar _xAxis = new Vector3( 1, 0, 0 );\nvar _yAxis = new Vector3( 0, 1, 0 );\nvar _zAxis = new Vector3( 0, 0, 1 );\n\nvar _addedEvent = { type: 'added' };\nvar _removedEvent = { type: 'removed' };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tvar parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.environment = null;\n\tthis.fog = null;\n\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nvar _vector$1 = new Vector3();\n\nvar _box = new Box3();\n\n// triangle centered vertices\n\nvar _v0 = new Vector3();\nvar _v1$2 = new Vector3();\nvar _v2 = new Vector3();\n\n// triangle edge vectors\n\nvar _f0 = new Vector3();\nvar _f1 = new Vector3();\nvar _f2 = new Vector3();\n\nvar _center = new Vector3();\nvar _extents = new Vector3();\nvar _triangleNormal = new Vector3();\nvar _testAxis = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function ( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.expandByPoint( _box.min );\n\t\t\tthis.expandByPoint( _box.max );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: function ( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tvar axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tgetBoundingSphere: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\treturn target;\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tvar i, j;\n\n\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tvar p0 = v0.dot( _testAxis );\n\t\tvar p1 = v1.dot( _testAxis );\n\t\tvar p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nvar _box$1 = new Box3();\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\tvar center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tvar maxRadiusSq = 0;\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\nvar _vector$2 = new Vector3();\nvar _segCenter = new Vector3();\nvar _segDir = new Vector3();\nvar _diff = new Vector3();\n\nvar _edge1 = new Vector3();\nvar _edge2 = new Vector3();\nvar _normal = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function ( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\treturn this;\n\n\t},\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function ( point ) {\n\n\t\tvar directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$2.distanceToSquared( point );\n\n\t},\n\n\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tvar a01 = - this.direction.dot( _segDir );\n\t\tvar b0 = _diff.dot( this.direction );\n\t\tvar b1 = - _diff.dot( _segDir );\n\t\tvar c = _diff.lengthSq();\n\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\tvar s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t},\n\n\tintersectSphere: function ( sphere, target ) {\n\n\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\tvar tca = _vector$2.dot( this.direction );\n\t\tvar d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tvar t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tvar t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t},\n\n\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tvar DdN = this.direction.dot( _normal );\n\t\tvar sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t},\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector1 = new Vector3();\nvar _vector2 = new Vector3();\nvar _normalMatrix = new Matrix3();\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tisPlane: true,\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function ( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar direction = line.delta( _vector1 );\n\n\t\tvar denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t},\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _v0$1 = new Vector3();\nvar _v1$3 = new Vector3();\nvar _v2$1 = new Vector3();\nvar _v3 = new Vector3();\n\nvar _vab = new Vector3();\nvar _vac = new Vector3();\nvar _vbc = new Vector3();\nvar _vap = new Vector3();\nvar _vbp = new Vector3();\nvar _vcp = new Vector3();\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function ( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tvar targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t},\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$1.subVectors( point, a );\n\n\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tvar invDenom = 1 / denom;\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t},\n\n\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t},\n\n\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t},\n\n\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t},\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function ( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar a = this.a, b = this.b, c = this.c;\n\t\tvar v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tvar d1 = _vab.dot( _vap );\n\t\tvar d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tvar d3 = _vab.dot( _vbp );\n\t\tvar d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tvar vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tvar d5 = _vab.dot( _vcp );\n\t\tvar d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tvar vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tvar va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tvar denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t},\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nvar _hslA = { h: 0, s: 0, l: 0 };\nvar _hslB = { h: 0, s: 0, l: 0 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function ( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetColorName: function ( style ) {\n\n\t\t// color keywords\n\t\tvar hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function ( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToSRGB: function ( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function ( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tvar h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tvar s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tvar l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\nColor.NAMES = _colorKeywords;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexTangents = source.vertexTangents;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _vector$3 = new Vector3();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nvar _m1$2 = new Matrix4();\nvar _obj = new Object3D();\nvar _offset = new Vector3();\nvar _box$2 = new Box3();\nvar _boxMorphTargets = new Box3();\nvar _vector$4 = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal;\n\n\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$4.x = normals.getX( i );\n\t\t\t_vector$4.y = normals.getY( i );\n\t\t\t_vector$4.z = normals.getZ( i );\n\n\t\t\t_vector$4.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nvar _inverseMatrix = new Matrix4();\nvar _ray = new Ray();\nvar _sphere = new Sphere();\n\nvar _vA = new Vector3();\nvar _vB = new Vector3();\nvar _vC = new Vector3();\n\nvar _tempA = new Vector3();\nvar _tempB = new Vector3();\nvar _tempC = new Vector3();\n\nvar _morphA = new Vector3();\nvar _morphB = new Vector3();\nvar _morphC = new Vector3();\n\nvar _uvA = new Vector2();\nvar _uvB = new Vector2();\nvar _uvC = new Vector2();\n\nvar _intersectionPoint = new Vector3();\nvar _intersectionPointWorld = new Vector3();\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial();\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar material = this.material;\n\t\tvar matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tvar intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar a, b, c;\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tvar uv = geometry.attributes.uv;\n\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\tvar groups = geometry.groups;\n\t\t\tvar drawRange = geometry.drawRange;\n\t\t\tvar i, j, il, jl;\n\t\t\tvar group, groupMaterial;\n\t\t\tvar start, end;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar fvA, fvB, fvC;\n\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar uvs;\n\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = faces[ f ];\n\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = face;\n\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tvar intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tvar morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tvar influence = morphInfluences[ i ];\n\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tvar face = new Face3( a, b, c );\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar _geometryId = 0; // Geometry uses even numbers as Id\nvar _m1$3 = new Matrix4();\nvar _obj$1 = new Object3D();\nvar _offset$1 = new Vector3();\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$3.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$3.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$3.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$3.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj$1.lookAt( vector );\n\n\t\t_obj$1.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj$1.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tif ( attributes.position === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) this.faceVertexUvs[ i ] = [];\n\n\t\t\tfor ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// BoxBufferGeometry\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLCubeRenderTarget( cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\tif ( Number.isInteger( options ) ) {\n\n\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\toptions = dummy;\n\n\t}\n\n\tWebGLRenderTarget.call( this, size, size, options );\n\n}\n\nWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = texture.format;\n\tthis.texture.encoding = texture.encoding;\n\n\tvar scene = new Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\"}\"\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\"#define RECIPROCAL_PI 0.31830988618\",\n\t\t\t\"#define RECIPROCAL_PI2 0.15915494\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\"\tvec2 sampleUV;\",\n\n\t\t\t\"\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\",\n\n\t\t\t\"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\n\n\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\"}\"\n\n\t\t].join( '\\n' ),\n\t};\n\n\tvar material = new ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: BackSide,\n\t\tblending: NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar camera = new CubeCamera( 1, 10, 1 );\n\n\tcamera.renderTarget = this;\n\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\tcamera.update( renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nvar _sphere$1 = new Sphere();\nvar _vector$5 = new Vector3();\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromProjectionMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t},\n\n\tintersectsSprite: function ( sprite ) {\n\n\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.usage;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_maxMipLevel 8.0\\n#define cubeUV_minMipLevel 4.0\\n#define cubeUV_maxTileSize 256.0\\n#define cubeUV_minTileSize 16.0\\nfloat getFace(vec3 direction) {\\n    vec3 absDirection = abs(direction);\\n    float face = -1.0;\\n    if (absDirection.x > absDirection.z) {\\n      if (absDirection.x > absDirection.y)\\n        face = direction.x > 0.0 ? 0.0 : 3.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    } else {\\n      if (absDirection.z > absDirection.y)\\n        face = direction.z > 0.0 ? 2.0 : 5.0;\\n      else\\n        face = direction.y > 0.0 ? 1.0 : 4.0;\\n    }\\n    return face;\\n}\\nvec2 getUV(vec3 direction, float face) {\\n    vec2 uv;\\n    if (face == 0.0) {\\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\\n    } else if (face == 1.0) {\\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\\n    } else if (face == 2.0) {\\n      uv = direction.xy / abs(direction.z);\\n    } else if (face == 3.0) {\\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\\n    } else if (face == 4.0) {\\n      uv = direction.xz / abs(direction.y);\\n    } else {\\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\\n    }\\n    return 0.5 * (uv + 1.0);\\n}\\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\\n  float face = getFace(direction);\\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\\n  mipInt = max(mipInt, cubeUV_minMipLevel);\\n  float faceSize = exp2(mipInt);\\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\\n  vec2 f = fract(uv);\\n  uv += 0.5 - f;\\n  if (face > 2.0) {\\n    uv.y += faceSize;\\n    face -= 3.0;\\n  }\\n  uv.x += face * faceSize;\\n  if(mipInt < cubeUV_maxMipLevel){\\n    uv.y += 2.0 * cubeUV_maxTileSize;\\n  }\\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\\n  uv *= texelSize;\\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x += texelSize;\\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.y += texelSize;\\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  uv.x -= texelSize;\\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\\n  vec3 tm = mix(tl, tr, f.x);\\n  vec3 bm = mix(bl, br, f.x);\\n  return mix(tm, bm, f.y);\\n}\\n#define r0 1.0\\n#define v0 0.339\\n#define m0 -2.0\\n#define r1 0.8\\n#define v1 0.276\\n#define m1 -1.0\\n#define r4 0.4\\n#define v4 0.046\\n#define m4 2.0\\n#define r5 0.305\\n#define v5 0.016\\n#define m5 3.0\\n#define r6 0.21\\n#define v6 0.0038\\n#define m6 4.0\\nfloat roughnessToMip(float roughness) {\\n  float mip = 0.0;\\n  if (roughness >= r1) {\\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\\n  } else if (roughness >= r4) {\\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\\n  } else if (roughness >= r5) {\\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\\n  } else if (roughness >= r6) {\\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\\n  } else {\\n    mip = -2.0 * log2(1.16 * roughness);  }\\n  return mip;\\n}\\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\\n  float mipF = fract(mip);\\n  float mipInt = floor(mip);\\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\\n  if (mipF == 0.0) {\\n    return vec4(color0, 1.0);\\n  } else {\\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\\n    return vec4(mix(color0, color1, mipF), 1.0);\\n  }\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = saturate( clearcoat );\\tmaterial.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_normalmap_pars_fragment = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_normalmap_pars_fragment: clearcoat_normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\ttransparency: { value: 0 },\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\tvar currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar xr = renderer.xr;\n\t\tvar session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = new WeakMap();\n\tvar wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryPosition = geometry.attributes.position;\n\t\tvar version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\t//\n\n\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.deleteAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tvar morphInfluencesSum = 0;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tvar status = gl.getShaderParameter( shader, 35713 );\n\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tvar source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tvar chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tvar string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nvar loopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( loopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tvar string = '';\n\n\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters ) {\n\n\tvar gl = renderer.getContext();\n\n\tvar defines = parameters.defines;\n\n\tvar vertexShader = parameters.vertexShader;\n\tvar fragmentShader = parameters.fragmentShader;\n\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tvar customDefines = generateDefines( defines );\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tvar numMultiviewViews = parameters.numMultiviewViews;\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding || parameters.lightMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMapEncoding ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( parameters.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t// Multiview\n\n\t\tif ( numMultiviewViews > 0 ) {\n\n\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t[\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t'layout(num_views = ' + numMultiviewViews + ') in;',\n\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform mat3 normalMatrix;'\n\t\t\t\t].join( '\\n' ),\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 modelViewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat4 projectionMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat3 normalMatrices[' + numMultiviewViews + '];',\n\n\t\t\t\t\t'#define modelViewMatrix modelViewMatrices[VIEW_ID]',\n\t\t\t\t\t'#define projectionMatrix projectionMatrices[VIEW_ID]',\n\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]',\n\t\t\t\t\t'#define normalMatrix normalMatrices[VIEW_ID]'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t[\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\tthis.numMultiviewViews = numMultiviewViews;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\tvar precision = capabilities.precision;\n\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\tvar vertexTextures = capabilities.vertexTextures;\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\", \"numMultiviewViews\",\n\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\"sheen\"\n\t];\n\n\tfunction getShaderObject( material, shaderID ) {\n\n\t\tvar shaderobject;\n\n\t\tif ( shaderID ) {\n\n\t\t\tvar shader = ShaderLib[ shaderID ];\n\n\t\t\tshaderobject = {\n\t\t\t\tname: material.type,\n\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tshaderobject = {\n\t\t\t\tname: material.type,\n\t\t\t\tuniforms: material.uniforms,\n\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t};\n\n\t\t}\n\n\t\treturn shaderobject;\n\n\t}\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar fog = scene.fog;\n\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tvar envMap = material.envMap || environment;\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar shaderobject = getShaderObject( material, shaderID );\n\t\tmaterial.onBeforeCompile( shaderobject, renderer );\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\tvar numMultiviewViews = currentRenderTarget && currentRenderTarget.isWebGLMultiviewRenderTarget ? currentRenderTarget.numViews : 0;\n\n\t\tvar parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: shaderobject.name,\n\n\t\t\tuniforms: shaderobject.uniforms,\n\t\t\tvertexShader: shaderobject.vertexShader,\n\t\t\tfragmentShader: shaderobject.fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\tnumMultiviewViews: numMultiviewViews,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.frawbuffers,\n\t\t\textensionDrawbuffers: material.extensions && material.extensions.drawbuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\tonBeforeCompile: material.onBeforeCompile\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCacheKey = function ( parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( var name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.onBeforeCompile.toString() );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( parameters, cacheKey ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tlists.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists.get( scene );\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\n\t\tnumDirectionalShadows: - 1,\n\t\tnumPointShadows: - 1,\n\t\tnumSpotShadows: - 1\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar numDirectionalShadows = 0;\n\t\tvar numPointShadows = 0;\n\t\tvar numSpotShadows = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tvar hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\trenderStates.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\tvar fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t\"position\",\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizonal pass\n\n\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry.isGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tvar factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tvar stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar maxTextures = capabilities.maxTextures;\n\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\tvar maxTextureSize = capabilities.maxTextureSize;\n\tvar maxSamples = capabilities.maxSamples;\n\n\tvar _videoTextures = new WeakMap();\n\tvar _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tvar useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultiviewRenderTarget ) {\n\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglColorTexture );\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglDepthStencilTexture );\n\n\t\t\tinfo.memory.textures -= 2;\n\n\t\t\tfor ( var i = 0, il = renderTargetProperties.__webglViewFramebuffers.length; i < il; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglViewFramebuffers[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\tvar isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tvar cubeImage = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tvar mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tvar mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t} else {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tvar wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tvar filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( isWebGL2 === false ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar isMultiview = ( renderTarget.isWebGLMultiviewRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( isMultiview ) {\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar numViews = renderTarget.numViews;\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar ext = extensions.get( 'OVR_multiview2' );\n\n\t\t\t\tinfo.memory.textures += 2;\n\n\t\t\t\tvar colorTexture = _gl.createTexture();\n\t\t\t\t_gl.bindTexture( 35866, colorTexture );\n\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t_gl.texImage3D( 35866, 0, 32856, width, height, numViews, 0, 6408, 5121, null );\n\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 36064, colorTexture, 0, 0, numViews );\n\n\t\t\t\tvar depthStencilTexture = _gl.createTexture();\n\t\t\t\t_gl.bindTexture( 35866, depthStencilTexture );\n\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t_gl.texImage3D( 35866, 0, 35056, width, height, numViews, 0, 34041, 34042, null );\n\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 33306, depthStencilTexture, 0, 0, numViews );\n\n\t\t\t\tvar viewFramebuffers = new Array( numViews );\n\t\t\t\tfor ( var i = 0; i < numViews; ++ i ) {\n\n\t\t\t\t\tviewFramebuffers[ i ] = _gl.createFramebuffer();\n\t\t\t\t\t_gl.bindFramebuffer( 36160, viewFramebuffers[ i ] );\n\t\t\t\t\t_gl.framebufferTextureLayer( 36160, 36064, colorTexture, 0, i );\n\n\t\t\t\t}\n\n\t\t\t\trenderTargetProperties.__webglColorTexture = colorTexture;\n\t\t\t\trenderTargetProperties.__webglDepthStencilTexture = depthStencilTexture;\n\t\t\t\trenderTargetProperties.__webglViewFramebuffers = viewFramebuffers;\n\n\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\t\t\t\t_gl.bindTexture( 35866, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else if ( ! isMultiview ) {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction WebGLMultiviewRenderTarget( width, height, numViews, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.depthBuffer = false;\n\tthis.stencilBuffer = false;\n\n\tthis.numViews = numViews;\n\n}\n\nWebGLMultiviewRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultiviewRenderTarget,\n\n\tisWebGLMultiviewRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.numViews = source.numViews;\n\n\t\treturn this;\n\n\t},\n\n\tsetNumViews: function ( numViews ) {\n\n\t\tif ( this.numViews !== numViews ) {\n\n\t\t\tthis.numViews = numViews;\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction WebGLMultiview( renderer, gl ) {\n\n\tvar DEFAULT_NUMVIEWS = 2;\n\n\tvar extensions = renderer.extensions;\n\tvar properties = renderer.properties;\n\n\tvar renderTarget, currentRenderTarget;\n\tvar mat3, mat4, cameraArray, renderSize;\n\n\tvar available;\n\tvar maxNumViews = 0;\n\n\t//\n\n\tfunction isAvailable() {\n\n\t\tif ( available === undefined ) {\n\n\t\t\tvar extension = extensions.get( 'OVR_multiview2' );\n\n\t\t\tavailable = extension !== null && gl.getContextAttributes().antialias === false;\n\n\t\t\tif ( available ) {\n\n\t\t\t\tmaxNumViews = gl.getParameter( extension.MAX_VIEWS_OVR );\n\t\t\t\trenderTarget = new WebGLMultiviewRenderTarget( 0, 0, DEFAULT_NUMVIEWS );\n\n\t\t\t\trenderSize = new Vector2();\n\t\t\t\tmat4 = [];\n\t\t\t\tmat3 = [];\n\t\t\t\tcameraArray = [];\n\n\t\t\t\tfor ( var i = 0; i < maxNumViews; i ++ ) {\n\n\t\t\t\t\tmat4[ i ] = new Matrix4();\n\t\t\t\t\tmat3[ i ] = new Matrix3();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn available;\n\n\t}\n\n\tfunction getCameraArray( camera ) {\n\n\t\tif ( camera.isArrayCamera ) return camera.cameras;\n\n\t\tcameraArray[ 0 ] = camera;\n\n\t\treturn cameraArray;\n\n\t}\n\n\tfunction updateCameraProjectionMatricesUniform( camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].copy( cameras[ i ].projectionMatrix );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'projectionMatrices', mat4 );\n\n\t}\n\n\tfunction updateCameraViewMatricesUniform( camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].copy( cameras[ i ].matrixWorldInverse );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'viewMatrices', mat4 );\n\n\t}\n\n\tfunction updateObjectMatricesUniforms( object, camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].multiplyMatrices( cameras[ i ].matrixWorldInverse, object.matrixWorld );\n\t\t\tmat3[ i ].getNormalMatrix( mat4[ i ] );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'modelViewMatrices', mat4 );\n\t\tuniforms.setValue( gl, 'normalMatrices', mat3 );\n\n\t}\n\n\tfunction isMultiviewCompatible( camera ) {\n\n\t\tif ( camera.isArrayCamera === undefined ) return true;\n\n\t\tvar cameras = camera.cameras;\n\n\t\tif ( cameras.length > maxNumViews ) return false;\n\n\t\tfor ( var i = 1, il = cameras.length; i < il; i ++ ) {\n\n\t\t\tif ( cameras[ 0 ].viewport.z !== cameras[ i ].viewport.z ||\n\t\t\t\tcameras[ 0 ].viewport.w !== cameras[ i ].viewport.w ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction resizeRenderTarget( camera ) {\n\n\t\tif ( currentRenderTarget ) {\n\n\t\t\trenderSize.set( currentRenderTarget.width, currentRenderTarget.height );\n\n\t\t} else {\n\n\t\t\trenderer.getDrawingBufferSize( renderSize );\n\n\t\t}\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tvar viewport = camera.cameras[ 0 ].viewport;\n\n\t\t\trenderTarget.setSize( viewport.z, viewport.w );\n\t\t\trenderTarget.setNumViews( camera.cameras.length );\n\n\t\t} else {\n\n\t\t\trenderTarget.setSize( renderSize.x, renderSize.y );\n\t\t\trenderTarget.setNumViews( DEFAULT_NUMVIEWS );\n\n\t\t}\n\n\t}\n\n\tfunction attachCamera( camera ) {\n\n\t\tif ( isMultiviewCompatible( camera ) === false ) return;\n\n\t\tcurrentRenderTarget = renderer.getRenderTarget();\n\t\tresizeRenderTarget( camera );\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t}\n\n\tfunction detachCamera( camera ) {\n\n\t\tif ( renderTarget !== renderer.getRenderTarget() ) return;\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\tflush( camera );\n\n\t}\n\n\tfunction flush( camera ) {\n\n\t\tvar srcRenderTarget = renderTarget;\n\t\tvar numViews = srcRenderTarget.numViews;\n\n\t\tvar srcFramebuffers = properties.get( srcRenderTarget ).__webglViewFramebuffers;\n\n\t\tvar viewWidth = srcRenderTarget.width;\n\t\tvar viewHeight = srcRenderTarget.height;\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tfor ( var i = 0; i < numViews; i ++ ) {\n\n\t\t\t\tvar viewport = camera.cameras[ i ].viewport;\n\n\t\t\t\tvar x1 = viewport.x;\n\t\t\t\tvar y1 = viewport.y;\n\t\t\t\tvar x2 = x1 + viewport.z;\n\t\t\t\tvar y2 = y1 + viewport.w;\n\n\t\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ i ] );\n\t\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, x1, y1, x2, y2, 16384, 9728 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ 0 ] );\n\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, 0, 0, renderSize.x, renderSize.y, 16384, 9728 );\n\n\t\t}\n\n\t}\n\n\tthis.isAvailable = isAvailable;\n\tthis.attachCamera = attachCamera;\n\tthis.detachCamera = detachCamera;\n\tthis.updateCameraProjectionMatricesUniform = updateCameraProjectionMatricesUniform;\n\tthis.updateCameraViewMatricesUniform = updateCameraViewMatricesUniform;\n\tthis.updateObjectMatricesUniforms = updateObjectMatricesUniforms;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer, gl ) {\n\n\tvar scope = this;\n\n\tvar session = null;\n\n\t// var framebufferScaleFactor = 1.0;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSourcesMap = new Map();\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tvar _currentDepthNear = null;\n\tvar _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = {};\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\tif ( controller.targetRay === undefined ) {\n\n\t\t\tcontroller.targetRay = new Group();\n\t\t\tcontroller.targetRay.matrixAutoUpdate = false;\n\t\t\tcontroller.targetRay.visible = false;\n\n\t\t}\n\n\t\treturn controller.targetRay;\n\n\t};\n\n\tthis.getControllerGrip = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = {};\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\tif ( controller.grip === undefined ) {\n\n\t\t\tcontroller.grip = new Group();\n\t\t\tcontroller.grip.matrixAutoUpdate = false;\n\t\t\tcontroller.grip.visible = false;\n\n\t\t}\n\n\t\treturn controller.grip;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tcontroller.targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tcontroller.grip.visible = false;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.isPresenting = true;\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( /* value */ ) {\n\n\t\t// framebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tvar attributes = gl.getContextAttributes();\n\n\t\t\tvar layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tvar baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources( event ) {\n\n\t\tvar inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( var i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tvar inputSource = event.removed[ i ];\n\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip ) {\n\n\t\t\t\t\tcontroller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( var i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tvar inputSource = event.added[ i ];\n\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip ) {\n\n\t\t\t\t\tcontroller.grip.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar cameraLPos = new Vector3();\n\tvar cameraRPos = new Vector3();\n\n\t/**\n\t * @author jsantell / https://www.jsantell.com/\n\t *\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tvar left = near * leftFov;\n\t\tvar right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tvar near2 = near + zOffset;\n\t\tvar far2 = far + zOffset;\n\t\tvar left2 = left - xOffset;\n\t\tvar right2 = right + ( ipd - xOffset );\n\t\tvar top2 = topFov * far / far2 * near2;\n\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tvar parent = camera.parent;\n\t\tvar cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\tvar children = camera.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar inputSources = session.inputSources;\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\tcontroller.targetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\tcontroller.targetRay.matrix.decompose( controller.targetRay.position, controller.targetRay.rotation, controller.targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tcontroller.grip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tcontroller.grip.matrix.decompose( controller.grip.position, controller.grip.rotation, controller.grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.visible = inputPose !== null;\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.visible = gripPose !== null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\t\t_opaqueSort = null,\n\t\t_transparentSort = null,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tvar xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// Multiview\n\n\tvar multiview = new WebGLMultiview( _this, _gl );\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tvar tempScene = new Scene();\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = tempScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, geometry, material, program );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( object, geometry, material, program ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tvar attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tvar compiled = {};\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tif ( object.material[ i ].uuid in compiled === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene, object );\n\t\t\t\t\t\t\tcompiled[ object.material[ i ].uuid ] = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.material.uuid in compiled === false ) {\n\n\t\t\t\t\tinitMaterial( object.material, scene, object );\n\t\t\t\t\tcompiled[ object.material.uuid ] = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled && xr.isPresenting ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tif ( xr.enabled && multiview.isAvailable() ) {\n\n\t\t\tmultiview.attachCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( xr.enabled ) {\n\n\t\t\tif ( multiview.isAvailable() ) {\n\n\t\t\t\tmultiview.detachCamera( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tif ( xr.enabled && multiview.isAvailable() ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsStateVersion = lights.state.version;\n\n\t\tvar parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\tvar programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.outputEncoding = _this.outputEncoding;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = scene.fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar fog = scene.fog;\n\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== _this.outputEncoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\tmultiview.updateCameraProjectionMatricesUniform( camera, p_uniforms );\n\n\t\t\t} else {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t}\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\t\tmultiview.updateCameraViewMatricesUniform( camera, p_uniforms );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material, environment );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material, environment );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material, environment );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\tmultiview.updateObjectMatricesUniforms( object, camera, p_uniforms );\n\n\t\t} else {\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\n\t\t}\n\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tvar envMap = material.envMap || environment;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tvar uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap || environment ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transparency.value = material.transparency;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tvar levelScale = Math.pow( 2, - level );\n\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nvar _vector$6 = new Vector3();\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar _geometry;\n\nvar _intersectPoint = new Vector3();\nvar _worldScale = new Vector3();\nvar _mvPosition = new Vector3();\n\nvar _alignedPosition = new Vector2();\nvar _rotatedPosition = new Vector2();\nvar _viewWorldMatrix = new Matrix4();\n\nvar _vA$1 = new Vector3();\nvar _vB$1 = new Vector3();\nvar _vC$1 = new Vector3();\n\nvar _uvA$1 = new Vector2();\nvar _uvB$1 = new Vector2();\nvar _uvC$1 = new Vector2();\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( _geometry === undefined ) {\n\n\t\t_geometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = _geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tvar rotation = this.material.rotation;\n\t\tvar sin, cos;\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tvar center = this.center;\n\n\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA$1.set( 0, 0 );\n\t\t_uvB$1.set( 1, 0 );\n\t\t_uvC$1.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _v1$4 = new Vector3();\nvar _v2$2 = new Vector3();\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n\tthis.autoUpdate = true;\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( camera ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = _v1$4.distanceTo( _v2$2 );\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nvar _offsetMatrix = new Matrix4();\nvar _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _instanceLocalMatrix = new Matrix4();\nvar _instanceWorldMatrix = new Matrix4();\n\nvar _instanceIntersects = [];\n\nvar _mesh = new Mesh();\n\nfunction InstancedMesh( geometry, material, count ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\tthis.count = count;\n\n\tthis.frustumCulled = false;\n\n}\n\nInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: InstancedMesh,\n\n\tisInstancedMesh: true,\n\n\tgetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar matrixWorld = this.matrixWorld;\n\t\tvar raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tif ( _instanceIntersects.length > 0 ) {\n\n\t\t\t\t_instanceIntersects[ 0 ].instanceId = instanceId;\n\t\t\t\t_instanceIntersects[ 0 ].object = this;\n\n\t\t\t\tintersects.push( _instanceIntersects[ 0 ] );\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tsetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start = new Vector3();\nvar _end = new Vector3();\nvar _inverseMatrix$1 = new Matrix4();\nvar _ray$1 = new Ray();\nvar _sphere$2 = new Sphere();\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar precision = raycaster.linePrecision;\n\n\t\tvar geometry = this.geometry;\n\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t_sphere$2.radius += precision;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\tvar vStart = new Vector3();\n\t\tvar vEnd = new Vector3();\n\t\tvar interSegment = new Vector3();\n\t\tvar interRay = new Vector3();\n\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar nbVertices = vertices.length;\n\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start$1 = new Vector3();\nvar _end$1 = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [];\n\n\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t_start$1.copy( vertices[ i ] );\n\t\t\t\t_end$1.copy( vertices[ i + 1 ] );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar _inverseMatrix$2 = new Matrix4();\nvar _ray$2 = new Ray();\nvar _sphere$3 = new Sphere();\nvar _position$1 = new Vector3();\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial();\n\n\tthis.updateMorphTargets();\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar matrixWorld = this.matrixWorld;\n\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t_sphere$3.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t_position$1.fromArray( positions, i * 3 );\n\n\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tvar intersectPoint = new Vector3();\n\n\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tapplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction applyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.5)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tvar p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tvar a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tvar a = start;\n\tdo {\n\n\t\tvar b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [],\n\t\ti, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tvar p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t   ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t   ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\t   locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, p2 ) && equals( q1, q2 ) ) ||\n\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t   area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\t\t\tbevelOffset = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize + bevelOffset;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 1.0;\n\tthis.metalness = 0.0;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearcoat: <float>\n *  clearcoatRoughness: <float>\n *\n *  sheen: <Color>\n *\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearcoat = 0.0;\n\tthis.clearcoatRoughness = 0.0;\n\n\tthis.sheen = null; // null will disable sheen bsdf\n\n\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\tthis.clearcoatNormalMap = null;\n\n\tthis.transparency = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearcoat = source.clearcoat;\n\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\n\tif ( source.sheen ) this.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\telse this.sheen = null;\n\n\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\tthis.transparency = source.transparency;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\tthis.gradientMap = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( Material.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\tthis.gradientMap = source.gradientMap;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\tfps = fps || 30;\n\n\t\tvar clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tvar track = clip.tracks[ i ];\n\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tvar minStartTime = Infinity;\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --\x3e (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tvar times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\tvar handlers = [];\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t\treturn this;\n\n\t};\n\n\tthis.addHandler = function ( regex, loader ) {\n\n\t\thandlers.push( regex, loader );\n\n\t\treturn this;\n\n\t};\n\n\tthis.removeHandler = function ( regex ) {\n\n\t\tvar index = handlers.indexOf( regex );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\thandlers.splice( index, 2 );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.getHandler = function ( file ) {\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.crossOrigin = 'anonymous';\n\tthis.path = '';\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( Loader.prototype, {\n\n\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\tparse: function ( /* data */ ) {},\n\n\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AnimationLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DataTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CubeTextureLoader,\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( MathUtils.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction PointLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\tthis._frameExtents = new Vector2( 4, 2 );\n\n\tthis._viewportCount = 6;\n\n\tthis._viewports = [\n\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//  xzXZ\n\t\t//   y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\n\t\t// positive X\n\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t// negative X\n\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t// positive Z\n\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t// negative Z\n\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t// positive Y\n\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t// negative Y\n\t\tnew Vector4( 1, 0, 1, 1 )\n\t];\n\n\tthis._cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tthis._cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n}\n\nPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: PointLightShadow,\n\n\tisPointLightShadow: true,\n\n\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\tif ( viewportIndex === undefined ) viewportIndex = 0;\n\n\t\tvar camera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.copy( camera.position );\n\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow() {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow,\n\n\tisDirectionalLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.textures = {};\n\n}\n\nMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\treturn material;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ObjectLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\t\t\t\tvar count = data.count;\n\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FontLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nfunction SphericalHarmonics3() {\n\n\tthis.coefficients = [];\n\n\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\tthis.coefficients.push( new Vector3() );\n\n\t}\n\n}\n\nObject.assign( SphericalHarmonics3.prototype, {\n\n\tisSphericalHarmonics3: true,\n\n\tset: function ( coefficients ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tzero: function () {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScale( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScale( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScale( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScale( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScale( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScale( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScale( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScale( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t},\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScale( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScale( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScale( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScale( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScale( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScale( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScale( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScale( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t},\n\n\tadd: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tscale: function ( s ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( sh, alpha ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcopy: function ( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n} );\n\nObject.assign( SphericalHarmonics3, {\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( skyColor );\n\tvar color2 = new Color().set( groundColor );\n\n\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tvar c0 = Math.sqrt( Math.PI );\n\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nvar _eyeRight = new Matrix4();\nvar _eyeLeft = new Matrix4();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n\tthis._cache = {\n\t\tfocus: null,\n\t\tfov: null,\n\t\taspect: null,\n\t\tnear: null,\n\t\tfar: null,\n\t\tzoom: null,\n\t\teyeSep: null\n\t};\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: function ( camera ) {\n\n\t\tvar cache = this._cache;\n\n\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tvar ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tvar xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _position$2 = new Vector3();\nvar _quaternion$3 = new Quaternion();\nvar _scale$1 = new Vector3();\nvar _orientation = new Vector3();\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n\t// private\n\n\tthis._clock = new Clock();\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tvar listener = this.context.listener;\n\t\tvar up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.loopStart = 0;\n\tthis.loopEnd = 0;\n\tthis.offset = 0;\n\tthis.duration = undefined;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis._startedAt = 0;\n\tthis._pausedAt = 0;\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function ( delay ) {\n\n\t\tif ( delay === undefined ) delay = 0;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tvar source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._pausedAt + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis._pausedAt = ( this.context.currentTime - this._startedAt ) * this.playbackRate;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pausedAt = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetLoopStart: function ( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoopEnd: function ( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _position$3 = new Vector3();\nvar _quaternion$4 = new Quaternion();\nvar _scale$2 = new Vector3();\nvar _orientation$1 = new Vector3();\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\tvar panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nvar _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t},\n\n\tparseTrackName: function ( trackName ) {\n\n\t\tvar matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime: function ( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\tthis.camera = null;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector$7 = new Vector2();\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector$7.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector$7.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _startP = new Vector3();\nvar _startEnd = new Vector3();\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\tvar t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t},\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _vector$8 = new Vector3();\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tthis.light.updateMatrixWorld();\n\n\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t_vector$8.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\tthis.cone.lookAt( _vector$8 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.cone.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.cone.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar _vector$9 = new Vector3();\nvar _boneMatrix = new Matrix4();\nvar _matrixWorldInv = new Matrix4();\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar bones = this.bones;\n\n\tvar geometry = this.geometry;\n\tvar position = geometry.getAttribute( 'position' );\n\n\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t_vector$9.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j + 1, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\tj += 2;\n\n\t\t}\n\n\t}\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar _vector$a = new Vector3();\nvar _color1 = new Color();\nvar _color2 = new Color();\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar mesh = this.children[ 0 ];\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t_color1.copy( this.light.color );\n\t\t_color2.copy( this.light.groundColor );\n\n\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t}\n\n\t\tcolors.needsUpdate = true;\n\n\t}\n\n\tmesh.lookAt( _vector$a.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _v1$5 = new Vector3();\nvar _v2$3 = new Vector3();\nvar _v3$1 = new Vector3();\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\t_v1$5.setFromMatrixPosition( this.light.matrixWorld );\n\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t_v3$1.subVectors( _v2$3, _v1$5 );\n\n\tthis.lightPlane.lookAt( _v2$3 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.lightPlane.material.color.set( this.color );\n\t\tthis.targetLine.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t}\n\n\tthis.targetLine.lookAt( _v2$3 );\n\tthis.targetLine.scale.z = _v3$1.length();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nvar _vector$b = new Vector3();\nvar _camera = new Camera();\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry = this.geometry;\n\tvar pointMap = this.pointMap;\n\n\tvar w = 1, h = 1;\n\n\t// we need just camera projection matrix inverse\n\t// world matrix must be identity\n\n\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t// center / target\n\n\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t// near\n\n\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t// far\n\n\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t// up\n\n\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t// cross\n\n\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n};\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector$b.set( x, y, z ).unproject( camera );\n\n\tvar points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector$b.x, _vector$b.y, _vector$b.z );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nvar _box$3 = new Box3();\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = function ( object ) {\n\n\tif ( object !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t}\n\n\tif ( this.object !== undefined ) {\n\n\t\t_box$3.setFromObject( this.object );\n\n\t}\n\n\tif ( _box$3.isEmpty() ) return;\n\n\tvar min = _box$3.min;\n\tvar max = _box$3.max;\n\n\t/*\n\t  5____4\n\t1/___0/|\n\t| 6__|_7\n\t2/___3/\n\n\t0: max.x, max.y, max.z\n\t1: min.x, max.y, max.z\n\t2: min.x, min.y, max.z\n\t3: max.x, min.y, max.z\n\t4: max.x, max.y, min.z\n\t5: min.x, max.y, min.z\n\t6: min.x, min.y, min.z\n\t7: max.x, min.y, min.z\n\t*/\n\n\tvar position = this.geometry.attributes.position;\n\tvar array = position.array;\n\n\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\tposition.needsUpdate = true;\n\n\tthis.geometry.computeBoundingSphere();\n\n\n};\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, color ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tcolor = color || 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar _axis = new Vector3();\nvar _lineGeometry, _coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( _lineGeometry === undefined ) {\n\n\t\t_lineGeometry = new BufferGeometry();\n\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t// dir is assumed to be normalized\n\n\tif ( dir.y > 0.99999 ) {\n\n\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t} else if ( dir.y < - 0.99999 ) {\n\n\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t} else {\n\n\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\tvar radians = Math.acos( dir.y );\n\n\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t}\n\n};\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.set( color );\n\tthis.cone.material.color.set( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author Emmett Lalish / elalish\n *\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n */\n\nvar LOD_MIN = 4;\nvar LOD_MAX = 8;\nvar SIZE_MAX = Math.pow( 2, LOD_MAX );\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nvar EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\nvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nvar MAX_SAMPLES = 20;\nvar ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nvar _flatCamera = new OrthographicCamera();\nvar _blurMaterial = _getBlurShader( MAX_SAMPLES );\nvar _equirectShader = null;\nvar _cubemapShader = null;\n\nvar { _lodPlanes, _sizeLods, _sigmas } = _createPlanes();\nvar _pingPongRenderTarget = null;\nvar _renderer = null;\n\nvar _oldTarget = null;\n\n// Golden Ratio\nvar PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nvar INV_PHI = 1 / PHI;\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nvar _axisDirections = [\n\tnew Vector3( 1, 1, 1 ),\n\tnew Vector3( - 1, 1, 1 ),\n\tnew Vector3( 1, 1, - 1 ),\n\tnew Vector3( - 1, 1, - 1 ),\n\tnew Vector3( 0, PHI, INV_PHI ),\n\tnew Vector3( 0, PHI, - INV_PHI ),\n\tnew Vector3( INV_PHI, 0, PHI ),\n\tnew Vector3( - INV_PHI, 0, PHI ),\n\tnew Vector3( PHI, INV_PHI, 0 ),\n\tnew Vector3( - PHI, INV_PHI, 0 ) ];\n\nfunction PMREMGenerator( renderer ) {\n\n\t_renderer = renderer;\n\t_compileMaterial( _blurMaterial );\n\n}\n\nPMREMGenerator.prototype = {\n\n\tconstructor: PMREMGenerator,\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene: function ( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = _renderer.getRenderTarget();\n\t\tvar cubeUVRenderTarget = _allocateTargets();\n\t\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\t_blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\t\t_applyPMREM( cubeUVRenderTarget );\n\t\t_cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t},\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular: function ( equirectangular ) {\n\n\t\tequirectangular.magFilter = NearestFilter;\n\t\tequirectangular.minFilter = NearestFilter;\n\t\tequirectangular.generateMipmaps = false;\n\n\t\treturn this.fromCubemap( equirectangular );\n\n\t},\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap: function ( cubemap ) {\n\n\t\t_oldTarget = _renderer.getRenderTarget();\n\t\tvar cubeUVRenderTarget = _allocateTargets( cubemap );\n\t\t_textureToCubeUV( cubemap, cubeUVRenderTarget );\n\t\t_applyPMREM( cubeUVRenderTarget );\n\t\t_cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t},\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader: function () {\n\n\t\tif ( _cubemapShader == null ) {\n\n\t\t\t_cubemapShader = _getCubemapShader();\n\t\t\t_compileMaterial( _cubemapShader );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader: function () {\n\n\t\tif ( _equirectShader == null ) {\n\n\t\t\t_equirectShader = _getEquirectShader();\n\t\t\t_compileMaterial( _equirectShader );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose: function () {\n\n\t\t_blurMaterial.dispose();\n\n\t\tif ( _cubemapShader != null ) _cubemapShader.dispose();\n\t\tif ( _equirectShader != null ) _equirectShader.dispose();\n\n\t\tfor ( var i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t},\n\n};\n\nfunction _createPlanes() {\n\n\tvar _lodPlanes = [];\n\tvar _sizeLods = [];\n\tvar _sigmas = [];\n\n\tvar lod = LOD_MAX;\n\tfor ( var i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tvar sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tvar sigma = 1.0 / sizeLod;\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\t\t_sigmas.push( sigma );\n\n\t\tvar texelSize = 1.0 / ( sizeLod - 1 );\n\t\tvar min = - texelSize / 2;\n\t\tvar max = 1 + texelSize / 2;\n\t\tvar uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tvar cubeFaces = 6;\n\t\tvar vertices = 6;\n\t\tvar positionSize = 3;\n\t\tvar uvSize = 2;\n\t\tvar faceIndexSize = 1;\n\n\t\tvar position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tvar uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tvar faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( var face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tvar x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tvar y = face > 2 ? 0 : - 1;\n\t\t\tvar coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tvar fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\t\tvar planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _allocateTargets( equirectangular ) {\n\n\tvar params = {\n\t\tmagFilter: NearestFilter,\n\t\tminFilter: NearestFilter,\n\t\tgenerateMipmaps: false,\n\t\ttype: equirectangular ? equirectangular.type : UnsignedByteType,\n\t\tformat: equirectangular ? equirectangular.format : RGBEFormat,\n\t\tencoding: equirectangular ? equirectangular.encoding : RGBEEncoding,\n\t\tdepthBuffer: false,\n\t\tstencilBuffer: false\n\t};\n\tvar cubeUVRenderTarget = _createRenderTarget( params );\n\tcubeUVRenderTarget.depthBuffer = equirectangular ? false : true;\n\t_pingPongRenderTarget = _createRenderTarget( params );\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _cleanup( outputTarget ) {\n\n\t_pingPongRenderTarget.dispose();\n\t_renderer.setRenderTarget( _oldTarget );\n\toutputTarget.scissorTest = false;\n\t// reset viewport and scissor\n\toutputTarget.setSize( outputTarget.width, outputTarget.height );\n\n}\n\nfunction _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\tvar fov = 90;\n\tvar aspect = 1;\n\tvar cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\tvar upSign = [ 1, 1, 1, 1, - 1, 1 ];\n\tvar forwardSign = [ 1, 1, - 1, - 1, - 1, 1 ];\n\n\tvar outputEncoding = _renderer.outputEncoding;\n\tvar toneMapping = _renderer.toneMapping;\n\tvar toneMappingExposure = _renderer.toneMappingExposure;\n\tvar clearColor = _renderer.getClearColor();\n\tvar clearAlpha = _renderer.getClearAlpha();\n\n\t_renderer.toneMapping = LinearToneMapping;\n\t_renderer.toneMappingExposure = 1.0;\n\t_renderer.outputEncoding = LinearEncoding;\n\tscene.scale.z *= - 1;\n\n\tvar background = scene.background;\n\tif ( background && background.isColor ) {\n\n\t\tbackground.convertSRGBToLinear();\n\t\t// Convert linear to RGBE\n\t\tvar maxComponent = Math.max( background.r, background.g, background.b );\n\t\tvar fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\tvar alpha = ( fExp + 128.0 ) / 255.0;\n\t\t_renderer.setClearColor( background, alpha );\n\t\tscene.background = null;\n\n\t}\n\n\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\tvar col = i % 3;\n\t\tif ( col == 0 ) {\n\n\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t} else if ( col == 1 ) {\n\n\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t} else {\n\n\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t}\n\t\t_setViewport( cubeUVRenderTarget,\n\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t_renderer.setRenderTarget( cubeUVRenderTarget );\n\t\t_renderer.render( scene, cubeCamera );\n\n\t}\n\n\t_renderer.toneMapping = toneMapping;\n\t_renderer.toneMappingExposure = toneMappingExposure;\n\t_renderer.outputEncoding = outputEncoding;\n\t_renderer.setClearColor( clearColor, clearAlpha );\n\tscene.scale.z *= - 1;\n\n}\n\nfunction _textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\tvar scene = new Scene();\n\tif ( texture.isCubeTexture ) {\n\n\t\tif ( _cubemapShader == null ) {\n\n\t\t\t_cubemapShader = _getCubemapShader();\n\n\t\t}\n\n\t} else {\n\n\t\tif ( _equirectShader == null ) {\n\n\t\t\t_equirectShader = _getEquirectShader();\n\n\t\t}\n\n\t}\n\tvar material = texture.isCubeTexture ? _cubemapShader : _equirectShader;\n\tscene.add( new Mesh( _lodPlanes[ 0 ], material ) );\n\tvar uniforms = material.uniforms;\n\n\tuniforms[ 'envMap' ].value = texture;\n\tif ( ! texture.isCubeTexture ) {\n\n\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t}\n\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\n\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\t_renderer.setRenderTarget( cubeUVRenderTarget );\n\t_renderer.render( scene, _flatCamera );\n\n}\n\nfunction _compileMaterial( material ) {\n\n\tvar tmpScene = new Scene();\n\ttmpScene.add( new Mesh( _lodPlanes[ 0 ], material ) );\n\t_renderer.compile( tmpScene, _flatCamera );\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tvar cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _applyPMREM( cubeUVRenderTarget ) {\n\n\tvar autoClear = _renderer.autoClear;\n\t_renderer.autoClear = false;\n\n\tfor ( var i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\tvar sigma = Math.sqrt(\n\t\t\t_sigmas[ i ] * _sigmas[ i ] -\n\t\t_sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\t\tvar poleAxis =\n\t\t_axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\t\t_blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t}\n\n\t_renderer.autoClear = autoClear;\n\n}\n\n/**\n * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n * vertically and horizontally, but this breaks down on a cube. Here we apply\n * the blur latitudinally (around the poles), and then longitudinally (towards\n * the poles) to approximate the orthogonally-separable blur. It is least\n * accurate at the poles, but still does a decent job.\n */\nfunction _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t_halfBlur(\n\t\tcubeUVRenderTarget,\n\t\t_pingPongRenderTarget,\n\t\tlodIn,\n\t\tlodOut,\n\t\tsigma,\n\t\t'latitudinal',\n\t\tpoleAxis );\n\n\t_halfBlur(\n\t\t_pingPongRenderTarget,\n\t\tcubeUVRenderTarget,\n\t\tlodOut,\n\t\tlodOut,\n\t\tsigma,\n\t\t'longitudinal',\n\t\tpoleAxis );\n\n}\n\nfunction _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\tconsole.error(\n\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t}\n\n\t// Number of standard deviations at which to cut off the discrete approximation.\n\tvar STANDARD_DEVIATIONS = 3;\n\n\tvar blurScene = new Scene();\n\tblurScene.add( new Mesh( _lodPlanes[ lodOut ], _blurMaterial ) );\n\tvar blurUniforms = _blurMaterial.uniforms;\n\n\tvar pixels = _sizeLods[ lodIn ] - 1;\n\tvar radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\tvar samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\tif ( samples > MAX_SAMPLES ) {\n\n\t\tconsole.warn( `sigmaRadians, ${\n\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t}\n\n\tvar weights = [];\n\tvar sum = 0;\n\n\tfor ( var i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\tvar x = i / sigmaPixels;\n\t\tvar weight = Math.exp( - x * x / 2 );\n\t\tweights.push( weight );\n\n\t\tif ( i == 0 ) {\n\n\t\t\tsum += weight;\n\n\t\t} else if ( i < samples ) {\n\n\t\t\tsum += 2 * weight;\n\n\t\t}\n\n\t}\n\n\tfor ( var i = 0; i < weights.length; i ++ ) {\n\n\t\tweights[ i ] = weights[ i ] / sum;\n\n\t}\n\n\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\tblurUniforms[ 'samples' ].value = samples;\n\tblurUniforms[ 'weights' ].value = weights;\n\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\tif ( poleAxis ) {\n\n\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t}\n\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\tvar outputSize = _sizeLods[ lodOut ];\n\tvar x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\tvar y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) +\n\t2 * outputSize *\n\t\t( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t_renderer.setRenderTarget( targetOut );\n\t_renderer.render( blurScene, _flatCamera );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tvar weights = new Float32Array( maxSamples );\n\tvar poleAxis = new Vector3( 0, 1, 0 );\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${_getEncodings()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfor (int dir = -1; dir < 2; dir += 2) {\n\t\t\tif (i == 0 && dir == 1)\n\t\t\t\tcontinue;\n\t\t\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\t\t\tif (all(equal(axis, vec3(0.0))))\n\t\t\t\taxis = cross(vec3(0.0, 1.0, 0.0), vOutputDirection);\n\t\t\taxis = normalize(axis);\n\t\t\tfloat theta = dTheta * float(dir * i);\n\t\t\tfloat cosTheta = cos(theta);\n\t\t\t// Rodrigues' axis-angle rotation\n\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t\t\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\t\t\tgl_FragColor.rgb +=\n\t\t\t\t\tweights[i] * bilinearCubeUV(envMap, sampleDirection, mipInt);\n\t\t}\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'SphericalGaussianBlur';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tvar texelSize = new Vector2( 1, 1 );\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${_getEncodings()}\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'EquirectangularToCubeUV';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${_getEncodings()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'CubemapToCubeUV';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn `\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn `\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t`;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\treturn this.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( MathUtils, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn MathUtils.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn MathUtils.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t\treturn attribute.applyMatrix3( this );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t},\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t\treturn attribute.applyMatrix4( this );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( Mesh.prototype, {\n\n\tsetDrawMode: function () {\n\n\t\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t},\n\n} );\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddAttribute: function ( name, attribute ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\treturn this.setAttribute( name, attribute );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t},\n\tremoveAttribute: function ( name ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\treturn this.deleteAttribute( name );\n\n\t},\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( value );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t},\n\tgetActiveMipMapLevel: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\treturn this.getActiveMipmapLevel();\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Audio.prototype, {\n\n\tload: {\n\t\tvalue: function ( file ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t} );\n\t\t\treturn this;\n\n\t\t}\n\t},\n\tstartTime: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t}\n\t}\n\n} );\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/three/build/three.module.js?")},function(module,exports){eval("/**\n * @author sole / http://soledadpenades.com\n * @author mrdoob / http://mrdoob.com\n * @author Robert Eisele / http://www.xarg.org\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n * @author Paul Lewis / http://www.aerotwist.com/\n * @author lechecacharro\n * @author Josh Faul / http://jocafa.com/\n * @author egraether / http://egraether.com/\n */\n\nif ( Date.now === undefined ) {\n\n  Date.now = function () {\n\n    return new Date().valueOf();\n\n  }\n\n}\n\nvar TWEEN = TWEEN || ( function () {\n\n  var _tweens = [];\n\n  return {\n\n    REVISION: '8',\n\n    getAll: function () {\n\n      return _tweens;\n\n    },\n\n    removeAll: function () {\n\n      _tweens = [];\n\n    },\n\n    add: function ( tween ) {\n\n      _tweens.push( tween );\n\n    },\n\n    remove: function ( tween ) {\n\n      var i = _tweens.indexOf( tween );\n\n      if ( i !== -1 ) {\n\n        _tweens.splice( i, 1 );\n\n      }\n\n    },\n\n    update: function ( time ) {\n\n      if ( _tweens.length === 0 ) return false;\n\n      var i = 0, numTweens = _tweens.length;\n\n      time = time !== undefined ? time : Date.now();\n\n      while ( i < numTweens ) {\n\n        if ( _tweens[ i ].update( time ) ) {\n\n          i ++;\n\n        } else {\n\n          _tweens.splice( i, 1 );\n\n          numTweens --;\n\n        }\n\n      }\n\n      return true;\n\n    }\n\n  };\n\n} )();\n\nTWEEN.Tween = function ( object ) {\n\n  var _object = object;\n  var _valuesStart = {};\n  var _valuesEnd = {};\n  var _duration = 1000;\n  var _delayTime = 0;\n  var _startTime = null;\n  var _easingFunction = TWEEN.Easing.Linear.None;\n  var _interpolationFunction = TWEEN.Interpolation.Linear;\n  var _chainedTweens = [];\n  var _onStartCallback = null;\n  var _onStartCallbackFired = false;\n  var _onUpdateCallback = null;\n  var _onCompleteCallback = null;\n\n  this.to = function ( properties, duration ) {\n\n    if ( duration !== undefined ) {\n\n      _duration = duration;\n\n    }\n\n    _valuesEnd = properties;\n\n    return this;\n\n  };\n\n  this.start = function ( time ) {\n\n    TWEEN.add( this );\n\n    _onStartCallbackFired = false;\n\n    _startTime = time !== undefined ? time : Date.now();\n    _startTime += _delayTime;\n\n    for ( var property in _valuesEnd ) {\n\n      // This prevents the interpolation of null values or of non-existing properties\n      if( _object[ property ] === null || !(property in _object) ) {\n\n        continue;\n\n      }\n\n      // check if an Array was provided as property value\n      if ( _valuesEnd[ property ] instanceof Array ) {\n\n        if ( _valuesEnd[ property ].length === 0 ) {\n\n          continue;\n\n        }\n\n        // create a local copy of the Array with the start value at the front\n        _valuesEnd[ property ] = [ _object[ property ] ].concat( _valuesEnd[ property ] );\n\n      }\n\n      _valuesStart[ property ] = _object[ property ];\n\n    }\n\n    return this;\n\n  };\n\n  this.stop = function () {\n\n    TWEEN.remove( this );\n    return this;\n\n  };\n\n  this.delay = function ( amount ) {\n\n    _delayTime = amount;\n    return this;\n\n  };\n\n  this.easing = function ( easing ) {\n\n    _easingFunction = easing;\n    return this;\n\n  };\n\n  this.interpolation = function ( interpolation ) {\n\n    _interpolationFunction = interpolation;\n    return this;\n\n  };\n\n  this.chain = function () {\n\n    _chainedTweens = arguments;\n    return this;\n\n  };\n\n  this.onStart = function ( callback ) {\n\n    _onStartCallback = callback;\n    return this;\n\n  };\n\n  this.onUpdate = function ( callback ) {\n\n    _onUpdateCallback = callback;\n    return this;\n\n  };\n\n  this.onComplete = function ( callback ) {\n\n    _onCompleteCallback = callback;\n    return this;\n\n  };\n\n  this.update = function ( time ) {\n\n    if ( time < _startTime ) {\n\n      return true;\n\n    }\n\n    if ( _onStartCallbackFired === false ) {\n\n      if ( _onStartCallback !== null ) {\n\n        _onStartCallback.call( _object );\n\n      }\n\n      _onStartCallbackFired = true;\n\n    }\n\n    var elapsed = ( time - _startTime ) / _duration;\n    elapsed = elapsed > 1 ? 1 : elapsed;\n\n    var value = _easingFunction( elapsed );\n\n    for ( var property in _valuesStart ) {\n\n      var start = _valuesStart[ property ];\n      var end = _valuesEnd[ property ];\n\n      if ( end instanceof Array ) {\n\n        _object[ property ] = _interpolationFunction( end, value );\n\n      } else {\n\n        _object[ property ] = start + ( end - start ) * value;\n\n      }\n\n    }\n\n    if ( _onUpdateCallback !== null ) {\n\n      _onUpdateCallback.call( _object, value );\n\n    }\n\n    if ( elapsed == 1 ) {\n\n      if ( _onCompleteCallback !== null ) {\n\n        _onCompleteCallback.call( _object );\n\n      }\n\n      for ( var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i ++ ) {\n\n        _chainedTweens[ i ].start( time );\n\n      }\n\n      return false;\n\n    }\n\n    return true;\n\n  };\n\n};\n\nTWEEN.Easing = {\n\n  Linear: {\n\n    None: function ( k ) {\n\n      return k;\n\n    }\n\n  },\n\n  Quadratic: {\n\n    In: function ( k ) {\n\n      return k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return k * ( 2 - k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k;\n      return - 0.5 * ( --k * ( k - 2 ) - 1 );\n\n    }\n\n  },\n\n  Cubic: {\n\n    In: function ( k ) {\n\n      return k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return --k * k * k + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k;\n      return 0.5 * ( ( k -= 2 ) * k * k + 2 );\n\n    }\n\n  },\n\n  Quartic: {\n\n    In: function ( k ) {\n\n      return k * k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return 1 - ( --k * k * k * k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1) return 0.5 * k * k * k * k;\n      return - 0.5 * ( ( k -= 2 ) * k * k * k - 2 );\n\n    }\n\n  },\n\n  Quintic: {\n\n    In: function ( k ) {\n\n      return k * k * k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return --k * k * k * k * k + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k * k * k;\n      return 0.5 * ( ( k -= 2 ) * k * k * k * k + 2 );\n\n    }\n\n  },\n\n  Sinusoidal: {\n\n    In: function ( k ) {\n\n      return 1 - Math.cos( k * Math.PI / 2 );\n\n    },\n\n    Out: function ( k ) {\n\n      return Math.sin( k * Math.PI / 2 );\n\n    },\n\n    InOut: function ( k ) {\n\n      return 0.5 * ( 1 - Math.cos( Math.PI * k ) );\n\n    }\n\n  },\n\n  Exponential: {\n\n    In: function ( k ) {\n\n      return k === 0 ? 0 : Math.pow( 1024, k - 1 );\n\n    },\n\n    Out: function ( k ) {\n\n      return k === 1 ? 1 : 1 - Math.pow( 2, - 10 * k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( ( k *= 2 ) < 1 ) return 0.5 * Math.pow( 1024, k - 1 );\n      return 0.5 * ( - Math.pow( 2, - 10 * ( k - 1 ) ) + 2 );\n\n    }\n\n  },\n\n  Circular: {\n\n    In: function ( k ) {\n\n      return 1 - Math.sqrt( 1 - k * k );\n\n    },\n\n    Out: function ( k ) {\n\n      return Math.sqrt( 1 - ( --k * k ) );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1) return - 0.5 * ( Math.sqrt( 1 - k * k) - 1);\n      return 0.5 * ( Math.sqrt( 1 - ( k -= 2) * k) + 1);\n\n    }\n\n  },\n\n  Elastic: {\n\n    In: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      return - ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n\n    },\n\n    Out: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      return ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n    },\n\n    InOut: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      if ( ( k *= 2 ) < 1 ) return - 0.5 * ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n      return a * Math.pow( 2, -10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) * 0.5 + 1;\n\n    }\n\n  },\n\n  Back: {\n\n    In: function ( k ) {\n\n      var s = 1.70158;\n      return k * k * ( ( s + 1 ) * k - s );\n\n    },\n\n    Out: function ( k ) {\n\n      var s = 1.70158;\n      return --k * k * ( ( s + 1 ) * k + s ) + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      var s = 1.70158 * 1.525;\n      if ( ( k *= 2 ) < 1 ) return 0.5 * ( k * k * ( ( s + 1 ) * k - s ) );\n      return 0.5 * ( ( k -= 2 ) * k * ( ( s + 1 ) * k + s ) + 2 );\n\n    }\n\n  },\n\n  Bounce: {\n\n    In: function ( k ) {\n\n      return 1 - TWEEN.Easing.Bounce.Out( 1 - k );\n\n    },\n\n    Out: function ( k ) {\n\n      if ( k < ( 1 / 2.75 ) ) {\n\n        return 7.5625 * k * k;\n\n      } else if ( k < ( 2 / 2.75 ) ) {\n\n        return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\n\n      } else if ( k < ( 2.5 / 2.75 ) ) {\n\n        return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\n\n      } else {\n\n        return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\n\n      }\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( k < 0.5 ) return TWEEN.Easing.Bounce.In( k * 2 ) * 0.5;\n      return TWEEN.Easing.Bounce.Out( k * 2 - 1 ) * 0.5 + 0.5;\n\n    }\n\n  }\n\n};\n\nTWEEN.Interpolation = {\n\n  Linear: function ( v, k ) {\n\n    var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = TWEEN.Interpolation.Utils.Linear;\n\n    if ( k < 0 ) return fn( v[ 0 ], v[ 1 ], f );\n    if ( k > 1 ) return fn( v[ m ], v[ m - 1 ], m - f );\n\n    return fn( v[ i ], v[ i + 1 > m ? m : i + 1 ], f - i );\n\n  },\n\n  Bezier: function ( v, k ) {\n\n    var b = 0, n = v.length - 1, pw = Math.pow, bn = TWEEN.Interpolation.Utils.Bernstein, i;\n\n    for ( i = 0; i <= n; i++ ) {\n      b += pw( 1 - k, n - i ) * pw( k, i ) * v[ i ] * bn( n, i );\n    }\n\n    return b;\n\n  },\n\n  CatmullRom: function ( v, k ) {\n\n    var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n    if ( v[ 0 ] === v[ m ] ) {\n\n      if ( k < 0 ) i = Math.floor( f = m * ( 1 + k ) );\n\n      return fn( v[ ( i - 1 + m ) % m ], v[ i ], v[ ( i + 1 ) % m ], v[ ( i + 2 ) % m ], f - i );\n\n    } else {\n\n      if ( k < 0 ) return v[ 0 ] - ( fn( v[ 0 ], v[ 0 ], v[ 1 ], v[ 1 ], -f ) - v[ 0 ] );\n      if ( k > 1 ) return v[ m ] - ( fn( v[ m ], v[ m ], v[ m - 1 ], v[ m - 1 ], f - m ) - v[ m ] );\n\n      return fn( v[ i ? i - 1 : 0 ], v[ i ], v[ m < i + 1 ? m : i + 1 ], v[ m < i + 2 ? m : i + 2 ], f - i );\n\n    }\n\n  },\n\n  Utils: {\n\n    Linear: function ( p0, p1, t ) {\n\n      return ( p1 - p0 ) * t + p0;\n\n    },\n\n    Bernstein: function ( n , i ) {\n\n      var fc = TWEEN.Interpolation.Utils.Factorial;\n      return fc( n ) / fc( i ) / fc( n - i );\n\n    },\n\n    Factorial: ( function () {\n\n      var a = [ 1 ];\n\n      return function ( n ) {\n\n        var s = 1, i;\n        if ( a[ n ] ) return a[ n ];\n        for ( i = n; i > 1; i-- ) s *= i;\n        return a[ n ] = s;\n\n      };\n\n    } )(),\n\n    CatmullRom: function ( p0, p1, p2, p3, t ) {\n\n      var v0 = ( p2 - p0 ) * 0.5, v1 = ( p3 - p1 ) * 0.5, t2 = t * t, t3 = t * t2;\n      return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n    }\n\n  }\n\n};\n\nmodule.exports = TWEEN;\n\n//# sourceURL=webpack:///./node_modules/tween/tween.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/cityGeo.js\n/* harmony default export */ var cityGeo = ({"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368795,39.908969],[116.36897,39.908969],[116.368967,39.908897],[116.368798,39.908901],[116.368795,39.908969]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-72ea"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367946,39.912834],[116.368175,39.912828],[116.368175,39.912879],[116.368468,39.912872],[116.368468,39.912719],[116.367954,39.912723],[116.367946,39.912834]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-72eb"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367809,39.912169],[116.368075,39.912165],[116.368075,39.912116],[116.368344,39.91211],[116.368349,39.912168],[116.368457,39.912166],[116.368446,39.912207],[116.368766,39.912197],[116.368768,39.911996],[116.367817,39.912002],[116.367809,39.912169]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-72ec"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366804,39.913106],[116.36713,39.913106],[116.367129,39.912861],[116.366804,39.912865],[116.366804,39.913106]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-72ed"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368586,39.912829],[116.369217,39.912827],[116.369212,39.912739],[116.36858,39.912738],[116.368586,39.912829]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-72ee"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366812,39.912848],[116.366815,39.912834],[116.366807,39.912614],[116.367487,39.912605],[116.367484,39.912535],[116.367433,39.912537],[116.367441,39.912288],[116.366995,39.912285],[116.367006,39.912055],[116.36768,39.912054],[116.367664,39.912926],[116.367538,39.91293],[116.367535,39.912759],[116.367049,39.912754],[116.367045,39.912849],[116.366812,39.912848]]]},"properties":{"building":"yes","height":15,"building:levels":"7"},"id":"fid--3e101fb5_16fbcea0335_-72ef"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367757,39.912823],[116.367923,39.912826],[116.367926,39.912713],[116.36776,39.91271],[116.367757,39.912823]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-72f0"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367902,39.913922],[116.368508,39.913919],[116.368506,39.913758],[116.36838,39.913759],[116.368376,39.913352],[116.367896,39.913355],[116.367902,39.913922]]]},"properties":{"building":"yes","height":15,"building:levels":"6"},"id":"fid--3e101fb5_16fbcea0335_-72f1"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367155,39.913932],[116.367662,39.913931],[116.367661,39.913823],[116.367155,39.913824],[116.367155,39.913932]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-72f2"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367162,39.913651],[116.367664,39.91364],[116.367656,39.913537],[116.367162,39.913544],[116.367162,39.913651]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-72f3"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368769,39.9136],[116.369689,39.913601],[116.369689,39.913828],[116.368769,39.913827],[116.368769,39.9136]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-72f4"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367159,39.913333],[116.367662,39.913323],[116.367654,39.913214],[116.367159,39.913228],[116.367159,39.913333]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-72f5"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369321,39.913213],[116.370097,39.913227],[116.370102,39.913048],[116.369326,39.913034],[116.369321,39.913213]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-72f6"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365972,39.913886],[116.366982,39.913894],[116.367014,39.913229],[116.366662,39.913225],[116.366635,39.913642],[116.365977,39.913633],[116.365972,39.913886]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-72f7"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.364555,39.913804],[116.365413,39.913813],[116.365542,39.913768],[116.365555,39.91354],[116.365394,39.913538],[116.365388,39.913655],[116.364569,39.913658],[116.364555,39.913804]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-72f8"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.36531,39.913486],[116.365568,39.913491],[116.365566,39.913254],[116.365316,39.913247],[116.36531,39.913486]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-72f9"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.364397,39.913382],[116.36513,39.913391],[116.36513,39.913231],[116.364399,39.913221],[116.364397,39.913382]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-72fa"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.363757,39.913112],[116.363752,39.91352],[116.363779,39.913614],[116.363866,39.913721],[116.363996,39.913763],[116.364215,39.913766],[116.364211,39.913108],[116.363757,39.913112]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-72fb"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365136,39.912895],[116.363819,39.912897],[116.363701,39.912846],[116.363642,39.912739],[116.363658,39.912329],[116.363765,39.912284],[116.364251,39.912291],[116.364246,39.912234],[116.365044,39.912214],[116.365036,39.912379],[116.3643,39.912382],[116.364305,39.912431],[116.363846,39.912422],[116.363843,39.91276],[116.365141,39.912745],[116.365136,39.912895]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-72fc"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.36527,39.913095],[116.365595,39.913104],[116.365598,39.913028],[116.365698,39.913031],[116.365705,39.912902],[116.365546,39.912897],[116.365542,39.912968],[116.365276,39.91296],[116.36527,39.913095]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-72fd"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365756,39.912976],[116.366283,39.912981],[116.366342,39.912967],[116.366412,39.912905],[116.366412,39.912208],[116.365439,39.912204],[116.365442,39.912379],[116.366159,39.912356],[116.366138,39.912697],[116.366205,39.912697],[116.366197,39.91279],[116.365771,39.912779],[116.365773,39.912855],[116.365726,39.912854],[116.365722,39.91298],[116.365756,39.912976]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-72fe"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.36282,39.91217],[116.362675,39.912286],[116.362681,39.912414],[116.362854,39.912418],[116.362999,39.912302],[116.36282,39.91217]]]},"properties":{"building":"yes","height":15,"layer":"1"},"id":"fid--3e101fb5_16fbcea0335_-72ff"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365609,39.912764],[116.365289,39.912772],[116.365297,39.912484],[116.365195,39.912488],[116.365197,39.912227],[116.365402,39.912227],[116.365402,39.912511],[116.365606,39.912514],[116.365609,39.912764]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-7300"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372334,39.912852],[116.372678,39.912857],[116.372925,39.912861],[116.37293,39.912674],[116.372689,39.91267],[116.372691,39.912604],[116.372339,39.912599],[116.372334,39.912852]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7301"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370273,39.912498],[116.370974,39.912503],[116.370977,39.912418],[116.370276,39.912405],[116.370273,39.912498]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7302"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371418,39.911977],[116.37196,39.911967],[116.371966,39.911811],[116.371418,39.911812],[116.371418,39.911977]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7303"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371424,39.912942],[116.371612,39.91294],[116.371608,39.912708],[116.371892,39.912705],[116.371897,39.912987],[116.372043,39.912986],[116.372037,39.912641],[116.371906,39.912643],[116.371905,39.912557],[116.371417,39.912562],[116.371424,39.912942]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7304"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371831,39.913607],[116.371384,39.913603],[116.37139,39.91316],[116.371846,39.913164],[116.371844,39.9133],[116.371551,39.913298],[116.371548,39.913483],[116.371832,39.913485],[116.371831,39.913607]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7305"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367801,39.908402],[116.368243,39.9084],[116.368242,39.908313],[116.368711,39.908311],[116.368715,39.908707],[116.369054,39.908705],[116.369049,39.908303],[116.369563,39.908301],[116.369564,39.908429],[116.369905,39.908427],[116.369898,39.907779],[116.369522,39.907781],[116.369526,39.908117],[116.369204,39.908119],[116.369203,39.908065],[116.368564,39.908068],[116.368564,39.908119],[116.368228,39.90812],[116.368225,39.907762],[116.367897,39.907764],[116.367901,39.908154],[116.367798,39.908154],[116.367801,39.908402]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-7306"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366261,39.908224],[116.366489,39.908223],[116.366487,39.907927],[116.366717,39.907926],[116.366718,39.908195],[116.366948,39.908194],[116.366947,39.907919],[116.367351,39.907919],[116.367353,39.908223],[116.367575,39.908223],[116.367572,39.907758],[116.366984,39.907758],[116.366984,39.907707],[116.366695,39.907707],[116.366695,39.90777],[116.366258,39.90777],[116.366261,39.908224]]]},"properties":{"building":"yes","height":15,"building:levels":"7"},"id":"fid--3e101fb5_16fbcea0335_-7307"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.36654,39.908599],[116.366532,39.908363],[116.366528,39.908347],[116.366557,39.908348],[116.366554,39.908314],[116.366593,39.908313],[116.36659,39.908278],[116.366632,39.908281],[116.366634,39.90826],[116.366766,39.908257],[116.366774,39.908605],[116.36654,39.908599]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-7308"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366405,39.90906],[116.366893,39.909048],[116.366887,39.908919],[116.366547,39.908927],[116.366538,39.908673],[116.366363,39.908675],[116.36637,39.908902],[116.366402,39.908902],[116.366405,39.90906]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7309"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.373352,39.910055],[116.373355,39.90998],[116.373486,39.909983],[116.37349,39.909882],[116.373525,39.909883],[116.373551,39.909273],[116.373516,39.909272],[116.37352,39.909159],[116.373494,39.909159],[116.373495,39.909128],[116.37277,39.909109],[116.372757,39.909441],[116.372681,39.909439],[116.372677,39.909517],[116.372628,39.909516],[116.372625,39.909593],[116.372568,39.909591],[116.372565,39.90966],[116.37252,39.909658],[116.372517,39.909736],[116.372481,39.909735],[116.372468,39.910032],[116.373352,39.910055]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-730a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367787,39.908959],[116.368198,39.908952],[116.368193,39.90884],[116.368002,39.908834],[116.367935,39.908778],[116.36794,39.908634],[116.367793,39.90863],[116.367787,39.908959]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-730b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366965,39.908425],[116.367545,39.90842],[116.367548,39.908302],[116.366962,39.908304],[116.366965,39.908425]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-730c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367065,39.908997],[116.367583,39.908984],[116.367567,39.908739],[116.36732,39.908742],[116.367309,39.908808],[116.367059,39.90882],[116.367065,39.908997]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-730d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366379,39.909237],[116.366396,39.90934],[116.366487,39.909408],[116.366602,39.909427],[116.366632,39.909396],[116.366801,39.90938],[116.366777,39.909159],[116.366414,39.909171],[116.366425,39.909239],[116.366379,39.909237]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-730e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366852,39.909382],[116.367156,39.909386],[116.36718,39.90917],[116.366855,39.909164],[116.366852,39.909382]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-730f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366492,39.909848],[116.366613,39.909844],[116.366616,39.909885],[116.366752,39.909881],[116.366746,39.909782],[116.366824,39.90978],[116.366819,39.909679],[116.366687,39.909683],[116.366684,39.909634],[116.366541,39.909639],[116.366546,39.909734],[116.366486,39.909736],[116.366492,39.909848]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-7310"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365662,39.910695],[116.366288,39.910681],[116.366288,39.910543],[116.36567,39.910555],[116.365662,39.910695]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7311"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.3656,39.910415],[116.366167,39.910407],[116.366164,39.910286],[116.365598,39.910297],[116.3656,39.910415]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7312"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366547,39.910507],[116.366672,39.910506],[116.366673,39.910549],[116.366828,39.910547],[116.366826,39.910477],[116.366886,39.910476],[116.366884,39.91036],[116.36677,39.910362],[116.366769,39.910309],[116.366611,39.91031],[116.366613,39.910402],[116.366545,39.910403],[116.366547,39.910507]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-7313"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366656,39.911282],[116.3668,39.911283],[116.366803,39.910673],[116.366493,39.910672],[116.366492,39.910803],[116.366659,39.910803],[116.366656,39.911282]]]},"properties":{"building":"yes","height":15,"building:levels":"7"},"id":"fid--3e101fb5_16fbcea0335_-7314"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372362,39.910289],[116.372326,39.911543],[116.373508,39.911565],[116.373544,39.91031],[116.372362,39.910289]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7315"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367132,39.91102],[116.367715,39.910992],[116.367699,39.91078],[116.367105,39.9108],[116.367132,39.91102]]]},"properties":{"building":"yes","height":15,"building:levels":"2"},"id":"fid--3e101fb5_16fbcea0335_-7316"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368087,39.910632],[116.368749,39.910621],[116.368742,39.910368],[116.368585,39.91037],[116.368589,39.910516],[116.368084,39.910524],[116.368087,39.910632]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7317"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368753,39.911682],[116.369362,39.911664],[116.369352,39.911467],[116.368743,39.911485],[116.368753,39.911682]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7318"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368725,39.911035],[116.369542,39.911013],[116.369539,39.910816],[116.368709,39.910849],[116.368725,39.911035]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7319"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369492,39.91148],[116.369712,39.911474],[116.369694,39.911074],[116.369474,39.91108],[116.369492,39.91148]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-731a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369677,39.910964],[116.370243,39.910948],[116.370227,39.910736],[116.369663,39.910758],[116.369677,39.910964]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-731b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369771,39.911528],[116.370231,39.911514],[116.370224,39.91139],[116.369765,39.911403],[116.369771,39.911528]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-731c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371452,39.911316],[116.371616,39.911436],[116.371936,39.91144],[116.37196,39.911239],[116.371858,39.911237],[116.371748,39.911152],[116.37174,39.911014],[116.37145,39.911018],[116.371452,39.911316]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-731d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.37145,39.910849],[116.371928,39.910844],[116.371898,39.910307],[116.371506,39.910316],[116.371509,39.910681],[116.371447,39.910683],[116.37145,39.910849]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-731e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371017,39.909369],[116.371259,39.909435],[116.371436,39.909043],[116.371194,39.908976],[116.371017,39.909369]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-731f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369968,39.905704],[116.369965,39.906526],[116.37176,39.906533],[116.371523,39.905711],[116.369968,39.905704]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7320"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371909,39.909356],[116.372492,39.909392],[116.372532,39.909036],[116.371946,39.909013],[116.371909,39.909356]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7321"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371861,39.910046],[116.371996,39.910055],[116.372026,39.909784],[116.37189,39.909775],[116.371861,39.910046]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7322"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371922,39.909749],[116.372102,39.909762],[116.372159,39.909404],[116.371965,39.909391],[116.371922,39.909749]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-7323"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361263,39.90853],[116.362322,39.908487],[116.362311,39.908396],[116.361473,39.908411],[116.361477,39.908223],[116.361429,39.908218],[116.361434,39.908138],[116.361837,39.90814],[116.362489,39.908129],[116.362489,39.908526],[116.362675,39.908527],[116.362664,39.907932],[116.361263,39.907946],[116.361263,39.90853]]]},"properties":{"building":"yes","height":"30"},"id":"fid--3e101fb5_16fbcea0335_-7324"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.362813,39.909393],[116.362963,39.909377],[116.362947,39.908702],[116.36205,39.908734],[116.36205,39.908865],[116.362829,39.90885],[116.362845,39.909229],[116.362779,39.909234],[116.362813,39.909393]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7325"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361146,39.905317],[116.362861,39.905308],[116.362877,39.904633],[116.362501,39.904645],[116.362479,39.905015],[116.361587,39.905001],[116.361614,39.90466],[116.361173,39.904671],[116.361146,39.905317]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-7326"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371542,39.913725],[116.372391,39.913757],[116.372379,39.913954],[116.371637,39.913924],[116.371633,39.914008],[116.371386,39.914005],[116.371391,39.913828],[116.371542,39.913725]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7327"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361052,39.909191],[116.361053,39.908758],[116.361866,39.908761],[116.361865,39.909178],[116.361649,39.909177],[116.36165,39.908885],[116.361244,39.908883],[116.361243,39.909191],[116.361052,39.909191]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7328"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361677,39.909479],[116.361889,39.90948],[116.361888,39.909807],[116.362569,39.909809],[116.36257,39.909482],[116.362776,39.909482],[116.362775,39.909998],[116.361675,39.909995],[116.361677,39.909479]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7329"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361251,39.911911],[116.361872,39.911885],[116.361858,39.911704],[116.361357,39.911726],[116.361315,39.911168],[116.361733,39.911151],[116.361721,39.910991],[116.361184,39.911014],[116.361251,39.911911]]]},"properties":{"building":"school","height":15},"id":"fid--3e101fb5_16fbcea0335_-732a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.366103,39.905738],[116.366096,39.906361],[116.368071,39.906376],[116.368077,39.905753],[116.366103,39.905738]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-732b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361126,39.910755],[116.361118,39.910399],[116.361149,39.910362],[116.36182,39.91033],[116.361834,39.910724],[116.361126,39.910755]]]},"properties":{"building":"school","height":15},"id":"fid--3e101fb5_16fbcea0335_-732c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361814,39.91372],[116.361817,39.913476],[116.362927,39.913487],[116.362924,39.913731],[116.361814,39.91372]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-732d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.362658,39.913445],[116.36297,39.913444],[116.362966,39.913061],[116.362858,39.913061],[116.362852,39.912464],[116.362649,39.912465],[116.362658,39.913445]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-732e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361773,39.912227],[116.362511,39.912238],[116.362506,39.912439],[116.361769,39.912428],[116.361773,39.912227]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-732f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361783,39.913099],[116.361785,39.912866],[116.362515,39.912871],[116.362513,39.913104],[116.361783,39.913099]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7330"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361226,39.913517],[116.361224,39.913225],[116.361643,39.913224],[116.361645,39.913516],[116.361226,39.913517]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7331"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.361229,39.91272],[116.361236,39.912425],[116.361639,39.912431],[116.361632,39.912726],[116.361229,39.91272]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7332"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369839,39.913998],[116.369854,39.913583],[116.370146,39.913589],[116.37013,39.914005],[116.369839,39.913998]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7333"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372409,39.914355],[116.37242,39.913746],[116.373401,39.9138],[116.373368,39.914167],[116.37328,39.91428],[116.373125,39.914394],[116.372409,39.914355]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7334"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371405,39.914014],[116.371616,39.914017],[116.371596,39.914057],[116.371608,39.9141],[116.371625,39.914109],[116.371622,39.914148],[116.371933,39.914165],[116.372002,39.914136],[116.371992,39.914292],[116.371932,39.914328],[116.371505,39.914291],[116.3714,39.914189],[116.371405,39.914014]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7335"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371913,39.908715],[116.372328,39.908746],[116.372443,39.908672],[116.372559,39.908676],[116.372548,39.908764],[116.37338,39.908814],[116.373383,39.908686],[116.37321,39.908543],[116.373235,39.907895],[116.373061,39.907775],[116.372047,39.907784],[116.371968,39.908282],[116.372065,39.908299],[116.372067,39.908389],[116.371936,39.908482],[116.371913,39.908715]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7336"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370253,39.908641],[116.37128,39.908627],[116.371277,39.908496],[116.370574,39.908505],[116.370573,39.908447],[116.370248,39.908452],[116.370253,39.908641]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7337"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371402,39.90866],[116.37139,39.907989],[116.371568,39.907988],[116.371579,39.908658],[116.371402,39.90866]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7338"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.37295,39.91306],[116.372915,39.913627],[116.373359,39.913628],[116.373405,39.91306],[116.37295,39.91306]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7339"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372564,39.912042],[116.372776,39.912045],[116.372763,39.912547],[116.372564,39.912543],[116.372564,39.912042]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372393,39.913031],[116.372802,39.913041],[116.372767,39.913607],[116.372368,39.913604],[116.372393,39.913031]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368123,39.909617],[116.368297,39.909613],[116.368287,39.909348],[116.368605,39.909341],[116.368616,39.90963],[116.368796,39.909627],[116.368781,39.909229],[116.36811,39.909242],[116.368123,39.909617]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368108,39.90976],[116.36878,39.909738],[116.368787,39.909864],[116.368116,39.909887],[116.368108,39.90976]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368108,39.910115],[116.36879,39.910099],[116.368796,39.910228],[116.368114,39.910244],[116.368108,39.910115]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367356,39.909376],[116.367881,39.909378],[116.367881,39.90942],[116.368013,39.909421],[116.368013,39.909558],[116.367882,39.909557],[116.367882,39.909508],[116.367356,39.909506],[116.367356,39.909376]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-733f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367529,39.909738],[116.367995,39.909739],[116.367995,39.909872],[116.367529,39.909871],[116.367529,39.909738]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7340"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.363673,39.905548],[116.363671,39.906312],[116.365658,39.906319],[116.36566,39.905554],[116.363673,39.905548]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7341"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367533,39.910221],[116.367993,39.910224],[116.367994,39.910096],[116.367534,39.910094],[116.367533,39.910221]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7342"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367447,39.910491],[116.368022,39.91049],[116.368027,39.910607],[116.367409,39.910617],[116.367407,39.910542],[116.367449,39.910538],[116.367447,39.910491]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7343"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367173,39.910001],[116.367407,39.910001],[116.367408,39.909528],[116.367339,39.909528],[116.36734,39.909431],[116.367175,39.90943],[116.367173,39.910001]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7344"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367185,39.910074],[116.367396,39.910071],[116.367407,39.910542],[116.367409,39.910617],[116.36741,39.910637],[116.367199,39.91064],[116.367185,39.910074]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7345"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365662,39.91095],[116.366457,39.910946],[116.366458,39.911074],[116.365906,39.911077],[116.365908,39.911282],[116.365666,39.911283],[116.365662,39.91095]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7346"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.365623,39.91193],[116.366085,39.911927],[116.366084,39.911875],[116.366489,39.911872],[116.366488,39.911816],[116.366829,39.911814],[116.366822,39.911379],[116.366422,39.911382],[116.366423,39.911434],[116.365987,39.911437],[116.365988,39.911477],[116.365617,39.91148],[116.365623,39.91193]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7347"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367854,39.91081],[116.368553,39.910789],[116.368559,39.910897],[116.36786,39.910918],[116.367854,39.91081]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7348"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370498,39.905313],[116.371024,39.90531],[116.371027,39.905182],[116.370503,39.905179],[116.370498,39.905313]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7349"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368532,39.905437],[116.369462,39.905493],[116.369475,39.905365],[116.368899,39.90533],[116.368908,39.905233],[116.368762,39.905224],[116.368749,39.905348],[116.368515,39.905334],[116.368505,39.905436],[116.368532,39.905437]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-734a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370269,39.914136],[116.371129,39.914136],[116.371129,39.914047],[116.370269,39.914048],[116.370269,39.914136]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-734b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370284,39.913972],[116.3708,39.913975],[116.3708,39.913946],[116.371141,39.913948],[116.371141,39.913856],[116.370795,39.913855],[116.370794,39.913885],[116.370284,39.913882],[116.370284,39.913972]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-734c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370469,39.91373],[116.370864,39.91374],[116.37087,39.913571],[116.370476,39.913561],[116.370469,39.91373]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-734d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.37094,39.913544],[116.371101,39.913542],[116.371095,39.913338],[116.37094,39.913334],[116.37094,39.913544]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-734e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370257,39.913526],[116.370437,39.913525],[116.370451,39.913313],[116.370268,39.913306],[116.370257,39.913526]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-734f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370276,39.913201],[116.370985,39.913208],[116.370983,39.913116],[116.370287,39.913113],[116.370276,39.913201]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7350"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367233,39.911473],[116.367861,39.911455],[116.36787,39.911648],[116.367243,39.911666],[116.367233,39.911473]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7351"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371108,39.913197],[116.371222,39.913198],[116.371229,39.912781],[116.371115,39.91278],[116.371108,39.913197]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7352"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370272,39.91286],[116.370996,39.91287],[116.370998,39.912785],[116.370274,39.912775],[116.370272,39.91286]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7353"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.371023,39.912709],[116.371192,39.912705],[116.371192,39.912555],[116.371031,39.912554],[116.371023,39.912709]]]},"properties":{"building":"yes","height":15,"building:levels":"3"},"id":"fid--3e101fb5_16fbcea0335_-7354"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370539,39.913041],[116.370837,39.913046],[116.370837,39.912896],[116.370537,39.912895],[116.370539,39.913041]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7355"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370581,39.91236],[116.370837,39.912367],[116.370843,39.91224],[116.370586,39.912234],[116.370581,39.91236]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7356"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370171,39.912251],[116.370268,39.912251],[116.370284,39.911759],[116.370566,39.91176],[116.370565,39.911791],[116.370878,39.911793],[116.370879,39.911758],[116.371168,39.911756],[116.371136,39.912268],[116.371243,39.912273],[116.371262,39.911682],[116.370888,39.911689],[116.370892,39.911668],[116.370583,39.911662],[116.370581,39.911683],[116.370183,39.911676],[116.370171,39.912251]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7357"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369319,39.912293],[116.369502,39.912301],[116.369521,39.912118],[116.369618,39.912124],[116.369601,39.912291],[116.369814,39.912295],[116.36983,39.912129],[116.369908,39.912133],[116.369897,39.912306],[116.370085,39.91231],[116.370096,39.911983],[116.369789,39.911968],[116.369795,39.911906],[116.369564,39.911908],[116.369553,39.911951],[116.369303,39.911945],[116.369284,39.912278],[116.369319,39.912293]]]},"properties":{"building":"yes","height":15,"building:levels":"5"},"id":"fid--3e101fb5_16fbcea0335_-7358"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368995,39.910542],[116.369194,39.910538],[116.369194,39.910493],[116.369272,39.910489],[116.369269,39.910534],[116.369484,39.910539],[116.369482,39.910487],[116.369675,39.910486],[116.369675,39.910434],[116.369761,39.910432],[116.369764,39.910488],[116.370178,39.910488],[116.370167,39.910422],[116.370245,39.910423],[116.370245,39.910349],[116.370161,39.910357],[116.370159,39.910287],[116.37007,39.910287],[116.37007,39.910311],[116.369997,39.910311],[116.37,39.910406],[116.369928,39.910405],[116.369922,39.910309],[116.369839,39.91031],[116.369847,39.910273],[116.369756,39.91028],[116.369754,39.910351],[116.369674,39.91035],[116.369676,39.910283],[116.369598,39.910269],[116.369596,39.910307],[116.369527,39.9103],[116.369517,39.910393],[116.369488,39.910389],[116.369482,39.910454],[116.36944,39.910451],[116.369435,39.910356],[116.369373,39.910365],[116.369361,39.910325],[116.369275,39.910341],[116.369279,39.910399],[116.369196,39.910393],[116.369194,39.91034],[116.369104,39.910323],[116.369104,39.91036],[116.369042,39.910357],[116.36904,39.910449],[116.368982,39.910448],[116.368995,39.910542]]]},"properties":{"building":"yes","height":15,"building:levels":"6"},"id":"fid--3e101fb5_16fbcea0335_-7359"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369715,39.909988],[116.369901,39.909987],[116.369898,39.909929],[116.369979,39.90993],[116.36998,39.909981],[116.37018,39.909979],[116.370181,39.909896],[116.370133,39.909898],[116.370132,39.9098],[116.370059,39.909802],[116.370063,39.909763],[116.369979,39.909767],[116.369983,39.909843],[116.369901,39.909841],[116.369895,39.909773],[116.369832,39.909761],[116.369808,39.909758],[116.369805,39.909798],[116.369735,39.909798],[116.369733,39.909891],[116.369695,39.909892],[116.369695,39.909987],[116.369715,39.909988]]]},"properties":{"building":"yes","height":15,"building:levels":"6"},"id":"fid--3e101fb5_16fbcea0335_-735a"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369021,39.909582],[116.369354,39.909575],[116.369351,39.909375],[116.369837,39.909376],[116.369843,39.909174],[116.369746,39.90917],[116.369749,39.909217],[116.369322,39.909225],[116.369327,39.90918],[116.369228,39.909177],[116.369214,39.909249],[116.369026,39.909247],[116.369021,39.909582]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-735b"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.367977,39.911454],[116.368702,39.91144],[116.368709,39.911664],[116.367985,39.911678],[116.367977,39.911454]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-735c"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370066,39.909182],[116.37014,39.909182],[116.370136,39.909228],[116.370226,39.909227],[116.370226,39.909182],[116.370312,39.909181],[116.370317,39.909005],[116.37007,39.909005],[116.370066,39.909182]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-735d"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370414,39.909516],[116.37066,39.909514],[116.37066,39.909331],[116.370412,39.909332],[116.370414,39.909516]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-735e"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370676,39.909188],[116.370749,39.909187],[116.37075,39.909241],[116.370854,39.90924],[116.370852,39.909183],[116.370912,39.909182],[116.370907,39.908992],[116.370671,39.908995],[116.370676,39.909188]]]},"properties":{"building":"yes","height":15,"building:levels":"9"},"id":"fid--3e101fb5_16fbcea0335_-735f"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370938,39.909881],[116.37104,39.90988],[116.371039,39.909823],[116.37112,39.909822],[116.371118,39.909612],[116.370837,39.909614],[116.37084,39.909825],[116.370937,39.909825],[116.370938,39.909881]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7360"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370513,39.910085],[116.370616,39.910085],[116.370616,39.910033],[116.370705,39.910033],[116.370702,39.909826],[116.370415,39.909827],[116.370417,39.910036],[116.370512,39.910035],[116.370513,39.910085]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7361"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370418,39.910533],[116.370522,39.910532],[116.370523,39.910572],[116.37062,39.910571],[116.370619,39.910525],[116.370715,39.910524],[116.370713,39.910395],[116.370796,39.910395],[116.370797,39.910437],[116.370911,39.910436],[116.370911,39.910383],[116.370986,39.910383],[116.370982,39.910175],[116.370697,39.910178],[116.3707,39.91031],[116.370414,39.910313],[116.370418,39.910533]]]},"properties":{"building":"yes","height":15,"building:levels":"8"},"id":"fid--3e101fb5_16fbcea0335_-7362"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.370518,39.908347],[116.371216,39.908342],[116.37121,39.907972],[116.370511,39.907978],[116.370518,39.908347]]]},"properties":{"building":"yes","height":15,"building:levels":"4"},"id":"fid--3e101fb5_16fbcea0335_-7363"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.368322,39.90896],[116.368695,39.908956],[116.368693,39.908841],[116.368319,39.908845],[116.368322,39.90896]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7364"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369737,39.908792],[116.369968,39.908785],[116.369963,39.908693],[116.369731,39.9087],[116.369737,39.908792]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7365"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.36916,39.90876],[116.36944,39.908756],[116.369445,39.908536],[116.369158,39.908535],[116.36916,39.90876]]]},"properties":{"building":"yes","height":15,"building:levels":"1"},"id":"fid--3e101fb5_16fbcea0335_-7366"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.369384,39.912707],[116.370145,39.912704],[116.370147,39.912869],[116.369385,39.912872],[116.369384,39.912707]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7367"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372072,39.906163],[116.37245,39.906131],[116.372302,39.905255],[116.371916,39.905279],[116.371952,39.905821],[116.372072,39.906163]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7368"},{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[116.372191,39.906602],[116.37342,39.906591],[116.373305,39.905231],[116.372819,39.905264],[116.372913,39.906233],[116.372189,39.906244],[116.372191,39.906602]]]},"properties":{"building":"yes","height":15},"id":"fid--3e101fb5_16fbcea0335_-7369"}]});\n// CONCATENATED MODULE: ./src/libs/OrbitControls.js\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nvar OrbitControls_OrbitControls=function OrbitControls(object,domElement){if(domElement===undefined)console.warn(\'THREE.OrbitControls: The second parameter "domElement" is now mandatory.\');if(domElement===document)console.error(\'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.\');this.object=object;this.domElement=domElement;// Set to false to disable this control\nthis.enabled=true;// "target" sets the location of focus, where the object orbits around\nthis.target=new three_module["T" /* Vector3 */]();// How far you can dolly in and out ( PerspectiveCamera only )\nthis.minDistance=0;this.maxDistance=Infinity;// How far you can zoom in and out ( OrthographicCamera only )\nthis.minZoom=0;this.maxZoom=Infinity;// How far you can orbit vertically, upper and lower limits.\n// Range is 0 to Math.PI radians.\nthis.minPolarAngle=0;// radians\nthis.maxPolarAngle=Math.PI;// radians\n// How far you can orbit horizontally, upper and lower limits.\n// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\nthis.minAzimuthAngle=-Infinity;// radians\nthis.maxAzimuthAngle=Infinity;// radians\n// Set to true to enable damping (inertia)\n// If damping is enabled, you must call controls.update() in your animation loop\nthis.enableDamping=false;this.dampingFactor=0.05;// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.\n// Set to false to disable zooming\nthis.enableZoom=true;this.zoomSpeed=1.0;// Set to false to disable rotating\nthis.enableRotate=true;this.rotateSpeed=1.0;// Set to false to disable panning\nthis.enablePan=true;this.panSpeed=1.0;this.screenSpacePanning=false;// if true, pan in screen-space\nthis.keyPanSpeed=7.0;// pixels moved per arrow key push\n// Set to true to automatically rotate around the target\n// If auto-rotate is enabled, you must call controls.update() in your animation loop\nthis.autoRotate=false;this.autoRotateSpeed=2.0;// 30 seconds per round when fps is 60\n// Set to false to disable use of the keys\nthis.enableKeys=true;// The four arrow keys\nthis.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};// Mouse buttons\nthis.mouseButtons={LEFT:three_module["t" /* MOUSE */].ROTATE,MIDDLE:three_module["t" /* MOUSE */].DOLLY,RIGHT:three_module["t" /* MOUSE */].PAN};// Touch fingers\nthis.touches={ONE:three_module["M" /* TOUCH */].ROTATE,TWO:three_module["M" /* TOUCH */].DOLLY_PAN};// for reset\nthis.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;//\n// public methods\n//\nthis.getPolarAngle=function(){return spherical.phi;};this.getAzimuthalAngle=function(){return spherical.theta;};this.saveState=function(){scope.target0.copy(scope.target);scope.position0.copy(scope.object.position);scope.zoom0=scope.object.zoom;};this.reset=function(){scope.target.copy(scope.target0);scope.object.position.copy(scope.position0);scope.object.zoom=scope.zoom0;scope.object.updateProjectionMatrix();scope.dispatchEvent(changeEvent);scope.update();state=STATE.NONE;};// this method is exposed, but perhaps it would be better if we can make it private...\nthis.update=function(){var offset=new three_module["T" /* Vector3 */]();// so camera.up is the orbit axis\nvar quat=new three_module["E" /* Quaternion */]().setFromUnitVectors(object.up,new three_module["T" /* Vector3 */](0,1,0));var quatInverse=quat.clone().inverse();var lastPosition=new three_module["T" /* Vector3 */]();var lastQuaternion=new three_module["E" /* Quaternion */]();return function update(){var position=scope.object.position;offset.copy(position).sub(scope.target);// rotate offset to "y-axis-is-up" space\noffset.applyQuaternion(quat);// angle from z-axis around y-axis\nspherical.setFromVector3(offset);if(scope.autoRotate&&state===STATE.NONE){rotateLeft(getAutoRotationAngle());}if(scope.enableDamping){spherical.theta+=sphericalDelta.theta*scope.dampingFactor;spherical.phi+=sphericalDelta.phi*scope.dampingFactor;}else{spherical.theta+=sphericalDelta.theta;spherical.phi+=sphericalDelta.phi;}// restrict theta to be between desired limits\nspherical.theta=Math.max(scope.minAzimuthAngle,Math.min(scope.maxAzimuthAngle,spherical.theta));// restrict phi to be between desired limits\nspherical.phi=Math.max(scope.minPolarAngle,Math.min(scope.maxPolarAngle,spherical.phi));spherical.makeSafe();spherical.radius*=scale;// restrict radius to be between desired limits\nspherical.radius=Math.max(scope.minDistance,Math.min(scope.maxDistance,spherical.radius));// move target to panned location\nif(scope.enableDamping===true){scope.target.addScaledVector(panOffset,scope.dampingFactor);}else{scope.target.add(panOffset);}offset.setFromSpherical(spherical);// rotate offset back to "camera-up-vector-is-up" space\noffset.applyQuaternion(quatInverse);position.copy(scope.target).add(offset);scope.object.lookAt(scope.target);if(scope.enableDamping===true){sphericalDelta.theta*=1-scope.dampingFactor;sphericalDelta.phi*=1-scope.dampingFactor;panOffset.multiplyScalar(1-scope.dampingFactor);}else{sphericalDelta.set(0,0,0);panOffset.set(0,0,0);}scale=1;// update condition is:\n// min(camera displacement, camera rotation in radians)^2 > EPS\n// using small-angle approximation cos(x/2) = 1 - x^2 / 8\nif(zoomChanged||lastPosition.distanceToSquared(scope.object.position)>EPS||8*(1-lastQuaternion.dot(scope.object.quaternion))>EPS){scope.dispatchEvent(changeEvent);lastPosition.copy(scope.object.position);lastQuaternion.copy(scope.object.quaternion);zoomChanged=false;return true;}return false;};}();this.dispose=function(){scope.domElement.removeEventListener(\'contextmenu\',onContextMenu,false);scope.domElement.removeEventListener(\'mousedown\',onMouseDown,false);scope.domElement.removeEventListener(\'wheel\',onMouseWheel,false);scope.domElement.removeEventListener(\'touchstart\',onTouchStart,false);scope.domElement.removeEventListener(\'touchend\',onTouchEnd,false);scope.domElement.removeEventListener(\'touchmove\',onTouchMove,false);document.removeEventListener(\'mousemove\',onMouseMove,false);document.removeEventListener(\'mouseup\',onMouseUp,false);scope.domElement.removeEventListener(\'keydown\',onKeyDown,false);//scope.dispatchEvent( { type: \'dispose\' } ); // should this be added here?\n};//\n// internals\n//\nvar scope=this;var changeEvent={type:\'change\'};var startEvent={type:\'start\'};var endEvent={type:\'end\'};var STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};var state=STATE.NONE;var EPS=0.000001;// current position in spherical coordinates\nvar spherical=new three_module["L" /* Spherical */]();var sphericalDelta=new three_module["L" /* Spherical */]();var scale=1;var panOffset=new three_module["T" /* Vector3 */]();var zoomChanged=false;var rotateStart=new three_module["S" /* Vector2 */]();var rotateEnd=new three_module["S" /* Vector2 */]();var rotateDelta=new three_module["S" /* Vector2 */]();var panStart=new three_module["S" /* Vector2 */]();var panEnd=new three_module["S" /* Vector2 */]();var panDelta=new three_module["S" /* Vector2 */]();var dollyStart=new three_module["S" /* Vector2 */]();var dollyEnd=new three_module["S" /* Vector2 */]();var dollyDelta=new three_module["S" /* Vector2 */]();function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed;}function getZoomScale(){return Math.pow(0.95,scope.zoomSpeed);}function rotateLeft(angle){sphericalDelta.theta-=angle;}function rotateUp(angle){sphericalDelta.phi-=angle;}var panLeft=function(){var v=new three_module["T" /* Vector3 */]();return function panLeft(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0);// get X column of objectMatrix\nv.multiplyScalar(-distance);panOffset.add(v);};}();var panUp=function(){var v=new three_module["T" /* Vector3 */]();return function panUp(distance,objectMatrix){if(scope.screenSpacePanning===true){v.setFromMatrixColumn(objectMatrix,1);}else{v.setFromMatrixColumn(objectMatrix,0);v.crossVectors(scope.object.up,v);}v.multiplyScalar(distance);panOffset.add(v);};}();// deltaX and deltaY are in pixels; right and down are positive\nvar pan=function(){var offset=new three_module["T" /* Vector3 */]();return function pan(deltaX,deltaY){var element=scope.domElement;if(scope.object.isPerspectiveCamera){// perspective\nvar position=scope.object.position;offset.copy(position).sub(scope.target);var targetDistance=offset.length();// half of the fov is center to top of screen\ntargetDistance*=Math.tan(scope.object.fov/2*Math.PI/180.0);// we use only clientHeight here so aspect ratio does not distort speed\npanLeft(2*deltaX*targetDistance/element.clientHeight,scope.object.matrix);panUp(2*deltaY*targetDistance/element.clientHeight,scope.object.matrix);}else if(scope.object.isOrthographicCamera){// orthographic\npanLeft(deltaX*(scope.object.right-scope.object.left)/scope.object.zoom/element.clientWidth,scope.object.matrix);panUp(deltaY*(scope.object.top-scope.object.bottom)/scope.object.zoom/element.clientHeight,scope.object.matrix);}else{// camera neither orthographic nor perspective\nconsole.warn(\'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\');scope.enablePan=false;}};}();function dollyIn(dollyScale){if(scope.object.isPerspectiveCamera){scale/=dollyScale;}else if(scope.object.isOrthographicCamera){scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom*dollyScale));scope.object.updateProjectionMatrix();zoomChanged=true;}else{console.warn(\'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\');scope.enableZoom=false;}}function dollyOut(dollyScale){if(scope.object.isPerspectiveCamera){scale*=dollyScale;}else if(scope.object.isOrthographicCamera){scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/dollyScale));scope.object.updateProjectionMatrix();zoomChanged=true;}else{console.warn(\'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\');scope.enableZoom=false;}}//\n// event callbacks - update the object state\n//\nfunction handleMouseDownRotate(event){rotateStart.set(event.clientX,event.clientY);}function handleMouseDownDolly(event){dollyStart.set(event.clientX,event.clientY);}function handleMouseDownPan(event){panStart.set(event.clientX,event.clientY);}function handleMouseMoveRotate(event){rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);var element=scope.domElement;rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight);// yes, height\nrotateUp(2*Math.PI*rotateDelta.y/element.clientHeight);rotateStart.copy(rotateEnd);scope.update();}function handleMouseMoveDolly(event){dollyEnd.set(event.clientX,event.clientY);dollyDelta.subVectors(dollyEnd,dollyStart);if(dollyDelta.y>0){dollyIn(getZoomScale());}else if(dollyDelta.y<0){dollyOut(getZoomScale());}dollyStart.copy(dollyEnd);scope.update();}function handleMouseMovePan(event){panEnd.set(event.clientX,event.clientY);panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed);pan(panDelta.x,panDelta.y);panStart.copy(panEnd);scope.update();}function handleMouseUp()/*event*/{// no-op\n}function handleMouseWheel(event){if(event.deltaY<0){dollyOut(getZoomScale());}else if(event.deltaY>0){dollyIn(getZoomScale());}scope.update();}function handleKeyDown(event){var needsUpdate=false;switch(event.keyCode){case scope.keys.UP:pan(0,scope.keyPanSpeed);needsUpdate=true;break;case scope.keys.BOTTOM:pan(0,-scope.keyPanSpeed);needsUpdate=true;break;case scope.keys.LEFT:pan(scope.keyPanSpeed,0);needsUpdate=true;break;case scope.keys.RIGHT:pan(-scope.keyPanSpeed,0);needsUpdate=true;break;}if(needsUpdate){// prevent the browser from scrolling on cursor keys\nevent.preventDefault();scope.update();}}function handleTouchStartRotate(event){if(event.touches.length==1){rotateStart.set(event.touches[0].pageX,event.touches[0].pageY);}else{var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);rotateStart.set(x,y);}}function handleTouchStartPan(event){if(event.touches.length==1){panStart.set(event.touches[0].pageX,event.touches[0].pageY);}else{var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);panStart.set(x,y);}}function handleTouchStartDolly(event){var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance);}function handleTouchStartDollyPan(event){if(scope.enableZoom)handleTouchStartDolly(event);if(scope.enablePan)handleTouchStartPan(event);}function handleTouchStartDollyRotate(event){if(scope.enableZoom)handleTouchStartDolly(event);if(scope.enableRotate)handleTouchStartRotate(event);}function handleTouchMoveRotate(event){if(event.touches.length==1){rotateEnd.set(event.touches[0].pageX,event.touches[0].pageY);}else{var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);rotateEnd.set(x,y);}rotateDelta.subVectors(rotateEnd,rotateStart).multiplyScalar(scope.rotateSpeed);var element=scope.domElement;rotateLeft(2*Math.PI*rotateDelta.x/element.clientHeight);// yes, height\nrotateUp(2*Math.PI*rotateDelta.y/element.clientHeight);rotateStart.copy(rotateEnd);}function handleTouchMovePan(event){if(event.touches.length==1){panEnd.set(event.touches[0].pageX,event.touches[0].pageY);}else{var x=0.5*(event.touches[0].pageX+event.touches[1].pageX);var y=0.5*(event.touches[0].pageY+event.touches[1].pageY);panEnd.set(x,y);}panDelta.subVectors(panEnd,panStart).multiplyScalar(scope.panSpeed);pan(panDelta.x,panDelta.y);panStart.copy(panEnd);}function handleTouchMoveDolly(event){var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;var distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance);dollyDelta.set(0,Math.pow(dollyEnd.y/dollyStart.y,scope.zoomSpeed));dollyIn(dollyDelta.y);dollyStart.copy(dollyEnd);}function handleTouchMoveDollyPan(event){if(scope.enableZoom)handleTouchMoveDolly(event);if(scope.enablePan)handleTouchMovePan(event);}function handleTouchMoveDollyRotate(event){if(scope.enableZoom)handleTouchMoveDolly(event);if(scope.enableRotate)handleTouchMoveRotate(event);}function handleTouchEnd()/*event*/{}// no-op\n//\n// event handlers - FSM: listen for events and reset state\n//\nfunction onMouseDown(event){if(scope.enabled===false)return;// Prevent the browser from scrolling.\nevent.preventDefault();// Manually set the focus since calling preventDefault above\n// prevents the browser from setting it automatically.\nscope.domElement.focus?scope.domElement.focus():window.focus();var mouseAction;switch(event.button){case 0:mouseAction=scope.mouseButtons.LEFT;break;case 1:mouseAction=scope.mouseButtons.MIDDLE;break;case 2:mouseAction=scope.mouseButtons.RIGHT;break;default:mouseAction=-1;}switch(mouseAction){case three_module["t" /* MOUSE */].DOLLY:if(scope.enableZoom===false)return;handleMouseDownDolly(event);state=STATE.DOLLY;break;case three_module["t" /* MOUSE */].ROTATE:if(event.ctrlKey||event.metaKey||event.shiftKey){if(scope.enablePan===false)return;handleMouseDownPan(event);state=STATE.PAN;}else{if(scope.enableRotate===false)return;handleMouseDownRotate(event);state=STATE.ROTATE;}break;case three_module["t" /* MOUSE */].PAN:if(event.ctrlKey||event.metaKey||event.shiftKey){if(scope.enableRotate===false)return;handleMouseDownRotate(event);state=STATE.ROTATE;}else{if(scope.enablePan===false)return;handleMouseDownPan(event);state=STATE.PAN;}break;default:state=STATE.NONE;}if(state!==STATE.NONE){document.addEventListener(\'mousemove\',onMouseMove,false);document.addEventListener(\'mouseup\',onMouseUp,false);scope.dispatchEvent(startEvent);}}function onMouseMove(event){if(scope.enabled===false)return;event.preventDefault();switch(state){case STATE.ROTATE:if(scope.enableRotate===false)return;handleMouseMoveRotate(event);break;case STATE.DOLLY:if(scope.enableZoom===false)return;handleMouseMoveDolly(event);break;case STATE.PAN:if(scope.enablePan===false)return;handleMouseMovePan(event);break;}}function onMouseUp(event){if(scope.enabled===false)return;handleMouseUp(event);document.removeEventListener(\'mousemove\',onMouseMove,false);document.removeEventListener(\'mouseup\',onMouseUp,false);scope.dispatchEvent(endEvent);state=STATE.NONE;}function onMouseWheel(event){if(scope.enabled===false||scope.enableZoom===false||state!==STATE.NONE&&state!==STATE.ROTATE)return;event.preventDefault();event.stopPropagation();scope.dispatchEvent(startEvent);handleMouseWheel(event);scope.dispatchEvent(endEvent);}function onKeyDown(event){if(scope.enabled===false||scope.enableKeys===false||scope.enablePan===false)return;handleKeyDown(event);}function onTouchStart(event){if(scope.enabled===false)return;event.preventDefault();switch(event.touches.length){case 1:switch(scope.touches.ONE){case three_module["M" /* TOUCH */].ROTATE:if(scope.enableRotate===false)return;handleTouchStartRotate(event);state=STATE.TOUCH_ROTATE;break;case three_module["M" /* TOUCH */].PAN:if(scope.enablePan===false)return;handleTouchStartPan(event);state=STATE.TOUCH_PAN;break;default:state=STATE.NONE;}break;case 2:switch(scope.touches.TWO){case three_module["M" /* TOUCH */].DOLLY_PAN:if(scope.enableZoom===false&&scope.enablePan===false)return;handleTouchStartDollyPan(event);state=STATE.TOUCH_DOLLY_PAN;break;case three_module["M" /* TOUCH */].DOLLY_ROTATE:if(scope.enableZoom===false&&scope.enableRotate===false)return;handleTouchStartDollyRotate(event);state=STATE.TOUCH_DOLLY_ROTATE;break;default:state=STATE.NONE;}break;default:state=STATE.NONE;}if(state!==STATE.NONE){scope.dispatchEvent(startEvent);}}function onTouchMove(event){if(scope.enabled===false)return;event.preventDefault();event.stopPropagation();switch(state){case STATE.TOUCH_ROTATE:if(scope.enableRotate===false)return;handleTouchMoveRotate(event);scope.update();break;case STATE.TOUCH_PAN:if(scope.enablePan===false)return;handleTouchMovePan(event);scope.update();break;case STATE.TOUCH_DOLLY_PAN:if(scope.enableZoom===false&&scope.enablePan===false)return;handleTouchMoveDollyPan(event);scope.update();break;case STATE.TOUCH_DOLLY_ROTATE:if(scope.enableZoom===false&&scope.enableRotate===false)return;handleTouchMoveDollyRotate(event);scope.update();break;default:state=STATE.NONE;}}function onTouchEnd(event){if(scope.enabled===false)return;handleTouchEnd(event);scope.dispatchEvent(endEvent);state=STATE.NONE;}function onContextMenu(event){if(scope.enabled===false)return;event.preventDefault();}//\nscope.domElement.addEventListener(\'contextmenu\',onContextMenu,false);scope.domElement.addEventListener(\'mousedown\',onMouseDown,false);scope.domElement.addEventListener(\'wheel\',onMouseWheel,false);scope.domElement.addEventListener(\'touchstart\',onTouchStart,false);scope.domElement.addEventListener(\'touchend\',onTouchEnd,false);scope.domElement.addEventListener(\'touchmove\',onTouchMove,false);scope.domElement.addEventListener(\'keydown\',onKeyDown,false);// make sure element can receive keys.\nif(scope.domElement.tabIndex===-1){scope.domElement.tabIndex=0;}// force an update at start\nthis.update();};OrbitControls_OrbitControls.prototype=Object.create(three_module["k" /* EventDispatcher */].prototype);OrbitControls_OrbitControls.prototype.constructor=OrbitControls_OrbitControls;// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\nvar OrbitControls_MapControls=function MapControls(object,domElement){OrbitControls_OrbitControls.call(this,object,domElement);this.mouseButtons.LEFT=three_module["t" /* MOUSE */].PAN;this.mouseButtons.RIGHT=three_module["t" /* MOUSE */].ROTATE;this.touches.ONE=three_module["M" /* TOUCH */].PAN;this.touches.TWO=three_module["M" /* TOUCH */].DOLLY_ROTATE;};OrbitControls_MapControls.prototype=Object.create(three_module["k" /* EventDispatcher */].prototype);OrbitControls_MapControls.prototype.constructor=OrbitControls_MapControls;\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/Pass.js\nfunction Pass(){// if set to true, the pass is processed by the composer\nthis.enabled=true;// if set to true, the pass indicates to swap read and write buffer after rendering\nthis.needsSwap=true;// if set to true, the pass clears its buffer before rendering\nthis.clear=false;// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\nthis.renderToScreen=false;}Object.assign(Pass.prototype,{setSize:function setSize()/* width, height */{},render:function render()/* renderer, writeBuffer, readBuffer, deltaTime, maskActive */{console.error(\'THREE.Pass: .render() must be implemented in derived pass.\');}});// Helper for passes that need to fill the viewport with a single quad.\nPass.FullScreenQuad=function(){var camera=new three_module["y" /* OrthographicCamera */](-1,1,1,-1,0,1);var geometry=new three_module["B" /* PlaneBufferGeometry */](2,2);var FullScreenQuad=function FullScreenQuad(material){this._mesh=new three_module["u" /* Mesh */](geometry,material);};Object.defineProperty(FullScreenQuad.prototype,\'material\',{get:function get(){return this._mesh.material;},set:function set(value){this._mesh.material=value;}});Object.assign(FullScreenQuad.prototype,{dispose:function dispose(){this._mesh.geometry.dispose();},render:function render(renderer){renderer.render(this._mesh,camera);}});return FullScreenQuad;}();\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/RenderPass.js\n/**\n * @author alteredq / http://alteredqualia.com/\n */var RenderPass_RenderPass=function RenderPass(scene,camera,overrideMaterial,clearColor,clearAlpha){Pass.call(this);this.scene=scene;this.camera=camera;this.overrideMaterial=overrideMaterial;this.clearColor=clearColor;this.clearAlpha=clearAlpha!==undefined?clearAlpha:0;this.clear=true;this.clearDepth=false;this.needsSwap=false;};RenderPass_RenderPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:RenderPass_RenderPass,render:function render(renderer,writeBuffer,readBuffer/*, deltaTime, maskActive */){var oldAutoClear=renderer.autoClear;renderer.autoClear=false;this.scene.overrideMaterial=this.overrideMaterial;var oldClearColor,oldClearAlpha;if(this.clearColor){oldClearColor=renderer.getClearColor().getHex();oldClearAlpha=renderer.getClearAlpha();renderer.setClearColor(this.clearColor,this.clearAlpha);}if(this.clearDepth){renderer.clearDepth();}renderer.setRenderTarget(this.renderToScreen?null:readBuffer);// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\nif(this.clear)renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);renderer.render(this.scene,this.camera);if(this.clearColor){renderer.setClearColor(oldClearColor,oldClearAlpha);}this.scene.overrideMaterial=null;renderer.autoClear=oldAutoClear;}});\n// CONCATENATED MODULE: ./src/libs/jsm/shaders/CopyShader.js\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */var CopyShader={uniforms:{"tDiffuse":{value:null},"opacity":{value:1.0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tgl_FragColor = opacity * texel;","}"].join("\\n")};\n// CONCATENATED MODULE: ./src/libs/jsm/shaders/LuminosityHighPassShader.js\n/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */var LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{"tDiffuse":{value:null},"luminosityThreshold":{value:1.0},"smoothWidth":{value:1.0},"defaultColor":{value:new three_module["g" /* Color */](0x000000)},"defaultOpacity":{value:0.0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tvec3 luma = vec3( 0.299, 0.587, 0.114 );","\tfloat v = dot( texel.xyz, luma );","\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","\tgl_FragColor = mix( outputColor, texel, alpha );","}"].join("\\n")};\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/UnrealBloomPass.js\n/**\n * @author spidersharma / http://eduperiment.com/\n *//**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */var UnrealBloomPass_UnrealBloomPass=function UnrealBloomPass(resolution,strength,radius,threshold){Pass.call(this);this.strength=strength!==undefined?strength:1;this.radius=radius;this.threshold=threshold;this.resolution=resolution!==undefined?new three_module["S" /* Vector2 */](resolution.x,resolution.y):new three_module["S" /* Vector2 */](256,256);// create color only once here, reuse it later inside the render function\nthis.clearColor=new three_module["g" /* Color */](0,0,0);// render targets\nvar pars={minFilter:three_module["s" /* LinearFilter */],magFilter:three_module["s" /* LinearFilter */],format:three_module["F" /* RGBAFormat */]};this.renderTargetsHorizontal=[];this.renderTargetsVertical=[];this.nMips=5;var resx=Math.round(this.resolution.x/2);var resy=Math.round(this.resolution.y/2);this.renderTargetBright=new three_module["V" /* WebGLRenderTarget */](resx,resy,pars);this.renderTargetBright.texture.name="UnrealBloomPass.bright";this.renderTargetBright.texture.generateMipmaps=false;for(var i=0;i<this.nMips;i++){var renderTargetHorizonal=new three_module["V" /* WebGLRenderTarget */](resx,resy,pars);renderTargetHorizonal.texture.name="UnrealBloomPass.h"+i;renderTargetHorizonal.texture.generateMipmaps=false;this.renderTargetsHorizontal.push(renderTargetHorizonal);var renderTargetVertical=new three_module["V" /* WebGLRenderTarget */](resx,resy,pars);renderTargetVertical.texture.name="UnrealBloomPass.v"+i;renderTargetVertical.texture.generateMipmaps=false;this.renderTargetsVertical.push(renderTargetVertical);resx=Math.round(resx/2);resy=Math.round(resy/2);}// luminosity high pass material\nif(LuminosityHighPassShader===undefined)console.error("UnrealBloomPass relies on LuminosityHighPassShader");var highPassShader=LuminosityHighPassShader;this.highPassUniforms=three_module["R" /* UniformsUtils */].clone(highPassShader.uniforms);this.highPassUniforms["luminosityThreshold"].value=threshold;this.highPassUniforms["smoothWidth"].value=0.01;this.materialHighPassFilter=new three_module["I" /* ShaderMaterial */]({uniforms:this.highPassUniforms,vertexShader:highPassShader.vertexShader,fragmentShader:highPassShader.fragmentShader,defines:{}});// Gaussian Blur Materials\nthis.separableBlurMaterials=[];var kernelSizeArray=[3,5,7,9,11];var resx=Math.round(this.resolution.x/2);var resy=Math.round(this.resolution.y/2);for(var i=0;i<this.nMips;i++){this.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));this.separableBlurMaterials[i].uniforms["texSize"].value=new three_module["S" /* Vector2 */](resx,resy);resx=Math.round(resx/2);resy=Math.round(resy/2);}// Composite material\nthis.compositeMaterial=this.getCompositeMaterial(this.nMips);this.compositeMaterial.uniforms["blurTexture1"].value=this.renderTargetsVertical[0].texture;this.compositeMaterial.uniforms["blurTexture2"].value=this.renderTargetsVertical[1].texture;this.compositeMaterial.uniforms["blurTexture3"].value=this.renderTargetsVertical[2].texture;this.compositeMaterial.uniforms["blurTexture4"].value=this.renderTargetsVertical[3].texture;this.compositeMaterial.uniforms["blurTexture5"].value=this.renderTargetsVertical[4].texture;this.compositeMaterial.uniforms["bloomStrength"].value=strength;this.compositeMaterial.uniforms["bloomRadius"].value=0.1;this.compositeMaterial.needsUpdate=true;var bloomFactors=[1.0,0.8,0.6,0.4,0.2];this.compositeMaterial.uniforms["bloomFactors"].value=bloomFactors;this.bloomTintColors=[new three_module["T" /* Vector3 */](1,1,1),new three_module["T" /* Vector3 */](1,1,1),new three_module["T" /* Vector3 */](1,1,1),new three_module["T" /* Vector3 */](1,1,1),new three_module["T" /* Vector3 */](1,1,1)];this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;// copy material\nif(CopyShader===undefined){console.error("UnrealBloomPass relies on CopyShader");}var copyShader=CopyShader;this.copyUniforms=three_module["R" /* UniformsUtils */].clone(copyShader.uniforms);this.copyUniforms["opacity"].value=1.0;this.materialCopy=new three_module["I" /* ShaderMaterial */]({uniforms:this.copyUniforms,vertexShader:copyShader.vertexShader,fragmentShader:copyShader.fragmentShader,blending:three_module["a" /* AdditiveBlending */],depthTest:false,depthWrite:false,transparent:true});this.enabled=true;this.needsSwap=false;this.oldClearColor=new three_module["g" /* Color */]();this.oldClearAlpha=1;this.basic=new three_module["v" /* MeshBasicMaterial */]();this.fsQuad=new Pass.FullScreenQuad(null);};UnrealBloomPass_UnrealBloomPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:UnrealBloomPass_UnrealBloomPass,dispose:function dispose(){for(var i=0;i<this.renderTargetsHorizontal.length;i++){this.renderTargetsHorizontal[i].dispose();}for(var i=0;i<this.renderTargetsVertical.length;i++){this.renderTargetsVertical[i].dispose();}this.renderTargetBright.dispose();},setSize:function setSize(width,height){var resx=Math.round(width/2);var resy=Math.round(height/2);this.renderTargetBright.setSize(resx,resy);for(var i=0;i<this.nMips;i++){this.renderTargetsHorizontal[i].setSize(resx,resy);this.renderTargetsVertical[i].setSize(resx,resy);this.separableBlurMaterials[i].uniforms["texSize"].value=new three_module["S" /* Vector2 */](resx,resy);resx=Math.round(resx/2);resy=Math.round(resy/2);}},render:function render(renderer,writeBuffer,readBuffer,deltaTime,maskActive){this.oldClearColor.copy(renderer.getClearColor());this.oldClearAlpha=renderer.getClearAlpha();var oldAutoClear=renderer.autoClear;renderer.autoClear=false;renderer.setClearColor(this.clearColor,0);if(maskActive)renderer.state.buffers.stencil.setTest(false);// Render input to screen\nif(this.renderToScreen){this.fsQuad.material=this.basic;this.basic.map=readBuffer.texture;renderer.setRenderTarget(null);renderer.clear();this.fsQuad.render(renderer);}// 1. Extract Bright Areas\nthis.highPassUniforms["tDiffuse"].value=readBuffer.texture;this.highPassUniforms["luminosityThreshold"].value=this.threshold;this.fsQuad.material=this.materialHighPassFilter;renderer.setRenderTarget(this.renderTargetBright);renderer.clear();this.fsQuad.render(renderer);// 2. Blur All the mips progressively\nvar inputRenderTarget=this.renderTargetBright;for(var i=0;i<this.nMips;i++){this.fsQuad.material=this.separableBlurMaterials[i];this.separableBlurMaterials[i].uniforms["colorTexture"].value=inputRenderTarget.texture;this.separableBlurMaterials[i].uniforms["direction"].value=UnrealBloomPass_UnrealBloomPass.BlurDirectionX;renderer.setRenderTarget(this.renderTargetsHorizontal[i]);renderer.clear();this.fsQuad.render(renderer);this.separableBlurMaterials[i].uniforms["colorTexture"].value=this.renderTargetsHorizontal[i].texture;this.separableBlurMaterials[i].uniforms["direction"].value=UnrealBloomPass_UnrealBloomPass.BlurDirectionY;renderer.setRenderTarget(this.renderTargetsVertical[i]);renderer.clear();this.fsQuad.render(renderer);inputRenderTarget=this.renderTargetsVertical[i];}// Composite All the mips\nthis.fsQuad.material=this.compositeMaterial;this.compositeMaterial.uniforms["bloomStrength"].value=this.strength;this.compositeMaterial.uniforms["bloomRadius"].value=this.radius;this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;renderer.setRenderTarget(this.renderTargetsHorizontal[0]);renderer.clear();this.fsQuad.render(renderer);// Blend it additively over the input texture\nthis.fsQuad.material=this.materialCopy;this.copyUniforms["tDiffuse"].value=this.renderTargetsHorizontal[0].texture;if(maskActive)renderer.state.buffers.stencil.setTest(true);if(this.renderToScreen){renderer.setRenderTarget(null);this.fsQuad.render(renderer);}else{renderer.setRenderTarget(readBuffer);this.fsQuad.render(renderer);}// Restore renderer settings\nrenderer.setClearColor(this.oldClearColor,this.oldClearAlpha);renderer.autoClear=oldAutoClear;},getSeperableBlurMaterial:function getSeperableBlurMaterial(kernelRadius){return new three_module["I" /* ShaderMaterial */]({defines:{"KERNEL_RADIUS":kernelRadius,"SIGMA":kernelRadius},uniforms:{"colorTexture":{value:null},"texSize":{value:new three_module["S" /* Vector2 */](0.5,0.5)},"direction":{value:new three_module["S" /* Vector2 */](0.5,0.5)}},vertexShader:"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}",fragmentShader:"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}"});},getCompositeMaterial:function getCompositeMaterial(nMips){return new three_module["I" /* ShaderMaterial */]({defines:{"NUM_MIPS":nMips},uniforms:{"blurTexture1":{value:null},"blurTexture2":{value:null},"blurTexture3":{value:null},"blurTexture4":{value:null},"blurTexture5":{value:null},"dirtTexture":{value:null},"bloomStrength":{value:1.0},"bloomFactors":{value:null},"bloomTintColors":{value:null},"bloomRadius":{value:0.0}},vertexShader:"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}"});}});UnrealBloomPass_UnrealBloomPass.BlurDirectionX=new three_module["S" /* Vector2 */](1.0,0.0);UnrealBloomPass_UnrealBloomPass.BlurDirectionY=new three_module["S" /* Vector2 */](0.0,1.0);\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/ShaderPass.js\n/**\n * @author alteredq / http://alteredqualia.com/\n */var ShaderPass_ShaderPass=function ShaderPass(shader,textureID){Pass.call(this);this.textureID=textureID!==undefined?textureID:"tDiffuse";if(shader instanceof three_module["I" /* ShaderMaterial */]){this.uniforms=shader.uniforms;this.material=shader;}else if(shader){this.uniforms=three_module["R" /* UniformsUtils */].clone(shader.uniforms);this.material=new three_module["I" /* ShaderMaterial */]({defines:Object.assign({},shader.defines),uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});}this.fsQuad=new Pass.FullScreenQuad(this.material);};ShaderPass_ShaderPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:ShaderPass_ShaderPass,render:function render(renderer,writeBuffer,readBuffer/*, deltaTime, maskActive */){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=readBuffer.texture;}this.fsQuad.material=this.material;if(this.renderToScreen){renderer.setRenderTarget(null);this.fsQuad.render(renderer);}else{renderer.setRenderTarget(writeBuffer);// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\nif(this.clear)renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);this.fsQuad.render(renderer);}}});\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/MaskPass.js\n/**\n * @author alteredq / http://alteredqualia.com/\n */var MaskPass_MaskPass=function MaskPass(scene,camera){Pass.call(this);this.scene=scene;this.camera=camera;this.clear=true;this.needsSwap=false;this.inverse=false;};MaskPass_MaskPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:MaskPass_MaskPass,render:function render(renderer,writeBuffer,readBuffer/*, deltaTime, maskActive */){var context=renderer.getContext();var state=renderer.state;// don\'t update color or depth\nstate.buffers.color.setMask(false);state.buffers.depth.setMask(false);// lock buffers\nstate.buffers.color.setLocked(true);state.buffers.depth.setLocked(true);// set up stencil\nvar writeValue,clearValue;if(this.inverse){writeValue=0;clearValue=1;}else{writeValue=1;clearValue=0;}state.buffers.stencil.setTest(true);state.buffers.stencil.setOp(context.REPLACE,context.REPLACE,context.REPLACE);state.buffers.stencil.setFunc(context.ALWAYS,writeValue,0xffffffff);state.buffers.stencil.setClear(clearValue);state.buffers.stencil.setLocked(true);// draw into the stencil buffer\nrenderer.setRenderTarget(readBuffer);if(this.clear)renderer.clear();renderer.render(this.scene,this.camera);renderer.setRenderTarget(writeBuffer);if(this.clear)renderer.clear();renderer.render(this.scene,this.camera);// unlock color and depth buffer for subsequent rendering\nstate.buffers.color.setLocked(false);state.buffers.depth.setLocked(false);// only render where stencil is set to 1\nstate.buffers.stencil.setLocked(false);state.buffers.stencil.setFunc(context.EQUAL,1,0xffffffff);// draw if == 1\nstate.buffers.stencil.setOp(context.KEEP,context.KEEP,context.KEEP);state.buffers.stencil.setLocked(true);}});var MaskPass_ClearMaskPass=function ClearMaskPass(){Pass.call(this);this.needsSwap=false;};MaskPass_ClearMaskPass.prototype=Object.create(Pass.prototype);Object.assign(MaskPass_ClearMaskPass.prototype,{render:function render(renderer/*, writeBuffer, readBuffer, deltaTime, maskActive */){renderer.state.buffers.stencil.setLocked(false);renderer.state.buffers.stencil.setTest(false);}});\n// CONCATENATED MODULE: ./src/libs/jsm/postprocessing/EffectComposer.js\n/**\n * @author alteredq / http://alteredqualia.com/\n */var EffectComposer_EffectComposer=function EffectComposer(renderer,renderTarget){this.renderer=renderer;if(renderTarget===undefined){var parameters={minFilter:three_module["s" /* LinearFilter */],magFilter:three_module["s" /* LinearFilter */],format:three_module["F" /* RGBAFormat */],stencilBuffer:false};var size=renderer.getSize(new three_module["S" /* Vector2 */]());this._pixelRatio=renderer.getPixelRatio();this._width=size.width;this._height=size.height;renderTarget=new three_module["V" /* WebGLRenderTarget */](this._width*this._pixelRatio,this._height*this._pixelRatio,parameters);renderTarget.texture.name=\'EffectComposer.rt1\';}else{this._pixelRatio=1;this._width=renderTarget.width;this._height=renderTarget.height;}this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.renderTarget2.texture.name=\'EffectComposer.rt2\';this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.renderToScreen=true;this.passes=[];// dependencies\nif(CopyShader===undefined){console.error(\'THREE.EffectComposer relies on CopyShader\');}if(ShaderPass_ShaderPass===undefined){console.error(\'THREE.EffectComposer relies on ShaderPass\');}this.copyPass=new ShaderPass_ShaderPass(CopyShader);this.clock=new three_module["f" /* Clock */]();};Object.assign(EffectComposer_EffectComposer.prototype,{swapBuffers:function swapBuffers(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=tmp;},addPass:function addPass(pass){this.passes.push(pass);pass.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio);},insertPass:function insertPass(pass,index){this.passes.splice(index,0,pass);},isLastEnabledPass:function isLastEnabledPass(passIndex){for(var i=passIndex+1;i<this.passes.length;i++){if(this.passes[i].enabled){return false;}}return true;},render:function render(deltaTime){// deltaTime value is in seconds\nif(deltaTime===undefined){deltaTime=this.clock.getDelta();}var currentRenderTarget=this.renderer.getRenderTarget();var maskActive=false;var pass,i,il=this.passes.length;for(i=0;i<il;i++){pass=this.passes[i];if(pass.enabled===false)continue;pass.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i);pass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime,maskActive);if(pass.needsSwap){if(maskActive){var context=this.renderer.getContext();var stencil=this.renderer.state.buffers.stencil;//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\nstencil.setFunc(context.NOTEQUAL,1,0xffffffff);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,deltaTime);//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\nstencil.setFunc(context.EQUAL,1,0xffffffff);}this.swapBuffers();}if(MaskPass_MaskPass!==undefined){if(pass instanceof MaskPass_MaskPass){maskActive=true;}else if(pass instanceof MaskPass_ClearMaskPass){maskActive=false;}}}this.renderer.setRenderTarget(currentRenderTarget);},reset:function reset(renderTarget){if(renderTarget===undefined){var size=this.renderer.getSize(new three_module["S" /* Vector2 */]());this._pixelRatio=this.renderer.getPixelRatio();this._width=size.width;this._height=size.height;renderTarget=this.renderTarget1.clone();renderTarget.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio);}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;},setSize:function setSize(width,height){this._width=width;this._height=height;var effectiveWidth=this._width*this._pixelRatio;var effectiveHeight=this._height*this._pixelRatio;this.renderTarget1.setSize(effectiveWidth,effectiveHeight);this.renderTarget2.setSize(effectiveWidth,effectiveHeight);for(var i=0;i<this.passes.length;i++){this.passes[i].setSize(effectiveWidth,effectiveHeight);}},setPixelRatio:function setPixelRatio(pixelRatio){this._pixelRatio=pixelRatio;this.setSize(this._width,this._height);}});var EffectComposer_Pass=function Pass(){// if set to true, the pass is processed by the composer\nthis.enabled=true;// if set to true, the pass indicates to swap read and write buffer after rendering\nthis.needsSwap=true;// if set to true, the pass clears its buffer before rendering\nthis.clear=false;// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\nthis.renderToScreen=false;};Object.assign(EffectComposer_Pass.prototype,{setSize:function setSize()/* width, height */{},render:function render()/* renderer, writeBuffer, readBuffer, deltaTime, maskActive */{console.error(\'THREE.Pass: .render() must be implemented in derived pass.\');}});// Helper for passes that need to fill the viewport with a single quad.\nEffectComposer_Pass.FullScreenQuad=function(){var camera=new three_module["y" /* OrthographicCamera */](-1,1,1,-1,0,1);var geometry=new three_module["B" /* PlaneBufferGeometry */](2,2);var FullScreenQuad=function FullScreenQuad(material){this._mesh=new three_module["u" /* Mesh */](geometry,material);};Object.defineProperty(FullScreenQuad.prototype,\'material\',{get:function get(){return this._mesh.material;},set:function set(value){this._mesh.material=value;}});Object.assign(FullScreenQuad.prototype,{dispose:function dispose(){this._mesh.geometry.dispose();},render:function render(renderer){renderer.render(this._mesh,camera);}});return FullScreenQuad;}();\n// CONCATENATED MODULE: ./src/highway.js\n/* harmony default export */ var highway = ({"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"MultiLineString","coordinates":[[[116.363836,39.905535],[116.363844,39.904848],[116.363835,39.904374],[116.363812,39.904105],[116.363793,39.903946],[116.363711,39.903438]],[[116.371726,39.905107],[116.371755,39.905542]],[[116.368634,39.899637],[116.368631,39.899722],[116.368595,39.900865],[116.368589,39.901032],[116.368563,39.901853],[116.368546,39.902389],[116.368534,39.902751],[116.368523,39.903106],[116.368518,39.902368],[116.368506,39.903911],[116.368432,39.905513]],[[116.368432,39.905513],[116.368425,39.906183],[116.368396,39.907075]],[[116.368432,39.905513],[116.368033,39.905479],[116.36687,39.90544],[116.365959,39.905474]],[[116.365966,39.907083],[116.365959,39.905474]],[[116.365966,39.907083],[116.365959,39.905474]],[[116.371755,39.905542],[116.369749,39.905603]],[[116.369749,39.905603],[116.368432,39.905513]],[[116.371755,39.905542],[116.371783,39.905785],[116.371887,39.906214],[116.37193,39.906906],[116.371939,39.907064]],[[116.369684,39.907062],[116.36969,39.906925],[116.369717,39.90623],[116.369749,39.905603]],[[116.366117,39.907585],[116.367722,39.907604]],[[116.367699,39.908319],[116.367722,39.907604]],[[116.367722,39.907604],[116.367723,39.907535],[116.367727,39.907225]],[[116.366114,39.907229],[116.366117,39.907585]],[[116.357723,39.908591],[116.358084,39.908566],[116.359199,39.908554],[116.361188,39.908596],[116.363206,39.908575]],[[116.370104,39.908824],[116.370091,39.907526],[116.370088,39.907218]],[[116.356919,39.912015],[116.357526,39.912008],[116.358683,39.912045],[116.359655,39.912031],[116.361015,39.912083],[116.362622,39.912102],[116.363164,39.912108]],[[116.372221,39.912892],[116.372182,39.913687]],[[116.372221,39.912892],[116.373613,39.912912],[116.37384,39.912915]],[[116.367757,39.914072],[116.367721,39.913151],[116.366592,39.913153],[116.366462,39.913063]],[[116.371357,39.911614],[116.371239,39.913642],[116.371206,39.914388]],[[116.366808,39.912058],[116.366462,39.913063]],[[116.366462,39.913063],[116.366307,39.913134],[116.365902,39.913158],[116.365813,39.913213],[116.36577,39.913297],[116.365768,39.914054],[116.365771,39.914134],[116.365743,39.915391],[116.365737,39.915717],[116.365736,39.91637]],[[116.368677,39.914096],[116.368699,39.913196]],[[116.372182,39.913687],[116.373469,39.91373],[116.373815,39.91372]],[[116.372138,39.914451],[116.372182,39.913687]],[[116.367712,39.916402],[116.367746,39.915726],[116.367766,39.915392],[116.367768,39.914912],[116.367791,39.914156]],[[116.368963,39.914127],[116.368964,39.914204],[116.368985,39.915373],[116.368968,39.916453],[116.368967,39.916746],[116.368871,39.917507],[116.368788,39.918606]],[[116.364391,39.910788],[116.364536,39.910796]],[[116.367013,39.910711],[116.366999,39.911328]],[[116.366999,39.911328],[116.366991,39.911826]],[[116.365556,39.912059],[116.365558,39.911435],[116.365698,39.911355],[116.366999,39.911328]],[[116.372707,39.90883],[116.3727,39.909233],[116.372421,39.909568],[116.372384,39.910132]],[[116.371254,39.91006],[116.372159,39.910127]],[[116.372159,39.910127],[116.372384,39.910132]],[[116.372384,39.910132],[116.373972,39.910135]],[[116.366117,39.907585],[116.366122,39.909109],[116.366155,39.909409]],[[116.366155,39.909409],[116.363334,39.909379]],[[116.368901,39.909041],[116.368908,39.910683]],[[116.366155,39.909409],[116.366433,39.909443]],[[116.372159,39.910127],[116.372109,39.911495],[116.372198,39.911605],[116.372279,39.911725],[116.372221,39.912892]],[[116.363205,39.910092],[116.360853,39.91008],[116.359873,39.910104],[116.359497,39.910182],[116.35768,39.910106]],[[116.364536,39.910796],[116.365224,39.910881],[116.36644,39.910878],[116.366442,39.91062]],[[116.366442,39.91062],[116.366433,39.909443]],[[116.364536,39.910796],[116.364503,39.910451],[116.363891,39.910377],[116.363308,39.910404]],[[116.366433,39.909443],[116.36673,39.909485],[116.366883,39.909545],[116.367001,39.909624],[116.367033,39.909699],[116.367012,39.910627]],[[116.367012,39.910627],[116.367013,39.910711]],[[116.366442,39.91062],[116.367012,39.910627]],[[116.367013,39.910711],[116.368908,39.910683]],[[116.368908,39.910683],[116.371192,39.910574]]]},"properties":{"highway":"highway"},"id":"fid--3e101fb5_16fbcea0335_-736e"}]});\n// CONCATENATED MODULE: ./src/city.js\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}//import { LineMaterial } from \'./LineMaterial\';\n//import { LineGeometry } from \'./LineGeometry\';\n//let EffectComposer = require(\'three-effectcomposer\')(THREE);\n//THREE.EffectComposer = EffectComposer;\nvar city_City=function(){function City(props){_classCallCheck(this,City);this.Geo=cityGeo;//this.radius = 100;\nthis.country={};this.depth=20;Object.assign(this,props);this.animate=this.animate.bind(this);this.init();}_createClass(City,[{key:\'init\',value:function init(){this.el=document.getElementById(this.el);var w=this.el.offsetWidth,h=this.el.offsetHeight;this.scene=new three_module["H" /* Scene */]();this.camera=new three_module["A" /* PerspectiveCamera */](70,w/h,0.1,10000);//this.camera.position.set(0, 0, 10);\nthis.camera.position.z=900;this.renderer=new three_module["W" /* WebGLRenderer */]();this.renderer.setSize(w,h);this.renderer.autoClear=false;this.renderer.sortObjects=false;this.renderer.generateMipmaps=false;this.el.appendChild(this.renderer.domElement);//this.scene.add(new THREE.AxesHelper(300));\nthis.controls=new OrbitControls_OrbitControls(this.camera,this.renderer.domElement);//let point = new THREE.PointLight(0xffffff);\n//point.position.set(400, 200, 300); //点光源位置\n//this.scene.add(point); //点光源添加到场景中\nthis.rotating=new three_module["x" /* Object3D */]();this.scene.add(this.rotating);this.rotating.rotation.x=18;// let light = new THREE.DirectionalLight(\'#ffffff\', 1);\n// light.position.set(-180, -90, 100);\n// this.scene.add(light);\n// light = new THREE.DirectionalLight(\'#ffffff\', 1);\n// light.position.set(180, 90, 100);\n// this.scene.add(light);\nvar point=new three_module["C" /* PointLight */](0xffffff);point.position.set(400,200,300);//点光源位置\nthis.scene.add(point);//点光源添加到场景中\nvar params={exposure:2,bloomStrength:1,bloomThreshold:0,bloomRadius:0};var renderScene=new RenderPass_RenderPass(this.scene,this.camera);var bloomPass=new UnrealBloomPass_UnrealBloomPass(new three_module["S" /* Vector2 */](w,h));bloomPass.threshold=params.bloomThreshold;bloomPass.strength=params.bloomStrength;bloomPass.radius=params.bloomRadius;var bloomComposer=new EffectComposer_EffectComposer(this.renderer);bloomComposer.renderToScreen=true;bloomComposer.addPass(renderScene);bloomComposer.addPass(bloomPass);this.bloomComposer=bloomComposer;//this.creat3DMap();\n// var geometry = new THREE.BoxGeometry( 30, 30, 30 );\n// var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// var cube = new THREE.Mesh( geometry, material );\n// this.scene.add( cube );\nthis.getRect(w,h);this.addLine();//this.initLine();\nthis.initPath();}},{key:\'addLine\',value:function addLine(){var Geo=highway;this.lightFlowTexture=new three_module["N" /* TextureLoader */]().load(\'assets/images/earth/lightflow.png\');var tubeMaterial=new three_module["v" /* MeshBasicMaterial */]({map:this.lightFlowTexture,//color: 0xBD4DFF,\ntransparent:true//opacity: 0.3\n});this.lightFlowTexture.wrapS=three_module["G" /* RepeatWrapping */];//this.lightFlowTexture.wrapT= THREE.RepeatWrapping;\nfor(var i=0;i<Geo.features.length;i++){var gm=Geo.features[i].geometry,coordinates=gm.coordinates;if(gm.type===\'LineString\'){var path=[],v=void 0;for(var a=0;a<coordinates.length;a++){var _v=this.createVector3(coordinates[a]);path.push(_v);}var spline=new three_module["e" /* CatmullRomCurve3 */](path);//let points = spline.getPoints(100);\nvar tubeGeometry=new three_module["Q" /* TubeGeometry */](spline,10,2,3,false);//let tubeGeometry = new THREE.TubeGeometry(spline);\nvar tube=new three_module["u" /* Mesh */](tubeGeometry,tubeMaterial);this.rotating.add(tube);}else if(gm.type===\'MultiLineString\'){for(var _a=0;_a<coordinates.length;_a++){var _path=[];for(var b=0;b<coordinates[_a].length;b++){var _v2=this.createVector3(coordinates[_a][b]);_path.push(_v2);}var _spline=new three_module["e" /* CatmullRomCurve3 */](_path);//let points = spline.getPoints(100);\nvar _tubeGeometry=new three_module["Q" /* TubeGeometry */](_spline,10,2,3,false);//let tubeGeometry = new THREE.TubeGeometry(spline);\nvar _tube=new three_module["u" /* Mesh */](_tubeGeometry,tubeMaterial);this.rotating.add(_tube);}}}console.log(this.rotating);}},{key:\'initLine\',value:function initLine(){// let spline = new THREE.CatmullRomCurve3(path);\n// let points = spline.getPoints(100);\nvar curve=new three_module["e" /* CatmullRomCurve3 */]([new three_module["T" /* Vector3 */](-5,0,0),new three_module["T" /* Vector3 */](0,5,0),new three_module["T" /* Vector3 */](10,0,0)]);//let points = curve.getPoints(100);\nvar baseGeometry=new three_module["P" /* TubeBufferGeometry */](curve,25,1,8,false);var material=new three_module["v" /* MeshBasicMaterial */]({color:0x545454});var mesh=new three_module["u" /* Mesh */](baseGeometry,material);this.mesh=mesh;this.scene.add(mesh);}},{key:\'initPath\',value:function initPath(){var Geo=this.Geo;var count=0;var options={depth:180,// 定义图形拉伸的深度，默认100\nsteps:1,// 拉伸面方向分为多少级，默认为1\nbevelEnabled:true,// 表示是否有斜角，默认为true\nbevelThickness:0,// 斜角的深度，默认为6\nbevelSize:0,// 表示斜角的高度，高度会叠加到正常高度\nbebelSegments:0,// 斜角的分段数，分段数越高越平滑，默认为1\ncurveSegments:10// 拉伸体沿深度方向分为多少段，默认为1\n// var material2 = new THREE.MeshPhongMaterial({\n//   color: 0x000000,\n//   side: THREE.DoubleSide\n// });\n};var color=new three_module["g" /* Color */](0x000000);var material1=new three_module["v" /* MeshBasicMaterial */]({color:\'dark\',map:new three_module["N" /* TextureLoader */]().load(\'assets/images/earth/mapBg0.png\')});var material2=new three_module["v" /* MeshBasicMaterial */]({color:\'dark\',map:new three_module["N" /* TextureLoader */]().load(\'assets/images/earth/mapBg1.png\')});material2.map.wrapS=material2.map.wrapT=three_module["G" /* RepeatWrapping */];material2.map.repeat.set(0.08,0.08);// var lineMaterial = new THREE.MeshBasicMaterial({\n//     color: 0x0080F5\n// });\n//var baseLine = new THREE.Geometry();\nfor(var i=0;i<Geo.features.length;i++){// if (Geo.features[i].properties.name === \'Antarctica\') {\n//     continue;\n// }\n//var color = new THREE.Color(0xffffff).setHSL(Math.floor(Math.random() * 30 + 30) / 30, 0.6, 0.6);\nthis.country[Geo.features[i].properties.name]={color:color};var base=new three_module["n" /* Geometry */]();var gm=Geo.features[i].geometry;var coordinates=gm.coordinates;if(gm.type==\'Polygon\'){var path=[],v;for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){//var v = this.createVector3(this.type, coordinates[a][b][0], coordinates[a][b][1]);\nvar v=this.transferCoordinate(coordinates[a][b]);path.push(v);count++;}}//this.toPath(path, base, this.country[Geo.features[i].properties.name]);\nvar shape=new three_module["J" /* Shape */](path);//var lineGeometry = new THREE.ShapeGeometry(shape);\nvar geometry=new three_module["l" /* ExtrudeGeometry */](shape,options);//base.merge(geometry);\nvar mesh=new three_module["u" /* Mesh */](geometry,[material1,material2]);this.rotating.add(mesh);//var line = new THREE.Line(lineGeometry, lineMaterial);\n//line.position.z = this.depth + 1;\n//this.scene.add(line);\n}else if(gm.type==\'MultiPolygon\'){for(var a=0;a<coordinates.length;a++){var path=[],v;for(var b=0;b<coordinates[a].length;b++){for(var c=0;c<coordinates[a][b].length;c++){//var v = this.createVector3(this.type, coordinates[a][b][c][0], coordinates[a][b][c][1]);\nvar v=this.transferCoordinate(coordinates[a][b][c]);path.push(v);count++;}}//this.toPath(path, base, this.country[Geo.features[i].properties.name]);\nvar shape=new three_module["J" /* Shape */](path);//var lineGeometry = new THREE.ShapeGeometry(shape);\nvar geometry=new three_module["l" /* ExtrudeGeometry */](shape,options);//base.merge(geometry);\nvar mesh=new three_module["u" /* Mesh */](geometry,[material1,material2]);this.rotating.add(mesh);//var line = new THREE.Line(lineGeometry, lineMaterial);\n//line.position.z = this.depth + 1;\n//this.scene.add(line);\n}}}}},{key:\'createLight\',value:function createLight(){var light=new three_module["i" /* DirectionalLight */](\'#ffffff\',1);light.position.set(-180,-90,100);this.scene.add(light);light=new three_module["i" /* DirectionalLight */](\'#ffffff\',1);light.position.set(180,90,100);this.scene.add(light);}},{key:\'getRect\',value:function getRect(w,h){var Geo=this.Geo;var boundingRect=void 0;for(var i=0;i<Geo.features.length;i++){var gm=Geo.features[i].geometry,coordinates=gm.coordinates;if(Geo.features[i].properties.name===\'Antarctica\'){continue;}if(gm.type==\'Polygon\'){for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){this.union(coordinates[a][b]);}}}else if(gm.type==\'MultiPolygon\'){for(var _a2=0;_a2<coordinates.length;_a2++){var path=[];for(var _b=0;_b<coordinates[_a2].length;_b++){for(var c=0;c<coordinates[_a2][_b].length;c++){this.union(coordinates[_a2][_b][c]);}}}}}this.boundingRect.center={x:(this.boundingRect.right+this.boundingRect.left)/2,y:(this.boundingRect.top+this.boundingRect.bottom)/2};this.boundingRect.aspect=h/(this.boundingRect.top-this.boundingRect.bottom);}},{key:\'union\',value:function union(other){if(!this.boundingRect){this.boundingRect={left:other[0],right:other[0],top:other[1],bottom:other[1]};}else{this.boundingRect.left=Math.min(other[0],this.boundingRect.left);this.boundingRect.right=Math.max(other[0],this.boundingRect.right);this.boundingRect.bottom=Math.min(other[1],this.boundingRect.bottom);this.boundingRect.top=Math.max(other[1],this.boundingRect.top);}}},{key:\'translate\',value:function translate(a,b,c){var s=c||1;var a=[1,0,0,a[0]||0,0,1,0,a[1]||0,0,0,1,a[2]||0,0,0,0,1];var m=[(a[0]*b[0]+a[1]*b[1]+a[2]*(b[2]||0)+a[3]*1)*(c||1),(a[4]*b[0]+a[5]*b[1]+a[6]*(b[2]||0)+a[7]*1)*(c||1),(a[8]*b[0]+a[9]*b[1]+a[10]*(b[2]||0)+a[11]*1)*(c||1),a[12]*b[0]+a[13]*b[1]+a[14]*(b[2]||0)+a[15]*1];return m;}},{key:\'transferCoordinate\',value:function transferCoordinate(coordinate){var lon=coordinate[0],lat=coordinate[1];//var projected = this.projection([lon, lat]);\nvar projected=this.translate([lon,lat],[-this.boundingRect.center.x,-this.boundingRect.center.y],this.boundingRect.aspect);//return new THREE.Vector3(projected[0], -projected[1]);\nreturn new three_module["T" /* Vector3 */](projected[0],projected[1],projected[2]//(lon / 180) * this.radius * 2,\n//(lat / 180) * this.radius * 2\n);}},{key:\'createVector3\',value:function createVector3(coordinate){var lon=coordinate[0],lat=coordinate[1];//var projected = this.projection([lon, lat]);\nvar projected=this.translate([lon,lat],[-this.boundingRect.center.x,-this.boundingRect.center.y],this.boundingRect.aspect);//return new THREE.Vector3(projected[0], -projected[1]);\nreturn new three_module["T" /* Vector3 */](projected[0],projected[1],projected[2]//(lon / 180) * this.radius * 2,\n//(lat / 180) * this.radius * 2\n);}},{key:\'animate\',value:function animate(){requestAnimationFrame(this.animate);//this.renderer.render(this.scene, this.camera);\nthis.bloomComposer.render();this.lightFlowTexture.offset.x-=0.02;this.controls.update();//this.rotating.rotation.x += 0.1;\n//console.log(this.rotating.rotation.x);\n}}]);return City;}();// var map = new AMap.Map(\'id-test1\', {\n//     //features: [\'bg\', \'road\'],\n//     mapStyle: \'amap://styles/blue\',//blue dark darkblue grey\n//     showLabel: true,\n//     viewMode: \'3D\',\n//     expandZoomRange: true,\n//     zooms: [3, 20],\n//     rotation: 50,\n//     pitch: 60,\n//     zoom: 17,\n//     center: [116.390446, 39.992967]\n// });\nvar cy=new city_City({el:\'id-map2\'// transferCoordinate: function (coordinate) {\n//     const _pixel = map.lngLatToContainer(new AMap.LngLat(coordinate[0], coordinate[1]));\n//     //console.log([_pixel[\'x\'], _pixel[\'y\']]);\n//     //return [_pixel[\'x\'], _pixel[\'y\']];\n//     return new THREE.Vector3(\n//         _pixel[\'x\'],\n//         _pixel[\'y\']\n//     );\n// }\n});cy.animate();// var el = document.getElementById(\'id-test\');\n// var w = el.offsetWidth;\n// var h = el.offsetHeight;\n// var scene = new THREE.Scene();\n// var camera = new THREE.PerspectiveCamera( 75, w/h, 1, 1000 );\n// //camera.position.set(-40, 0, 60);\n// var renderer = new THREE.WebGLRenderer();\n// renderer.setSize( w, h );\n// el.appendChild( renderer.domElement );\n// var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n// var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// var cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n// camera.position.z = 5;\n// var render = function () {\n//     requestAnimationFrame( render );\n//     cube.rotation.x += 0.1;\n//     cube.rotation.y += 0.1;\n//     renderer.render(scene, camera);\n// };\n// render();\n\n//# sourceURL=webpack:///./src/city.js_+_11_modules?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/index.less\nvar src = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/TrackballControls.js\n/**\r\n * @author Eberhard Graether / http://egraether.com/\r\n * @author Mark Lundin \t/ http://mark-lundin.com\r\n */three_module["TrackballControls"]=function(object,domElement){var _this=this;var STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};this.object=object;this.domElement=domElement!==undefined?domElement:document;// API\nthis.enabled=true;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1.0;this.zoomSpeed=1.2;this.panSpeed=0.3;this.noRotate=false;this.noZoom=false;this.noPan=false;this.noRoll=false;this.staticMoving=false;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65/*A*/,83/*S*/,68/*D*/];this.clearStateOnMouseUp=true;// internals\nthis.target=new three_module["T" /* Vector3 */]();var EPS=0.000001;var lastPosition=new three_module["T" /* Vector3 */]();var _state=STATE.NONE,_prevState=STATE.NONE,_eye=new three_module["T" /* Vector3 */](),_rotateStart=new three_module["T" /* Vector3 */](),_rotateEnd=new three_module["T" /* Vector3 */](),_zoomStart=new three_module["S" /* Vector2 */](),_zoomEnd=new three_module["S" /* Vector2 */](),_touchZoomDistanceStart=0,_touchZoomDistanceEnd=0,_panStart=new three_module["S" /* Vector2 */](),_panEnd=new three_module["S" /* Vector2 */]();// for reset\nthis.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();// events\nvar changeEvent={type:\'change\'};var startEvent={type:\'start\'};var endEvent={type:\'end\'};// methods\nthis.getState=function(){return _state;};this.setState=function(s){_state=s;};this.handleResize=function(){if(this.domElement===document){this.screen.left=0;this.screen.top=0;this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;}else{var box=this.domElement.getBoundingClientRect();// adjustments come from similar code in the jquery offset() function\nvar d=this.domElement.ownerDocument.documentElement;this.screen.left=box.left+window.pageXOffset-d.clientLeft;this.screen.top=box.top+window.pageYOffset-d.clientTop;this.screen.width=box.width;this.screen.height=box.height;}};this.handleEvent=function(event){if(typeof this[event.type]==\'function\'){this[event.type](event);}};this.getMouseOnScreen=function(pageX,pageY,vector){return vector.set((pageX-_this.screen.left)/_this.screen.width,(pageY-_this.screen.top)/_this.screen.height);};this.getMouseProjectionOnBall=function(){var objectUp=new three_module["T" /* Vector3 */](),mouseOnBall=new three_module["T" /* Vector3 */]();return function(pageX,pageY,projection){mouseOnBall.set((pageX-_this.screen.width*0.5-_this.screen.left)/(_this.screen.width*.5),(_this.screen.height*0.5+_this.screen.top-pageY)/(_this.screen.height*.5),0.0);var length=mouseOnBall.length();if(_this.noRoll){if(length<Math.SQRT1_2){mouseOnBall.z=Math.sqrt(1.0-length*length);}else{mouseOnBall.z=.5/length;}}else if(length>1.0){mouseOnBall.normalize();}else{mouseOnBall.z=Math.sqrt(1.0-length*length);}_eye.copy(_this.object.position).sub(_this.target);projection.copy(_this.object.up).setLength(mouseOnBall.y);projection.add(objectUp.copy(_this.object.up).cross(_eye).setLength(mouseOnBall.x));projection.add(_eye.setLength(mouseOnBall.z));return projection;};}();this.rotateCamera=function(){var axis=new three_module["T" /* Vector3 */](),quaternion=new three_module["E" /* Quaternion */]();return function(){var angle=Math.acos(_rotateStart.dot(_rotateEnd)/_rotateStart.length()/_rotateEnd.length());if(angle){axis.crossVectors(_rotateStart,_rotateEnd).normalize();angle*=_this.rotateSpeed;quaternion.setFromAxisAngle(axis,-angle);_eye.applyQuaternion(quaternion);_this.object.up.applyQuaternion(quaternion);_rotateEnd.applyQuaternion(quaternion);if(_this.staticMoving){_rotateStart.copy(_rotateEnd);}else{quaternion.setFromAxisAngle(axis,angle*(_this.dynamicDampingFactor-1.0));_rotateStart.applyQuaternion(quaternion);}}};}();this.zoomCamera=function(){if(_state===STATE.TOUCH_ZOOM){var factor=_touchZoomDistanceStart/_touchZoomDistanceEnd;_touchZoomDistanceStart=_touchZoomDistanceEnd;_eye.multiplyScalar(factor);}else{var factor=1.0+(_zoomEnd.y-_zoomStart.y)*_this.zoomSpeed;if(factor!==1.0&&factor>0.0){_eye.multiplyScalar(factor);if(_this.staticMoving){_zoomStart.copy(_zoomEnd);}else{_zoomStart.y+=(_zoomEnd.y-_zoomStart.y)*this.dynamicDampingFactor;}}}};this.panCamera=function(){var mouseChange=new three_module["S" /* Vector2 */](),objectUp=new three_module["T" /* Vector3 */](),pan=new three_module["T" /* Vector3 */]();return function(){mouseChange.copy(_panEnd).sub(_panStart);if(mouseChange.lengthSq()){mouseChange.multiplyScalar(_eye.length()*_this.panSpeed);pan.copy(_eye).cross(_this.object.up).setLength(mouseChange.x);pan.add(objectUp.copy(_this.object.up).setLength(mouseChange.y));_this.object.position.add(pan);_this.target.add(pan);if(_this.staticMoving){_panStart.copy(_panEnd);}else{_panStart.add(mouseChange.subVectors(_panEnd,_panStart).multiplyScalar(_this.dynamicDampingFactor));}}};}();this.checkDistances=function(){if(!_this.noZoom||!_this.noPan){if(_eye.lengthSq()>_this.maxDistance*_this.maxDistance){_this.object.position.addVectors(_this.target,_eye.setLength(_this.maxDistance));}if(_eye.lengthSq()<_this.minDistance*_this.minDistance){_this.object.position.addVectors(_this.target,_eye.setLength(_this.minDistance));}}};this.update=function(){_eye.subVectors(_this.object.position,_this.target);if(!_this.noRotate){_this.rotateCamera();}if(!_this.noZoom){_this.zoomCamera();}if(!_this.noPan){_this.panCamera();}_this.object.position.addVectors(_this.target,_eye);_this.checkDistances();_this.object.lookAt(_this.target);if(lastPosition.distanceToSquared(_this.object.position)>EPS){_this.dispatchEvent(changeEvent);lastPosition.copy(_this.object.position);}};this.reset=function(){_state=STATE.NONE;_prevState=STATE.NONE;_this.target.copy(_this.target0);_this.object.position.copy(_this.position0);_this.object.up.copy(_this.up0);_eye.subVectors(_this.object.position,_this.target);_this.object.lookAt(_this.target);_this.dispatchEvent(changeEvent);lastPosition.copy(_this.object.position);};// listeners\nfunction keydown(event){if(_this.enabled===false)return;window.removeEventListener(\'keydown\',keydown);_prevState=_state;if(_state!==STATE.NONE){return;}else if(event.keyCode===_this.keys[STATE.ROTATE]&&!_this.noRotate){_state=STATE.ROTATE;}else if(event.keyCode===_this.keys[STATE.ZOOM]&&!_this.noZoom){_state=STATE.ZOOM;}else if(event.keyCode===_this.keys[STATE.PAN]&&!_this.noPan){_state=STATE.PAN;}}function keyup(event){if(_this.enabled===false)return;_state=_prevState;window.addEventListener(\'keydown\',keydown,false);}function mousedown(event){if(_this.enabled===false)return;event.preventDefault();// event.stopPropagation();\nif(_state===STATE.NONE){_state=event.button;}if(_state===STATE.ROTATE&&!_this.noRotate){_this.getMouseProjectionOnBall(event.pageX,event.pageY,_rotateStart);_rotateEnd.copy(_rotateStart);}else if(_state===STATE.ZOOM&&!_this.noZoom){_this.getMouseOnScreen(event.pageX,event.pageY,_zoomStart);_zoomEnd.copy(_zoomStart);}else if(_state===STATE.PAN&&!_this.noPan){_this.getMouseOnScreen(event.pageX,event.pageY,_panStart);_panEnd.copy(_panStart);}document.addEventListener(\'mousemove\',mousemove,false);document.addEventListener(\'mouseup\',mouseup,false);_this.dispatchEvent(startEvent);}function mousemove(event){if(_this.enabled===false)return;//event.preventDefault();\n//event.stopPropagation();\nif(_state===STATE.ROTATE&&!_this.noRotate){_this.getMouseProjectionOnBall(event.pageX,event.pageY,_rotateEnd);}else if(_state===STATE.ZOOM&&!_this.noZoom){_this.getMouseOnScreen(event.pageX,event.pageY,_zoomEnd);}else if(_state===STATE.PAN&&!_this.noPan){_this.getMouseOnScreen(event.pageX,event.pageY,_panEnd);}}function mouseup(event){if(_this.enabled===false)return;event.preventDefault();// event.stopPropagation();\nif(_this.clearStateOnMouseUp){_state=STATE.NONE;}document.removeEventListener(\'mousemove\',mousemove);document.removeEventListener(\'mouseup\',mouseup);_this.dispatchEvent(endEvent);}function mousewheel(event){if(_this.enabled===false)return;event.preventDefault();event.stopPropagation();var delta=0;if(event.wheelDelta){// WebKit / Opera / Explorer 9\ndelta=event.wheelDelta/40;}else if(event.detail){// Firefox\ndelta=-event.detail/3;}_zoomStart.y+=delta*0.01;_this.dispatchEvent(startEvent);_this.dispatchEvent(endEvent);}function touchstart(event){if(_this.enabled===false)return;switch(event.touches.length){case 1:_state=STATE.TOUCH_ROTATE;_rotateEnd.copy(_this.getMouseProjectionOnBall(event.touches[0].pageX,event.touches[0].pageY,_rotateStart));break;case 2:_state=STATE.TOUCH_ZOOM;var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;_touchZoomDistanceEnd=_touchZoomDistanceStart=Math.sqrt(dx*dx+dy*dy);break;case 3:_state=STATE.TOUCH_PAN;_panEnd.copy(_this.getMouseOnScreen(event.touches[0].pageX,event.touches[0].pageY,_panStart));break;default:_state=STATE.NONE;}_this.dispatchEvent(startEvent);}function touchmove(event){if(_this.enabled===false)return;event.preventDefault();// event.stopPropagation();\nswitch(event.touches.length){case 1:_this.getMouseProjectionOnBall(event.touches[0].pageX,event.touches[0].pageY,_rotateEnd);break;case 2:var dx=event.touches[0].pageX-event.touches[1].pageX;var dy=event.touches[0].pageY-event.touches[1].pageY;_touchZoomDistanceEnd=Math.sqrt(dx*dx+dy*dy);break;case 3:_this.getMouseOnScreen(event.touches[0].pageX,event.touches[0].pageY,_panEnd);break;default:_state=STATE.NONE;}}function touchend(event){if(_this.enabled===false)return;switch(event.touches.length){case 1:_rotateStart.copy(_this.getMouseProjectionOnBall(event.touches[0].pageX,event.touches[0].pageY,_rotateEnd));break;case 2:_touchZoomDistanceStart=_touchZoomDistanceEnd=0;break;case 3:_panStart.copy(_this.getMouseOnScreen(event.touches[0].pageX,event.touches[0].pageY,_panEnd));break;}_state=STATE.NONE;_this.dispatchEvent(endEvent);}this.domElement.addEventListener(\'contextmenu\',function(event){event.preventDefault();},false);this.domElement.addEventListener(\'mousedown\',mousedown,false);this.domElement.addEventListener(\'mousewheel\',mousewheel,false);this.domElement.addEventListener(\'DOMMouseScroll\',mousewheel,false);// firefox\nthis.domElement.addEventListener(\'touchstart\',touchstart,false);this.domElement.addEventListener(\'touchend\',touchend,false);this.domElement.addEventListener(\'touchmove\',touchmove,false);window.addEventListener(\'keydown\',keydown,false);window.addEventListener(\'keyup\',keyup,false);this.handleResize();// force an update at start\nthis.update();};three_module["TrackballControls"].prototype=Object.create(three_module["k" /* EventDispatcher */].prototype);\n// CONCATENATED MODULE: ./src/map/geoAll.js\n/* harmony default export */ var geoAll = ({"type":"FeatureCollection","crs":{"type":"name","properties":{"name":"urn:ogc:def:crs:OGC:1.3:CRS84"}},"features":[{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Alberta","type":"Province","postal":"AB","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.99966285694285,53.465628031282392],[-109.99943214404341,48.993082694652713],[-114.06251701583469,48.993082694652713],[-114.73402338910687,49.587201369660278],[-114.99279537163449,50.545033437448694],[-116.67403322873736,51.790685340435289],[-118.22102364419568,52.386100402211071],[-118.80367259220323,53.153396574059229],[-119.89384048046952,53.515549908186784],[-120.00000686635538,60.001087264965378],[-110.0000254057848,60.001087264965378],[-109.99966285694285,53.465628031282392]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"British Columbia","type":"Province","postal":"BC","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-130.02508110132067,55.888212352212292],[-131.82427367483723,56.58998606062346],[-133.40110295862132,58.410882126178876],[-135.47593702214496,59.793280860553836],[-137.43857869857629,58.903124576597065],[-139.05651882377236,60.00158164974988],[-120.00000686635538,60.001087264965378],[-119.89384048046952,53.515549908186784],[-118.80367259220323,53.153396574059229],[-118.22102364419568,52.386100402211071],[-116.67403322873736,51.790685340435289],[-114.99279537163449,50.545033437448694],[-114.73402338910687,49.587201369660278],[-114.05060234252861,49.014626884927679],[-123.08643459639794,48.993027763009991],[-123.22942166239935,49.26051190407307],[-122.94763332157184,49.293273135791566],[-122.87911159044232,49.398950630057215],[-123.27676175209584,49.343964055694016],[-123.18748684634653,49.68033247672858],[-123.53056791412153,49.397291694447063],[-124.02860015968245,49.602867874164161],[-123.99260894737199,49.736164998389683],[-123.81719023950843,49.586586135261825],[-123.58247831649238,49.681255328326301],[-123.87439605223753,49.736813191773791],[-123.82545745173786,50.144230199502999],[-124.28126923670382,49.772101279057409],[-124.78237765425709,50.020095673283265],[-125.05670078483888,50.418624741220327],[-124.8626547569288,50.637296624561998],[-124.8598642294786,50.872404055405639],[-125.05877170776944,50.513865223369095],[-126.09433754317158,50.497594470795292],[-126.44747110156443,50.587770255485225],[-125.90412025075912,50.704917476750893],[-126.51433939024807,50.67938524921442],[-126.5173386579406,51.056831552675362],[-127.05758587093221,50.867537111860599],[-127.70811934301372,51.151193128540598],[-127.41965680759569,51.60805960104679],[-126.69143351321461,51.703409946481003],[-127.33873151153989,51.707386997413948],[-127.71405745359181,51.490187282097196],[-127.79534529848956,52.191027152582109],[-127.24225506742991,52.39509820528869],[-126.71399393887991,52.060696337063519],[-127.19398663297143,52.457676332675845],[-126.95131511492519,52.72122736812014],[-127.01934795443449,52.842461503604227],[-127.8343083126712,52.251001520104325],[-128.10225387953312,51.788411170426656],[-128.35761460704782,52.158881155262094],[-127.94022201300055,52.545160466872488],[-128.27154221606909,52.363007139611369],[-128.05326584055501,52.910675617534537],[-128.3650248856508,52.825773270545767],[-128.52468370521785,53.140685391933687],[-129.17156971622273,53.533578473327623],[-128.85458667190423,53.70454771813084],[-128.9056126748273,53.559319441106453],[-127.92784591389562,53.274707613843105],[-128.67555346194965,53.554617292489581],[-128.5321214496422,53.858103632191671],[-128.959357794065,53.841470330775905],[-129.56371572727568,53.251482515300893],[-130.3352416356133,53.723905629025523],[-129.62603567594203,54.230254525294328],[-130.43025140486264,54.421021134134008],[-129.56066702110468,55.462536066442766],[-129.7951702038784,55.559556333815692],[-130.04846550162677,55.057261392779651],[-129.98513481073434,55.358847097643604],[-130.09469047897608,55.694787051864949],[-130.02508110132067,55.888212352212292]]],[[[-130.21408989759328,55.025895424786256],[-130.03655082832071,55.297916919538039],[-130.14651848388283,55.654489198765191],[-130.1119774669402,55.779799262139164],[-130.02508110132067,55.888212352212292],[-130.12251884917825,55.691018741174332],[-130.01787406979577,55.284942065527474],[-130.21408989759328,55.025895424786256]]],[[[-130.21408989759328,55.025895424786256],[-130.34943047892801,54.814562408912053],[-130.57533136645168,54.769683256809401],[-130.31253289451266,54.945947911970876],[-130.21408989759328,55.025895424786256]]],[[[-130.92716853807633,54.479050921503926],[-130.90681087128411,54.631804833581015],[-130.75800654431862,54.613776268440148],[-130.7633568863196,54.576719382260933],[-130.92716853807633,54.479050921503926]]],[[[-132.6555157719763,54.127466435435792],[-132.1660858216654,53.955211790192919],[-132.53464418533417,53.651714464162296],[-131.66764158878408,54.141342168386984],[-132.01131591830045,53.265171480666851],[-132.74752627353308,53.310490085911226],[-132.42501161279264,53.336956151373954],[-133.09794071561129,54.005595092896129],[-132.6555157719763,54.127466435435792]]],[[[-130.23628228125236,53.958562620398851],[-130.38422967459141,53.843953241026867],[-130.70726069277345,53.921494747891074],[-130.44799981862562,54.089003299202915],[-130.23628228125236,53.958562620398851]]],[[[-129.84860770591689,53.167920500394501],[-129.93438895918916,53.17665463158707],[-130.51755975780256,53.544224225686861],[-129.94474906700626,53.436371438369463],[-129.84860770591689,53.167920500394501]]],[[[-129.16774098072511,53.117899746533254],[-129.32388417515807,53.14213558730151],[-129.23820179884268,53.330078709705361],[-129.1770189351806,53.259150972624667],[-129.16774098072511,53.117899746533254]]],[[[-128.55242967795598,52.939767415519299],[-128.50992906598316,52.51860651078141],[-128.67893725114124,52.289651423922464],[-128.74632189726645,52.763392897072379],[-129.18430287100534,52.990667075664078],[-129.0332298671955,53.279948092558641],[-128.55242967795598,52.939767415519299]]],[[[-131.75373595241987,53.195562103011468],[-131.63467161682325,52.922167317191651],[-131.97178161503453,52.879826006982711],[-131.45522641954827,52.701693675968755],[-131.22154721141536,52.153640676546559],[-132.54678957153965,53.137477383998828],[-131.75373595241987,53.195562103011468]]],[[[-129.31370534176196,52.992194175331718],[-129.40972036007309,53.023735924581814],[-129.51472219513329,53.179390227394549],[-129.450748804021,53.174688078777677],[-129.31370534176196,52.992194175331718]]],[[[-128.93687976586378,52.510026188188448],[-129.15102528184528,52.605321601979938],[-129.26352528613683,52.800779373107929],[-128.99400867429307,52.661692453739704],[-128.93687976586378,52.510026188188448]]],[[[-128.36877671684863,52.400888000431422],[-128.43980333088621,52.69636530662487],[-128.24728440264374,52.784376784591615],[-128.32376572880347,52.458972719444063],[-128.36877671684863,52.400888000431422]]],[[[-131.02930843455079,51.961632612581411],[-131.10343868640206,52.01388359113713],[-131.09811581022245,52.150619436196934],[-131.0106536486829,52.095270312991772],[-131.02930843455079,51.961632612581411]]],[[[-127.92464339912502,51.473861597880671],[-128.09178940159489,51.511116237973681],[-128.14240341719753,51.646588655250923],[-127.99869125351222,51.703816440637127],[-127.92464339912502,51.473861597880671]]],[[[-127.19732098368456,50.640372796554345],[-125.48207494657343,50.316770489288018],[-124.83061862289422,49.530105420216643],[-123.9958114621426,49.224026306978146],[-123.2837875091998,48.455181062805281],[-125.01722141321568,48.711492107739019],[-125.13568699390666,48.822399094391642],[-124.84965793026115,49.028271904979448],[-124.81263400306753,49.212655456935011],[-125.54313146745724,48.952828786867144],[-125.9354093144527,49.401477485622365],[-126.54855081733439,49.418945748007474],[-126.13408058667986,49.672312456891405],[-127.24979718197542,50.138000951218515],[-127.86389449544045,50.127739720358306],[-127.90588424313597,50.445189683639938],[-127.46593671658769,50.583112052182514],[-128.34988572491704,50.69660082604301],[-127.19732098368456,50.640372796554345]]],[[[-125.18413670278611,50.097120822705932],[-125.35846776412382,50.311508037915388],[-125.30115758127354,50.414076401203062],[-125.07401523862438,50.220651100855719],[-125.18413670278611,50.097120822705932]]],[[[-124.97774204159248,50.029609833802454],[-125.02595554440823,50.134100804585358],[-124.99081577255994,50.217146462050152],[-124.90746249789589,50.083970187438638],[-124.97774204159248,50.029609833802454]]],[[[-126.64123148493238,49.605812210213998],[-126.93854900115694,49.718466023105151],[-126.92583781903143,49.837733605779846],[-126.73812540952702,49.843677209522184],[-126.64123148493238,49.605812210213998]]],[[[-124.15368500332124,49.531160107756875],[-124.36232636870216,49.588190139229255],[-124.64985506619395,49.758357382048757],[-124.42149324107639,49.727771443381982],[-124.15368500332124,49.531160107756875]]],[[[-126.09206337316296,49.353994573654774],[-126.0640317558827,49.263610048722512],[-126.22962868602784,49.295646182757082],[-126.20854592155172,49.379779486747765],[-126.09206337316296,49.353994573654774]]],[[[-123.37235928992229,48.886108813618847],[-123.54103239205978,48.945951345198552],[-123.68923796411963,49.095090755184629],[-123.3779183721656,48.908224292978133],[-123.37235928992229,48.886108813618847]]],[[[-123.4353823636155,48.754437666017878],[-123.51752164897542,48.750152997885692],[-123.58234648054986,48.925802418648686],[-123.46785795079184,48.867410082436805],[-123.4353823636155,48.754437666017878]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Manitoba","type":"Province","postal":"MB","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-94.713384197645709,58.903333316839394],[-94.287054225327822,58.716005428834023],[-94.332219021972605,58.297371379661286],[-94.123187641928382,58.736703671811114],[-93.178753401799511,58.725618466310124],[-92.432803666312537,57.320324223249258],[-92.798154022046418,56.921948963911831],[-90.897447772782414,57.256922121221294],[-88.948495061717026,56.851306871373311],[-95.153826108978492,52.822356522368551],[-95.162043882729478,48.99176433522743],[-101.36727055986977,48.993137626295436],[-102.00110481256425,55.817526314359583],[-102.00164863582719,60.001087264965378],[-94.771886397143021,60.001768417335114],[-94.957352102460163,59.068853342684747],[-94.713384197645709,58.903333316839394]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"New Brunswick","type":"Province","postal":"NB","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-66.359614805488377,48.06066200478682],[-65.60726004046019,47.670010134415861],[-64.703228023552228,47.724842900179453],[-65.31890187516332,47.10120396037388],[-64.831416505004739,47.060796243988705],[-64.541509267383148,46.240326241987134],[-63.831913293048586,46.107160953704152],[-65.884478068613348,45.222904328175559],[-67.36694028336791,45.17378445325491],[-67.43264951439015,45.603108200101076],[-67.802240592942056,45.727517384534394],[-67.806788932959307,47.082812846391079],[-69.053660318414302,47.294585315407062],[-68.429636857109699,47.528187619240157],[-68.377913222324096,47.929375378684881],[-66.359614805488377,48.06066200478682]]],[[[-64.476085680903068,47.9588846571543],[-64.591299308344986,47.907204967682901],[-64.519569569280591,48.005082168682236],[-64.476085680903068,47.9588846571543]]],[[[-64.508561268079404,47.886737437605234],[-64.533906728030644,47.813777229743891],[-64.684573237684361,47.753594121979347],[-64.663281732965899,47.863017954278547],[-64.508561268079404,47.886737437605234]]],[[[-66.762483473200348,44.681772715736173],[-66.897044025208416,44.628906502781973],[-66.802166091901611,44.805379898185777],[-66.762483473200348,44.681772715736173]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Newfoundland and Labrador","type":"Province","postal":"NL","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-64.768442869789979,60.012095566166579],[-64.283517314182163,60.064082872837218],[-63.750185995009062,59.51259115258074],[-63.945446012223272,59.380194907295845],[-63.415146919728343,59.194372146301021],[-63.941029508148546,59.027401925087872],[-63.248407411414604,59.06833698524315],[-62.926079518259399,58.765048399454884],[-63.53705122125362,58.329923871137424],[-62.607882484636761,58.496377734909032],[-63.261503115039162,58.014671173564636],[-62.486252841325083,58.154076696460663],[-61.899055553300286,57.861323999746133],[-62.495558261601943,57.489206065629105],[-61.333743031735324,57.010575676277057],[-61.371623892555377,56.680832011354568],[-62.49726114252627,56.80170359799672],[-61.425292107493277,56.360646452265456],[-61.713078983705842,56.230930871145347],[-61.364702505572595,56.216022423310989],[-61.449527948261547,55.995702590687699],[-60.341018384490894,55.784655219355642],[-60.192362372960744,55.480905207768501],[-60.617126793461097,55.060205728829459],[-59.758797903296568,55.309595386780416],[-59.437865273866464,55.175913741055865],[-59.837789605528613,54.813936188185039],[-59.259579134252874,55.199940841581821],[-57.404504600596781,54.59088075975427],[-60.395400710784159,53.653318468129726],[-60.100307926089769,53.48696348131503],[-60.329460766862496,53.266105318593077],[-57.92826682760797,54.103571170852376],[-58.309975826544019,54.201657112094068],[-57.416073204553712,54.162765509047972],[-57.134977002424492,53.791856071070754],[-57.524079800470716,53.611405624734005],[-57.331764119306328,53.469088724773798],[-56.524290943972417,53.766433706819726],[-55.966086576975485,53.471132181883007],[-55.802818748481684,52.643169503814363],[-56.324900067225627,52.544523259816913],[-55.746458883050479,52.474573305976662],[-56.011712799419115,52.394471984561676],[-55.695229633049365,52.137798390785974],[-57.09558002826536,51.442550561529998],[-57.101029247223238,52.001117477368894],[-63.756898641749501,52.010521774602637],[-64.059418184539709,52.485120181378988],[-63.409686714441918,52.688718821958162],[-63.722544392392123,53.109187587997781],[-64.178477026972075,52.815325272100324],[-64.13067551147671,52.1866875528072],[-64.598011955085425,51.600369171065921],[-65.137133069401273,52.154695364086791],[-66.407438293640823,52.18368828511467],[-66.428037659661001,53.010816002213943],[-67.029473229478938,52.720370434493702],[-66.944439046547643,53.355138525114427],[-67.757251577553987,54.033654175997754],[-67.601421493484537,54.552791158691889],[-67.150180021192924,54.616665672847262],[-67.408150001736814,55.071785319114952],[-66.724448803780689,54.747974271606267],[-66.773986159186009,55.328250172648296],[-65.675803744246807,54.744931058599576],[-63.698824909065422,54.615193504822344],[-63.534018994575447,55.140350995558634],[-63.111825374954407,55.339829762933761],[-64.121479954485309,56.299408656960679],[-63.601255325265313,57.723061055018718],[-64.400378890905699,58.121414341699051],[-63.848008264365689,58.459738329214474],[-64.070811007239939,58.641693902561769],[-63.4967094228397,58.753446836512296],[-64.848313478305556,58.949223211168089],[-64.324364483709104,59.019964180663521],[-64.887270999322908,60.035408555337142],[-64.436348130559068,60.228108758000559],[-64.768442869789979,60.012095566166579]]],[[[-61.743620977058427,57.554574720466462],[-61.637471070665384,57.416081062839595],[-62.011225967735498,57.54847730812449],[-61.848342660740741,57.579326918676315],[-61.743620977058427,57.554574720466462]]],[[[-60.994485206293675,56.039318315007762],[-60.982729834751495,56.015137405882228],[-61.195842635849843,56.063916704618009],[-61.086891215678051,56.140831990755203],[-60.994485206293675,56.039318315007762]]],[[[-55.361245245308865,51.889650187960484],[-55.399818244827188,51.938484418338987],[-55.274090700968557,51.995173873626527],[-55.293569461477247,51.929959027388776],[-55.361245245308865,51.889650187960484]]],[[[-55.458726938480623,51.536549588553271],[-56.031092682970893,51.328391621628299],[-55.800028221031482,51.033320809591004],[-56.822185242445556,49.613458694880677],[-56.179408118316175,50.11497360659007],[-55.502913951884977,49.983148650389495],[-56.140186925413758,49.619116654080898],[-55.229541138722254,49.508143749456991],[-55.3531812801575,49.079435237009307],[-54.502202243788986,49.527336865423507],[-53.619461731599472,49.32163983609243],[-54.161285482737156,48.787693282520848],[-53.706330631397634,48.655527750135377],[-54.114472736810768,48.393580718658541],[-53.027584267614898,48.634708657544337],[-53.869576487234355,48.019682999317325],[-53.63821539442425,48.014640274515585],[-53.863654856149083,47.787036506067579],[-53.672349917210752,47.648257203898567],[-52.865997347388344,48.112978901313795],[-53.169824263275288,47.512092647923055],[-52.782402373496325,47.769436407739931],[-52.653653589288069,47.549402219658788],[-53.069782755552765,46.681229579118764],[-53.589798644530418,46.638888268909824],[-53.597368224897295,47.146006208176715],[-54.173743979306167,46.880389742966116],[-53.849526437641373,47.440307977215923],[-54.191827476089742,47.859820932672221],[-54.488139743252532,47.403877311763722],[-55.788525535045821,46.867217135041756],[-54.784605819014942,47.664736696714698],[-59.259732942852494,47.634194703362112],[-59.340866979150647,47.933660046817067],[-58.330234616379329,48.522098789967345],[-59.167700468638614,48.558485510105385],[-58.716458996346987,48.598069251849779],[-58.403667236368065,49.084346125868507],[-57.990515365138819,48.98794109289409],[-58.213395012312873,49.386645942087824],[-57.791322242305824,49.490005321030679],[-57.926146466198958,49.700843952120408],[-57.035913277942385,51.010842781389783],[-56.025566559713212,51.568376982345512],[-55.458726938480623,51.536549588553271]]],[[[-55.53613660940232,50.719694088642711],[-55.633860001802049,50.740183591377445],[-55.469295786540044,50.796378661880482],[-55.472734507374341,50.775922118131376],[-55.53613660940232,50.719694088642711]]],[[[-54.093697589533889,49.744459676440471],[-53.980648268815145,49.66198530805994],[-54.286134120312255,49.595375198097088],[-54.277663661004766,49.711489704479646],[-54.093697589533889,49.744459676440471]]],[[[-54.554420263359063,49.588860305270458],[-54.786495467524531,49.496157665015375],[-54.863575548589907,49.576094191502222],[-54.55916635729011,49.631498246350077],[-54.554420263359063,49.588860305270458]]],[[[-54.227126549701921,47.441340692099089],[-54.325959561284606,47.408118034581747],[-54.128161702176712,47.646807008530743],[-54.147541585728504,47.573121702985503],[-54.227126549701921,47.441340692099089]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Nova Scotia","type":"Province","postal":"NS","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-61.105183452703969,45.94473907250827],[-60.737910489474871,45.751423635446372],[-60.297940990269495,46.311253979067828],[-59.828022759452907,45.965151670943186],[-60.672959315122185,45.590814498460219],[-61.449780633818065,45.716223438791076],[-61.408647819748964,46.17036530181835],[-60.489070147951111,47.009709816258663],[-60.494541339566069,46.270274973598333],[-61.105183452703969,45.94473907250827]]],[[[-63.87470504272784,45.959208067200819],[-62.483055819718757,45.621817917611679],[-61.955514295688403,45.868153376227383],[-61.031520119815809,45.291755649161416],[-63.609758743558444,44.479975833038225],[-64.286066142404394,44.550332281034599],[-65.344302266757268,43.549620572938608],[-66.125726857113136,43.813841774424105],[-66.021697312129092,44.561703131077735],[-64.44815843374397,45.337436803247755],[-64.135509496036107,45.02306301195847],[-63.368015570274167,45.364781774994015],[-64.912880131159199,45.374801306626239],[-63.87470504272784,45.959208067200819]]],[[[-60.961570165975559,45.489938029768354],[-61.002889747629908,45.481720256017354],[-61.081749613919413,45.557789594856672],[-60.91245029105491,45.567292769047327],[-60.961570165975559,45.489938029768354]]],[[[-66.273778620573353,44.292307368847986],[-66.324106991633855,44.257293939777952],[-66.210376518545388,44.392019286714202],[-66.273778620573353,44.292307368847986]]],[[[-59.787582084082089,43.939591290939802],[-60.03775177135968,43.906621318978978],[-60.117457584947104,43.95336814693411],[-59.727124318103947,44.002839584368161],[-59.787582084082089,43.939591290939802]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Northwest Territories","type":"Territoire","postal":"NT","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-110.00436500555972,78.686722743390817],[-110.00366737369717,78.321701977513243],[-113.29256215247885,78.334391186981691],[-110.87756938457295,78.735040616327751],[-110.00436500555972,78.686722743390817]]],[[[-110.00354103091891,78.089648746004883],[-110.86560527278843,77.834117730397764],[-110.15275185204054,77.762959280417647],[-110.1984879377696,77.524522992025169],[-110.89399943891064,77.42597562498463],[-112.37267137031749,77.36411160895284],[-113.16435169836927,77.530257855525178],[-113.28346547244435,77.813023979593112],[-110.00354103091891,78.089648746004883]]],[[[-113.83245230979279,77.754631643381231],[-114.60834528372669,77.769331350973232],[-115.02935787302923,77.967535704237264],[-114.33038018523254,78.077563784606355],[-113.61791677914796,77.83240386314489],[-113.83245230979279,77.754631643381231]]],[[[-115.55128538317356,77.36328763431203],[-116.32919984155959,77.137046170603469],[-115.81005736570118,76.939127461881583],[-116.25274598122122,76.901400409661164],[-115.94630431914078,76.711260021548526],[-117.23361637996658,76.281518794217675],[-117.99297492944163,76.405829101694138],[-117.88081000817068,76.805083267315098],[-118.79140086321948,76.512978763984677],[-118.62453501212748,76.365882811107809],[-118.99394481625841,76.144859853457689],[-119.58034559546377,76.326507809605772],[-119.52613355726292,75.997225570482129],[-119.91287978783643,75.858830789812174],[-120.84838214285895,76.182685782635019],[-122.40048120109027,75.944249494242513],[-122.90280360794766,76.13473045854002],[-119.09019054746895,77.305104038342506],[-116.5113092235065,77.547616254624842],[-115.55128538317356,77.36328763431203]]],[[[-113.56071096641887,76.743274182926001],[-113.71245962943418,76.710567882850228],[-114.83525691347643,76.794690200512377],[-113.89164664798837,76.89486354417744],[-113.56071096641887,76.743274182926001]]],[[[-113.92327079470255,76.229146966047978],[-110.00240394591459,75.539062711207748],[-110.002815933235,74.850988954491044],[-113.01692066247178,74.401922775251165],[-114.37694024560241,74.670846125353535],[-111.0334763729422,75.226776322341834],[-113.71178946339299,75.068617136621043],[-113.85330436136948,75.259383745460696],[-113.46707448823754,75.416125694799319],[-114.01652275138483,75.434264123225603],[-114.45176812931625,75.087876170558843],[-115.72884642510323,74.96813617575674],[-117.60010382070479,75.271688433430086],[-115.14185787732076,75.678534152075031],[-117.16364445346923,75.644894014073003],[-114.99152645068764,75.896349101790264],[-116.6542962895079,75.929319073751088],[-116.45422975355567,76.143233876833165],[-114.77859492401026,76.172611319360072],[-115.82217528608531,76.270027094560561],[-115.58069029152183,76.437502686886745],[-113.92327079470255,76.229146966047978]]],[[[-110.00340919497638,76.479668215838984],[-110.00263465881402,76.244231195139037],[-110.31444863555252,76.369398436241909],[-110.27000893659167,76.416991211494917],[-110.00340919497638,76.479668215838984]]],[[[-118.32814584066489,75.579679167835252],[-118.81713633783401,75.522110806264209],[-119.3945667797831,75.61731832942732],[-117.51261419334388,76.099442371256401],[-118.32814584066489,75.579679167835252]]],[[[-121.07622211737066,75.745276097980394],[-121.24091267541093,75.751856908778308],[-120.88781207600371,75.92797874166871],[-120.92124347376338,75.814446022494025],[-121.07622211737066,75.745276097980394]]],[[[-119.73630202231146,74.112630772028041],[-117.51483892487406,74.23174454610313],[-115.3928240734178,73.501977672561623],[-118.96156810603895,72.684144389410619],[-120.17989151677213,72.212644127283681],[-120.61932268587884,71.505761776099519],[-122.83993983601835,71.09746586208675],[-124.00777557392712,71.677434145929539],[-125.84531043406258,71.978657301951557],[-123.79727202585798,73.768154440527951],[-124.6962613179642,74.348177656013462],[-121.50415609365599,74.545118581494904],[-119.56264662017922,74.23283219262899],[-119.73630202231146,74.112630772028041]]],[[[-114.52153131557125,72.592935889837548],[-113.07355518611659,72.99528820010795],[-111.26974286144724,72.713730572179855],[-111.89517806596976,72.356103605412471],[-111.67511641206727,72.300139247808858],[-110.20512917337452,72.661303812367436],[-110.66083658821931,73.008208122475793],[-110.0018326568303,72.98185192029851],[-110.0000254057848,70.001151123000056],[-117.05535770617436,70.002183837883194],[-116.65049501983165,69.649808336159879],[-116.85603824056312,69.649676500217367],[-117.16273808136435,70.092491458515667],[-111.63256086845171,70.308834240205982],[-113.75728934305836,70.690719020398717],[-117.58705755555866,70.629536156736663],[-118.37651315208026,70.967706335652451],[-115.30342282489023,71.493720760015179],[-117.93563728077,71.392075248325227],[-118.22644539733218,71.467111872281379],[-117.74234381636518,71.659350649145978],[-118.98772106113819,71.764248114084978],[-118.21350350230725,72.262873621387286],[-118.37452462661378,72.533862401255931],[-116.57323915750956,73.054921991445298],[-114.20641045394096,73.297796756569596],[-114.07473930633999,72.90681529634233],[-114.52153131557125,72.592935889837548]]],[[[-126.61216165960469,69.730338124388112],[-125.38678502594622,69.349200414536341],[-125.20116551202946,69.828808587128833],[-124.5550265713656,70.151224370912388],[-124.12461517799358,69.690007312302725],[-124.33809052793389,69.364833960054597],[-123.52839811423408,69.389355445365027],[-122.95667506996364,69.818843987139331],[-120.96243121947521,69.660399156876394],[-120.68185137478756,69.566938459951785],[-120.6779512281544,68.002847824114582],[-112.50390306477671,65.502337474821417],[-110.66946634929069,65.497140941420071],[-108.97293002969016,64.779195357391984],[-101.99914375291914,64.228428734819403],[-102.00164863582719,60.001087264965378],[-123.81915679231783,60.001087264965378],[-124.582596762847,60.952821920411822],[-126.85927714754703,60.769416151696674],[-127.166597715911,61.464521158681578],[-129.25471425064444,62.152770696654983],[-129.61177542149181,63.058681375743959],[-130.13360405467924,63.276452380145031],[-129.84493827218316,63.485785884224214],[-130.30260674667306,63.703710697224892],[-130.11791557751829,63.793370124473256],[-132.58810366002973,64.794081832569248],[-132.35258973502997,65.057248346514513],[-132.77323428232629,65.203410461465154],[-132.19468872802994,65.597654861270001],[-132.55484804352676,65.85700911921046],[-132.34274598465444,65.978968352378445],[-133.62163153148694,65.974628752603536],[-133.63519415407461,66.565649282961687],[-134.05558052265016,67.004487190327012],[-136.1693061892199,67.015242805971695],[-136.44543657084716,67.746591710823566],[-136.44375566257992,68.895124469480351],[-135.2312220469895,68.694283397365751],[-135.91019912367167,69.11148922382776],[-134.40894479394242,69.681789538551755],[-133.87980475910891,69.507722149099095],[-134.17433724104754,69.252828340547552],[-130.66547968532026,70.127032475458293],[-129.53844167845998,70.105180667984087],[-132.68672793137006,69.259859590815779],[-133.41831304228563,68.844268754649733],[-133.19682316567241,68.739832715509579],[-131.78838683264794,69.431960427459018],[-131.06341549151591,69.450692117626716],[-130.97065791961813,69.209058807627883],[-130.1176354261404,69.720087879856464],[-128.89894946656528,69.96617065291565],[-129.15789723034962,69.800079337986034],[-128.85301013375815,69.751036367365174],[-127.68377913212427,70.260362558669442],[-128.17010544462147,70.418444840090416],[-127.99099533036708,70.5738354710181],[-126.61216165960469,69.730338124388112]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Nunavut","type":"Territoire","postal":"NU","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-86.595531104771069,67.7359129994787],[-86.959804800307637,68.100241626657976],[-86.70208750532025,68.305598079804213],[-86.421123139133556,68.183430106393871],[-86.595531104771069,67.7359129994787]]],[[[-109.32316869051164,67.99088371233006],[-109.36081334526799,67.987576827438289],[-109.49796117764819,68.047012864861841],[-109.46912755838422,68.098011401963532],[-109.32316869051164,67.99088371233006]]],[[[-73.621731781734894,67.78382437825951],[-74.480719851612065,67.80490714273563],[-74.749280652872471,68.018437424318648],[-73.435227868370347,67.970009688096269],[-73.621731781734894,67.78382437825951]]],[[[-109.16640476851595,67.982358321379849],[-108.97050205108191,67.979721602529253],[-108.886061129892,67.898543620916939],[-109.09622959494054,67.92402091681069],[-109.16640476851595,67.982358321379849]]],[[[-107.89986785496703,67.401829734781302],[-108.15225678061051,67.429427392084079],[-108.12752655505776,67.628587555931432],[-107.99087310746204,67.622127594747496],[-107.89986785496703,67.401829734781302]]],[[[-62.681567790182015,67.056320688398046],[-62.871631273994865,67.062571909339653],[-62.396340728520215,67.178323866880248],[-62.484604892043478,67.134246716761339],[-62.681567790182015,67.056320688398046]]],[[[-108.09272735939435,67.005190315353843],[-107.96645599227278,66.997280158802084],[-107.80553374492315,66.998598518227396],[-107.94392303242884,66.857830690591896],[-108.09272735939435,67.005190315353843]]],[[[-83.123499722323587,66.282828227251031],[-82.948157918759819,66.271918803006741],[-82.931337849758819,66.257295999714557],[-83.059888880053265,66.199266212344639],[-83.237856416139067,66.331530621687023],[-83.123499722323587,66.282828227251031]]],[[[-83.725989979681756,65.796705161831909],[-83.23393429684883,65.696553790823941],[-84.118245854020131,65.77179915502245],[-84.467391375151479,66.088271335063666],[-83.725989979681756,65.796705161831909]]],[[[-84.674769312749817,65.575012038140613],[-85.096347697972391,65.756198568489822],[-85.149631391411248,66.015399017830674],[-84.757353544415778,65.85892074037713],[-84.674769312749817,65.575012038140613]]],[[[-84.919621617012069,65.261077699993109],[-84.501141376438937,65.458436105959237],[-82.050025560280048,64.644294229199062],[-81.676116854610314,64.212641380701541],[-81.887087321642568,64.01640358024693],[-80.828961060575125,64.089935077192564],[-80.261319437358821,63.80195044706619],[-81.046369516134234,63.461550043455929],[-83.30395016866035,64.143790059715712],[-85.392616019821006,63.119666485492246],[-85.768919745113351,63.700326908033304],[-87.177125365238382,63.595132812223596],[-86.252098474482651,64.136857686404397],[-86.374255461564445,64.565829870737133],[-85.813985664801223,65.831949303801366],[-85.241092576540836,65.795518638349165],[-84.919621617012069,65.261077699993109]]],[[[-77.642079835489639,63.991904067593595],[-77.714062260110538,63.945706556065659],[-77.965989759955193,63.992936782476733],[-77.563604490699163,64.022083512104217],[-77.642079835489639,63.991904067593595]]],[[[-76.67759005260352,63.393962150252662],[-76.921860081452934,63.406365715178964],[-77.364751944051037,63.588310302197698],[-77.133687482111625,63.682056643664481],[-76.67759005260352,63.393962150252662]]],[[[-77.876692881548792,63.470547846533549],[-77.532732907490256,63.233660630465778],[-78.536751500478019,63.423724114278627],[-78.234913110057548,63.489565181243393],[-77.876692881548792,63.470547846533549]]],[[[-82.000466232217633,62.954190404961082],[-83.015800743605823,62.209899605084274],[-83.698864734506387,62.160263372722056],[-83.91239501608942,62.425517289090692],[-83.376405005408657,62.904949680426455],[-82.000466232217633,62.954190404961082]]],[[[-70.337072232606957,62.548739950041238],[-70.766066389596787,62.596849082735844],[-71.220142334652778,62.873913302289367],[-70.44261789093008,62.733793668037976],[-70.337072232606957,62.548739950041238]]],[[[-74.000441512978412,62.618426231996438],[-74.253522577320183,62.621996788773288],[-74.626442513420955,62.712765835204578],[-74.108931507351343,62.680312220685323],[-74.000441512978412,62.618426231996438]]],[[[-64.823835938309315,62.558737509016368],[-64.515306873805486,62.551794149376519],[-64.418077866190245,62.487403277779578],[-64.956495855479261,62.458355425108977],[-64.823835938309315,62.558737509016368]]],[[[-79.545318433483047,62.411696487782194],[-79.272000551963046,62.185993354172325],[-79.668771807333044,61.644455247576786],[-80.265175638677803,61.818193047173111],[-80.021597748526659,62.342966016410344],[-79.545318433483047,62.411696487782194]]],[[[-65.030543709866464,61.879035334650297],[-64.960571783369119,61.871674494525763],[-64.847039064194433,61.761503591885571],[-65.235339860256943,61.897723079503805],[-65.030543709866464,61.879035334650297]]],[[[-93.043951150563458,61.844076837222985],[-93.08480381325468,61.841703790257469],[-93.196683089983466,61.918542172094874],[-92.993024024597304,61.889714045995163],[-93.043951150563458,61.844076837222985]]],[[[-64.832625001144578,61.366050695940856],[-65.393883567476777,61.562859785479787],[-65.432126977138765,61.649519945035593],[-64.789635497551544,61.662231127161135],[-64.832625001144578,61.366050695940856]]],[[[-78.531631871376476,60.728547009512653],[-78.668884073877862,60.716912487584466],[-78.241680688440709,60.818667862559863],[-78.278858424233931,60.783885146389252],[-78.531631871376476,60.728547009512653]]],[[[-68.233816537139745,60.240918817082985],[-68.141882939882763,60.561983282455628],[-67.818851921700727,60.449494264492643],[-67.922310177600465,60.33988366460818],[-68.233816537139745,60.240918817082985]]],[[[-64.407014633346336,60.367063841426273],[-64.737955808080116,60.375644164019235],[-64.836426270820837,60.501009159035902],[-64.646307855365279,60.514599247444949],[-64.407014633346336,60.367063841426273]]],[[[-80.064224703277759,59.77082480500971],[-80.167089697436111,59.763848486384205],[-79.898627773132603,59.853145364790606],[-79.949637296562841,59.809914161969573],[-80.064224703277759,59.77082480500971]]],[[[-80.285247660927865,59.624113373631843],[-80.298969585279437,59.674189059135841],[-80.167243506035732,59.708861912021007],[-80.183063819139235,59.683494479412673],[-80.285247660927865,59.624113373631843]]],[[[-69.160062910363862,59.040222970498832],[-69.220861252526888,58.967559393508168],[-69.352818044670016,58.960747869810831],[-69.303203784964879,59.144867749881342],[-69.160062910363862,59.040222970498832]]],[[[-79.716496418528592,57.515507336163665],[-79.80845198844267,57.442437265016878],[-79.838224938797168,57.482998790001687],[-79.742566976163729,57.607957290862231],[-79.716496418528592,57.515507336163665]]],[[[-79.867009119582704,56.774567366492789],[-79.943671720163394,56.776764632201605],[-79.898166347333756,56.865259508624291],[-79.82664534851169,56.843089097622311],[-79.867009119582704,56.774567366492789]]],[[[-79.518193188307677,56.656695047543195],[-79.577387526503259,56.644917703343936],[-79.570125563335623,56.795705062611631],[-79.49105695680376,56.742685041057825],[-79.518193188307677,56.656695047543195]]],[[[-78.935588185614307,56.266076136157892],[-79.175474669374623,55.885059275920128],[-79.182143370800901,56.212177208320554],[-79.495088939379443,55.874754099745758],[-79.764737387165724,55.806770698714899],[-79.544725171741661,56.128362507857673],[-80.008238373017036,55.911052929255447],[-79.45886701416957,56.539723607534228],[-79.536331616733975,56.180086142643262],[-79.272418032447732,56.600423072740341],[-78.935588185614307,56.266076136157892]]],[[[-79.977597502707567,56.207013633904836],[-80.057490083880225,56.28736764087634],[-79.579738600811694,56.4663459191882],[-79.687942950642494,56.3267975740211],[-79.977597502707567,56.207013633904836]]],[[[-78.82650492949999,56.145303426472651],[-78.799423629638795,56.383278289066311],[-78.668730265278242,56.438627412271444],[-78.672817179496647,56.260495081257488],[-78.82650492949999,56.145303426472651]]],[[[-79.938211514876983,53.304139988012736],[-80.00410751348447,53.280079928501181],[-80.074024508339079,53.34428403251286],[-79.974565276029395,53.352249120707341],[-79.938211514876983,53.304139988012736]]],[[[-80.731677121317162,52.747275953098182],[-81.096599010237838,52.779883376217072],[-82.039280930963912,53.04988338651674],[-81.135611462897913,53.205801361214554],[-80.731677121317162,52.747275953098182]]],[[[-79.384291816012251,51.95197562979115],[-79.520621166915916,51.952953413031565],[-79.643766923566687,52.01006034880379],[-79.271308413264777,52.086799853684283],[-79.384291816012251,51.95197562979115]]],[[[-69.48888372368863,83.016797371460683],[-66.422577454374576,82.926874272327268],[-68.469352434796605,82.653358636893472],[-64.904871097650556,82.900836673677759],[-61.207213485892979,82.341050275370463],[-68.688540675579844,81.293328067434288],[-64.780066405389633,81.492850780123604],[-69.550681821749166,80.383264556155609],[-70.712573955915587,80.539578038681015],[-70.264881067743701,80.233608788727963],[-72.055982210287539,80.123218159516881],[-70.559072973497493,80.071000139946818],[-71.387837653549852,79.761745977759062],[-74.394466186212384,79.874092173450975],[-74.660214487365494,79.835178597747813],[-73.201109207095669,79.596588500755701],[-76.89884372315305,79.512301388165383],[-74.53232263678369,79.052743265165901],[-78.581652625237737,79.075023539453326],[-74.433127076359057,78.724131192083462],[-76.416126419582596,78.511534748426669],[-75.193435943253149,78.327722485555427],[-75.969620054893483,77.99312286341646],[-78.012593765639238,77.946046445604992],[-78.076160662595385,77.519062786738743],[-78.493212680457773,77.369385046654003],[-81.659088045366957,77.525445843622862],[-81.277719622615791,77.3651992554787],[-82.05679313866321,77.296523715749544],[-77.998750991673688,76.851950944884209],[-78.284307643191809,76.571217291596923],[-80.799715453990743,76.173567129943422],[-80.974529913784394,76.470066164691445],[-82.529842473114854,76.723279064975742],[-82.233167657110116,76.46582544187342],[-84.223791512343254,76.675323740880771],[-84.275339365872156,76.35653344551676],[-86.453708589595351,76.584884284305787],[-88.395992599234475,76.405257812609847],[-88.495858325700297,76.772838393038171],[-88.545780202604675,76.420913330785169],[-89.570079558084842,76.491917972165652],[-89.499745082745534,76.82678126618967],[-88.556217214721556,77.072193873207681],[-86.812236435303348,77.184924590398623],[-88.016975250791731,77.784734183592064],[-86.755063581559881,77.863725885824095],[-84.487034930588322,77.367989782928902],[-83.608073715417987,77.442246377558433],[-82.595288032252029,77.992134093847483],[-84.860548128430466,77.499507121930264],[-85.547534238621282,77.927699276936352],[-84.222703865817394,78.176001288361448],[-84.910371128377946,78.239721993917215],[-84.783193389151492,78.527607747086677],[-85.585931456882903,78.10954498699823],[-86.217777184110901,78.081178286697366],[-85.920047680565915,78.34286164628918],[-87.551726209606386,78.176627509088462],[-86.807929794514067,78.774360686187066],[-83.271419649841278,78.770339689939931],[-81.750098791026247,78.975773047385957],[-84.411998306632157,78.996570167319931],[-83.57587278645525,79.053677103092127],[-86.420738617634512,79.84520911570857],[-86.4985437963838,80.258229150995277],[-83.72361693271624,80.228950585425252],[-81.688366610936967,79.685808474862284],[-80.475937365467715,79.606256469874495],[-80.12448471534212,79.669504763302854],[-82.987027549148834,80.322587063606591],[-76.863006319442206,80.864784349914771],[-78.716224163574367,80.951653249712933],[-76.885121798801478,81.430272652736448],[-81.007016487289278,80.654868570422735],[-85.145852094392083,80.521131993055462],[-86.615405373107336,80.630039467913093],[-83.288832980583678,81.147945981810267],[-87.711665180551336,80.656263834147836],[-89.263253374505354,80.914288746334449],[-86.476757906880863,81.035720635732361],[-84.941220738929758,81.286230899194805],[-89.623055634324459,81.032468682483284],[-89.980935286648361,81.124709896939521],[-87.597022842193695,81.525820752084428],[-91.684068896539628,81.63568403752538],[-88.063194734976747,82.096483615650357],[-85.044832803429117,81.982797087876065],[-86.615636086006759,82.218552712103815],[-84.896824985283075,82.449441392786525],[-79.424864327325594,81.854432825166867],[-82.447543885991038,82.395026107507618],[-80.809691040308792,82.586385978088657],[-81.010169563581428,82.77903124910938],[-78.74877665505052,82.679374262885887],[-80.154949804394889,82.911119877195034],[-79.88633407149176,82.938508794255455],[-76.009357605237469,82.535167714416076],[-75.565619795341462,82.608545402762104],[-77.124920391933443,83.008546638724056],[-72.658714166873693,82.721638668795009],[-73.440710046313839,82.945836675394361],[-69.48888372368863,83.016797371460683]]],[[[-91.885547175709789,81.13287273904777],[-90.643015390029717,80.593685706760681],[-89.235578812902773,80.510640049295858],[-88.857330507458116,80.166196676781396],[-87.675003802199683,80.37210244635483],[-87.92232803038435,80.097718890966036],[-86.977196158392928,79.894219127343774],[-87.295184451773224,79.58015295325373],[-85.647872377214512,79.611420044290213],[-85.042141152935827,79.284565783774838],[-87.617380508985903,78.676329676588097],[-88.040200349333958,78.995328712194436],[-88.253785562559713,78.671990076813188],[-87.982840728005229,78.537066975963143],[-88.741578549917534,78.584044516817698],[-88.822426941673527,78.185877997722599],[-90.037086411837237,78.606830162218159],[-89.489835414398769,78.171947333128685],[-91.409630409508139,78.187987372803065],[-92.848229707550402,78.460118730840293],[-91.866892389841922,78.542702962506269],[-94.16967079799845,78.972806738679054],[-91.299898960009713,79.372731070341217],[-95.103179134390217,79.289894153118723],[-95.732986897673285,79.418203484185227],[-94.40188333127071,79.736323613508034],[-95.857500452227782,79.67378943143504],[-96.773260374856562,80.135775533042789],[-94.645895181399339,80.048708879330832],[-94.262587671660128,80.194870994281473],[-96.394111190471293,80.3150174832397],[-95.549070264680864,80.36662026841131],[-96.151824193924099,80.553486730617834],[-95.926956021283559,80.720654705744778],[-93.927905652057092,80.559188635132216],[-95.514732494816286,80.838120530538248],[-95.269759340940055,81.000795097290677],[-93.235646104165099,81.128851742800634],[-94.179360739774339,81.339272893405706],[-91.885547175709789,81.13287273904777]]],[[[-98.791613723335018,79.981109999799031],[-98.945197103217197,79.724073857181367],[-100.12602966779363,80.001269912677429],[-99.731219472068759,80.144103170079205],[-98.791613723335018,79.981109999799031]]],[[[-103.42600965207632,79.315624134568992],[-102.57618967336919,78.879368014411511],[-101.70365546039714,79.078923686086455],[-100.0147656254633,78.728635586786538],[-98.999634361153184,77.996891174107077],[-99.955906370288318,77.793808890969473],[-101.07413334165622,78.193832099588519],[-104.51263444938714,78.29465363663769],[-104.99554950687138,78.518511067052174],[-103.37156690097605,78.736326016767407],[-105.58019247350968,79.114189800713007],[-103.42600965207632,79.315624134568992]]],[[[-96.204509132457304,78.53127718082041],[-94.915389820585986,78.39050935318491],[-95.329239323677783,78.225044258982308],[-94.934302785174651,78.075652163439685],[-96.989630622368253,77.806025688310513],[-97.65816519376925,78.090637515573832],[-96.944669072801545,78.151875310878637],[-98.049487230181384,78.325920727674173],[-98.340811704185157,78.751212491944642],[-96.204509132457304,78.53127718082041]]],[[[-109.81597693684985,78.650390954895499],[-109.46726537569599,78.567191488831071],[-109.35210667989679,78.368657545710704],[-110.00366737369717,78.321701977513243],[-109.81597693684985,78.650390954895499]]],[[[-103.00337108614924,78.146448064577839],[-103.11819469892785,78.126343083342164],[-103.27358532985554,78.165773016486895],[-102.78826975958441,78.218166817313687],[-103.00337108614924,78.146448064577839]]],[[[-109.77179541660976,77.957417295648156],[-110.00359046939735,77.928940732061847],[-110.00354103091891,78.089648746004883],[-109.62224401930327,78.074773257156181],[-109.77179541660976,77.957417295648156]]],[[[-101.69358099712221,77.696601856011313],[-102.37782601834128,77.728121632604342],[-102.47154489398669,77.873492731899802],[-101.00204654691414,77.735097951229847],[-101.69358099712221,77.696601856011313]]],[[[-95.484371775884682,77.791996146759715],[-93.582863524636963,77.770759573683961],[-93.128727154773969,77.660171190559112],[-93.836180795042438,77.452221963876468],[-96.276595927199381,77.630563035132781],[-95.484371775884682,77.791996146759715]]],[[[-104.55813432905251,77.141726346563246],[-105.21507283067521,77.182057158648632],[-106.06612877134356,77.725386036796863],[-105.28966450832536,77.642087693775522],[-104.55813432905251,77.141726346563246]]],[[[-89.833246072030093,77.267607699021482],[-90.99320461237275,77.329493687710396],[-91.182652861787133,77.55717436045822],[-90.171932608387465,77.59469267243631],[-89.719471653627437,77.442147500601521],[-89.833246072030093,77.267607699021482]]],[[[-94.294964381879581,76.912463642505088],[-93.211877182359956,76.754699964611859],[-93.534567624357123,76.447687013447137],[-91.305040561768351,76.680750987181568],[-90.542611333465231,76.495774173484619],[-91.415079628466003,76.455849855555385],[-89.284522906566721,76.301623775453379],[-91.407334266842412,76.220050286013475],[-89.277601519583939,75.795088111599341],[-89.646039033638715,75.565056364543068],[-88.916678654253317,75.453951623976621],[-88.64496477670076,75.658429170839327],[-85.951490552859127,75.395009971337572],[-82.153659597436487,75.831035378595601],[-79.66019148474011,75.449502160916268],[-79.50909650827316,75.259801225945381],[-80.381982283758617,75.034174996635301],[-79.401430488541038,74.91762103711099],[-81.940184247496177,74.47271867638932],[-83.522083721903357,74.901471134151166],[-83.531894513293238,74.585680106479714],[-84.42553346339848,74.508083667972755],[-88.423040940110042,74.494163989707403],[-88.534947682660189,74.8317628795389],[-89.558719694370239,74.554720632642443],[-91.508364544133912,74.650686212475108],[-92.389237380470931,75.26331685107948],[-92.185116889285908,75.846537088171317],[-93.091730693401729,76.353995603623076],[-95.273895693636902,76.264391108017435],[-96.898010135474763,76.753996839585056],[-95.849518884540501,77.06622829680822],[-94.294964381879581,76.912463642505088]]],[[[-89.726458958581489,76.507419681741368],[-90.164571768262917,76.52360254368682],[-90.562474615472951,76.754282484127202],[-89.948767316671251,76.836240495066136],[-89.726458958581489,76.507419681741368]]],[[[-108.29237641486191,76.057112047375995],[-106.91352077144242,75.679621798600891],[-106.67702357003796,76.023735581259047],[-105.90484946831623,76.009002914681417],[-105.4814363662268,75.702253635401718],[-106.09263878212045,75.089447215540645],[-110.002815933235,74.850988954491044],[-110.00240394591459,75.539062711207748],[-108.89949740970142,75.624063935153401],[-109.79605872319939,75.863016580987477],[-109.41662389427198,76.071844713953624],[-110.00340919497638,76.479668215838984],[-108.49238801917143,76.75418360717029],[-108.62762972354925,76.586697028515573],[-108.12321442110421,76.233431634180192],[-108.29237641486191,76.057112047375995]]],[[[-101.22611821073524,76.579358161048106],[-101.61306768838682,76.604571785056805],[-100.26914307657329,76.734122571248776],[-100.74655947662121,76.649176278945845],[-101.22611821073524,76.579358161048106]]],[[[-97.700929477627142,76.466495607914624],[-97.531042386185533,76.109406971245903],[-97.890504069819784,75.760338354414358],[-97.336018575035027,75.419839073847214],[-97.878232340836021,75.416125694799319],[-97.659923006336314,75.151179395629924],[-97.991814498489148,75.045809518563487],[-100.23439331938832,75.007719917501106],[-100.48349733279713,75.188434035722935],[-100.14571716854465,75.246156205893612],[-100.7311566440024,75.346516317143937],[-99.194559295346792,75.698375461425655],[-102.79749278239717,75.599674285785511],[-102.14471809929267,75.875057597071788],[-101.26141179118315,75.758196020348265],[-100.9727954471655,75.79842795547674],[-102.13774178066717,76.28484765176654],[-101.78753058566704,76.451279542881053],[-99.865472406877601,75.924199444649531],[-100.11285156670499,76.11721825084075],[-99.54105161813473,76.146288076168418],[-100.89078799774809,76.475482424663682],[-98.890342364796524,76.465561769988369],[-98.710814770057468,76.693868663463206],[-97.700929477627142,76.466495607914624]]],[[[-104.02284195023428,76.583126471738723],[-103.72276137238087,76.601056159922706],[-103.03355053065987,76.431515137830218],[-104.27066056320344,76.326244137720693],[-104.60304094697649,76.582719977582599],[-104.02284195023428,76.583126471738723]]],[[[-102.22734627627281,76.014891586781033],[-102.00803169271131,75.939393537026007],[-103.31474560974598,75.764216528390421],[-103.04151012569007,75.918827129991485],[-104.40605058301659,76.108484119648182],[-102.72801524068431,76.30701806276852],[-102.22734627627281,76.014891586781033]]],[[[-79.063106501025629,75.925858380259683],[-79.355639471169241,75.831134255552513],[-79.698742511601338,75.883275370822787],[-78.845159715367856,76.106308826596461],[-79.063106501025629,75.925858380259683]]],[[[-94.526550694424827,75.749330053213185],[-94.751446332886729,75.769665747348284],[-94.901206470435568,75.930769269118912],[-94.296304713961959,75.788056861331114],[-94.526550694424827,75.749330053213185]]],[[[-96.078572848356345,75.510124721822592],[-96.857108034305099,75.369148153944764],[-97.020661507341046,75.468058069827237],[-96.367809919936732,75.654660860148709],[-96.078572848356345,75.510124721822592]]],[[[-93.542604123687127,75.027923775693722],[-93.573096678561257,74.66882464090142],[-94.534510289455028,74.636733575224099],[-96.599599479560055,75.031801949669784],[-94.878184618971417,75.630007538895768],[-93.90906959176823,75.422530724340533],[-93.542604123687127,75.027923775693722]]],[[[-104.11994461507126,75.036350289687022],[-104.63430803801299,75.061289255482137],[-104.88738910235476,75.147762647452709],[-104.3462080514369,75.429913537122161],[-103.64348951877095,75.186577346198987],[-104.11994461507126,75.036350289687022]]],[[[-95.306656925355398,74.505424976465093],[-95.77719588373472,74.550743581709469],[-95.85073287384462,74.582472098544827],[-95.510211620620396,74.636788506866822],[-95.306656925355398,74.505424976465093]]],[[[-97.355497335543703,74.526299000698856],[-97.65609976400296,74.465687426121093],[-97.749994420905082,74.510544605566622],[-97.416526390606151,74.626560234992269],[-97.355497335543703,74.526299000698856]]],[[[-93.170870711069114,74.161003576607698],[-90.354613279418672,73.868646387720787],[-92.117940983403031,72.753797712380191],[-94.211325462673386,72.756950788672327],[-93.541620847282431,72.437028901468295],[-94.143759542127199,72.000827712953537],[-95.192942931759745,72.027436600687338],[-95.632917924129387,73.695446918223126],[-94.697596843527847,73.663564592788163],[-95.134138608227474,73.881225733903761],[-94.973523978077068,74.041428376733762],[-93.170870711069114,74.161003576607698]]],[[[-98.270378351888965,73.868514551778247],[-98.973926352359996,73.812055809390159],[-99.41699948937908,73.895409084054194],[-97.659148470173946,74.071629793901479],[-98.270378351888965,73.868514551778247]]],[[[-100.00190063473816,73.945902250042877],[-99.157947355473596,73.731569966476115],[-97.111743664135872,73.790324851529931],[-97.625898346835243,73.502285289760835],[-97.272506609721617,73.386840949419479],[-98.430910584575273,72.958077505329101],[-96.542113515453082,72.698712261060081],[-96.472866686639648,72.4343921826177],[-96.801451293900712,72.32240853576775],[-96.613425774032791,71.833857491740361],[-97.582282622515194,71.629687562076896],[-98.322700741580221,71.852358469008635],[-98.198626640167475,71.440854547061008],[-99.167120939807916,71.367169241515768],[-100.5944757305853,72.152340169905159],[-102.7087397272537,72.764498396382123],[-102.20398934178806,73.077301142689606],[-101.27319462854669,72.721662701388709],[-100.12814453603836,72.906716419385447],[-100.53639101157268,73.197854125803957],[-99.825141594792214,73.213850220164176],[-101.52320501406039,73.486366099700462],[-100.52166383815931,73.449320199849751],[-100.9850946419706,73.76531996776356],[-100.00190063473816,73.945902250042877]]],[[[-86.589356788129294,71.010805702530945],[-84.823710968822112,71.028636513758016],[-84.699400661345678,71.631467347301054],[-85.911599193915507,71.986512526860565],[-85.321864063997026,72.233133630018415],[-84.28374390720839,72.044487382587761],[-85.64990484799516,72.722179058830278],[-85.262131395702781,72.954001577439243],[-84.256629648361553,72.79674327065905],[-85.454754694066409,73.105459102748114],[-83.410352760609911,73.631682267353199],[-81.605353912457787,73.696018207307418],[-80.277260600076303,72.770189314567972],[-81.229346818036134,72.311707851765789],[-80.611453728059132,72.45082773011967],[-80.925135380650133,71.907652660571074],[-79.884367518682367,72.177202231400429],[-80.108928074123682,72.332175381843456],[-79.831292565485853,72.446279390102404],[-78.585091346072048,71.880626292352588],[-78.862748827366957,72.100814289033337],[-78.699250285973733,72.3514014567956],[-77.516506100230629,72.177795493141815],[-78.422416779319619,72.571534521833655],[-76.893493381152069,72.720673931819732],[-75.07145473742807,72.322847988909501],[-75.922807308967094,71.717226627916261],[-74.266343622731142,72.037675858890424],[-75.204806793296299,71.709107731122174],[-74.700754039693209,71.675577456405591],[-74.996220359558109,71.21810673582948],[-73.866595072325694,71.771048651453782],[-74.197272575174409,71.40417119605226],[-73.712863377008176,71.587620910081569],[-73.180619704360936,71.282882128925451],[-73.278211260818139,71.538006650376445],[-72.901929508182874,71.677774722114407],[-71.640688004992199,71.516253719859122],[-71.186557128293487,71.278696337750148],[-72.632720513538359,70.830772736678853],[-70.672627665329259,71.052202188485097],[-71.890176539900054,70.431540543714988],[-71.275854006699888,70.500292987743933],[-71.429431893417799,70.12775757314219],[-70.08470527962055,70.829531281553358],[-68.49576356861661,70.610266136470329],[-70.057733843044787,70.042624513253998],[-68.778222075485289,70.203541267439363],[-69.008319740512817,69.978936766683887],[-68.744065580041706,69.941418454705797],[-67.855337518795665,70.28178589933043],[-67.192763030629834,69.756826162507906],[-68.02038513251361,69.770053702075018],[-69.250777025152459,69.511929912931492],[-66.676284739443375,69.25843136810505],[-66.802891189585523,69.152753873839401],[-67.93846008056029,69.24812619193068],[-69.040608560103919,69.098008998704159],[-67.751703481639211,69.038682824566052],[-67.883187861654946,68.78396479727121],[-69.319101002368186,68.856990923103808],[-66.713901928378348,68.445717714055604],[-67.032955895627424,68.326087582538946],[-66.923092610186472,68.065711596043883],[-66.212387016668956,68.280428401109674],[-66.526475163416094,67.85115958590626],[-65.942376020040726,68.070941088430885],[-65.401277366586953,67.674839999102062],[-64.976908453914191,68.043387376442297],[-65.021117439975626,67.787570716293033],[-63.850183557417424,67.566086332844066],[-64.589233878578696,67.315532124067431],[-63.040128594875654,67.235013322167759],[-63.701527545887259,66.822377808380082],[-62.123594136084506,67.046707650921974],[-61.299718372234267,66.648749872069203],[-62.123330464199455,66.643058953883383],[-61.576420042945841,66.412488876728446],[-61.862679819490793,66.312820904176419],[-62.553126623173,66.40685289018532],[-61.991615371284297,66.035295258824021],[-62.624131264553483,66.016255951457111],[-62.382003569770177,65.833289635883744],[-62.658913980724094,65.639919267179124],[-63.458751657719844,65.853032068277486],[-63.60660566726628,64.928082081821572],[-64.345732892727369,65.172407042313694],[-64.269663553888066,65.40075788110272],[-64.555077383135114,65.116596493309714],[-65.401606956443274,65.763998861756136],[-64.445367906293768,66.317116558637167],[-65.825745156216612,65.996930999548056],[-65.656346956395211,66.204748390288159],[-66.986340903614831,66.627513298993478],[-67.307306492030563,66.569736197180077],[-67.22537045374871,66.310272075954174],[-67.883396601897289,66.467420519448922],[-67.350460790551779,65.929749600500912],[-68.459893205920139,66.249286966205915],[-68.748921537258198,66.200046241671288],[-68.217172249395446,66.078856051501361],[-67.936757199635949,65.5649156022086],[-67.117968105901625,65.440396554489809],[-67.33650815330077,65.346606267708893],[-66.697422435562217,64.815164597045367],[-65.431940209553517,64.726439007723258],[-65.529323025768377,64.504800815674685],[-65.074631846313906,64.436685578701287],[-65.580332549198616,64.293852321299511],[-64.41094773896512,63.706347416075459],[-64.66465502403392,63.245339097708154],[-65.191855971879406,63.764278326488494],[-64.672378413000416,62.921945530684155],[-65.162786146551738,62.932591283043394],[-65.108469738229729,62.626457238162175],[-67.893262324929879,63.733736333135909],[-67.722578724668821,63.422746331038184],[-68.911090732897577,63.703216312440389],[-65.980201949218042,62.208866890201108],[-66.323744442791906,61.870279230800662],[-71.347265142236509,63.066130106496871],[-71.992239532074706,63.416176506568831],[-71.380828375938719,63.580301268689055],[-72.498467578729517,63.823494637341156],[-73.454552820279403,64.399277130008642],[-73.27127888750681,64.582518103795593],[-74.064799425589712,64.424677521602575],[-74.681407115127058,64.830666306621083],[-74.919447895691974,64.765506392026055],[-74.694711558993959,64.496583041923685],[-76.856150850430694,64.237624291810818],[-78.174554221036288,64.617740273107984],[-77.326695301974297,65.453107736615351],[-75.828335869816414,65.227031067834957],[-75.452109048823871,64.841619676179533],[-75.79867278274736,65.29750836544531],[-73.550804044654228,65.485253733935366],[-74.416383911657846,66.167076269710464],[-72.220030068107974,67.254294328762654],[-73.284484454416813,68.3569701520764],[-73.82049643775467,68.362957701132927],[-73.851554788548825,68.701391551933796],[-74.422426392357096,68.579948676207351],[-74.910406147300179,68.823142044859452],[-74.854859270181237,69.06584102872705],[-76.585085166262232,68.6987548330832],[-76.55723482340295,69.009481163295845],[-75.64773161488003,69.212574432761983],[-79.066380426931758,70.603542503401343],[-79.40522077188875,70.400712905820257],[-78.809838669098596,70.178558356330086],[-79.092890437708661,69.92534545604579],[-81.651935945484752,70.094611819924665],[-80.921718632472931,69.730887440815309],[-85.780026923271421,70.036658936854565],[-86.322015469337273,70.145434575769656],[-86.396865325708191,70.465312517659527],[-87.900706935809581,70.251892099361925],[-89.455909631854595,71.061705362675724],[-87.14010143804478,71.01160770451466],[-89.693324191692497,71.423496147961345],[-90.025177231695437,71.948785474640147],[-88.705202816108027,73.40327649692145],[-86.768752546925811,73.833995507492716],[-85.009324989574608,73.77862441163046],[-86.667777201277033,72.762564802558359],[-86.218480309137718,71.899127269620834],[-85.023409462768143,71.353238576921854],[-86.589356788129294,71.010805702530945]]],[[[-79.53728742731731,73.65446791275366],[-77.20654881301607,73.499549693953355],[-76.089997256751133,72.881184191848973],[-79.500516185680226,72.755973005431912],[-80.77640246482018,73.334183476707636],[-80.860722536396111,73.670540911413667],[-79.53728742731731,73.65446791275366]]],[[[-105.28891743798435,72.91994395895253],[-106.18002403936019,73.304102909153897],[-106.9496657923525,73.510371227569294],[-105.51231344259999,73.76575942090534],[-104.58751177157941,73.578090956715101],[-105.28891743798435,72.91994395895253]]],[[[-107.49627408957114,73.288392459335853],[-105.62416525350741,72.92751353931942],[-104.38592362912381,71.576953185065264],[-104.51480424927459,71.064265177226503],[-101.09077762940053,70.135689702351044],[-100.93512332658779,69.71533079959687],[-103.43476575592595,69.667683092701139],[-103.04894787011442,69.471785868431368],[-103.1202106902157,69.20460934456753],[-102.15140877337602,69.487694072163208],[-101.78928290506983,69.18161495892474],[-102.89505687303301,68.823658402301021],[-105.10587971127546,68.920393025131773],[-106.65906641603264,69.439584939468631],[-107.43989774464711,69.002142295828378],[-109.4720993602554,68.676683299038103],[-112.86426562735159,68.477116641034627],[-113.55482229431922,68.767584181411962],[-113.6941399265869,69.195029266077057],[-116.10153564830458,69.33715939845203],[-117.07530338564618,69.889013667550472],[-110.0000254057848,70.001151123000056],[-110.0018326568303,72.98185192029851],[-108.7549832440324,72.55107797808455],[-107.81284514656925,71.626171936942796],[-107.30600186551595,71.89467780656048],[-108.23741730632007,73.149898801708986],[-107.49627408957114,73.288392459335853]]],[[[-96.782329589069718,72.936632192011018],[-97.092775767904484,72.996936149389541],[-97.069210093177404,73.130156369315245],[-96.5984898603771,73.073829462869668],[-96.782329589069718,72.936632192011018]]],[[[-94.308345730046284,71.764874334811992],[-93.031294900080667,71.335693410236928],[-92.981449927476106,70.852261995311096],[-91.564076216181022,70.178250739130874],[-92.320506909099066,70.235346688574538],[-92.511866779680119,70.103840335901708],[-91.976700743640151,70.038669434978146],[-92.887785983473421,69.668199450142708],[-90.415565430181317,69.456998270211017],[-91.237210969337099,69.285534640623325],[-90.479022463852004,68.881171832229342],[-90.573636725273758,68.474688662426388],[-90.247760247998798,68.267409601784948],[-89.279557086064784,69.255465059398148],[-88.041331941173993,68.811716263173594],[-87.827911522876406,68.299962093261087],[-88.346949628613629,68.28828362601871],[-88.313836834381732,67.95032218734525],[-87.359388555784918,67.177247206682921],[-86.560814306571729,67.482106837453017],[-85.689774234281685,68.670948435538094],[-84.867579378698693,68.773319044911972],[-85.106663860475294,68.844071000735937],[-84.862207064040632,69.073970911849671],[-85.386771293035537,69.231899384671038],[-85.415137993336401,69.849539789091523],[-82.618359322194635,69.691040027185863],[-82.374188170302119,69.641799302651236],[-82.754842481697921,69.494362773589472],[-82.227564629552617,69.248895234928767],[-81.377849020966664,69.185646941500409],[-81.957938154423431,68.883654742480331],[-81.281542864949131,68.657204538529442],[-82.552683050158024,68.446464784396596],[-81.301054584443449,67.356972555335773],[-83.406452613976754,66.371246199373928],[-84.538450948174685,66.972813605134405],[-84.845771516538662,67.028723031095296],[-85.113717083400601,66.906928592855451],[-84.223066414659343,66.682488887028143],[-83.869064936311517,66.213581398437611],[-86.708162945005128,66.523066273524762],[-85.958730543369683,66.119066013972741],[-87.291460086396782,65.354824041459864],[-89.749398412581556,65.936022794099586],[-91.411520058017715,65.959357755927243],[-87.002695426943774,65.108587459801043],[-88.105623935814037,64.183318869817356],[-90.041656724511583,64.140889668980066],[-89.855724100231313,63.956978529151911],[-90.168186270353928,63.9787534323263],[-90.245288324076384,63.641901612835795],[-93.696341312168926,64.147140889921644],[-93.559814207351451,63.865297617451432],[-92.156876531763317,63.691691653797648],[-92.465076006410811,63.555087644680356],[-90.970045431801793,63.442796380631165],[-90.698595226134287,63.063855936488238],[-92.361282667490471,62.819366181067949],[-91.935831601456115,62.592410606004023],[-92.551401082946043,62.546729451917685],[-92.767974577535796,62.379967970946865],[-92.527961750997207,62.168426214830305],[-93.205362289533312,62.364927687169995],[-92.905539890400675,62.215118111142715],[-93.581775878111088,61.942063901507765],[-93.312023060203657,61.767293387028303],[-94.761702070582643,60.498218631585701],[-94.771886397143021,60.001768417335114],[-102.00164863582719,60.001087264965378],[-101.99914375291914,64.228428734819403],[-109.21511265611619,64.81304423563634],[-110.66946634929069,65.497140941420071],[-112.50390306477671,65.502337474821417],[-120.6779512281544,68.002847824114582],[-120.68185137478756,69.566938459951785],[-117.22694767854031,68.913416706506268],[-115.44230100401613,68.940904500523601],[-113.96440910193591,68.399080749385917],[-115.43450071074983,67.902366863250279],[-115.1332226230851,67.819167397185851],[-112.50305162431455,67.681937167341545],[-110.07394691739374,67.99292716943927],[-107.98872528023166,67.256414690171653],[-108.49605745290516,67.092289928051429],[-107.25949124362452,66.398536239477437],[-107.74600432370697,66.961497686733964],[-107.15650539985218,66.88175891416094],[-107.95839202712142,67.818596108101559],[-105.75020590772955,68.592297309490931],[-107.73416655470071,68.173718191960887],[-108.71811312543841,68.297490169338658],[-108.34573151943631,68.597801460091517],[-106.16447289130602,68.919876667690204],[-104.48682207047278,68.063184740478761],[-103.47414625059227,68.115018238549794],[-102.32036202689139,67.735660313922182],[-98.412129455929147,67.807181312744234],[-98.631542916447543,68.072534106069782],[-97.607397369566996,67.631070466182393],[-97.155408826934377,67.726409825288044],[-98.192529227825503,67.922988201927552],[-98.65048334685757,68.363528990217219],[-97.828546669995362,68.532773381439],[-96.430646226044686,68.310607845620325],[-96.722075070169623,68.03879509111087],[-95.970286101061461,68.249139337416096],[-96.36912278619775,67.509759426398489],[-95.418898750926147,67.013243294176675],[-96.422532822414865,67.051772348380808],[-95.787534018894718,66.616812614991545],[-96.036874238367233,66.937492558865131],[-95.399650703316894,66.949456670649653],[-95.258751039738868,67.262556047827815],[-95.650485063471393,67.73744009914634],[-95.460707224200704,68.021381760368456],[-93.448918207027347,68.618917183553265],[-93.852457040780507,69.000340537947153],[-94.60042276755533,68.803245803866076],[-94.083631366005363,69.123090786770319],[-94.254732446751106,69.313758518653117],[-93.430983025679112,69.375073218257711],[-96.050151216412772,69.831137688780188],[-96.545623647422914,70.327236340517345],[-95.886339564656041,70.694289577175567],[-96.358867048501835,70.678656031657312],[-96.524749623189138,71.12703007219892],[-95.564236891235979,71.336781056762788],[-95.406264473100435,71.491655330248904],[-95.872331995762309,71.573151915388991],[-95.201237609810534,71.903730541280822],[-94.308345730046284,71.764874334811992]]],[[[-100.30834229681861,70.49579957936939],[-100.6206726309987,70.546907979756526],[-100.67829592421248,70.646180444480962],[-100.27611939519879,70.594610618294979],[-100.30834229681861,70.49579957936939]]],[[[-86.913035999695424,70.113244633135452],[-86.515232029442274,70.017048340403363],[-87.323243534874848,70.080120852574993],[-87.107263302026482,70.146676030895122],[-86.913035999695424,70.113244633135452]]],[[[-97.439471337770499,69.642700181591863],[-96.2999583548484,69.344399388962586],[-95.267770815473568,68.82608638090926],[-96.598824943397702,68.460834902132262],[-99.564046003777534,69.034134484548787],[-98.503541202580294,69.308276340709597],[-98.54601984189604,69.572915022679751],[-98.041346360730202,69.456635721369054],[-98.304512874675467,69.669287096668569],[-98.080754321217881,69.833049309946858],[-97.439471337770499,69.642700181591863]]],[[[-79.430654122468326,69.787785636345177],[-79.977850188264071,69.509688701908487],[-80.794782592474448,69.689238269304639],[-80.424235703339207,69.797596427735044],[-79.430654122468326,69.787785636345177]]],[[[-78.029084244783931,69.714891346455119],[-78.039982682699673,69.608411850205727],[-78.848202928374576,69.482783183304008],[-78.578554480588309,69.638800034958706],[-78.029084244783931,69.714891346455119]]],[[[-67.914707638247961,69.540944806616437],[-68.202340705860919,69.580407698746825],[-68.221412972213457,69.616728500913609],[-67.754614858703405,69.631461167491238],[-67.914707638247961,69.540944806616437]]],[[[-95.513672314111787,69.573640120363677],[-95.496231517548026,69.350079320819873],[-95.985947112401078,69.391915259915805],[-95.875820155075061,69.605983871597488],[-95.513672314111787,69.573640120363677]]],[[[-101.17172489811342,69.397078834331523],[-101.2685144525869,69.390596900490493],[-101.35130193133094,69.559215070985289],[-101.00062381736768,69.461909159070217],[-101.17172489811342,69.397078834331523]]],[[[-76.995347633084378,69.143734098104687],[-77.321938221714703,69.193579070709234],[-77.340911611110357,69.403879371700327],[-76.668855921410966,69.36615231947988],[-76.995347633084378,69.143734098104687]]],[[[-90.199815910232374,69.419073464076803],[-90.295462886537265,69.257783174720942],[-90.492041263176759,69.369876684856337],[-90.322071774271066,69.428730446867064],[-90.199815910232374,69.419073464076803]]],[[[-79.210663879701372,68.845466264461038],[-79.405770088315947,68.923051716639435],[-78.650207315352901,69.351221898988456],[-78.228969506315195,69.303991672577411],[-79.210663879701372,68.845466264461038]]],[[[-90.492557620618328,69.221099823712194],[-90.574416754600392,69.209421356469818],[-90.765699720881628,69.335972874969258],[-90.5996853102518,69.367811255090061],[-90.492557620618328,69.221099823712194]]],[[[-99.994693603213236,69.013513145871514],[-100.14130066446992,68.96989742155148],[-100.24736268023462,69.052789270416667],[-100.15313294031191,69.129473843654438],[-99.994693603213236,69.013513145871514]]],[[[-100.2172381673667,68.806706497357482],[-100.59654116035159,68.76639765792919],[-100.61158144412846,68.990211143029512],[-100.32994141873631,68.997550010496951],[-100.2172381673667,68.806706497357482]]],[[[-101.84592292187891,68.586309760434375],[-101.88720954454762,68.584958442023463],[-102.30816720220744,68.681978709396361],[-101.82835028937264,68.798950149405357],[-101.84592292187891,68.586309760434375]]],[[[-74.880852923516557,68.348697446682706],[-75.310154697705627,68.474479922184031],[-75.396166663877338,68.588836615999526],[-74.983630027046573,68.647591501053341],[-74.880852923516557,68.348697446682706]]],[[[-104.54069353248875,68.405903259411787],[-104.85113971132353,68.45395746046367],[-105.05136005587538,68.559019720330866],[-104.60200823209335,68.561502630581828],[-104.54069353248875,68.405903259411787]]],[[[-78.982719535068483,68.192845389956148],[-79.174046446663894,68.234977959922759],[-79.153458066972263,68.335261166873266],[-78.828515427623557,68.268189631111568],[-78.982719535068483,68.192845389956148]]],[[[-75.675867602281457,68.32249505310503],[-75.078145411511429,68.173146902876596],[-75.201972320531922,67.459189356110016],[-76.693948695805673,67.235815324151474],[-77.224192856657879,67.508177395088154],[-76.740245084290493,68.231231621889236],[-75.675867602281457,68.32249505310503]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Ontario","type":"Province","postal":"ON","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-93.377886099825503,48.616537270132397],[-94.620884804468702,48.742605390175896],[-95.155298277003396,49.369672064487219],[-95.153826108978492,52.822356522368551],[-88.948495061717026,56.851306871373311],[-87.482402476493149,56.02131172252399],[-85.676678530657128,55.601051696726728],[-85.217999313941149,55.348970388282453],[-85.365271048074746,55.079277995182025],[-83.910604244536742,55.31466008423925],[-82.393260436654671,55.067797281853444],[-82.291559993321982,53.030712243207319],[-81.599410308715434,52.432616517266752],[-81.827892983446986,52.22420586478529],[-80.657936884129199,51.758341589201478],[-80.443296983363211,51.388596702049938],[-80.851230348534017,51.125023693948549],[-80.26565903713373,51.316350605543988],[-79.51955549304715,50.918524662633757],[-79.3649448914461,47.021959572585331],[-78.780999556670352,46.393442702906185],[-76.823708222239986,45.879678034870125],[-76.553125936527465,45.542079145038628],[-74.577223761543408,45.632199998085838],[-74.340446408761068,45.214444855196632],[-76.151158147756107,44.303941890776173],[-76.81996188420645,43.628788056427368],[-78.845566209523994,43.583337615240453],[-79.171849180955078,43.466574915473785],[-79.036695367205624,42.802319519040708],[-82.690012156959213,41.675177142059283],[-83.149669156915621,42.141920323926598],[-82.54532221003349,42.624681572811227],[-82.137850270661545,43.570879118671428],[-82.551079046190594,45.347357457923096],[-83.977785643583886,46.084913638402355],[-84.125222172645636,46.527234211916181],[-84.561752951016715,46.45737214870428],[-84.875972933706379,46.899901462460434],[-88.378194746993046,48.303097316769367],[-89.455645959969544,47.996216201547156],[-91.518307171466319,48.05831093047837],[-93.377886099825503,48.616537270132397]]],[[[-79.520357495030865,51.22588917631191],[-79.52046735831631,50.965985601944226],[-79.737458333390734,51.186283461910421],[-79.521346264599828,51.544712430661548],[-79.520357495030865,51.22588917631191]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Prince Edward Island","type":"Province","postal":"PE","admin":"Canada","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-63.811269981714233,46.468688067104694],[-63.681433550980117,46.561918051129879],[-62.023728409618684,46.421556717650532],[-62.804889328089487,45.973215636094551],[-62.978473319086191,46.316351635512262],[-63.568878615045861,46.20922394587879],[-64.403147445698821,46.691622645921484],[-63.993577117574944,47.061576273315353],[-63.811269981714233,46.468688067104694]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Qu�bec","type":"Province","postal":"QC","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.682674319460062,46.186669013377781],[-78.780999556670352,46.393442702906185],[-79.546713697208148,47.407447868540544],[-79.521346264599828,51.544712430661548],[-78.90316753008068,51.200291030804152],[-78.73136332430812,51.497482204250474],[-78.981631888542609,51.774568396461092],[-78.448102815455726,52.261361627921417],[-79.100361141118654,53.656625353021496],[-78.996023978935384,54.002496948246687],[-79.713936603977828,54.654964014151972],[-77.775278082758248,55.291248218111775],[-76.546380330801384,56.358778776412976],[-76.89091159394421,57.758129415731474],[-78.515097446917608,58.682365290832024],[-77.726158207837599,59.675869967403088],[-77.34907445321862,59.578948576987074],[-77.50355321887713,60.542713262189267],[-77.790801764991045,60.639865365504704],[-77.589576171377402,60.808593399284916],[-78.181376731062173,60.81912928835871],[-77.514363766164522,61.556289961010407],[-78.021382828474515,61.832090752781369],[-78.133421406967202,62.282299510189858],[-77.603968261770163,62.531381550941575],[-74.632572884748555,62.115691837818645],[-73.705052097413315,62.473143023329328],[-72.686949031232018,62.124557804953724],[-72.771620665321365,61.840407403489252],[-72.226127480449946,61.8315743953398],[-72.215866249589766,61.587271407504772],[-71.638303971698136,61.617165207473249],[-71.854394067831947,61.439812905785914],[-71.42271924667736,61.158958402884679],[-69.992442092507233,60.856493791737194],[-69.503352718381208,61.040404931565348],[-69.67375067410012,60.07587120336504],[-70.654829813087829,60.026234971002822],[-69.733933781864678,59.917997662186394],[-69.681891543551302,59.341731771062967],[-69.34402898183474,59.303103839901922],[-69.531664487039336,58.869220766709986],[-70.15434761626156,58.760598936394501],[-68.381143202916064,58.743493222851356],[-68.356544813305831,58.163217321809327],[-69.040795327689167,57.902511745457957],[-68.41359681743532,58.051750032400946],[-68.021033325897704,58.485314502065108],[-68.063847048234052,58.138981481041071],[-67.755933218128689,58.404597946251641],[-67.678270861650489,57.991138457823183],[-66.362427305595659,58.791162902404182],[-66.002405319205664,58.431217820314004],[-66.043043748490277,58.820650208216534],[-65.38354543231678,59.060218088449062],[-65.700017612357982,59.213312576711047],[-65.475072535417638,59.470326746671617],[-65.038245126175866,59.387896323605247],[-65.433412377578435,59.776504736866997],[-65.054471933435494,59.752785253540281],[-64.931227299827839,60.25198204992688],[-64.614271721330695,60.30597985472113],[-64.846687501681032,60.25076256745848],[-64.622302727496432,60.141316762502214],[-64.887270999322908,60.035408555337142],[-64.661468988756127,59.921513287320494],[-64.818024170509489,59.54024374152624],[-64.385294661814655,59.514766445632461],[-64.324364483709104,59.019964180663521],[-64.848313478305556,58.949223211168089],[-63.4967094228397,58.753446836512296],[-64.070811007239939,58.641693902561769],[-63.848008264365689,58.459738329214474],[-64.394589095762967,58.144331823042052],[-63.601255325265313,57.723061055018718],[-64.121479954485309,56.299408656960679],[-63.111825374954407,55.339829762933761],[-63.534018994575447,55.140350995558634],[-63.698824909065422,54.615193504822344],[-65.675803744246807,54.744931058599576],[-66.773986159186009,55.328250172648296],[-66.724448803780689,54.747974271606267],[-67.426442238762732,55.05886539674708],[-67.150180021192924,54.616665672847262],[-67.601421493484537,54.552791158691889],[-67.757251577553987,54.033654175997754],[-66.944439046547643,53.355138525114427],[-67.029473229478938,52.720370434493702],[-66.300211727050453,52.896876788883134],[-66.37886285309763,52.16451714180522],[-65.137133069401273,52.154695364086791],[-64.506342029713508,51.608894562016133],[-64.13067551147671,52.1866875528072],[-64.178477026972075,52.815325272100324],[-63.722544392392123,53.109187587997781],[-63.409686714441918,52.688718821958162],[-64.059418184539709,52.485120181378988],[-63.756898641749501,52.010521774602637],[-57.101029247223238,52.001117477368894],[-57.100128368282626,51.44334157718518],[-58.510377445516852,51.295059100825512],[-60.080202944854065,50.254576883399892],[-66.495526675907371,50.211873024348989],[-67.372004980826745,49.348457464068559],[-68.281925669834337,49.197153747359295],[-69.67388251004266,48.199177635070754],[-71.018246574997946,48.455598543289938],[-69.774989691633962,48.098103412465093],[-70.705861309175148,47.13980991887783],[-72.981020087371817,46.209740303320388],[-73.476591395338858,45.73824004119345],[-74.315100948809842,45.531070843837455],[-73.973854597901692,45.345138219557185],[-74.340446408761068,45.214444855196632],[-74.577223761543408,45.632199998085838],[-76.41344575541784,45.496343059309567],[-77.682674319460062,46.186669013377781]]],[[[-61.801134406986776,49.093904231701885],[-63.041523858600755,49.224949158575839],[-64.485204333594666,49.886985316643006],[-62.858535570370293,49.705491169094557],[-61.801134406986776,49.093904231701885]]],[[[-64.216226051849574,48.873661303378384],[-64.513735828823684,48.841097825573712],[-64.348831037376812,48.423199860413405],[-65.259421892425593,48.021254044299155],[-68.377913222324096,47.929375378684881],[-68.429636857109699,47.528187619240157],[-69.242877854929262,47.4629947456595],[-70.689788310515127,45.428337685621614],[-71.517520275684348,45.007561302382754],[-74.708872936487296,45.003869895991954],[-73.558087980478959,45.425085732372565],[-73.159558912541911,46.01003082304581],[-72.10928787638349,46.551217367127947],[-71.261176271764981,46.756266203074944],[-70.519489231753113,47.032528420644752],[-68.238211068557376,48.626435952150615],[-65.523390408354572,49.266136904287663],[-64.216226051849574,48.873661303378384]]],[[[-61.914095837077156,47.284499865803582],[-61.924686657793671,47.42516881648217],[-61.395519157138779,47.637666383182051],[-61.684086062677977,47.498755245070527],[-61.914095837077156,47.284499865803582]]],[[[-71.025739251065019,46.872951998541765],[-71.116640133438864,46.864844088076239],[-70.825799057891032,46.995372657508625],[-70.913469959672909,46.919512058911636],[-71.025739251065019,46.872951998541765]]],[[[-73.566514494472273,45.469107950848752],[-73.64356161655202,45.449112832898493],[-73.960539167706258,45.441411416589091],[-73.687430026428586,45.561404096947683],[-73.476075037897289,45.704753711791028],[-73.566514494472273,45.469107950848752]]],[[[-73.695340182980345,45.585486129116333],[-73.85770713253352,45.573598921631628],[-73.572348234929194,45.694470508273781],[-73.695340182980345,45.585486129116333]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Saskatchewan","type":"Province","postal":"SK","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.89491370743917,48.993082694652713],[-110.0000254057848,60.001087264965378],[-102.00164863582719,60.001087264965378],[-102.00110481256425,55.817526314359583],[-101.36727055986977,48.993137626295436],[-109.89491370743917,48.993082694652713]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Yukon","type":"Territoire","postal":"YT","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-140.86002627782463,69.635229478181884],[-136.44375566257992,68.895124469480351],[-136.1693061892199,67.015242805971695],[-134.05558052265016,67.004487190327012],[-133.63519415407461,66.565649282961687],[-133.62163153148694,65.974628752603536],[-132.34274598465444,65.978968352378445],[-132.55484804352676,65.85700911921046],[-132.19468872802994,65.597654861270001],[-132.77323428232629,65.203410461465154],[-132.35258973502997,65.057248346514513],[-132.58810366002973,64.794081832569248],[-130.11791557751829,63.793370124473256],[-130.30260674667306,63.703710697224892],[-129.84493827218316,63.485785884224214],[-130.13360405467924,63.276452380145031],[-129.61177542149181,63.058681375743959],[-129.25471425064444,62.152770696654983],[-127.166597715911,61.464521158681578],[-126.85927714754703,60.769416151696674],[-124.582596762847,60.952821920411822],[-123.81915679231783,60.001087264965378],[-139.05651882377236,60.00158164974988],[-139.0792577772765,60.343706906941549],[-141.00213718412465,60.300244991221092],[-140.86002627782463,69.635229478181884]]],[[[-139.04313472902354,69.576892073612726],[-139.12574093334658,69.539318829991913],[-139.2913900485523,69.597875961131962],[-138.87885615830368,69.589702132695152],[-139.04313472902354,69.576892073612726]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Alaska","type":"State","postal":"AK","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-155.97352294810878,70.841978791793821],[-154.94381831898491,71.083051799036923],[-154.19523461122949,70.801109649609799],[-152.30041428748299,70.846790803696138],[-152.47058427688461,70.653618188905313],[-151.76902480188005,70.560135519323609],[-151.94467422264304,70.452106950749538],[-143.21833233702515,70.116232914499449],[-141.00213718412465,69.650786119400323],[-141.00213718412465,60.300244991221092],[-139.0792577772765,60.343706906941549],[-139.18516873102374,60.083572619674442],[-137.43857869857629,58.903124576597065],[-135.47593702214496,59.793280860553836],[-133.40110295862132,58.410882126178876],[-131.82427367483723,56.58998606062346],[-130.09786552792531,56.109290241505107],[-130.03655082832071,55.297916919538039],[-130.84960505855503,54.807608062943615],[-131.03276912804216,56.088097613743543],[-131.78420104147264,55.876533884969916],[-132.11900940385397,55.569784605690216],[-131.55134580798057,56.206804893662508],[-133.46585088589595,57.17217358283213],[-133.64871283134812,57.642300553891062],[-133.11706242044227,57.566198256066116],[-133.53520208483053,57.832957299445297],[-133.19431828276436,57.877704615605381],[-134.03109199632536,58.072162630835891],[-133.87673408028081,58.518185597069049],[-134.20882881951172,58.232958535407249],[-134.77613535970744,58.45384965711483],[-135.36366773075284,59.419427086526809],[-135.09025097227595,58.245845498789464],[-135.8975373800246,58.40020341483401],[-136.04311172639814,58.82162799145695],[-135.82637893004448,58.897961002181347],[-136.15003067578928,59.04807819540784],[-136.2258418359078,58.765454893611007],[-136.98899616189482,59.034488106998793],[-136.06148636088813,58.452707078946247],[-136.60741899890132,58.243988809265517],[-139.799109489307,59.546264249568395],[-139.51230588949912,59.953549421355092],[-139.28671261917466,59.610940765707483],[-138.98807399694266,59.835006936364294],[-139.4314327785039,60.012249374766185],[-140.41984803837693,59.710718601544954],[-141.40872747063091,60.117674183475316],[-144.14721542909984,60.016391220627298],[-144.90133075327722,60.335181515991309],[-144.69113756898946,60.669110972089101],[-145.89889213166319,60.478168581992719],[-145.6749275845454,60.651126352262423],[-146.57047815581734,60.729162243911105],[-146.59910852800323,61.053533594175519],[-146.28488854531358,61.112651028071298],[-147.99075500443018,60.948273580394556],[-147.75185454365669,61.218954743063961],[-148.55614717687709,60.826984513267746],[-148.25673401848272,60.675318247716518],[-148.64012117910389,60.48942956875041],[-147.96408843847152,60.484892215061706],[-148.43070253097846,59.989134139509417],[-149.3952692181644,60.105732044347889],[-150.93450328567059,59.249095048779168],[-151.94950546062032,59.265069170482263],[-151.0464841859384,59.771802588250125],[-151.85320479776703,59.7820857917674],[-151.32179059292488,60.742906140919786],[-150.44125009302633,61.023562889907225],[-149.07508091249315,60.876412005387635],[-150.05326515390948,61.171098295925901],[-149.43353460048348,61.500798015534201],[-153.02502033319092,60.295652705889665],[-152.66010668401665,59.997220077317877],[-154.17833489134654,59.155590406540369],[-153.43760640850013,58.754842100237397],[-156.43587159855846,57.359962896636375],[-156.62898653512445,57.009982414535671],[-158.41440774581099,56.435836884821242],[-158.47610971349675,56.075496294903473],[-161.17801319791386,55.388872733554621],[-161.51695791299201,55.618410095826391],[-162.07397712979724,55.139318280675496],[-162.63037836562188,55.246654710551297],[-163.33529553728772,54.839182771179367],[-163.27881344895147,55.121828045633293],[-161.69733420161108,55.907207714265013],[-160.2917076221118,55.805067817790587],[-160.53905931611783,56.006293411404215],[-160.30204575727177,56.314130337209775],[-157.46190954053074,57.506201915886805],[-157.61086492951372,58.050827180803253],[-157.19370579494802,58.194176795646598],[-157.52360876163439,58.421341110952852],[-156.80889865136254,59.134276929164827],[-158.19093483689554,58.614250053858626],[-158.50318826677582,58.850357240599777],[-158.08052772819167,58.977436102869319],[-158.80947337367451,58.973865546092497],[-158.95070537369099,58.40455400093748],[-160.36312425081269,59.051176340057282],[-162.14492958611714,58.64422075812692],[-161.6443910843571,59.109678539554579],[-161.98103691018741,59.146153150320998],[-161.8286949854307,59.588616546105868],[-162.42134698557766,60.283974238647289],[-161.94659477020167,60.684821421907145],[-162.68497355203067,60.268955927527514],[-162.57074320099346,59.989727401250803],[-163.90688949219776,59.806794044663064],[-165.35382878689609,60.541219121507282],[-164.80515505991116,60.892045550905863],[-163.72999998960034,60.589976447585968],[-163.42094907449069,60.757430067255086],[-163.9065269433558,60.853802141243875],[-163.5869085534778,60.902976947807247],[-165.1148253292925,60.932815816133001],[-164.86897464242378,61.1117501491307],[-165.56588278058101,61.102367824554022],[-166.16809425985235,61.65081633180381],[-165.19451054351387,62.473527544828386],[-164.75787127514843,62.496730670713504],[-164.79965090931054,62.918067356708093],[-164.4090553438734,63.21506077624062],[-163.28785657063432,63.046431619417291],[-162.28280251618128,63.529192868301948],[-160.92670917221409,63.660556398703676],[-160.98753223361632,64.251269311862586],[-161.49070608093589,64.433763215308545],[-160.88696887528795,64.795554000594166],[-161.75937125231746,64.816252243571228],[-162.71107020219611,64.377513213162786],[-163.20388256840752,64.652017618165559],[-163.14435177390027,64.423820587976138],[-166.14277351914035,64.582781775680672],[-166.92840999320183,65.157059141337612],[-166.15703652017274,65.285829898202934],[-168.08836441367126,65.657750078406195],[-164.46049882728113,66.588445914690681],[-163.7276750078222,66.616450066149582],[-163.63822294752512,66.574669058696372],[-164.0337541210607,66.215547951247004],[-163.69537794848472,66.083821872003284],[-161.03430103422855,66.188807227570663],[-161.82815253545883,66.370828718889243],[-162.60743341845753,66.894393191986637],[-162.36160882411912,66.94731433658356],[-161.5910359797827,66.459510362897163],[-160.23171128193249,66.42028916999476],[-161.85667853752358,66.700319698255186],[-161.71994269246377,67.02056018898702],[-163.53182172886662,67.102573131568704],[-164.12516998758505,67.606724762128692],[-166.78630046019288,68.359595884598434],[-166.38053689490954,68.425129334363959],[-166.20907463861292,68.885357623404644],[-163.53567106373026,69.17009030028197],[-161.88096656335244,70.331751721548954],[-162.07387413296715,70.16196900022851],[-160.11714584787467,70.591193870117763],[-159.86568801357527,70.278841563280594],[-159.38675275360612,70.524528828512189],[-160.08159408870597,70.634864526080548],[-159.68089522088147,70.786794463516827],[-157.90937446238533,70.860117220220133],[-156.47023683424442,71.407686821186388],[-155.57943785006779,71.121086468456554],[-155.97352294810878,70.841978791793821]]],[[[-166.10985573224011,66.227457131388803],[-166.14863884529183,66.221821144845677],[-165.82219794538793,66.328091900852712],[-165.82987189587598,66.317138531294233],[-166.10985573224011,66.227457131388803]]],[[[-171.4630431923074,63.640022950654753],[-170.43041894637292,63.698854740008386],[-168.7160010037758,63.310608875588628],[-169.67635580725613,62.956102026127752],[-170.52710413072523,63.379284415317755],[-171.79098235276649,63.424712883847576],[-171.7463847253328,63.703084476497878],[-171.4630431923074,63.640022950654753]]],[[[-147.93070647919029,60.826160538626937],[-148.05741729945362,60.817942764875966],[-148.12379669651705,60.844353898695942],[-148.0377297987026,60.924136616583183],[-147.93070647919029,60.826160538626937]]],[[[-172.74221438368201,60.45739343471584],[-172.3875084070163,60.39848474106239],[-172.23206559102803,60.299135372038137],[-173.07402965818059,60.493208865769589],[-172.74221438368201,60.45739343471584]]],[[[-152.02074081490022,60.361746458410948],[-151.95973647907701,60.503744754843382],[-151.89940505587711,60.490363406676664],[-151.88728713549295,60.472686404049227],[-152.02074081490022,60.361746458410948]]],[[[-147.65826750395382,60.450472047733058],[-147.73211485784509,60.222066277301309],[-147.81583068135109,60.1851631997217],[-147.89143310122728,60.299421016580283],[-147.65826750395382,60.450472047733058]]],[[[-146.39392785611372,60.449648073092249],[-146.10223808668587,60.411195923187904],[-146.70287440110224,60.395595336655305],[-146.56029932242123,60.480541628958235],[-146.39392785611372,60.449648073092249]]],[[[-145.11852772201183,60.337093137158007],[-145.15046223250738,60.312648556147394],[-145.28425374151738,60.336829465272928],[-145.12813801290579,60.401121459912986],[-145.11852772201183,60.337093137158007]]],[[[-166.13543465167291,60.383554320570966],[-165.72969717891985,60.314197628472101],[-165.59179952961651,59.913141704969917],[-166.14871574959164,59.764134130926351],[-167.43641507849864,60.206663444682505],[-166.13543465167291,60.383554320570966]]],[[[-147.73588591511785,59.813254005847],[-147.18088131630941,60.358252805933915],[-146.95787257977494,60.288874141177956],[-147.4993118094136,59.890191264641288],[-147.73588591511785,59.813254005847]]],[[[-148.02176117016376,60.065324327962713],[-148.07416046415483,60.034705430310311],[-148.2718731792165,60.053261339221308],[-147.91419677397067,60.0923506961812],[-148.02176117016376,60.065324327962713]]],[[[-144.56564073803025,59.818417580262718],[-144.44492570656988,59.950703962262168],[-144.23573777134391,60.015204697144554],[-144.24896805749313,59.982124861898285],[-144.56564073803025,59.818417580262718]]],[[[-160.91898303666545,58.577094290722499],[-161.13150257602243,58.668203913338658],[-160.71514544344043,58.795227843965506],[-160.91898303666545,58.577094290722499]]],[[[-152.48608873304246,58.485006884865896],[-152.63662066017153,58.541696340153408],[-152.36792802296858,58.611096977566461],[-152.36227006376836,58.570843069780892],[-152.48608873304246,58.485006884865896]]],[[[-152.41694352776807,58.36021317893352],[-151.98250015182037,58.24435135810748],[-153.38132894053302,58.087202914612732],[-152.84110370019849,58.416386276779463],[-152.41694352776807,58.36021317893352]]],[[[-134.68027414999594,58.16166824948462],[-134.24009591054823,58.143991246857183],[-133.82273078232231,57.628677506496388],[-134.30688729493204,58.034391633301283],[-133.90882514595813,57.36871900048601],[-134.43530099611971,57.056981928047293],[-134.92348949130513,58.354654096690183],[-134.68027414999594,58.16166824948462]]],[[[-134.31272652855324,58.228904580174486],[-134.45622995199622,58.206525428930149],[-134.66159739147099,58.29091141847735],[-134.51997263020905,58.332538617330925],[-134.31272652855324,58.228904580174486]]],[[[-135.73036940489766,58.244252481150596],[-135.61324415628906,57.991863555507081],[-134.95467967804183,58.015319366948717],[-135.33847607940123,57.768665304805239],[-134.93149852481378,57.48114210047774],[-135.56422315832529,57.666426531373901],[-135.91076491959168,57.446568124549458],[-136.5686097933193,57.972176054756062],[-135.73036940489766,58.244252481150596]]],[[[-152.8980513342068,57.823915551053489],[-152.21623429159598,57.57699781702496],[-152.94078815224333,57.498094005421279],[-152.67904711442668,57.345131353101834],[-153.27436055266344,57.22634716888308],[-153.7325755969984,57.052334711073144],[-153.97271476631525,56.774204817650855],[-153.79318991815833,56.989492911800937],[-154.24375847782662,57.143026853204645],[-154.3389467749148,56.920916249028693],[-154.70595057309455,57.335364507026128],[-154.11616875127976,57.651210466340331],[-153.68771841755287,57.305130130872783],[-153.84153525691661,57.862829126756679],[-153.48793752614279,57.730949238913382],[-153.21746510371571,57.795746604666448],[-153.16046528464679,57.971967314513734],[-152.8980513342068,57.823915551053489]]],[[[-153.24064076377945,57.850084985645537],[-153.29497914475857,57.829463646968264],[-153.52008077688066,57.955740507254092],[-153.34696645142921,57.932790066925492],[-153.24064076377945,57.850084985645537]]],[[[-134.96976390713286,57.351437505686135],[-134.62071726295841,56.718295391689935],[-134.68190012662046,56.216154259253528],[-135.45493116196866,57.24942944515422],[-135.81232741583659,57.00954296139389],[-135.44867994102705,57.534370862273875],[-134.96976390713286,57.351437505686135]]],[[[-170.16056450492647,57.183950927031418],[-170.26399529500483,57.136775632263067],[-170.38662194763191,57.203023193383956],[-170.11617424444404,57.241782960487541],[-170.16056450492647,57.183950927031418]]],[[[-153.00708789842483,57.12483349313564],[-153.29539113207898,57.000424308702293],[-153.37458608138908,57.051917230588487],[-153.28521229868286,57.185038573557279],[-153.00708789842483,57.12483349313564]]],[[[-133.3662213654938,57.00350048069464],[-132.95415164762616,56.880277819744066],[-133.00412296300897,56.623725075582371],[-133.32896123223651,56.830070298297557],[-133.18080509865513,56.473970431197813],[-133.60279547119808,56.464093721836662],[-133.97946723849665,57.009597893036613],[-133.3662213654938,57.00350048069464]]],[[[-133.98959663341432,56.84495677347482],[-133.7383667654322,56.650443826601617],[-134.18958077190248,56.076968462928392],[-134.3736786793159,56.83865062089049],[-133.98959663341432,56.84495677347482]]],[[[-132.74687808014897,56.525694065983402],[-132.94802676946284,56.567244360537188],[-132.84253054961815,56.794771224685377],[-132.56797670613696,56.575824683130122],[-132.74687808014897,56.525694065983402]]],[[[-169.75521430025458,56.635040993982784],[-169.55049780074606,56.628119607],[-169.47432683836772,56.594061988513317],[-169.6326109935757,56.545700170262194],[-169.75521430025458,56.635040993982784]]],[[[-154.20864342521756,56.514894505024557],[-154.32220361021359,56.570606177071681],[-154.11038170271917,56.602927955648397],[-154.11596275761957,56.543887426052436],[-154.20864342521756,56.514894505024557]]],[[[-154.68279963227002,56.43578195317852],[-154.77716120813525,56.4399128127111],[-154.44488244790122,56.573187964279526],[-154.51118219408272,56.52143137050831],[-154.68279963227002,56.43578195317852]]],[[[-132.11234619559195,56.109389118462019],[-132.36858033622588,55.939738233084086],[-132.69902712617517,56.198169639426851],[-132.37984681614785,56.49877756105036],[-132.11234619559195,56.109389118462019]]],[[[-132.77989749058827,56.247267541690405],[-132.89144168429647,56.259407434731628],[-133.03766422405411,56.364832243440759],[-132.64334291994945,56.435155732451506],[-132.77989749058827,56.247267541690405]]],[[[-133.56610662702508,56.339201138947402],[-132.17269959144895,55.480597590569261],[-132.51125978502805,55.593921569501617],[-132.63127993120801,55.473181818802004],[-131.97643432517296,55.208598068474544],[-132.02170349193889,54.726320218045856],[-133.68018316946268,55.785171576797211],[-133.24152653651834,55.920819775331154],[-133.74253058395044,55.964852980135902],[-133.56610662702508,56.339201138947402]]],[[[-130.9791338720899,55.489166926833661],[-131.18787960759198,55.206290939480311],[-131.44757993488156,55.408790947205063],[-131.81099120362742,55.223111008481311],[-131.62495970239027,55.83168769185292],[-131.26921689096818,55.955393751259436],[-130.9791338720899,55.489166926833661]]],[[[-155.56600157025838,55.821195748093317],[-155.68062193595892,55.791840278223475],[-155.73736082972491,55.829798043343345],[-155.59395902982095,55.924335400465282],[-155.56600157025838,55.821195748093317]]],[[[-133.30508794031019,55.543747007040736],[-133.28170354000409,55.49785711271204],[-133.65018499937304,55.269286547352152],[-133.73713080347102,55.496923274785786],[-133.30508794031019,55.543747007040736]]],[[[-160.68491381386923,55.314813892838856],[-160.55277849388725,55.380753836760533],[-160.48753892841029,55.184845626162229],[-160.79509020967367,55.145217939103674],[-160.68491381386923,55.314813892838856]]],[[[-160.32927811915044,55.337709401524762],[-160.34330766070127,55.25879460359252],[-160.51748216685721,55.3338312275487],[-160.36230027617188,55.356979421791095],[-160.32927811915044,55.337709401524762]]],[[[-132.86227298201189,54.894422031099054],[-132.70582217037969,54.684154689093617],[-133.42903569894469,55.303805591637683],[-133.09740238551262,55.213739670233196],[-132.86227298201189,54.894422031099054]]],[[[-159.87297469598215,55.128749432616075],[-160.16959732692629,54.941685216495756],[-160.2270613183762,54.922689854443036],[-159.92046584769614,55.267528734785088],[-159.87297469598215,55.128749432616075]]],[[[-131.33972714756419,55.079838297937755],[-131.23203366201071,54.903782383018637],[-131.57847654632019,55.248775071960324],[-131.4046343766027,55.21332218974851],[-131.33972714756419,55.079838297937755]]],[[[-159.51511701631534,55.151875654201405],[-159.53498579148732,55.059634439745167],[-159.64849104484065,55.074575846565153],[-159.57475080765269,55.21771672116617],[-159.51511701631534,55.151875654201405]]],[[[-159.36199780881415,54.972402991105042],[-159.42134870219149,54.97813785460508],[-159.46191572034056,55.058810465104358],[-159.39042218733985,55.040880776920403],[-159.36199780881415,54.972402991105042]]],[[[-163.47603727239292,54.980730628141487],[-163.37896207337729,54.815518219495374],[-163.08327053377724,54.669015528359864],[-164.90393451314216,54.544782125183247],[-164.47863725570744,54.906825596025357],[-163.47603727239292,54.980730628141487]]],[[[-162.29815041715736,54.847037996088375],[-162.39075418045553,54.872976717781],[-162.43390435910354,54.931533848921021],[-162.26461190269438,54.983521155591689],[-162.29815041715736,54.847037996088375]]],[[[-162.55441339690373,54.401355606040084],[-162.73311015054662,54.402311416623405],[-162.82054759284696,54.494552631079642],[-162.6453898102863,54.462055071246198],[-162.55441339690373,54.401355606040084]]],[[[-165.56115453943383,54.136694951412835],[-165.65414694410424,54.25330384257984],[-165.4078568040938,54.196845100191751],[-165.46759496555231,54.18092591013135],[-165.56115453943383,54.136694951412835]]],[[[-165.84155173640943,54.070656130534275],[-166.03642311225138,54.047189332764077],[-166.10582512295551,54.144813848206923],[-165.69287787209538,54.099923709775737],[-165.84155173640943,54.070656130534275]]],[[[-166.61535456133782,53.900950313513619],[-166.23088112748187,53.932601926049159],[-166.77040873595385,53.47601011175658],[-167.80876921867937,53.323772557121032],[-166.74126337961744,53.712952259467073],[-167.03806728498256,53.942182004539632],[-166.61535456133782,53.900950313513619]]],[[[-166.20974617794516,53.723279408298509],[-166.25075127594494,53.767774038902104],[-166.11373115963406,53.843074334743335],[-166.13863853973459,53.787417594338962],[-166.20974617794516,53.723279408298509]]],[[[-167.96436721655834,53.345118993482231],[-168.50562654506706,53.043170739776315],[-169.08889759392844,52.832024491487346],[-168.28770722523066,53.500147075567952],[-167.82809691717057,53.507947368834266],[-167.96436721655834,53.345118993482231]]],[[[-169.69196188695304,52.847372392463456],[-169.72276205902639,52.792330886457535],[-169.99184059101944,52.829849198435625],[-169.82063651344362,52.883385577431],[-169.69196188695304,52.847372392463456]]],[[[-170.73339716837984,52.581492255367806],[-170.82703501985225,52.600718330319978],[-170.58462030723572,52.66758112583932],[-170.61402521558398,52.609606270112153],[-170.73339716837984,52.581492255367806]]],[[[-174.67739435862632,52.035010300927411],[-175.29554837390626,52.022145310202291],[-174.01833892882226,52.331794980217609],[-174.12063263389635,52.135216603578101],[-174.67739435862632,52.035010300927411]]],[[[-172.46479036186867,52.272293024822773],[-172.61984590977576,52.272831354921436],[-172.31361024135552,52.329575741851698],[-172.46479036186867,52.272293024822773]]],[[[-173.55330274775247,52.136304250103962],[-173.35724210184563,52.095632861833735],[-173.02289585190871,52.079142382689042],[-173.83579215367018,52.048193895180333],[-173.99250045737762,52.123329396093396],[-173.55330274775247,52.136304250103962]]],[[[-176.02154968333929,52.002435836794177],[-176.14286072312319,52.004314498975219],[-176.1845112679249,52.056049120089369],[-176.07741241740388,52.099972461608644],[-176.02154968333929,52.002435836794177]]],[[[-176.59329813349447,51.866699747631884],[-176.45235109137462,51.735709752400624],[-176.96162235103614,51.603676055957692],[-176.69835627348846,51.986055220934929],[-176.59329813349447,51.866699747631884]]],[[[-177.14819973547284,51.716736363004969],[-177.65488714798991,51.676592318504845],[-177.67023504896602,51.701080844829647],[-177.11003666333832,51.928772503906004],[-177.14819973547284,51.716736363004969]]],[[[-177.87903365617422,51.649719758885993],[-178.05889358735172,51.672604281243338],[-178.19451843993753,51.882212443536133],[-177.64450026099701,51.826292031246709],[-177.87903365617422,51.649719758885993]]],[[[-176.00896690392864,51.812372352981328],[-176.20443291480302,51.83481742219692],[-176.19365875972895,51.886288371425991],[-176.07162468219772,51.843298867832942],[-176.00896690392864,51.812372352981328]]],[[[-176.28670197616887,51.791981727203478],[-176.34964402568909,51.733281773792385],[-176.41372247356804,51.840585244682558],[-176.37858201507422,51.86111869273148],[-176.28670197616887,51.791981727203478]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Alabama","type":"State","postal":"AL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-87.566195204298964,30.7956357114127],[-87.622269425188023,30.26476532983348],[-88.005933990604916,30.230916451589124],[-87.790294333941418,30.291791698051952],[-88.011317291591524,30.694176967307982],[-88.399585128668392,30.370805372941078],[-88.203138587971424,35.024196663735125],[-85.623603577460599,35.000861701907468],[-84.921533238178739,32.285887233105029],[-85.007281532465399,31.00167331692866],[-87.59369398464483,31.000739479002419],[-87.566195204298964,30.7956357114127]]],[[[-88.071335604427915,30.252339792250112],[-88.159314123409033,30.230916451589124],[-88.316253826661438,30.240452584765393],[-88.109370273847574,30.273730173925458],[-88.071335604427915,30.252339792250112]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Arkansas","type":"State","postal":"AR","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-90.303043453232689,36.099373706702991],[-89.688907687617771,35.92095573114689],[-91.070174830152681,33.974200285790317],[-91.149957548039893,33.015917778531616],[-94.041306535289237,33.011995659241379],[-94.047327043331393,33.55443464477753],[-94.484148959408898,33.648433671800802],[-94.618379921560646,36.500869083346956],[-90.162242666611562,36.500869083346956],[-90.303043453232689,36.099373706702991]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Arizona","type":"State","postal":"AZ","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.04674717117793,36.291843196466999],[-109.04780735188244,31.327879384059941],[-111.04197429807105,31.324209950326207],[-114.83595454533898,32.508327427137331],[-114.47753106975215,32.842004197678591],[-114.71942805163603,33.330862858905192],[-114.50905084634516,33.903920742093746],[-114.12561150066342,34.286508647313312],[-114.61093256409882,34.907401004982844],[-114.74136225657432,36.013515549130901],[-114.04287895356211,36.181771170783719],[-114.04026970053289,37.00415279395196],[-109.04667026687812,37.000845909060189],[-109.04674717117793,36.291843196466999]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"California","type":"State","postal":"CA","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-124.22840851691392,42.000767974792069],[-120.00080886833911,42.00055923454974],[-120.0000617979981,39.000258827128619],[-114.61054254943551,34.991116828488856],[-114.12506767740048,34.317182476608423],[-114.70170161053014,33.417808663003157],[-114.51646661811242,32.772757368865157],[-117.12827396872153,32.533365269889316],[-117.46742193087775,33.295486880993209],[-118.50619577421476,34.017409515954242],[-120.64469561165143,34.579986441711725],[-120.65908770204419,35.122403454590795],[-121.87741111277737,36.331064389369416],[-121.80744467944429,36.85123408694669],[-122.49923730837315,37.542614728555151],[-122.44562402507796,37.798002921891182],[-122.07052879592547,37.478278788600932],[-122.31423302885486,38.007347412298913],[-121.52534322825329,38.055917970792365],[-122.99879116043742,37.988615722131243],[-123.70112517160433,38.907292514988484],[-123.83292815514784,39.775509100842697],[-124.35653657355942,40.371077971218085],[-124.06851898444742,41.384171271583284],[-124.22840851691392,42.000767974792069]]],[[[-119.88239272612657,34.079680026142171],[-119.56912855402024,34.052961275122939],[-119.54928724466961,34.028154145270364],[-119.80958083370058,33.967795256249104],[-119.88239272612657,34.079680026142171]]],[[[-120.30660233703544,34.024869233035687],[-120.35970475605333,34.022265473170734],[-120.4415583968711,34.032933198187052],[-120.36773576221907,34.073296969258053],[-120.30660233703544,34.024869233035687]]],[[[-120.04357315219698,33.918862148913703],[-120.16713089616815,33.918082119587083],[-120.25190690037866,34.013838959177406],[-120.07184097554094,34.026506195988759],[-120.04357315219698,33.918862148913703]]],[[[-118.34796517735842,33.38576154264004],[-118.44630380415663,33.317086002910898],[-118.56942209498602,33.46418195578778],[-118.55484873017228,33.477079905498556],[-118.34796517735842,33.38576154264004]]],[[[-119.43802869550356,33.217198303787981],[-119.54367872394783,33.224614075555252],[-119.57517652788377,33.278326235807327],[-119.47879896073069,33.274634829416513],[-119.43802869550356,33.217198303787981]]],[[[-118.35039315596667,32.827612107285816],[-118.47320382959684,32.838928025686243],[-118.59016977644154,33.011160698272022],[-118.55710092752383,33.032660943232813],[-118.35039315596667,32.827612107285816]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Colorado","type":"State","postal":"CO","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-108.6687900034397,37.000845909060189],[-109.04667026687812,37.000845909060189],[-109.04639011550024,41.000858268679792],[-102.02500557031193,41.000627555780369],[-102.01278327980663,37.000845909060189],[-108.6687900034397,37.000845909060189]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Connecticut","type":"State","postal":"CT","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-72.807699768260164,42.034078522937762],[-71.801637718163192,42.022707672894626],[-71.842353051747608,41.335512822461482],[-73.630465912927463,40.991860465602173],[-73.480568446271818,42.055567781570034],[-72.807699768260164,42.034078522937762]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"District of Columbia","type":"Federal District","postal":"DC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-76.931242406029583,38.888220248635918],[-77.019737282452269,38.806525909582035],[-77.122052960183439,38.943536412855451],[-77.042116433696592,39.01178348577136],[-76.931242406029583,38.888220248635918]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Delaware","type":"State","postal":"DE","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-75.128484768900464,38.632447533800843],[-75.707024830032523,38.455073259456441],[-75.676823412864806,39.827232735628286],[-75.421028725372636,39.81542243244337],[-75.573881514406622,39.476944636328341],[-75.128484768900464,38.632447533800843]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Florida","type":"State","postal":"FL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-82.399280944696827,30.575030234247265],[-82.112274097810882,30.371354689368289],[-81.957081220796994,30.814290497280567],[-81.503939113667244,30.731431607401007],[-80.524123402462124,28.486089724873011],[-80.456887071772258,27.900672222072359],[-80.838189576552168,28.757649793825962],[-80.041307221934773,26.568612845086449],[-80.484638537674641,25.229829835031552],[-81.110496715846111,25.13805004637419],[-80.940406377326426,25.264217043374572],[-81.715502842440884,25.983173369628702],[-81.828640053787979,26.687056453120334],[-82.039610520820247,26.552045461641953],[-82.01325431864295,26.961560858123107],[-82.290065852639984,26.870813784348869],[-82.714588573912366,27.499583339584532],[-82.405762878537843,27.862901224537751],[-82.843513139377322,27.846004251236934],[-82.65148310275508,28.887486224560078],[-83.694371326131858,29.925979916519211],[-84.309682628901001,30.064759218688224],[-85.318941700604299,29.680204760659265],[-85.603531555210537,30.28678193223584],[-86.454433687279248,30.399128127927767],[-86.257393884840909,30.493017291665595],[-87.475766734052513,30.294274608302914],[-87.607437881653496,30.929328343465798],[-85.007281532465399,31.00167331692866],[-84.883938021900846,30.720939663641403],[-82.399280944696827,30.575030234247265]]],[[[-84.907888218126971,29.642631517038453],[-85.008270302034376,29.606618332070909],[-85.116738323750226,29.632787766662943],[-84.737171658880285,29.732444752886437],[-84.907888218126971,29.642631517038453]]],[[[-80.18675522553005,27.278439532320434],[-80.170506445613327,27.204798172089369],[-80.436891953821998,27.8505525912542],[-80.395759139752911,27.794555274664944],[-80.18675522553005,27.278439532320434]]],[[[-82.083764575238959,26.552331106184099],[-82.085214770606783,26.493598193787363],[-82.169139334355123,26.700723445829198],[-82.121129078617429,26.665534235502463],[-82.083764575238959,26.552331106184099]]],[[[-82.037182542211994,26.453629930543954],[-82.144958425229575,26.44665361191845],[-82.201384208632049,26.548046438051898],[-82.116064381158594,26.460913866368685],[-82.037182542211994,26.453629930543954]]],[[[-80.381828475158997,25.142290769192201],[-80.580582144850226,24.954237783502933],[-80.257056741883716,25.347603277024263],[-80.381828475158997,25.142290769192201]]],[[[-80.638304315020903,24.903184314758519],[-80.665143915654127,24.898449207156006],[-80.614606804351283,24.937934071943488],[-80.638304315020903,24.903184314758519]]],[[[-80.829400513716891,24.803681137134646],[-80.848362916783998,24.803681137134646],[-80.785191527655456,24.835277818027464],[-80.786773558965805,24.821039536234323],[-80.829400513716891,24.803681137134646]]],[[[-81.044194223082499,24.716812237336484],[-81.137369275464962,24.710506084752183],[-80.930485722651113,24.759472151073211],[-80.988922004177155,24.727875470180393],[-81.044194223082499,24.716812237336484]]],[[[-81.33479359940236,24.650487771915778],[-81.379035544449437,24.636271462779732],[-81.420091454218721,24.749990949539651],[-81.322313130176269,24.68508372050114],[-81.33479359940236,24.650487771915778]]],[[[-81.566693022311114,24.599895728970225],[-81.631501374392741,24.590019019609088],[-81.562298490893482,24.689137675733917],[-81.532228909668291,24.61415598342046],[-81.566693022311114,24.599895728970225]]],[[[-81.783837805985158,24.544579564750705],[-81.811413490630841,24.557807104317803],[-81.738651036683294,24.575429175302531],[-81.739760655866249,24.554500219426018],[-81.783837805985158,24.544579564750705]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Georgia","type":"State","postal":"GA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-83.121357388257479,35.000554084708227],[-83.355574926489055,34.708317745435295],[-80.872346071995764,32.029565201842743],[-81.380947165616107,31.353257802996794],[-81.288464251931913,31.26390599294767],[-81.441767480436212,31.199723861593071],[-81.520396633826309,30.874649386301826],[-81.503939113667244,30.731431607401007],[-81.957081220796994,30.814290497280567],[-82.112274097810882,30.371354689368289],[-84.883938021900846,30.720939663641403],[-85.067442667572877,31.117579083068861],[-84.921533238178739,32.285887233105029],[-85.623603577460599,35.000861701907468],[-83.121357388257479,35.000554084708227]]],[[[-81.418981835035765,30.971438940775315],[-81.46349843829644,30.727762173667287],[-81.484636134415268,30.897830539529878],[-81.418981835035765,30.971438940775315]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Hawaii","type":"State","postal":"HI","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-177.37146733737362,28.200500114369262],[-177.39048467208346,28.196369254836682],[-177.35410413175521,28.217034538828116],[-177.36154599605277,28.207113884152804],[-177.37146733737362,28.200500114369262]]],[[[-159.37277265053376,21.932360226821203],[-159.60885786461782,21.909519649778019],[-159.78918196817634,22.041806031777469],[-159.3520524348996,22.219575813949476],[-159.37277265053376,21.932360226821203]]],[[[-160.18000961980397,21.841074822948315],[-160.22091172097365,21.897269893451352],[-160.04872848686631,22.004650268641342],[-160.08004226979912,21.907443233683196],[-160.18000961980397,21.841074822948315]]],[[[-157.79935462176263,21.456652200861882],[-157.63541113406336,21.307644626818316],[-158.27312356073392,21.585247176470517],[-157.96249610747816,21.701361682853047],[-157.79935462176263,21.456652200861882]]],[[[-157.21360203594139,21.215392426033546],[-156.95235263632708,21.199692962544034],[-156.71216128194965,21.155088468655009],[-157.29031407500054,21.112582363517902],[-157.21360203594139,21.215392426033546]]],[[[-156.48682619034599,20.932571370322904],[-156.27753663158097,20.951281087833493],[-155.98985412548956,20.757130689802253],[-156.40879304527942,20.605178779708865],[-156.69776919155689,20.949061849467597],[-156.48682619034599,20.932571370322904]]],[[[-156.849594758872,20.772632399377969],[-156.97341068156396,20.757548170286924],[-157.050564920347,20.912466389087214],[-156.88054873954499,20.904819904420521],[-156.849594758872,20.772632399377969]]],[[[-155.58132475199525,19.012018318543994],[-155.88130645289178,19.070520518041306],[-156.04868591484319,19.749959020522326],[-155.83162078205109,20.275819636285433],[-154.80418757635374,19.524442654497676],[-155.58132475199525,19.012018318543994]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Iowa","type":"State","postal":"IA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-91.215128448963469,40.649559427153804],[-91.441952188084855,40.379449553568691],[-91.731529835850125,40.624653420344345],[-95.765028524872136,40.601867774943884],[-96.621769890562035,42.729535092436095],[-96.598621696319626,43.497501430325428],[-91.245252961831383,43.502412319184629],[-91.069581568411294,42.788553649374961],[-90.14943260752915,42.053711092046058],[-90.436670167314517,41.560359022444942],[-91.048114282436131,41.369098028820787],[-91.215128448963469,40.649559427153804]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Idaho","type":"State","postal":"ID","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-114.75368891720079,46.734568204200343],[-114.33012200651174,46.637646813784329],[-114.52923273188065,45.575719283040655],[-113.80227286528215,45.601097701977494],[-112.97007495755976,44.454498537144474],[-111.37252545814152,44.746240491632904],[-111.05143352694752,44.498883304462623],[-111.0502964419432,42.000877838077514],[-117.01667484337061,42.00055923454974],[-116.91242007865142,44.199472892650391],[-117.20170109554599,44.436206300118556],[-116.47704286477747,45.641087937878012],[-117.03899906297221,46.39655183388416],[-117.03905399461493,48.993082694652713],[-116.04849365409368,48.993082694652713],[-116.04901001153524,48.004719619840273],[-114.75368891720079,46.734568204200343]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Illinois","type":"State","postal":"IL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.175730101513281,41.943748929648223],[-87.521085339296917,41.760760641417761],[-87.529456921647508,38.7422888465847],[-88.471666430246202,37.08838497489954],[-89.300826618126152,37.012051964175157],[-89.52342062075806,37.644523912130182],[-90.365775389219479,38.254254159998908],[-90.134205556167032,38.846669954082159],[-90.577075446108054,38.909610630311278],[-91.466814249580153,39.942863843554875],[-91.048114282436131,41.369098028820787],[-90.176612784347242,41.883642726183467],[-90.650584970396594,42.512983570503422],[-87.039126092396003,42.49280168496793],[-87.175730101513281,41.943748929648223]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Indiana","type":"State","postal":"IN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-84.901241489357801,38.769567900359704],[-85.405426078903417,38.729962185958243],[-86.021330643413933,37.984353026656123],[-86.361445402482033,38.178986823143305],[-86.599233497490431,37.874797358414412],[-88.041991120886635,37.788851310213957],[-87.517679577448249,38.811821319940293],[-87.521085339296917,41.760760641417761],[-84.796398956061495,41.759727926534623],[-84.901241489357801,38.769567900359704]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Kansas","type":"State","postal":"KS","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-95.116203426879238,39.872089915073815],[-94.622384438314967,39.124404339676886],[-94.618066811197139,37.000845909060189],[-102.01278327980663,37.000845909060189],[-102.02448921287036,40.001124343824216],[-95.116203426879238,39.872089915073815]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Kentucky","type":"State","postal":"KY","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-84.660542017285223,39.09446659439422],[-83.689877917757315,38.649531274686922],[-82.880438189614026,38.71025271255013],[-81.965277021890898,37.539725324148051],[-83.730384511099402,36.586815131547411],[-89.450328576954206,36.500023136049066],[-89.046207467788207,37.182977263664199],[-88.471666430246202,37.08838497489954],[-87.892115626888099,37.912985836433691],[-86.599233497490431,37.874797358414412],[-86.361445402482033,38.178986823143305],[-86.021330643413933,37.984353026656123],[-84.660542017285223,39.09446659439422]]],[[[-89.487220668205268,36.503066349055771],[-89.557313444316605,36.501077823589299],[-89.549644986992817,36.553065130259952],[-89.519520474124917,36.554822942827002],[-89.487220668205268,36.503066349055771]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Louisiana","type":"State","postal":"LA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-91.176885039301482,31.001233863786894],[-89.735313939388035,31.001156959487091],[-89.520860806207295,30.192629096612947],[-90.225282219797592,30.379286818577128],[-90.413060547273261,30.140301213757425],[-89.400736289906149,30.046049501177635],[-89.720877903681085,29.619307541539342],[-89.021378365278551,29.142720609296489],[-89.376148886624463,28.981331442983731],[-90.15906761766233,29.537140790358052],[-90.135864491777198,29.13607388052732],[-90.751021985946721,29.130888333454507],[-91.893171687719388,29.83601287207162],[-92.260823679283263,29.556850263766165],[-93.826463387445187,29.725138844404611],[-93.530590573424149,31.046189920189335],[-94.043300553919991,31.999231948732501],[-94.041306535289237,33.011995659241379],[-91.149957548039893,33.015917778531616],[-90.93764674892526,32.27732888316919],[-91.65644926657977,31.001805152871185],[-91.176885039301482,31.001233863786894]]],[[[-89.223955277303119,30.084051211611651],[-89.220439652169006,30.037601014527226],[-89.342003377509428,30.062847597521554],[-89.18467915275798,30.168678900386823],[-89.223955277303119,30.084051211611651]]],[[[-88.827469666475267,29.807690117084945],[-88.855660585519416,29.775862723292704],[-88.866866640634399,30.056717226193953],[-88.812583191298017,29.933362729300839],[-88.827469666475267,29.807690117084945]]],[[[-88.88930072352143,29.712581470878703],[-88.943584172857811,29.660231615366101],[-88.872656435777131,29.752989187263893],[-88.88930072352143,29.712581470878703]]],[[[-91.793690482752609,29.500732097562917],[-91.830846245888736,29.486471843112682],[-92.006649475251351,29.610287765804642],[-91.875231013206886,29.640983567756848],[-91.793690482752609,29.500732097562917]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Massachusetts","type":"State","postal":"MA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-70.78133738627308,42.721240414385278],[-71.04617382215703,42.331115887784478],[-70.426676728212598,41.757299947926384],[-70.001406936599224,41.826184227897869],[-70.10894112038882,42.078309481656305],[-69.977896193514852,41.96126113734752],[-69.948639600601922,41.677143694868676],[-71.168539549481167,41.489409312707153],[-71.387134528523035,42.016862946109171],[-73.507287197291063,42.080012362580646],[-73.25332722666576,42.752221860879644],[-70.78133738627308,42.721240414385278]]],[[[-70.509898166934121,41.376338019331342],[-70.78531443720604,41.327448857310117],[-70.829182847082606,41.359001592888745],[-70.615993141684442,41.457208383744415],[-70.509898166934121,41.376338019331342]]],[[[-69.977940138829027,41.265595827606859],[-70.055097124194205,41.249467897304129],[-70.233075646608555,41.28633801589811],[-70.041199418585933,41.397475715450184],[-69.977940138829027,41.265595827606859]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Maryland","type":"State","postal":"MD","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-75.784720145496365,39.722357243346352],[-75.707024830032523,38.455073259456441],[-75.037660790826436,38.45558961689801],[-75.659256273522786,37.953964841903158],[-76.341177686254781,38.70964846448021],[-75.958919370891536,39.585050109202257],[-76.570407431327325,39.269335985830594],[-76.394087844523142,38.368973402656366],[-76.668548304211726,38.537514668851315],[-76.341177686254781,38.087031253229242],[-77.232520493694309,38.407711197102827],[-76.931242406029583,38.888220248635918],[-77.883251719689611,39.61071417268127],[-78.777769576078384,39.62662237641311],[-79.487980784811413,39.210910690633085],[-79.477499827380356,39.722796696488103],[-75.784720145496365,39.722357243346352]]],[[[-75.225790680815521,38.040339356916832],[-75.252476472849125,38.037449952509746],[-75.097887843905156,38.298078624561299],[-75.136230130524055,38.18053589546804],[-75.225790680815521,38.040339356916832]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Maine","type":"State","postal":"ME","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-68.937183263189809,47.211254013400094],[-68.235497445406992,47.345946401350687],[-67.806788932959307,47.082812846391079],[-67.802240592942056,45.727517384534394],[-66.987022055984554,44.827704117787391],[-68.05661804405203,44.3843178704048],[-68.450598771971826,44.507595462998069],[-68.532534810253694,44.258645258188892],[-68.762720365909573,44.570766852126638],[-69.226057785928248,43.986458968508913],[-70.178814169929268,43.766369848785075],[-70.733096417635963,43.070034373003239],[-71.084549067761557,45.294007846512955],[-70.421095673312195,45.73824004119345],[-70.007680130197897,46.708937099706986],[-69.242877854929262,47.4629947456595],[-68.937183263189809,47.211254013400094]]],[[[-68.187256476769875,44.332484372333738],[-68.315104382037504,44.249702386753995],[-68.41170716892573,44.294350825957196],[-68.29943787753362,44.456509035268027],[-68.187256476769875,44.332484372333738]]],[[[-68.623193993399568,44.196067130801708],[-68.701713283504219,44.182674796306458],[-68.703031642929503,44.232003411469464],[-68.676730372394942,44.256217279580625],[-68.623193993399568,44.196067130801708]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Michigan","type":"State","postal":"MI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.743888082171168,48.060530168844281],[-84.875972933706379,46.899901462460434],[-84.561752951016715,46.45737214870428],[-84.149479986071,46.542768880477524],[-83.977785643583886,46.084913638402355],[-82.551079046190594,45.347357457923096],[-82.137850270661545,43.570879118671428],[-83.12166500545672,41.950000150589801],[-87.221257447000013,41.760727682432133],[-87.032490349955367,44.091466296733387],[-86.264524012066019,45.226903351765628],[-87.115272335535124,45.452364786147541],[-87.653613420524337,45.121797146584271],[-88.151744543042156,45.945409238549445],[-90.412588135145867,46.585274985614632],[-89.498382778006075,47.997897109814403],[-88.378194746993046,48.303097316769367],[-87.743888082171168,48.060530168844281]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Minnesota","type":"State","postal":"MN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-93.377886099825503,48.616537270132397],[-91.518307171466319,48.05831093047837],[-89.498382778006075,47.997897109814403],[-89.95767722912052,47.287136584654149],[-90.654023691230904,47.309098255413801],[-92.291645824013727,46.660718103726936],[-92.292629100418424,46.08437530830372],[-92.896520114665975,45.658578172920215],[-92.769809294402648,44.725849865855082],[-91.382691931918018,43.99079856828385],[-91.245252961831383,43.502412319184629],[-96.453618639030395,43.501170864059162],[-96.453668077508837,45.29733670406182],[-96.851060060441583,45.626003708786953],[-96.560845205620765,46.138241277155402],[-97.225737809109404,48.993181571609597],[-95.162043882729478,48.99176433522743],[-94.939340016812125,49.349413274651909],[-94.620884804468702,48.742605390175896],[-93.377886099825503,48.616537270132397]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Missouri","type":"State","postal":"MO","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-91.466814249580153,39.942863843554875],[-90.577075446108054,38.909610630311278],[-90.134205556167032,38.846669954082159],[-90.365775389219479,38.254254159998908],[-89.154312940662095,36.992111777867635],[-89.70477194603545,36.001573410003459],[-90.381068358552852,35.992740401854007],[-90.162242666611562,36.500869083346956],[-94.618379921560646,36.500869083346956],[-94.622384438314967,39.124404339676886],[-95.05793743344563,39.508958797705844],[-94.929935719578367,39.861499094357328],[-95.765028524872136,40.601867774943884],[-91.731529835850125,40.624653420344345],[-91.466814249580153,39.942863843554875]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Mississippi","type":"State","postal":"MS","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-88.444233567871592,31.139705548756666],[-88.399585128668392,30.370805372941078],[-89.520860806207295,30.192629096612947],[-89.735313939388035,31.001156959487091],[-91.65644926657977,31.001805152871185],[-90.93764674892526,32.27732888316919],[-91.207481964296775,33.675668780261617],[-90.293705073970216,35.001114387463986],[-88.084771884237341,34.933109013776033],[-88.444233567871592,31.139705548756666]]],[[[-88.558106863231146,30.215909126797882],[-88.659236017479543,30.225599068573771],[-88.722846859749851,30.264248972391911],[-88.573993094305905,30.22915863902206],[-88.558106863231146,30.215909126797882]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Montana","type":"State","postal":"MT","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-104.01801345883915,46.896462741626124],[-104.00547805797034,45.000969505256307],[-111.05086223786323,45.001057395884658],[-111.05143352694752,44.498883304462623],[-111.37252545814152,44.746240491632904],[-112.85385608105605,44.398325439298503],[-113.80227286528215,45.601097701977494],[-114.52923273188065,45.575719283040655],[-114.33686761223782,46.659223963044951],[-115.71331724970615,47.446745965742764],[-116.04901001153524,48.004719619840273],[-116.04849365409368,48.993082694652713],[-104.03392715573527,48.993137626295436],[-104.01801345883915,46.896462741626124]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"North Carolina","type":"State","postal":"NC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-75.924872738733384,36.382996764397362],[-75.820074150751253,36.112831959169512],[-76.733631314506951,36.229155205794399],[-76.726215542739681,35.957595136841448],[-76.06977142590145,35.970306318966962],[-76.083570254552839,35.690539462591587],[-75.812010185599888,35.955738447317501],[-76.103510440860362,35.380296530834883],[-77.039996072287579,35.527392483711765],[-76.512948933041713,35.270433245393932],[-76.974957007306543,35.025174446975555],[-76.439801957595122,34.842911256429005],[-77.412267815004256,34.730795773636515],[-78.013340835980244,33.911808925988396],[-78.564272253480979,33.876663660975836],[-79.653555742299474,34.796790649200901],[-80.784081908472501,34.828629029321689],[-81.087315562618073,35.155714002736488],[-84.324689953692229,34.988095588139231],[-83.871306147334508,35.514890041828593],[-82.051365892362426,36.122862477130269],[-81.658890291453162,36.610578560188287],[-75.924872738733384,36.382996764397362]]],[[[-75.558687422030147,35.879361491278942],[-75.534198895705359,35.8190795065575],[-75.809790947233978,36.271046076533025],[-75.889057307679636,36.550505315709174],[-75.558687422030147,35.879361491278942]]],[[[-75.635690598795705,35.855894693508759],[-75.65077482788675,35.835591958359274],[-75.717176197607259,35.946125409841414],[-75.64886320672008,35.910386883087469],[-75.635690598795705,35.855894693508759]]],[[[-75.544119550380671,35.240099992283689],[-75.690105884074612,35.221566056029801],[-75.503525066410248,35.769157629653137],[-75.464743326649582,35.44864248070769],[-75.544119550380671,35.240099992283689]]],[[[-75.781962577031791,35.190200088036406],[-75.96367645115113,35.118843884142507],[-75.984198912871491,35.123073620631985],[-75.864920343868249,35.174127089376384],[-75.781962577031791,35.190200088036406]]],[[[-76.503643512764853,34.642949090597938],[-76.437033402802015,34.756328001172989],[-76.207386177244786,34.938898808918765],[-76.357712110713649,34.803668090869508],[-76.503643512764853,34.642949090597938]]],[[[-76.546226522201778,34.654858270739737],[-76.607793907362876,34.663570429275197],[-76.673920618869786,34.700154903327032],[-76.622273888384001,34.694551875769548],[-76.546226522201778,34.654858270739737]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"North Dakota","type":"State","postal":"ND","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-96.570480215753932,46.019237366365758],[-104.0110865786921,45.943058164241023],[-104.03392715573527,48.993137626295436],[-97.225737809109404,48.993181571609597],[-96.570480215753932,46.019237366365758]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Nebraska","type":"State","postal":"NE","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-103.33663037620583,43.001380805931177],[-98.441765077176839,43.001095161389031],[-96.804527465893059,42.701421077691748],[-96.383751082654214,42.417776047340283],[-95.34668012024153,40.001486892666179],[-102.02448921287036,40.001124343824216],[-102.02500557031193,41.000627555780369],[-104.02165542675152,41.000858268679792],[-104.02886245827645,43.001402778588272],[-103.33663037620583,43.001380805931177]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Hampshire","type":"State","postal":"NH","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-71.084549067761557,45.294007846512955],[-70.806111557140014,42.876762881255502],[-72.466859911508166,42.730315121762715],[-72.031208039420605,44.300733882841314],[-71.084549067761557,45.294007846512955]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Jersey","type":"State","postal":"NJ","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-74.241514520221486,40.456265962749001],[-73.972250593934262,40.400323577802453],[-74.079916613666384,39.788110419682766],[-74.064590685347383,39.993115310315574],[-74.954307516162388,38.949952428725197],[-75.524245282044404,39.490172175895452],[-74.734888562479711,40.154504476628347],[-75.189019439178423,40.5958143079161],[-75.1230355499426,40.999001579155845],[-74.699051158768867,41.357298711964432],[-73.910078960703217,40.992255973429764],[-74.241514520221486,40.456265962749001]]],[[[-74.133222279762336,39.680784976135499],[-74.250501336970558,39.529371396140789],[-74.106767200628155,39.746439275515002],[-74.133222279762336,39.680784976135499]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Mexico","type":"State","postal":"NM","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-106.56635828261329,31.819528572736743],[-108.21184113346942,31.779329596593897],[-108.21445038649864,31.329428456384647],[-109.04780735188244,31.327879384059941],[-109.04667026687812,37.000845909060189],[-103.00083873741983,37.000845909060189],[-103.06564159633717,32.002747573866614],[-106.66826197302404,32.000945815985375],[-106.56635828261329,31.819528572736743]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Nevada","type":"State","postal":"NV","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-114.0619237540933,36.175212332642886],[-114.71575861790231,36.08498161631023],[-114.61054254943551,34.991116828488856],[-120.0000617979981,39.000258827128619],[-120.00080886833911,42.00055923454974],[-114.04259330901996,42.001108550976937],[-114.0619237540933,36.175212332642886]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New York","type":"State","postal":"NY","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-73.352182210905525,45.005418968316661],[-73.25332722666576,42.752221860879644],[-73.484139003048654,41.218958862937171],[-73.987082137468789,40.751391706429018],[-73.871967386983755,41.055163690673254],[-73.925327984722429,41.218057983996545],[-73.910078960703217,40.992255973429764],[-74.935367085752361,41.474369028930312],[-75.351342443417437,41.998416900483647],[-79.762957601941579,42.000899810734609],[-79.762023764015325,42.538977223838742],[-78.915076710222479,42.90913959147494],[-79.171849180955078,43.466574915473785],[-76.81996188420645,43.628788056427368],[-75.179384429045257,44.899378925209049],[-73.352182210905525,45.005418968316661]]],[[[-72.509783497129945,40.98602672514528],[-71.903206325553356,41.060700800259468],[-74.03203819387123,40.638682961895142],[-72.27413773618764,41.153040891672589],[-72.509783497129945,40.98602672514528]]],[[[-74.188131949825731,40.522854100054758],[-74.188153922482812,40.614600929726492],[-74.068754503865591,40.649306741597286],[-74.079707873424056,40.58646494232508],[-74.188131949825731,40.522854100054758]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Ohio","type":"State","postal":"OH","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-80.520278187471689,41.696237933878308],[-80.874312624805157,39.664294496990806],[-82.072272875581831,38.962949255392857],[-82.387064147355801,38.433990494980321],[-84.821711457027092,39.091983684143258],[-84.796113311519349,41.701434467279654],[-83.12166500545672,41.950000150589801],[-82.439073426683535,41.674869524860043],[-80.52076158592763,42.324392254715491],[-80.520278187471689,41.696237933878308]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Oklahoma","type":"State","postal":"OK","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-94.618303017260843,36.625882515850222],[-94.484148959408898,33.648433671800802],[-95.215860413102718,33.95903915239947],[-97.119000134139242,33.734764241500301],[-99.999340820187399,34.586721061109259],[-100.00244445800111,36.500902042332584],[-103.0002949141569,36.501231632188905],[-103.00083873741983,37.000845909060189],[-94.618066811197139,37.000845909060189],[-94.618303017260843,36.625882515850222]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Oregon","type":"State","postal":"OR","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-123.96294586030294,46.225450753138432],[-123.04227504881496,46.160027166658352],[-122.72591273205919,45.673750292639596],[-122.20253502654704,45.591067184016737],[-116.89647891593393,46.002098693836984],[-116.47704286477747,45.641087937878012],[-117.20170109554599,44.436206300118556],[-116.91242007865142,44.199472892650391],[-117.01667484337061,42.00055923454974],[-124.22840851691392,42.000767974792069],[-124.53962923191105,42.812866394443034],[-124.14871918281932,43.691728732656486],[-123.96294586030294,46.225450753138432]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Pennsylvania","type":"State","postal":"PA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-75.320877354364654,39.864696115963653],[-80.519443226502332,39.722511051945958],[-80.52076158592763,42.324392254715491],[-79.762023764015325,42.538977223838742],[-79.762957601941579,42.000899810734609],[-75.351342443417437,41.998416900483647],[-74.699051158768867,41.357298711964432],[-75.192282378756033,40.689868266582096],[-74.734888562479711,40.154504476628347],[-75.320877354364654,39.864696115963653]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Rhode Island","type":"State","postal":"RI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-71.34072827675277,41.797916404553888],[-71.522859631356781,41.37897473818191],[-71.842353051747608,41.335512822461482],[-71.800835716179478,42.011963043578504],[-71.34072827675277,41.797916404553888]]],[[[-71.241378907728517,41.491969127257931],[-71.346232427353371,41.469403208428361],[-71.232051514794577,41.654303117825492],[-71.241378907728517,41.491969127257931]]],[[[-71.365359625348631,41.485267466846039],[-71.393078132265387,41.466744516920699],[-71.38398145223087,41.570532362676772],[-71.354472173761437,41.542297498318447],[-71.365359625348631,41.485267466846039]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"South Carolina","type":"State","postal":"SC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-81.051170541708004,35.088972056831111],[-80.784081908472501,34.828629029321689],[-79.653555742299474,34.796790649200901],[-78.564272253480979,33.876663660975836],[-79.940727384113572,32.667156778899312],[-80.634195428145404,32.511733188986],[-80.579340689724745,32.287326442144305],[-80.802560913083667,32.448045442415875],[-80.872346071995764,32.029565201842743],[-83.355574926489055,34.708317745435295],[-82.39253533897076,35.21093128999911],[-81.051170541708004,35.088972056831111]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"South Dakota","type":"State","postal":"SD","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-104.0110865786921,45.943058164241023],[-96.556401235724678,45.942772519698877],[-96.851060060441583,45.626003708786953],[-96.453668077508837,45.29733670406182],[-96.480952624448094,42.511258716921986],[-98.441765077176839,43.001095161389031],[-104.02886245827645,43.001402778588272],[-104.0110865786921,45.943058164241023]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Tennessee","type":"State","postal":"TN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.868714747089172,36.675046336085046],[-83.730384511099402,36.586815131547411],[-81.658890291453162,36.610578560188287],[-82.051365892362426,36.122862477130269],[-83.871306147334508,35.514890041828593],[-84.324689953692229,34.988095588139231],[-90.293705073970216,35.001114387463986],[-89.557313444316605,36.501077823589299],[-87.868714747089172,36.675046336085046]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Texas","type":"State","postal":"TX","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-102.81291758767308,36.501209659531824],[-100.00244445800111,36.500902042332584],[-99.999340820187399,34.586721061109259],[-99.15750790233183,34.223282326542048],[-97.119000134139242,33.734764241500301],[-95.215860413102718,33.95903915239947],[-94.047327043331393,33.55443464477753],[-94.043300553919991,31.999231948732501],[-93.530590573424149,31.046189920189335],[-93.710629032440508,30.112813419740093],[-93.890464244378805,29.689356372336491],[-94.759609174994992,29.384255042338424],[-94.526265049882682,29.547962323973991],[-95.022874565897141,29.702320240018523],[-94.888286548067711,29.370555090643933],[-95.853419031173658,28.64034876396066],[-96.640040154930873,28.708760631804736],[-96.421110092868417,28.457338503073117],[-97.15649098029597,28.144359975508934],[-97.439108788928536,27.328284504924994],[-97.768445959694887,27.457494714932096],[-97.146235242600056,25.961464384425568],[-99.107767299848433,26.446917283803501],[-99.505318584545066,27.548340665663218],[-101.38034429083724,29.742552175146997],[-102.34307626115631,29.864972834113857],[-103.09000927304798,29.041866113261705],[-103.42293348008397,29.070683253032854],[-104.40062333671581,29.573747237066982],[-104.91785419140754,30.583357871283695],[-106.66826197302404,32.000945815985375],[-103.06564159633717,32.002747573866614],[-103.04215282590989,36.500616397790438],[-102.81291758767308,36.501209659531824]]],[[[-95.039694634898154,29.145917630902829],[-95.089665950280974,29.136304593426743],[-94.767618208503634,29.339035314050932],[-94.864951586240053,29.252891511936681],[-95.039694634898154,29.145917630902829]]],[[[-96.764399900885749,28.152566762931372],[-96.755610838050472,28.202433708193013],[-96.403564926183492,28.38157678143304],[-96.413331772259198,28.337807248513357],[-96.764399900885749,28.152566762931372]]],[[[-97.014355354756731,27.901628032655694],[-96.978671759645508,28.013842392405081],[-96.85741565150434,28.132912221165981],[-96.83976611469825,28.088802112061444],[-97.014355354756731,27.901628032655694]]],[[[-97.353613180198394,27.300060626895217],[-97.250907487803914,27.541188565781013],[-97.060558359448933,27.822021096025182],[-97.384825339592169,27.242525224309787],[-97.353613180198394,27.300060626895217]]],[[[-97.17070179626775,26.159383093147454],[-97.402084861734949,26.820507385945461],[-97.385989890417846,27.196503494038581],[-97.351234640068597,26.801468078578552],[-97.17070179626775,26.159383093147454]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Utah","type":"State","postal":"UT","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-113.66853628791489,42.001075591991309],[-111.0502964419432,42.000877838077514],[-111.04998882474398,41.000858268679792],[-109.04639011550024,41.000858268679792],[-109.04667026687812,37.000845909060189],[-114.04026970053289,37.00415279395196],[-114.04259330901996,42.001108550976937],[-113.66853628791489,42.001075591991309]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Virginia","type":"State","postal":"VA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.948598401869887,39.216315964276788],[-77.053047830597976,38.915301548497126],[-77.313698475306623,38.396625991601837],[-76.264284372774654,37.893551021239176],[-76.49248140296406,37.682218005364973],[-76.939976537222137,38.09545776722257],[-77.111099590624974,38.165682379276433],[-76.549456502793731,37.669144274397496],[-76.305570995443361,37.571508772626117],[-76.453930376102832,37.273537569853175],[-76.75769137401852,37.505436992761929],[-76.338277295519134,37.013117638043937],[-76.63089815629111,37.221704071782128],[-77.25088963502003,37.329194310257563],[-76.487856158646991,36.897025104318487],[-75.999414977905062,36.912658649836729],[-75.857427667801176,36.550582220008991],[-83.667520739170087,36.605030464273526],[-81.965277021890898,37.539725324148051],[-81.589017241912728,37.208070038058906],[-80.371182722799773,37.47259885674363],[-79.639603105048479,38.572451193621532],[-79.240272035127703,38.476518572774495],[-78.322221462997476,39.451851861933648],[-77.948598401869887,39.216315964276788]]],[[[-75.333050206391519,37.888277583538013],[-75.378544592892609,37.872050776278385],[-75.225790680815521,38.040339356916832],[-75.225845612458244,38.040262452617014],[-75.333050206391519,37.888277583538013]]],[[[-75.853999933295427,37.296641818781396],[-75.888156428739009,37.619156479521862],[-75.37596280568475,38.02499145594075],[-75.58710905397372,37.558720686200786],[-75.853999933295427,37.296641818781396]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Vermont","type":"State","postal":"VT","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-72.296692668688664,43.714953831198699],[-72.466859911508166,42.730315121762715],[-73.25332722666576,42.752221860879644],[-73.352182210905525,45.005418968316661],[-71.517520275684348,45.007561302382754],[-72.296692668688664,43.714953831198699]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Washington","type":"State","postal":"WA","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-117.03737308634769,48.833660081149361],[-116.89647891593393,46.002098693836984],[-122.64984888638415,45.627442917826244],[-122.94199733502873,46.114862370013583],[-124.07275970726545,46.279448557932653],[-123.88915069147225,46.660014978700104],[-124.11254669608789,46.86266879502449],[-123.84287627564453,46.963182714874421],[-124.13923798128576,46.95470126923837],[-124.70166109844362,48.151639791460468],[-124.70997774915151,48.380375151748524],[-122.7785976705924,48.137577290924014],[-122.65664393058867,47.881134410047764],[-122.82138392710738,47.793155891066647],[-123.13904263063134,47.386101432179373],[-122.53280054207536,47.919707409566058],[-122.67547999087752,47.612342895887906],[-122.57788843442032,47.293190051681961],[-123.02757534122296,47.138909039937232],[-122.7019350700117,47.110871929492703],[-122.35381677059922,47.371577505844073],[-122.24201439817024,48.010762100539523],[-122.7887765039885,48.993027763009991],[-117.03737308634769,48.833660081149361]],[[-122.85309047128564,47.204717147916369],[-122.84919032465248,47.216296738201834],[-122.88510463266313,47.274711047070781],[-122.90797267552766,47.226107529591701],[-122.85309047128564,47.204717147916369]]],[[[-123.04920192896201,48.993027763009991],[-123.06325893633417,48.977734793676603],[-123.08643459639794,48.993027763009991],[-123.04920192896201,48.993027763009991]]],[[[-122.78214076154786,48.672688395321273],[-122.89254237708748,48.594498695072929],[-123.00285060883446,48.65219889258654],[-122.89771144466746,48.710360515898969],[-122.78214076154786,48.672688395321273]]],[[[-123.01313381235174,48.500862216891619],[-123.13992153691487,48.507948398802569],[-123.16214138639531,48.606385902557662],[-123.11418606230032,48.613263344226255],[-123.01313381235174,48.500862216891619]]],[[[-122.82092250130853,48.431362702521682],[-122.92161220241516,48.456938875372316],[-122.91223537100277,48.537963048385024],[-122.86890529122485,48.548608800744262],[-122.82092250130853,48.431362702521682]]],[[[-122.57276880531877,48.15664955727658],[-122.36673669296708,47.985438613245378],[-122.38314477464769,47.923201062043091],[-122.74151881175607,48.225270165362986],[-122.62863428596549,48.384231353067491],[-122.57276880531877,48.15664955727658]]],[[[-122.49727075556375,47.594588988960652],[-122.57592188161092,47.619473023113045],[-122.54977441967598,47.703957889617129],[-122.50786706944453,47.682644412241586],[-122.49727075556375,47.594588988960652]]],[[[-122.39412561002752,47.395242057528066],[-122.50993249921082,47.357987417435027],[-122.4864711946049,47.488779658752492],[-122.46859094489939,47.489966182235236],[-122.39412561002752,47.395242057528066]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Wisconsin","type":"State","postal":"WI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-90.298846675728853,46.760715666135297],[-90.118550037991696,46.341664136477874],[-88.151744543042156,45.945409238549445],[-87.653613420524337,45.121797146584271],[-87.115272335535124,45.452364786147541],[-86.264524012066019,45.226903351765628],[-87.032490349955367,44.091466296733387],[-87.039126092396003,42.49280168496793],[-90.650584970396594,42.512983570503422],[-91.117591824149002,42.881651797457636],[-91.319916050617053,43.936284406048031],[-92.769809294402648,44.725849865855082],[-92.896520114665975,45.658578172920215],[-92.292629100418424,46.08437530830372],[-92.291645824013727,46.660718103726936],[-90.654023691230904,47.309098255413801],[-89.95767722912052,47.287136584654149],[-90.298846675728853,46.760715666135297]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"West Virginia","type":"State","postal":"WV","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-80.519553089787777,39.838186105186736],[-79.477499827380356,39.722796696488103],[-79.487980784811413,39.210910690633085],[-78.181135031834202,39.685739810308888],[-77.726641606293541,39.34643803955305],[-77.835790780379114,39.145212445939393],[-78.322221462997476,39.451851861933648],[-79.240272035127703,38.476518572774495],[-79.639603105048479,38.572451193621532],[-80.371182722799773,37.47259885674363],[-81.829266274514993,37.298597385262255],[-82.612778267294232,38.448217790444914],[-80.874312624805157,39.664294496990806],[-80.519080677660384,40.646955667288864],[-80.519553089787777,39.838186105186736]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Wyoming","type":"State","postal":"WY","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-110.79953898608851,41.000858268679792],[-111.04998882474398,41.000858268679792],[-111.05086223786323,45.001057395884658],[-104.03721206796996,45.001134300184475],[-104.02165542675152,41.000858268679792],[-110.79953898608851,41.000858268679792]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AF","name":"Afghanistan","type":"Sovereign country","postal":"AF","admin":"Afghanistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[61.210817091725744,35.650072333309225],[62.230651483005886,35.270663967422294],[62.98466230657661,35.404040839167621],[63.193538445900352,35.857165635718914],[64.546479119733903,36.312073269184268],[64.746105177677407,37.111817735333304],[65.588947788357842,37.305216783185642],[65.745630731066825,37.661164048812068],[68.135562371701383,37.023115139304309],[68.859445835245936,37.344335842430596],[69.196272820924378,37.151143500307427],[69.518785434857961,37.60899669041342],[70.116578403610333,37.588222764632093],[70.806820509732887,38.486281643216415],[71.348131137990265,38.258905341132163],[71.448693475230243,37.06564484308052],[71.844638299450594,36.738171291646921],[73.260055779925011,37.495256862939002],[74.980002475895418,37.419990139305895],[75.158027785140916,37.133030910789117],[71.846291945283923,36.509942328429858],[71.26234826038575,36.074387518857804],[71.613076206350712,35.153203436822864],[70.881803012988399,33.98885590263852],[69.930543247359594,34.02012014417511],[70.323594191371598,33.358532619758392],[69.687147251264861,33.105498969041236],[69.262522007122556,32.5019440780883],[69.317764113242561,31.901412258424443],[66.938891229118468,31.304911200479353],[66.381457553986024,30.738899237586452],[66.346472609324422,29.887943427036177],[64.148002150331251,29.340819200145972],[62.549856805272782,29.318572496044311],[60.874248488208792,29.829238999952608],[61.781221551363444,30.735850328081238],[61.699314406180832,31.379506130492672],[60.941944614511129,31.548074652628753],[60.536077915290775,32.981268825811568],[60.963700392506006,33.528832302376259],[60.528429803311582,33.676446031218006],[61.210817091725744,35.650072333309225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AO","name":"Angola","type":"Sovereign country","postal":"AO","admin":"Angola","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[16.326528354567046,-5.877470391466218],[17.472970004962292,-8.068551120641658],[19.016751743249671,-7.98824594486014],[19.417502475673217,-7.155428562044278],[20.09162153492062,-6.943090101756951],[20.601822950938327,-6.939317722199689],[20.51474816252653,-7.299605808138665],[21.728110792739756,-7.290872491081316],[22.155268182064333,-11.084801120653779],[23.912215203555746,-10.926826267137542],[24.016136508894704,-12.911046237848552],[21.933886346125945,-12.898437188369357],[21.887842644953878,-16.080310153876894],[23.215048455506093,-17.523116143465955],[21.377176141045595,-17.93063648851971],[18.956186964603631,-17.789094740472237],[18.263309360434221,-17.309950860262006],[14.058501417709039,-17.423380629142656],[13.462362094789967,-16.971211846588744],[11.73419884608515,-17.301889336824502],[12.175618930722266,-14.449143568583892],[13.633721144269828,-12.038644707897191],[13.738727654686926,-11.297863050993143],[12.875369500386569,-9.166933689005489],[13.236432732809874,-8.562629489784342],[12.72829837408392,-6.927122084178805],[12.227347039446443,-6.294447523629373],[13.375597364971895,-5.864241224799557],[16.326528354567046,-5.877470391466218]]],[[[12.436688266660923,-5.684303887559224],[12.182336866920281,-5.789930515163803],[11.914963006242118,-5.037986748884734],[12.62075971848455,-4.438023369976122],[12.995517205465205,-4.781103203961919],[12.468004184629763,-5.248361504744992],[12.436688266660923,-5.684303887559224]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AL","name":"Albania","type":"Sovereign country","postal":"AL","admin":"Albania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.59024743010491,41.855404161133606],[20.463175083099202,41.51508901627534],[20.999989861747224,40.580003973953978],[20.15001590341052,39.624997666983973],[19.406081984136733,40.250773423822466],[19.540027296637106,41.719986070312757],[19.304486118250793,42.19574514420782],[19.738051385179631,42.688247382165571],[20.52295,42.21787],[20.59024743010491,41.855404161133606]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AE","name":"United Arab Emirates","type":"Sovereign country","postal":"AE","admin":"United Arab Emirates","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[51.579518670463273,24.245497137951105],[51.794389275932872,24.019826158132506],[54.008000929587581,24.121757920828216],[56.070820753814559,26.055464178973981],[56.261041701080956,25.714606431576769],[56.396847365144005,24.924732163995486],[55.886232537668008,24.920830593357447],[55.981213820220461,24.130542914317829],[55.528631626208238,23.933604030853502],[55.006803012924905,22.496947536707136],[52.000733270074335,23.00115448657894],[51.579518670463273,24.245497137951105]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AR","name":"Argentina","type":"Sovereign country","postal":"AR","admin":"Argentina","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-65.5,-55.2],[-68.63335,-54.8695],[-68.634010227583161,-52.63637045887446],[-67.75,-53.85],[-65.05,-54.7],[-65.5,-55.2]]],[[[-64.964892137294584,-22.075861504812352],[-64.377021043542271,-22.798091322523547],[-63.986838141522469,-21.993644301035957],[-62.846468471921554,-22.034985446869456],[-60.84656470400995,-23.880712579038303],[-57.777217169817959,-25.16233977630904],[-57.633660040911138,-25.60365650808167],[-58.618173590719721,-27.123718763947124],[-56.486701626192996,-27.54849903738625],[-55.6958455063982,-27.387837009390822],[-54.788794928595053,-26.621785577096091],[-54.625290696823555,-25.739255466415486],[-54.130049607954419,-25.54763925547725],[-53.62834896504873,-26.124865004177437],[-53.648735317587892,-26.923472588816111],[-55.162286342984601,-27.881915378533421],[-57.625133429582917,-30.216294854454247],[-58.495442064026548,-34.431489760070107],[-57.225829637263644,-35.288026625307893],[-57.362358771378751,-35.977390232081504],[-56.737487352105461,-36.413125909166581],[-56.788285285048346,-36.901571547189334],[-57.749156867083428,-38.183870538079915],[-59.231857062401872,-38.720220228837206],[-62.335956997310149,-38.827707208004369],[-62.145994432205242,-40.676896661136738],[-62.745802781816991,-41.028761488612091],[-63.770494757732536,-41.166789239263665],[-64.732089809819712,-40.802677097335135],[-65.118035244391592,-41.064314874028881],[-64.978560553635845,-42.058000990569326],[-64.30340796574248,-42.359016208669502],[-63.75594784204236,-42.043686618824509],[-63.45805904809589,-42.563138116222362],[-65.181803961839705,-43.495380954767796],[-65.565268927661606,-45.036785577169795],[-66.509965786389358,-45.03962778094585],[-67.293793911392441,-45.551896254255198],[-67.580546434180093,-46.301772963242541],[-66.597066413017274,-47.033924655953811],[-65.641026577401448,-47.236134535511894],[-65.985088263600744,-48.133289076531142],[-67.166178961847663,-48.697337334996945],[-67.816087612566463,-49.869668877970419],[-69.138539191347803,-50.732510267947802],[-68.815561489523532,-51.771104011594105],[-68.149994879820412,-52.349983406127706],[-71.914803839796349,-52.009022305865926],[-72.329403856074038,-51.425956312872408],[-72.30997351753237,-50.677009779666356],[-72.975746832964631,-50.741450290734313],[-73.328050910114484,-50.378785088909872],[-73.415435757120036,-49.318436374712959],[-72.648247443314943,-48.878618259476788],[-72.331160854771952,-48.244238376661826],[-72.447355312780275,-47.738532810253531],[-71.552009446891248,-45.560732924177131],[-71.65931555854533,-44.973688653341441],[-71.222778896759735,-44.784242852559416],[-71.793622606071949,-44.207172133156106],[-71.464056159130507,-43.787611179378331],[-71.915423956983915,-43.408564548517418],[-72.148898078078531,-42.254888197601389],[-71.746803758415467,-42.051386407235995],[-71.915734015577556,-40.832339369470731],[-71.413516608349056,-38.916022230791114],[-70.814664272734717,-38.552995293940739],[-71.121880662709799,-36.658123874662337],[-70.364769253201672,-36.005088799789945],[-70.388049485949097,-35.169687595359449],[-69.817309129501467,-34.193571465798286],[-69.814776984319224,-33.273886000299854],[-70.535068935819453,-31.365010267870289],[-69.919008348251936,-30.336339206668313],[-70.013550381129875,-29.367922865518551],[-69.656130337183157,-28.459141127233693],[-68.295541551370405,-26.89933969493579],[-68.594799770772681,-26.506908868111267],[-68.417652960876126,-24.518554782816878],[-67.328442959244143,-24.025303236590915],[-67.106673550063618,-22.7359245744764],[-66.273339402924847,-21.832310479420684],[-64.964892137294584,-22.075861504812352]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AM","name":"Armenia","type":"Sovereign country","postal":"ARM","admin":"Armenia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[43.582745802592733,41.092143256182567],[44.972480096218078,41.248128567055595],[45.560351189970447,40.812289537105926],[45.35917483905817,40.561503811193461],[45.891907179555091,40.218475653639999],[45.610012241402927,39.899993801425182],[46.483498976432458,39.464154771475535],[46.505719842317973,38.770605373686294],[46.143623081248819,38.741201483712217],[45.739978468616982,39.473999131827128],[43.656436395040942,40.253563951166186],[43.582745802592733,41.092143256182567]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AQ","name":"Antarctica","type":"Indeterminate","postal":"AQ","admin":"Antarctica","sales_rgn":5},"geometry":{"type":"MultiPolygon","coordinates":[[[[-59.572094692611529,-80.040178725096297],[-60.1596557277702,-81.000326837079314],[-64.488125372969762,-80.921933689292558],[-66.29003089055513,-80.25577280061799],[-61.883245612217138,-80.392870375488286],[-60.610119188058405,-79.628679294756125],[-59.572094692611529,-80.040178725096297]]],[[[-159.20818356019765,-79.497059421708727],[-161.12760128481466,-79.634208673011301],[-163.71289567772874,-78.595666605797277],[-163.10580095116381,-78.223337911134294],[-161.24511349184638,-78.380175883140168],[-159.48240454815448,-79.046337579258989],[-159.20818356019765,-79.497059421708727]]],[[[-45.154757656421026,-78.047069600586738],[-43.920827806155756,-78.478102722333261],[-43.333266770997085,-80.026122735512928],[-50.482106899606464,-81.025441583173119],[-54.164259406131606,-80.633527520671578],[-53.98799109558405,-80.222028090331406],[-50.991326463410587,-79.614623305172657],[-48.660616014182523,-78.047017924154446],[-46.662856818211026,-77.831475525065031],[-45.154757656421026,-78.047069600586738]]],[[[-121.21151139385712,-73.500990499006036],[-119.91885127829205,-73.65772511814734],[-118.72414303269191,-73.481353454735199],[-120.23221716370998,-74.088809916326156],[-122.62173539288614,-73.657776794579632],[-122.40624467022903,-73.32461883559391],[-121.21151139385712,-73.500990499006036]]],[[[-125.55956640689531,-73.481353454735199],[-124.03188187726685,-73.873267517236741],[-127.28313045312616,-73.461768086896569],[-126.55847184309721,-73.246225687807168],[-125.55956640689531,-73.481353454735199]]],[[[-98.981549648823901,-71.933334248999785],[-96.787936774466232,-71.952971293270707],[-96.200349901091442,-72.521205342752182],[-100.78345516640921,-72.501619974913552],[-102.33072506387639,-71.89416351332261],[-98.981549648823901,-71.933334248999785]]],[[[-68.451345994730417,-70.955822855766741],[-68.333833787698694,-71.406493021784186],[-68.784297247986984,-72.170735778948625],[-71.075888637970138,-72.50384206150207],[-72.388134121373781,-72.484256693663426],[-71.898499925408288,-72.092342631161884],[-74.190039638959064,-72.366692810199496],[-74.953894822881381,-72.07275726332324],[-75.01262508818121,-71.661257832983068],[-73.230330776650561,-71.151779887017511],[-72.074716559523551,-71.190950622694771],[-71.741791144483187,-69.505782165656797],[-71.173815477163146,-69.035474955368414],[-70.253251512315728,-68.878740336227196],[-68.451345994730417,-70.955822855766741]]],[[[-58.614142829000912,-64.152467130133147],[-60.611927863188697,-64.309201749274436],[-62.022100185785433,-64.799094327401363],[-62.648857794837369,-65.484942321890657],[-62.120078701410705,-66.190325622674706],[-63.745690070232371,-66.503846537389592],[-65.508424852140564,-67.581610209268916],[-65.665081956633287,-67.95388722749945],[-64.783714565679333,-68.678907572554493],[-63.197299770751044,-69.227556254197253],[-61.806661139560589,-70.716767679984471],[-60.69026933454316,-73.166178894187084],[-60.827366909413428,-73.695242207991186],[-61.96336992048569,-74.439847920884887],[-63.295200771727963,-74.576997172187376],[-64.352836473229587,-75.262846781565159],[-69.797723761662837,-76.222994893548176],[-70.600723843046239,-76.634494323888447],[-77.240370246067613,-76.712887471675202],[-76.926978522433586,-77.104801534176744],[-73.656118740519446,-77.908111674153957],[-77.925858120419264,-78.378418884442254],[-78.02378495961247,-79.18183318472822],[-75.360097418911749,-80.259545180175252],[-59.691415574773458,-82.375850111824349],[-58.222487148660917,-83.21843434034335],[-49.761349860215461,-81.729171238123755],[-42.808363409992381,-82.081914564948107],[-40.771433478343596,-81.356894219893221],[-28.549802212018704,-80.337938327962007],[-29.685805223090966,-79.632503350745679],[-29.685805223090966,-79.260226332514975],[-35.639912075328255,-79.456131687333453],[-35.914107225069017,-79.083854669102919],[-35.777009650198721,-78.33924814876498],[-28.882779303491361,-76.673665059565721],[-22.45859778491095,-76.105431010084246],[-17.522981736714172,-75.125697530262499],[-15.701490851290259,-74.498604024400635],[-15.407710333710867,-74.106741638331371],[-16.465320196996373,-73.871613871403412],[-15.446855231171952,-73.146541849916076],[-12.293507656289563,-72.401936137022545],[-10.295774298534155,-71.265416361627302],[-7.416621873392415,-71.696501159806033],[-6.868231573911118,-70.932310079073972],[-4.341667446296867,-71.461373392878073],[-0.659489101555522,-71.226245625950042],[-0.228636847322065,-71.637745056290299],[6.273911980828927,-70.462054545217796],[7.742866245157842,-69.893768819304029],[8.487110223025326,-70.148533630502996],[9.525134718472202,-70.011332702768215],[10.81782067225339,-70.834331563448501],[13.422777947654396,-69.972161967090955],[14.734997592842006,-70.030918070606774],[15.126756626046586,-70.403246765269756],[15.949342075268646,-70.030918070606774],[19.259372592860046,-69.893768819304029],[21.452985467217815,-70.070140482716255],[22.569403110451447,-70.697182312145827],[27.093726434037279,-70.462054545217796],[31.990171746556854,-69.658641052376069],[33.8704187354966,-68.50258758557456],[36.162010125479782,-69.247141622035969],[37.200034620926573,-69.168748474249043],[38.649403517416914,-69.776204935840184],[41.959434035008229,-68.600514424767667],[46.503342726432635,-67.601195577107461],[47.443440382686305,-67.718759460571476],[48.990736118369597,-67.091717631141904],[50.753470900277733,-66.876175232052404],[50.949324578663919,-66.523483581660429],[51.791547072157044,-66.249133402622903],[54.533550245996054,-65.818048604444002],[56.355041131419881,-65.974783223585376],[58.744507684163949,-67.287674662392675],[61.427806430919333,-67.95388722749945],[62.387489455011661,-68.012695007447547],[64.052349074159025,-67.40523854585669],[68.890038283162909,-67.934301859660806],[69.673452996707482,-69.227556254197253],[69.555940789675816,-69.678226420214713],[67.812739699174159,-70.305268249644286],[67.949888950476662,-70.697182312145827],[69.066306593710266,-70.67754526787499],[67.949888950476662,-71.853287455379615],[69.869306675093952,-72.264786885719801],[71.024895054004588,-72.088415222307759],[73.864876743469239,-69.874183451465484],[77.644904412755267,-69.462684021125298],[79.113858677083925,-68.326215922162433],[82.776425815770409,-67.209281514605919],[86.752358839874859,-67.150473734657723],[87.477017449903798,-66.876175232052404],[87.986288690140242,-66.20991099051335],[88.828407830768555,-66.95456837983923],[89.670630324261566,-67.150473734657723],[94.175419956441004,-67.111302998980449],[95.781471795640272,-67.385653178017975],[99.718182407635055,-67.248503926715486],[102.83241092327265,-65.56328379324512],[106.18156050010876,-66.934931335568393],[110.23583499556784,-66.699803568640363],[113.60467329310737,-65.876804707959906],[115.60238081264654,-66.699803568640363],[119.8329236186531,-67.268089294553945],[123.22129560759893,-66.484261169550862],[128.80328047090242,-66.75861134858846],[134.75738732313991,-66.209962666945628],[135.07075320855782,-65.30857065847843],[135.69748497939358,-65.582869161083664],[136.61804894424111,-66.778196716427018],[137.46027143773395,-66.95456837983923],[145.49042728086502,-66.915345967729678],[146.19555219948782,-67.228866882444464],[145.99969852110152,-67.601195577107461],[146.64606733620823,-67.895131123983703],[148.83962853413371,-68.385023702110544],[152.50224734925249,-68.874812927372986],[153.63819868389257,-68.894501648076101],[154.28456749899928,-68.561292012658186],[156.81113162661339,-69.384290873338458],[159.18101281151874,-69.599833272427958],[161.57047936426281,-70.579618428681812],[167.30909549384299,-70.834331563448501],[171.20679039945762,-71.696501159806033],[169.28732099840832,-73.656019795881633],[166.09480268784844,-74.381040140936605],[164.2341927431797,-75.45880381281593],[163.56823856023428,-76.242580261386735],[163.48989708887976,-77.065579122067263],[164.74346398341615,-78.182513529623776],[166.60412560451735,-78.319611104494058],[166.99578128485743,-78.750747579105251],[161.76638471908112,-79.162247816889675],[159.78821089094842,-80.945394789553049],[163.70533613510477,-82.395435479662893],[168.89566531806796,-83.335998223807366],[169.40478152900758,-83.825890801934378],[172.28393395414938,-84.041433201023708],[173.22408328683539,-84.413710219254412],[175.98567182851312,-84.158997084487638],[180.00000000000014,-84.71338],[180.00000000000014,-90.0],[-180.0,-90.0],[-180.0,-84.71338],[-179.0586773346912,-84.139411716649093],[-177.25677181710574,-84.452932631363879],[-175.82988216866252,-84.117914320815672],[-174.38250281481569,-84.534323012223567],[-172.8891055980128,-84.061018568862337],[-169.95122290757143,-83.884646905450126],[-167.02209937240332,-84.570496514827909],[-158.07137956442494,-85.373910007669707],[-155.19225297749929,-85.09955982863211],[-148.5330728830715,-85.609037774597667],[-143.10771847860045,-85.040752048683913],[-142.89227943237563,-84.570496514827909],[-150.06073157448395,-84.296146335790382],[-150.90292822976073,-83.904232273288841],[-153.5862011383002,-83.688689874199355],[-152.66563717345275,-82.454191583178812],[-152.86151669005505,-82.042692152838541],[-156.8374497141595,-81.102129408694253],[-152.09766150613282,-81.004150893068783],[-150.64829260964262,-81.337308852054591],[-146.41774899619185,-80.337938327962007],[-146.77028642473118,-79.926438897621921],[-149.53190080462511,-79.358204848140446],[-155.32937639058576,-79.064269301264204],[-158.05176835837011,-78.025675557617902],[-158.36513424378796,-76.889207458654951],[-156.97457312724595,-77.300758565427515],[-153.74283240457675,-77.065579122067263],[-152.92024695535477,-77.496663920245993],[-151.3337804839943,-77.398737081052801],[-146.10440894899,-76.477759704747058],[-146.49609127499048,-75.733153991853541],[-146.202309949967,-75.380410665029189],[-144.90962399618576,-75.204039001616962],[-144.32203712281108,-75.53719696060277],[-135.21458269569129,-74.302698669582142],[-121.07361283428624,-74.518241068671642],[-117.46980099167121,-74.02834849054463],[-116.21631161178341,-74.243890889633946],[-113.94433142785508,-73.71482757582983],[-112.29908301476259,-74.714198099922413],[-111.26105851931563,-74.420262553046172],[-107.55934648316811,-75.184453633778418],[-104.87607357462866,-74.949325866850458],[-100.64553076862231,-75.302017517242433],[-100.11669999876327,-74.870932719063532],[-101.25270300983553,-74.185083109685834],[-102.54533728718451,-74.106741638331371],[-103.11331295450454,-73.734412943668389],[-103.68128862182439,-72.617530212544153],[-99.137379930400101,-72.911414082988102],[-97.688036872126105,-73.558041280256333],[-96.336594814828914,-73.616849060204359],[-92.439003262078955,-73.166178894187084],[-90.088733283228436,-73.322913513328203],[-89.226951260112941,-72.558722432595957],[-88.42395117872951,-73.009392598613402],[-86.01482174349843,-73.087785746400158],[-85.192236294276569,-73.47969980890187],[-81.470913052074138,-73.851976827132404],[-80.295790981756994,-73.126956482077432],[-76.221879442027074,-73.969540710596419],[-74.890048590784801,-73.871613871403412],[-68.935915900331224,-73.009392598613402],[-67.36906063502559,-72.480329284809301],[-67.251548427993669,-71.637745056290299],[-68.544208543558938,-69.717397155891973],[-67.427842576757513,-68.149844258750221],[-67.741182623959332,-67.326845398069935],[-63.001394415932566,-64.642308031827866],[-62.041685553623978,-64.583551928311948],[-58.594557461162282,-63.388224372968601],[-57.223581712458838,-63.525425300703638],[-58.614142829000912,-64.152467130133147]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TF","name":"Fr. S. Antarctic Lands","type":"Dependency","postal":"TF","admin":"French Southern and Antarctic Lands","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[68.935,-48.625],[70.525,-49.065],[70.56,-49.255],[70.28,-49.71],[68.745,-49.775],[68.935,-48.625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AU","name":"Australia","type":"Country","postal":"AU","admin":"Australia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[145.39797814349484,-40.792548516605891],[146.36412072162372,-41.137695407883342],[148.28906782449602,-40.87543751400213],[148.35986453673584,-42.062445163746446],[147.91405195535381,-43.211522312188492],[147.56456424376401,-42.937688897473862],[146.87034305235497,-43.634597263362096],[146.04837772032042,-43.549744561538887],[144.71807132383063,-41.162551771815714],[144.74375451067968,-40.703975111657712],[145.39797814349484,-40.792548516605891]]],[[[143.56181115129996,-13.763655694232213],[143.92209923723894,-14.548310642152003],[144.56371382057486,-14.171176039285882],[145.37472374896348,-14.984976495018287],[145.48525963763578,-16.285672295804773],[146.38747846901961,-18.958274021075908],[148.84841352762325,-20.391209812097259],[148.71746544819561,-20.633468926681516],[149.67833703023067,-22.342511895438392],[150.07738244038862,-22.122783705333319],[150.48293908101519,-22.556142266533016],[150.72726525289121,-22.402404880464658],[150.89955447815228,-23.462236830338682],[152.85519738180594,-25.267501316023015],[153.13616214417678,-26.07117319102619],[153.09290897034859,-27.26029957449451],[153.56946902894421,-28.110066827102102],[152.89157759013941,-31.640445651985956],[152.45000247620536,-32.550002536755244],[151.70911746643682,-33.041342054986345],[150.32821984273326,-35.67187916437193],[149.99728397033616,-37.425260512035138],[149.42388227762555,-37.77268116633347],[148.30462243061592,-37.809061374666882],[146.3179219911548,-39.03575652441144],[144.87697635312819,-38.417448012039117],[145.03221235573298,-37.896187839510986],[143.60997358619611,-38.809465427405328],[140.63857872941324,-38.019332777662555],[139.99215823787435,-37.402936293285109],[139.57414757706525,-36.138362318670673],[139.0828080588341,-35.732754001611781],[138.12074791885632,-35.612296237939404],[138.44946170466503,-35.127261244447894],[138.20756432510669,-34.384722588845932],[137.71917036351616,-35.076825046531027],[136.82940555231474,-35.260534763328621],[137.89011600153768,-33.640478610978334],[137.81032759007914,-32.900007012668112],[136.37206912653167,-34.094766127256193],[135.98904341038437,-34.890118096660487],[135.20821251845413,-34.478670342752608],[135.23921837782919,-33.947953383114978],[134.08590376193914,-32.848072198214766],[134.27390262261704,-32.617233575166964],[131.32633060112093,-31.495803318001052],[126.14871382050117,-32.215966078420607],[124.22164798390494,-32.959486586236068],[123.65966678273074,-33.890179131812729],[119.89369510302825,-33.976065362281815],[118.02497195848954,-35.064732761374714],[116.62510908413495,-35.025096937806836],[115.02680870977954,-34.196517022438925],[115.04861616420678,-33.623425388322033],[115.71467370001668,-33.259571628554951],[115.68961063035513,-31.612437025683789],[115.16090905157697,-30.601594333622458],[115.04003787644629,-29.461095472940798],[113.33895307826251,-26.116545098578484],[113.77835778204027,-26.549025160429181],[113.44096235560662,-25.621278171493159],[114.23285200404732,-26.298446140245872],[113.39352339076268,-24.384764499613269],[114.14975630092189,-21.755881036061012],[114.22530724493268,-22.517488295178637],[114.6477620789187,-21.829519952076907],[116.71161543179156,-20.70168181730682],[117.44154503791427,-20.746898695562166],[119.25249393115067,-19.952941989829839],[120.85622033089666,-19.683707777589191],[122.24166548064179,-18.197648614171769],[122.31277225147542,-17.254967136303449],[123.01257449757193,-16.405199883695857],[123.43378909718305,-17.268558037996229],[123.85934451710662,-17.069035332917252],[123.50324222218327,-16.596506036040367],[123.81707319549193,-16.111316013251994],[124.25828657439988,-16.327943617419564],[124.37972619028582,-15.567059828353976],[125.68579634003052,-14.230655612853838],[126.12514936737611,-14.347340996968953],[126.14282270721989,-14.095986830301214],[127.06586714081735,-13.817967624570926],[128.35968997610897,-14.869169610252257],[129.62147342337963,-14.969783623924556],[129.40960005098302,-14.420669854391036],[130.33946577364296,-13.357375583553477],[130.18350630098601,-13.107520033422304],[130.617795037967,-12.536392103732467],[131.22349450086003,-12.183648776908115],[132.57529829318312,-12.114040622611014],[132.55721154188106,-11.603012383676685],[131.82469811414367,-11.273781833545101],[132.35722374891142,-11.128519382372644],[135.29849124566803,-12.248606052299053],[136.49247521377166,-11.857208754120393],[136.95162031468502,-12.351958916882737],[136.30540652887512,-13.291229750219898],[135.96175825413414,-13.324509372615893],[136.07761681533256,-13.724278252825783],[135.50018436090321,-14.997740573794431],[140.2152453960783,-17.710804945550066],[140.87546349503927,-17.369068698803943],[141.27409549373883,-16.388870131091608],[141.70218305884467,-15.044921156476931],[141.68699018775081,-12.407614434461138],[142.51526004452498,-10.668185723516643],[143.52212365129989,-12.834358412327433],[143.56181115129996,-13.763655694232213]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AT","name":"Austria","type":"Sovereign country","postal":"A","admin":"Austria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.979666782304037,48.123497015976305],[16.903754103267261,47.714865627628328],[16.340584344150415,47.71290192320123],[16.534267612380376,47.496170966169117],[16.011663852612656,46.683610744811702],[14.632471551174829,46.431817328469549],[12.376485223040817,46.76755910906985],[12.153088006243054,47.115393174826451],[11.048555942436536,46.751358547546339],[9.479969516649021,47.102809963563374],[9.89606814946319,47.580196845075704],[10.402083774465211,47.302487697939164],[10.544504021861627,47.566399237653769],[12.141357456112788,47.703083401065776],[12.932626987365948,47.467645575543997],[12.884102817443903,48.289145819687917],[13.595945672264437,48.877171942737149],[14.338897739324722,48.555305284207208],[15.253415561593982,49.039074205107582],[16.499282667718774,48.785808010445109],[16.960288120194576,48.5969823268506],[16.979666782304037,48.123497015976305]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AZ","name":"Azerbaijan","type":"Sovereign country","postal":"AZ","admin":"Azerbaijan","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[45.001987339056797,39.740003567049598],[45.739978468617011,39.473999131827156],[46.143623081248819,38.741201483712217],[45.457721795438744,38.874139105783115],[44.952688022650278,39.335764675446427],[44.793989699082005,39.713002631177034],[45.001987339056797,39.740003567049598]]],[[[47.373315464066224,41.219732367511256],[47.815665724484717,41.151416124021353],[48.58435265482629,41.808869533854676],[49.618914829309603,40.572924302729973],[50.392821079312711,40.256561184239104],[49.569202101444802,40.176100979160708],[48.883249139202547,38.320245266262646],[48.010744256386516,38.794014797514535],[48.355529412637935,39.288764960276893],[48.06009524922527,39.582235419262446],[46.505719842317973,38.770605373686266],[46.483498976432458,39.464154771475535],[45.610012241402927,39.899993801425182],[45.891907179555147,40.218475653639985],[44.972480096218163,41.24812856705563],[46.501637404166985,41.064444688474111],[46.145431756378997,41.722802435872637],[46.404950799348825,41.860675157227348],[47.373315464066224,41.219732367511256]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BI","name":"Burundi","type":"Sovereign country","postal":"BI","admin":"Burundi","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[29.339997592900346,-4.499983412294093],[29.024926385216787,-2.839257907730158],[29.632176141078588,-2.917857761246097],[29.938359002407939,-2.348486830254238],[30.469696079232989,-2.413857517103459],[30.752262811004954,-3.35932952231557],[29.753512404099922,-4.452389418153281],[29.339997592900346,-4.499983412294093]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BE","name":"Belgium","type":"Sovereign country","postal":"B","admin":"Belgium","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[3.314971144228537,51.345780951536085],[4.973991326526914,51.475023708698131],[6.15665815595878,50.803721015010581],[6.043073357781111,50.128051662794235],[5.782417433300907,50.09032786722122],[5.674051954784829,49.529483547557504],[4.79922163251581,49.985373033236385],[4.286022983425085,49.907496649772554],[3.123251580425801,50.780363267614575],[2.658422071960274,50.796848049515745],[2.513573032246143,51.148506171261829],[3.314971144228537,51.345780951536085]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BJ","name":"Benin","type":"Sovereign country","postal":"BJ","admin":"Benin","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[2.691701694356254,6.258817246928629],[1.865240512712319,6.142157701029731],[1.664477573258381,9.128590399609379],[0.772335646171484,10.470808213742359],[1.447178175471066,11.547719224488858],[2.848643019226671,12.235635891158267],[3.611180454125559,11.660167141155968],[3.797112257511714,10.734745591673105],[3.705438266625919,10.063210354040208],[2.723792758809509,8.50684540448971],[2.691701694356254,6.258817246928629]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BF","name":"Burkina Faso","type":"Sovereign country","postal":"BF","admin":"Burkina Faso","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-2.827496303712707,9.642460842319778],[-4.779883592131967,9.821984768101743],[-5.404341599946974,10.370736802609146],[-5.220941941743121,11.713858954307227],[-4.006390753587226,13.472485459848116],[-3.10370683431276,13.541266791228594],[-1.066363491205664,14.973815009007765],[0.374892205414682,14.92890818934613],[0.429927605805517,13.988733018443924],[1.024103224297477,12.851825669806574],[2.177107781593776,12.625017808477535],[2.154473504249921,11.940150051313339],[0.899563022474069,10.99733938236426],[-2.940409308270461,10.962690334512558],[-2.827496303712707,9.642460842319778]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BD","name":"Bangladesh","type":"Sovereign country","postal":"BD","admin":"Bangladesh","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[92.672720981825563,22.041238918541254],[92.65225711463799,21.324047552978485],[92.303234490938678,21.475485337809818],[92.36855350135562,20.670883287025347],[91.41708702999766,22.765019029221222],[90.496006300827275,22.805016587815128],[90.272970819055558,21.836367702720111],[89.031961297566227,22.055708319582976],[88.529769728553788,23.631141872649167],[88.699940220090923,24.23371491138856],[88.084422235062419,24.501657212821925],[88.931553989623083,25.238692328384776],[88.209789259802506,25.768065700782714],[88.563049350949768,26.446525580342723],[89.832480910199621,25.965082098895479],[89.920692580121852,25.269749864192178],[92.376201613334814,24.976692816664965],[91.158963250699728,23.503526923104388],[91.706475050832111,22.985263983649187],[91.869927606171316,23.624346421802784],[92.146034783906813,23.627498684172593],[92.672720981825563,22.041238918541254]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BG","name":"Bulgaria","type":"Sovereign country","postal":"BG","admin":"Bulgaria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.657149692482989,44.234923000661283],[22.944832391051847,43.82378530534713],[25.569271681426926,43.688444729174719],[27.242399529740908,44.175986029632405],[28.558081495891997,43.707461656258133],[27.673897739378049,42.577892361006221],[27.99672041190539,42.007358710287789],[27.13573937349048,42.141484890301342],[26.1170418637208,41.826904608724561],[26.106138136507212,41.32889883072778],[25.197201368925448,41.23448598893053],[24.492644891058035,41.583896185872035],[22.952377150166452,41.337993882811148],[22.881373732197432,41.999297186850256],[22.380525750424592,42.320259507815088],[22.986018507588483,43.211161200526966],[22.50015669118028,43.642814439460992],[22.657149692482989,44.234923000661283]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BS","name":"Bahamas","type":"Sovereign country","postal":"BS","admin":"The Bahamas","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.53466,23.75975],[-77.78,23.71],[-78.40848,24.57564],[-78.19087,25.2103],[-77.89,25.17],[-77.53466,23.75975]]],[[[-77.82,26.58],[-78.91,26.42],[-78.98,26.79],[-77.85,26.84],[-77.82,26.58]]],[[[-77.0,26.59],[-77.17255,25.87918],[-77.79,27.04],[-77.0,26.59]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BA","name":"Bosnia and Herz.","type":"Sovereign country","postal":"BiH","admin":"Bosnia and Herzegovina","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[19.005486281010121,44.860233669609158],[19.36803,44.863],[19.11761,44.423070000000109],[19.59976,44.03847],[19.454,43.568100000000129],[18.70648,43.20011],[18.56,42.65],[17.674921502358984,43.02856252702361],[15.750026075918981,44.818711656262565],[15.959367303133376,45.233776760430942],[19.005486281010121,44.860233669609158]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BY","name":"Belarus","type":"Sovereign country","postal":"BY","admin":"Belarus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[23.484127638449849,53.912497667041137],[25.536353794056993,54.282423407602529],[25.768432651479799,54.846962592175089],[26.588279249790389,55.167175604871673],[26.494331495883756,55.615106919977634],[28.176709425577997,56.169129950578814],[29.371571893030673,55.670090643936184],[30.87390913262001,55.550976467503411],[30.757533807098721,54.811770941784317],[31.731272820774507,53.794029446012019],[32.693643019346041,53.35142080343212],[31.305200636528014,53.073995876673209],[31.785998162571587,52.101677964885454],[30.927549269338982,52.04235342061439],[30.555117221811457,51.319503485715657],[25.327787713327009,51.910656032918553],[23.527070753684374,51.57845408793024],[23.199493849386187,52.486977444053672],[23.799198846133379,52.691099351606567],[23.484127638449849,53.912497667041137]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BZ","name":"Belize","type":"Sovereign country","postal":"BZ","admin":"Belize","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-89.143080410503316,17.808318996649319],[-88.490122850279349,18.486830552641607],[-88.106812913754382,18.348673610909287],[-88.355428229510565,16.530774237529627],[-88.930612759135272,15.887273464415076],[-89.229121670269279,15.886937567605171],[-89.143080410503316,17.808318996649319]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BO","name":"Bolivia","type":"Sovereign country","postal":"BO","admin":"Bolivia","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-62.846468471921561,-22.034985446869449],[-63.986838141522476,-21.99364430103595],[-64.377021043542257,-22.79809132252354],[-64.964892137294612,-22.075861504812327],[-66.273339402924847,-21.83231047942072],[-67.106673550063604,-22.735924574476417],[-67.828179897722734,-22.872918796482175],[-68.757167121033746,-20.372657972904463],[-68.442225104430918,-19.405068454671429],[-68.966818406841867,-18.981683444904107],[-69.59042375352405,-17.580011895419332],[-68.959635382753305,-16.50069793057127],[-69.389764166934711,-15.660129082911652],[-69.160346645774951,-15.323973890853019],[-69.339534674747014,-14.953195489158832],[-68.948886684836594,-14.453639418193283],[-68.665079718689626,-12.561300144097173],[-69.529678107364958,-10.951734307502194],[-68.271253628193264,-11.014521172736821],[-66.646908331962806,-9.931331475466863],[-65.338435228116424,-9.761987806846392],[-65.402281460213032,-11.566270440317155],[-64.316352912031604,-12.461978041232193],[-63.196498786050569,-12.627032565972435],[-61.713204311760776,-13.489202162330052],[-60.503304002511136,-13.775954685117659],[-60.251148851142936,-15.07721892665932],[-60.542965664295153,-15.093910414289596],[-60.158389655179036,-16.258283786690086],[-58.24121985536668,-16.299573256091293],[-58.280804002502251,-17.271710300366017],[-57.734558274961003,-17.552468357007768],[-57.498371141170992,-18.174187513911292],[-57.949997321185826,-19.400004164306822],[-57.853801642474508,-19.969995212486189],[-58.166392381408045,-20.176700941653678],[-58.183471442280506,-19.868399346600363],[-59.115042487206111,-19.356906019775401],[-61.786326463453769,-19.633736667562964],[-62.685057135657885,-22.249029229422387],[-62.846468471921561,-22.034985446869449]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BR","name":"Brazil","type":"Sovereign country","postal":"BR","admin":"Brazil","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.625133429582959,-30.216294854454262],[-55.162286342984572,-27.881915378533463],[-53.648735317587892,-26.92347258881609],[-53.628348965048744,-26.124865004177472],[-54.13004960795439,-25.547639255477254],[-54.625290696823576,-25.739255466415514],[-54.292959560754518,-24.021014092710729],[-55.400747239795422,-23.956935316668805],[-55.797958136606908,-22.356929620047822],[-57.937155727761294,-22.090175876557172],[-57.8706739976178,-20.732687676681952],[-58.166392381408045,-20.176700941653678],[-57.853801642474508,-19.969995212486189],[-57.949997321185826,-19.400004164306822],[-57.498371141170992,-18.174187513911292],[-57.734558274961003,-17.552468357007768],[-58.280804002502251,-17.271710300366017],[-58.24121985536668,-16.299573256091293],[-60.158389655179036,-16.258283786690086],[-60.542965664295153,-15.093910414289596],[-60.251148851142936,-15.07721892665932],[-60.503304002511136,-13.775954685117659],[-61.713204311760776,-13.489202162330052],[-63.196498786050569,-12.627032565972435],[-64.316352912031604,-12.461978041232193],[-65.402281460213032,-11.566270440317155],[-65.338435228116424,-9.761987806846392],[-66.646908331962806,-9.931331475466863],[-68.271253628193264,-11.014521172736821],[-70.548685675728407,-11.009146823778465],[-70.481893886991173,-9.490118096558845],[-71.302412278921537,-10.079436130415374],[-72.18489071316985,-10.053597914269432],[-72.563033006465645,-9.520193780152717],[-73.226713426390162,-9.462212823121234],[-73.015382656532552,-9.032833347208062],[-73.987235480429661,-7.523829847853065],[-73.724486660441642,-6.91859547285064],[-73.120027431923603,-6.629930922068239],[-72.891927659787257,-5.274561455916981],[-70.794768846302304,-4.251264743673303],[-69.893635219996625,-4.298186944194328],[-69.420485805932231,-1.122618503426409],[-70.020655890570055,-0.185156345219539],[-70.015565761989308,0.541414292804205],[-69.252434048119056,0.602650865070075],[-69.21863766140018,0.985676581217433],[-69.80459672715773,1.089081122233466],[-69.816973232691623,1.714805202639624],[-67.868565029558837,1.692455145673392],[-67.537810024674698,2.03716278727633],[-67.065048183852497,1.130112209473225],[-66.325765143484958,0.724452215982012],[-65.548267381437569,0.78925446207603],[-63.368788011311665,2.200899562993129],[-64.269999152265797,2.497005520025567],[-64.368494432214106,3.797210394705246],[-64.816064012294021,4.056445217297423],[-63.093197597899106,3.770571193858785],[-60.966893276601539,4.536467596856639],[-60.601179165271944,4.91809804933213],[-60.733574184803722,5.200277207861901],[-60.213683437731333,5.244486395687602],[-60.11100236676738,4.574966538914083],[-59.538039923731233,3.958802598481938],[-59.974524909084558,2.755232652188056],[-59.646043667221257,1.786893825686789],[-59.030861579002647,1.317697658692723],[-58.540012986878295,1.268088283692521],[-57.335822923396904,1.948537705895759],[-55.995698004771754,1.817667141116601],[-55.973322109589375,2.510363877773017],[-52.939657151894956,2.124857692875636],[-51.657797410678889,4.156232408053029],[-51.317146369010857,4.203490505383954],[-50.508875291533656,1.901563828942457],[-49.974075893745059,1.736483465986069],[-49.947100796088712,1.046189683431223],[-50.699251268096916,0.222984117021682],[-50.388210822132137,-0.078444512536819],[-48.62056677915632,-0.235489190271821],[-48.584496629416591,-1.237805271005001],[-47.824956427590635,-0.5816179337628],[-44.905703090990414,-1.551739597178134],[-44.417619187993665,-2.137750339367976],[-44.581588507655781,-2.691308282078524],[-43.418791266440195,-2.383110039889793],[-41.472656826328247,-2.912018324397117],[-39.978665330554037,-2.873054294449041],[-37.2232521225352,-4.820945733258917],[-35.597795783010469,-5.149504489770649],[-35.23538896334756,-5.464937432480247],[-34.729993455533034,-7.343220716992967],[-35.128212042774223,-8.996401462442286],[-38.673887091616521,-13.057652276260619],[-39.267339240056401,-17.867746270420483],[-39.760823330227637,-19.599113457927409],[-40.774740770010339,-20.904511814052423],[-40.944756232250612,-21.937316989837811],[-41.754164191238225,-22.370675551037458],[-41.98828426773656,-22.970070489190896],[-44.647811855637812,-23.351959323827842],[-47.648972337420659,-24.885199069927722],[-48.495458136577703,-25.877024834905654],[-48.474735887228654,-27.175911960561891],[-48.8884574041574,-28.674115085567884],[-53.373661668498244,-33.768377780900764],[-53.650543992718099,-33.20200408298183],[-53.209588995971544,-32.727666110974724],[-53.787951626182192,-32.047242526987624],[-56.976025763564735,-30.109686374636127],[-57.625133429582959,-30.216294854454262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BN","name":"Brunei","type":"Sovereign country","postal":"BN","admin":"Brunei","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[114.20401655482837,4.525873928236806],[114.59996137904872,4.900011298029966],[115.45071048386981,5.447729803891534],[115.34746097215066,4.316636053887009],[114.8695573263154,4.348313706881925],[114.65959598191353,4.007636826997754],[114.20401655482837,4.525873928236806]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BT","name":"Bhutan","type":"Sovereign country","postal":"BT","admin":"Bhutan","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[91.696656528696678,27.771741848251665],[92.103711785859744,27.452614040633208],[92.033483514375092,26.838310451763562],[89.744527622438852,26.719402981059957],[88.83564253128938,27.098966376243762],[89.475810174521115,28.042758897406397],[90.015828891971182,28.296438503527217],[91.696656528696678,27.771741848251665]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BW","name":"Botswana","type":"Sovereign country","postal":"BW","admin":"Botswana","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[25.649163445750162,-18.536025892818991],[27.296504754350508,-20.391519870690999],[27.724747348753255,-20.499058526290391],[28.021370070108617,-21.485975030200585],[29.43218834810904,-22.091312758067588],[27.119409620886245,-23.574323011979775],[26.485753208123299,-24.616326592713104],[25.941652052522159,-24.696373386333221],[25.664666375437719,-25.486816094669713],[24.211266717228796,-25.670215752873574],[23.312096795350186,-25.26868987396572],[21.605896030369394,-26.726533705351756],[20.889609002371738,-26.828542982695915],[20.758609246511838,-25.86813648855145],[19.895767856534434,-24.767790215760591],[19.895457797940679,-21.849156996347869],[20.88113406747587,-21.814327080983148],[20.910641310314535,-18.252218926672022],[23.196858351339301,-17.869038181227786],[23.579005568137717,-18.281261081620059],[25.084443393664571,-17.661815687737374],[25.649163445750162,-18.536025892818991]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CF","name":"Central African Rep.","type":"Sovereign country","postal":"CF","admin":"Central African Republic","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[15.279460483469109,7.421924546737969],[17.964929640380888,7.890914008002866],[18.911021762780507,8.630894680206353],[18.812009718509273,8.982914536978598],[20.059685499764271,9.012706000194854],[21.000868361096167,9.475985215691509],[21.723821648859456,10.567055568885976],[22.864165480244225,11.142395127807546],[23.554304233502194,10.089255275915308],[23.459012892355986,8.954285793488893],[25.114932488716789,7.825104071479174],[26.465909458123235,5.946717434101871],[27.37422610851749,5.233944403500061],[25.650455356557472,5.256087754737123],[24.805028924262416,4.89724660890235],[24.410531040146253,5.10878408448913],[23.297213982850138,4.609693101414223],[22.841479526468106,4.710126247573484],[22.405123732195538,4.029160061047321],[19.467783644293149,5.03152781821278],[18.542982211997781,4.201785183118318],[18.453065219809929,3.504385891123349],[17.133042433346304,3.728196519379452],[16.012852410555354,2.267639675298085],[15.862732374747482,3.013537298998983],[14.478372430080469,4.732605495620447],[14.536560092841114,6.226958726420691],[15.279460483469109,7.421924546737969]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CH","name":"Switzerland","type":"Sovereign country","postal":"CH","admin":"Switzerland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.59422610844635,47.52505809182027],[9.479969516649021,47.102809963563374],[10.442701450246631,46.893546250997431],[10.363378126678612,46.483571275409858],[9.182881707403055,46.440214748716983],[8.966305779667806,46.036931871111193],[8.316629672894379,46.163642483090861],[7.273850945676657,45.776947740250776],[6.500099724970426,46.429672756529442],[6.022609490593538,46.272989813820473],[6.037388950229001,46.725778713561866],[6.736571079138059,47.541801255882845],[8.522611932009767,47.830827541691292],[9.59422610844635,47.52505809182027]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CL","name":"Chile","type":"Sovereign country","postal":"CL","admin":"Chile","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-68.634010227583161,-52.636370458874367],[-68.633349999999893,-54.8695],[-66.95992,-54.89681],[-68.148629999999855,-55.61183],[-71.00568,-55.05383],[-73.2852,-53.957519999999889],[-74.66253,-52.83749],[-71.10773,-54.07433],[-70.26748,-52.93123],[-69.345649999999893,-52.5183],[-68.634010227583161,-52.636370458874367]]],[[[-68.219913092711238,-21.494346612231837],[-67.828179897722663,-22.872918796482182],[-67.106673550063618,-22.7359245744764],[-66.985233934177643,-22.986348565362832],[-67.328442959244143,-24.025303236590915],[-68.417652960876126,-24.518554782816878],[-68.594799770772681,-26.506908868111267],[-68.295541551370405,-26.89933969493579],[-69.656130337183157,-28.459141127233693],[-70.013550381129875,-29.367922865518551],[-69.919008348251936,-30.336339206668313],[-70.535068935819453,-31.365010267870289],[-69.814776984319224,-33.273886000299854],[-69.817309129501467,-34.193571465798286],[-70.388049485949097,-35.169687595359449],[-70.364769253201672,-36.005088799789945],[-71.121880662709799,-36.658123874662337],[-70.814664272734717,-38.552995293940739],[-71.413516608349056,-38.916022230791114],[-71.915734015577556,-40.832339369470731],[-71.746803758415467,-42.051386407235995],[-72.148898078078531,-42.254888197601389],[-71.915423956983915,-43.408564548517418],[-71.464056159130507,-43.787611179378331],[-71.793622606071949,-44.207172133156106],[-71.222778896759735,-44.784242852559416],[-71.65931555854533,-44.973688653341441],[-71.552009446891248,-45.560732924177131],[-72.447355312780275,-47.738532810253531],[-72.331160854771952,-48.244238376661826],[-72.648247443314943,-48.878618259476788],[-73.415435757120036,-49.318436374712959],[-73.328050910114484,-50.378785088909872],[-72.975746832964631,-50.741450290734313],[-72.30997351753237,-50.677009779666356],[-72.329403856074038,-51.425956312872408],[-71.914803839796349,-52.009022305865926],[-68.571545376241346,-52.299443855346262],[-69.461284349226645,-52.291950772663931],[-70.845101691354529,-52.899200528525725],[-71.006332160105245,-53.833252042201352],[-71.429794684520942,-53.856454760300387],[-74.946763475225168,-52.262753588419031],[-75.608015102831956,-48.673772881871798],[-75.182769741502142,-47.71191944762316],[-74.126580980104706,-46.939253431995098],[-75.644395311165454,-46.64764332457203],[-74.692153693323064,-45.763976332380977],[-74.351709357384266,-44.103044122087894],[-73.240356004515206,-44.454960625995625],[-72.71780392117978,-42.383355808278992],[-73.388899909138246,-42.117532240569574],[-73.701335618774863,-43.365776462579745],[-74.331943122032584,-43.224958184584409],[-73.677099372029971,-39.942212823243125],[-73.217592536090677,-39.258688653318515],[-73.58806087919109,-37.156284681956024],[-73.166717088499297,-37.123780206044358],[-71.438450486929923,-32.418899428030826],[-71.668720669222438,-30.920644626592519],[-71.370082567007728,-30.095682061485007],[-71.489894375276464,-28.861442152625912],[-70.905123867461583,-27.640379734001201],[-70.091245897080682,-21.393319187101227],[-70.372572394477743,-18.347975355708883],[-69.590423753523993,-17.58001189541929],[-68.966818406841838,-18.981683444904093],[-68.442225104430946,-19.405068454671422],[-68.757167121033717,-20.372657972904477],[-68.219913092711238,-21.494346612231837]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CN","name":"China","type":"Country","postal":"CN","admin":"China","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[110.33918786015155,18.678395087147607],[109.47520958866372,18.197700913968617],[108.65520796105616,18.507681993071401],[108.62621748254045,19.367887885001977],[109.11905561730802,19.821038519769388],[110.78655073450224,20.077534491450081],[111.01005130416465,19.695929877190736],[110.33918786015155,18.678395087147607]]],[[[127.65740726126242,49.760270494172943],[129.39781782442046,49.440600084015443],[130.58229332898239,48.729687404976119],[130.98728152885386,47.790132351261406],[132.50667199109952,47.788969631534883],[135.02631147678673,48.478229885443909],[133.09712690646646,45.144066473972174],[131.88345421765959,45.321161607436437],[131.0252120301561,44.967953192721581],[131.28855512911557,44.111519680348266],[131.14468794161488,42.929989732426947],[130.63386640840983,42.903014634770557],[130.64001590385246,42.395009467125277],[129.99426720593326,42.9853868678438],[129.59666873587949,42.424981797854599],[128.05221520397234,41.994284572917991],[128.20843305879075,41.466771552082548],[126.8690832866499,41.816569322266162],[124.26562462778534,39.928493353834142],[121.05455447803288,38.897471014962917],[121.58599490772249,39.360853583324143],[121.37675703337268,39.750261338859531],[122.16859500538104,40.422442531896053],[121.64035851449356,40.946389878903318],[119.63960208544907,39.898055935214217],[119.02346398323303,39.252333075511103],[118.04274865119791,39.204273993479688],[117.53270226447708,38.737635809884097],[118.05969852098971,38.061475531561058],[118.87814985562838,37.897325344385905],[118.91163618375353,37.448463853498737],[119.70280236214208,37.15638865818508],[120.82345747282366,37.870427761377982],[122.35793745329849,37.454484157860691],[122.51999474496583,36.930614325501836],[121.10416385303304,36.65132904718044],[119.15120812385859,34.909859117160465],[120.22752485563373,34.36033193616862],[121.90814578663006,31.69217438407469],[121.89191938689035,30.949351508095106],[121.26425744027333,30.676267401648715],[121.50351932178475,30.142914943964257],[122.0921138855891,29.832520453403163],[121.68443851123848,28.225512600206685],[121.12566124886646,28.135673122667185],[118.65687137255455,24.547390855400238],[115.89073530483515,22.782873236578098],[114.76382734584624,22.66807404224167],[114.15254682826568,22.223760077396207],[113.80677981980077,22.54833974862143],[113.24107791550162,22.051367499270469],[110.78546552942416,21.397143866455338],[110.44403934127169,20.341032619706397],[109.88986128137358,20.282457383703445],[109.62765506392466,21.008227037026728],[109.86448815311834,21.395050970947523],[107.04342003787266,21.811898912029903],[106.56727339073538,22.218204860924743],[106.72540327354849,22.794267889898379],[105.32920942588666,23.352063300056983],[104.4768583516645,22.819150092046925],[102.70699222210018,22.708795070887703],[101.65201785686159,22.318198757409561],[101.80311974488293,21.174366766845054],[101.27002566936002,21.20165192309517],[101.15003299357826,21.849984442629022],[100.41653771362738,21.558839423096657],[99.240898878987224,22.118314317304566],[99.531992222087439,22.949038804612599],[98.898749220782832,23.142722072842588],[98.660262485755794,24.063286037690006],[97.604719679762042,23.897404690033056],[97.724609002679159,25.083637193293043],[98.67183800658924,25.918702500913497],[98.682690057370536,27.508812160750665],[97.911987746169444,28.335945136014374],[96.248833449287844,28.411030992134471],[96.58659061074755,28.830979519154369],[96.117678664131034,29.45280202892252],[95.404802280664654,29.03171662039216],[94.565990431702943,29.277438055939967],[92.503118931043645,27.896876329046449],[91.696656528696707,27.771741848251622],[90.015828891971211,28.296438503527185],[88.814248488320601,27.299315904239393],[88.730325962278556,28.086864732367559],[88.120440708369955,27.876541652939579],[85.82331994013154,28.203575954698749],[84.234579705750178,28.839893703724698],[83.898992954446754,29.32022614187764],[82.327512648450892,30.115268052688208],[81.5258044778748,30.422716986608663],[81.11125613802929,30.183480943313413],[79.721366815107132,30.882714748654735],[78.738894484374015,31.515906073527049],[78.458446486326039,32.618164374312727],[79.176128777995558,32.483779812137755],[79.208891636068557,32.994394639613745],[78.811086460285736,33.506198025032404],[78.912268914713223,34.321936346975775],[77.837450799474624,35.494009507787808],[76.192848341785719,35.898403428687857],[75.896897414050187,36.666806138651879],[74.980002475895418,37.419990139305895],[74.864815708316797,38.378846340481601],[73.928852166646408,38.505815334622724],[73.675379266254851,39.431236884105573],[73.960013055318456,39.660008449861721],[73.82224368682833,39.893973497063143],[74.776862420556057,40.366425279291633],[76.526368035797447,40.427946071935139],[76.904484490877138,41.066485907549662],[78.187196893226059,41.185315863604814],[78.543660923175281,41.58224254003872],[80.119430373051415,42.123940741538235],[80.180150180994389,42.920067857426858],[80.866206496101228,43.180362046881015],[79.96610639844144,44.917516994804629],[82.458925815769049,45.539649563166506],[83.180483839860557,47.330031236350749],[85.164290399113241,47.000955715516113],[85.720483839870695,47.452969468773091],[85.768232863308384,48.455750637396903],[86.598776483103364,48.549181626980612],[87.751264276076682,49.297197984405472],[88.013832228551706,48.599462795600601],[90.280825636763922,47.693549099307916],[90.970809360724985,46.888146063822944],[90.585768263718336,45.719716091487498],[90.94553958533433,45.28607330991025],[93.48073367714133,44.975472113620015],[95.306875441471533,44.241330878265472],[96.349395786527822,42.725635280928657],[100.84586551310829,42.663804429691425],[104.96499393109346,41.597409572916348],[106.12931562706169,42.134327704428898],[110.41210330611531,42.871233628911028],[111.8295878438814,43.743118394539493],[111.34837690637946,44.457441718110061],[111.87330610560028,45.102079372735119],[113.46390669154422,44.808893134127118],[115.98509647020015,45.727235012386018],[117.42170128791426,46.672732855814218],[119.66326989143877,46.692679958678951],[119.77282392789758,47.048058783550147],[118.06414269416675,48.066730455103738],[117.29550744025747,47.697709052107399],[115.74283735561576,47.726544501326288],[115.48528201707305,48.135382595403456],[116.67880089728621,49.888531399121405],[117.87924441942639,49.510983384796958],[119.28846072802585,50.142882798862047],[119.27936567594239,50.582907619827296],[120.73819135954201,51.964115302124554],[120.725789015792,52.516226304730822],[120.17708865771689,52.753886216841209],[121.00308475147025,53.251401068731241],[123.57150678924089,53.458804429734641],[125.9463489116462,52.79279857035695],[127.65740726126242,49.760270494172943]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CI","name":"C�te d\'Ivoire","type":"Sovereign country","postal":"CI","admin":"Ivory Coast","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-2.856125047202397,4.994475816259509],[-4.649917364917911,5.168263658057086],[-7.712159389669751,4.364565944837722],[-7.570152553731688,5.707352199725904],[-8.60288021486862,6.467564195171661],[-8.299048631208564,8.316443589710303],[-7.832100389019188,8.575704250518626],[-8.229337124046822,10.129020290563901],[-6.850506557635057,10.138993841996239],[-6.205222947606431,10.524060777219134],[-6.050452032892267,10.096360785355444],[-5.404341599946974,10.370736802609146],[-4.330246954760384,9.610834865757141],[-3.511898972986273,9.90032623945622],[-2.827496303712707,9.642460842319778],[-2.562189500326241,8.219627793811483],[-3.244370083011262,6.250471503113502],[-2.856125047202397,4.994475816259509]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CM","name":"Cameroon","type":"Sovereign country","postal":"CM","admin":"Cameroon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[13.075822381246752,2.267097072759015],[9.649158155972629,2.283866075037736],[9.795195753629457,3.073404445809117],[8.500287713259695,4.771982937026849],[9.233162876023044,6.444490668153335],[10.118276808318257,7.03876963950988],[11.058787876030351,6.644426784690594],[11.745774366918511,6.981382961449754],[13.572949659894562,10.798565985553566],[14.415378859116684,11.572368882692075],[14.577177768622533,12.085360826053503],[14.181336297266794,12.483656927943116],[14.495787387762846,12.859396267137329],[14.893385857816526,12.219047756392584],[14.923564894274961,10.891325181517473],[15.467872755605271,9.982336737503431],[14.171466098699028,10.021378282099931],[13.954218377344006,9.549494940626687],[14.97999555833769,8.796104234243472],[15.436091749745771,7.692812404811973],[14.536560092841114,6.226958726420691],[14.478372430080469,4.732605495620447],[15.862732374747482,3.013537298998983],[15.940918816805066,1.727672634280296],[13.075822381246752,2.267097072759015]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CD","name":"Dem. Rep. Congo","type":"Sovereign country","postal":"DRC","admin":"Democratic Republic of the Congo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[30.833859897593811,3.509165961110341],[30.773346795380039,2.339883327642127],[31.174149204235817,2.204465236821264],[29.875778842902491,0.597379868976304],[29.024926385216787,-2.839257907730158],[29.419992710088167,-5.939998874539434],[30.740015496551791,-8.340007419470915],[29.00291222506047,-8.407031752153472],[28.449871046672826,-9.164918308146085],[28.673681674928929,-9.605924981324932],[28.372253045370428,-11.793646742401393],[29.34154788586909,-12.360743910372413],[29.61600141777123,-12.178894545137311],[29.699613885219492,-13.257226657771831],[28.934285922976837,-13.248958428605135],[28.155108676879987,-12.272480564017897],[27.388798862423783,-12.132747491100666],[27.164419793412463,-11.608748467661075],[26.553087599399618,-11.924439792532127],[25.752309604604733,-11.784965101776358],[25.418118116973204,-11.330935967659961],[24.314516228947952,-11.26282642989927],[24.257155389103989,-10.951992689663657],[22.155268182064308,-11.084801120653772],[21.728110792739699,-7.290872491081302],[20.514748162526502,-7.29960580813863],[20.601822950938299,-6.939317722199682],[20.091621534920648,-6.943090101756994],[19.41750247567316,-7.155428562044299],[19.016751743249671,-7.988245944860132],[17.472970004962235,-8.0685511206417],[16.326528354567046,-5.877470391466268],[12.322431674863511,-6.10009246177966],[12.182336866920252,-5.789930515163839],[12.63161176926579,-4.991271254092936],[13.600234816144678,-4.50013844159097],[14.144956088933299,-4.510008640158716],[14.582603794013181,-4.97023894615014],[16.006289503654301,-3.535132744972529],[15.972803175529151,-2.712392266453612],[16.407091912510054,-1.740927015798683],[17.638644646889986,-0.424831638189247],[18.542982211997781,4.201785183118318],[19.467783644293149,5.03152781821278],[22.405123732195538,4.029160061047321],[22.841479526468106,4.710126247573484],[23.297213982850138,4.609693101414223],[24.410531040146253,5.10878408448913],[24.805028924262416,4.89724660890235],[25.650455356557472,5.256087754737123],[27.37422610851749,5.233944403500061],[27.979977247842811,4.408413397637375],[29.71599531425602,4.600804755060025],[30.833859897593811,3.509165961110341]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CG","name":"Congo","type":"Sovereign country","postal":"CG","admin":"Republic of Congo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[12.995517205465177,-4.781103203961884],[12.620759718484493,-4.438023369976136],[11.91496300624209,-5.037986748884791],[11.093772820691925,-3.978826592630547],[11.855121697648116,-3.426870619321051],[11.478038771214303,-2.765618991714241],[12.495702752338161,-2.391688327650243],[12.575284458067642,-1.948511244315135],[13.109618767965628,-2.428740329603514],[13.99240726080771,-2.4708049454891],[14.299210239324566,-1.998275648612214],[14.316418491277744,-0.552627455247048],[13.843320753645656,0.038757635901149],[14.276265903386957,1.196929836426619],[13.282631463278818,1.314183661296881],[13.075822381246752,2.267097072759015],[15.940918816805066,1.727672634280296],[16.537058139724138,3.198254706226279],[17.133042433346304,3.728196519379452],[18.453065219809929,3.504385891123349],[17.638644646889986,-0.424831638189247],[16.407091912510054,-1.740927015798683],[15.972803175529151,-2.712392266453612],[16.006289503654301,-3.535132744972529],[14.582603794013181,-4.97023894615014],[14.144956088933299,-4.510008640158716],[12.995517205465177,-4.781103203961884]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CO","name":"Colombia","type":"Sovereign country","postal":"CO","admin":"Colombia","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-75.373223232713855,-0.15203175212045],[-76.292314419240967,0.416047268064119],[-77.424984300430395,0.395686753741117],[-78.99093522817104,1.691369940595251],[-78.617831387023713,1.766404120283056],[-78.427610439757331,2.629555568854215],[-77.931542527971487,2.696605739752926],[-77.12768978545526,3.849636135265357],[-77.496271938777028,4.087606105969428],[-77.318815070286746,5.84535411216136],[-77.881571417945253,7.223771267114785],[-77.753413865861404,7.709839789252143],[-77.242566494440084,7.935278225125444],[-77.353360765273862,8.67050466555807],[-76.836673957003569,8.638749497914716],[-75.674600185840063,9.443248195834599],[-75.480425991503353,10.618990383339309],[-74.906895107711989,11.083044745320322],[-73.414763963500292,11.22701528568548],[-71.754090135368642,12.437303168177309],[-71.399822353791706,12.376040757695293],[-71.13746110704588,12.112981879113505],[-71.331583624950298,11.776284084515808],[-71.973921678338286,11.60867157637712],[-72.905286017534706,10.450344346554772],[-73.304951544880055,9.151999823437606],[-72.788729824500393,9.085027167187334],[-72.439862230097958,8.405275376820029],[-72.444487270788073,7.423784898300482],[-71.960175747348643,6.991614895043539],[-70.093312954372422,6.96037649172311],[-69.389479946557117,6.099860541198837],[-67.341439581965574,6.095468044454023],[-67.823012254493548,4.503937282728899],[-67.303173183853445,3.31845408773718],[-67.809938117123707,2.820655015469569],[-67.18129431829307,2.250638129074062],[-66.87632585312258,1.253360500489336],[-67.065048183852497,1.130112209473225],[-67.537810024674698,2.03716278727633],[-67.868565029558837,1.692455145673392],[-69.816973232691623,1.714805202639624],[-69.80459672715773,1.089081122233466],[-69.21863766140018,0.985676581217433],[-69.252434048119056,0.602650865070075],[-70.015565761989308,0.541414292804205],[-70.020655890570055,-0.185156345219539],[-69.420485805932231,-1.122618503426409],[-69.893635219996625,-4.298186944194328],[-70.692682054309714,-3.742872002785859],[-70.047708502874855,-2.725156345229699],[-70.813475714791963,-2.256864515800743],[-73.070392218707241,-2.308954359550953],[-73.6595035468346,-1.260491224781134],[-75.106624518520078,-0.05720549886486],[-75.373223232713855,-0.15203175212045]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CR","name":"Costa Rica","type":"Sovereign country","postal":"CR","admin":"Costa Rica","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-82.965783047197363,8.225027980985985],[-83.508437262694315,8.446926581247283],[-83.632641567707836,9.051385809765321],[-84.975660366541334,10.086723130733006],[-85.11092342806532,9.55703969974131],[-85.66078650586698,9.933347479690724],[-85.659313727546674,10.754330959511719],[-85.941725430021762,10.895278428587801],[-85.561851976244199,11.217119248901597],[-83.895054490885954,10.726839097532446],[-83.655611741861577,10.938764146361422],[-82.546196255203483,9.566134751824677],[-82.932890998043575,9.476812038608173],[-82.719183112300527,8.925708726431495],[-82.965783047197363,8.225027980985985]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CU","name":"Cuba","type":"Sovereign country","postal":"CU","admin":"Cuba","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-82.268151211257063,23.188610744717707],[-80.618768683581195,23.105980129483001],[-79.281485968732085,22.399201565027056],[-78.347434455056487,22.512166246017088],[-76.523824835908556,21.206819566324373],[-75.59822241891267,21.016624457274133],[-75.671060350228061,20.735091254148003],[-74.17802486845126,20.284627793859741],[-74.961594611292938,19.923435370355691],[-77.755480923153073,19.855480861891877],[-77.085108405246743,20.413353786698792],[-78.137292243141587,20.739948838783434],[-78.719866502584011,21.598113511638434],[-82.16999182811864,22.387109279870753],[-81.795001797192668,22.636964830001958],[-82.775897996740852,22.688150336187064],[-84.052150845053262,21.910575059491254],[-84.974911058273108,21.89602814380109],[-83.778239915690193,22.788118394455694],[-82.268151211257063,23.188610744717707]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"N. Cyprus","type":"Sovereign country","postal":"CN","admin":"Northern Cyprus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.731780226377452,35.140025946588437],[32.946960890440806,35.386703396133697],[34.576473829900465,35.671595567358793],[33.973616570783463,35.058506374648005],[32.731780226377452,35.140025946588437]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CY","name":"Cyprus","type":"Sovereign country","postal":"CY","admin":"Cyprus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.973616570783463,35.058506374648005],[32.979827101378447,34.571869411755443],[32.25666710788596,35.103232326796629],[33.190977003723049,35.17312470147138],[33.973616570783463,35.058506374648005]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CZ","name":"Czech Rep.","type":"Sovereign country","postal":"CZ","admin":"Czech Republic","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.960288120194576,48.5969823268506],[15.253415561593982,49.039074205107582],[14.338897739324722,48.555305284207208],[12.521024204161193,49.547415269562734],[12.240111118222558,50.266337795607285],[14.307013380600637,51.117267767941414],[15.016995883858669,51.10667409932158],[16.238626743238569,50.697732652379841],[16.176253289462267,50.422607326857907],[16.719475945714436,50.215746568393541],[16.868769158605659,50.47397370055603],[17.554567091551121,50.362145901076417],[17.649445021238989,50.049038397819956],[18.392913852622172,49.988628648470751],[18.853144158613617,49.496229763377642],[16.960288120194576,48.5969823268506]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DE","name":"Germany","type":"Sovereign country","postal":"D","admin":"Germany","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.921906365609232,54.983104153048032],[9.9395797054529,54.596641954153256],[10.950112338920519,54.363607082733154],[10.93946699386845,54.00869334575259],[12.518440382546714,54.470370591847995],[13.647467075259499,54.075510972705899],[14.353315463934166,53.248171291713106],[14.074521111719434,52.981262518925348],[15.016995883858783,51.106674099321708],[14.307013380600665,51.117267767941371],[12.240111118222671,50.266337795607228],[12.521024204161336,49.547415269562748],[13.595945672264577,48.877171942737164],[12.884102817443875,48.28914581968786],[12.932626987366064,47.467645575543997],[12.141357456112871,47.703083401065783],[10.544504021861599,47.566399237653798],[10.402083774465325,47.302487697939171],[8.522611932009795,47.830827541691349],[7.466759067422288,47.620581976911922],[8.099278598674857,49.01778351500343],[6.186320428094177,49.463802802114515],[5.988658074577813,51.851615709025054],[6.589396599970826,51.852029120483394],[6.842869500362383,52.228440253297549],[7.092053256873896,53.144043280644894],[6.905139601274129,53.482162177130647],[7.936239454793963,53.748295803433791],[8.121706170289485,53.527792466844289],[8.800734490604668,54.020785630908904],[8.526229282270208,54.962743638725158],[9.921906365609232,54.983104153048032]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DJ","name":"Djibouti","type":"Sovereign country","postal":"DJ","admin":"Djibouti","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[43.081226027200159,12.699638576707116],[43.286381463398925,11.974928290245884],[42.715873650896526,11.735640570518342],[43.145304803242141,11.462039699748857],[42.776851841000962,10.92687856693442],[41.755570000000205,11.050910000000101],[41.661760000000129,11.6312],[42.35156000000012,12.542230000000131],[43.081226027200159,12.699638576707116]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DK","name":"Denmark","type":"Country","postal":"DK","admin":"Denmark","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[12.690006137755631,55.609990953180784],[12.089991082414741,54.800014553437933],[11.043543328504228,55.364863796604254],[10.903913608451631,55.779954738988749],[12.370904168353292,56.111407375708836],[12.690006137755631,55.609990953180784]]],[[[10.912181837618363,56.458621324277914],[9.649984978889307,55.469999498102055],[9.921906365609175,54.98310415304806],[8.526229282270236,54.962743638724987],[8.12031090661759,55.517722683323626],[8.089976840862249,56.540011705137601],[8.543437534223386,57.110002753316905],[10.580005730846153,57.73001658795485],[10.250000034230226,56.89001618105047],[10.912181837618363,56.458621324277914]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DO","name":"Dominican Rep.","type":"Sovereign country","postal":"DO","admin":"Dominican Republic","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-71.712361416292964,19.714455878167357],[-69.950815192327582,19.647999986240009],[-69.769250047470081,19.293267116772441],[-69.222125820579876,19.313214219637103],[-69.254346076113848,19.015196234609874],[-68.317943284768972,18.612197577381693],[-68.689315965434517,18.205142320218613],[-69.952933926051543,18.428306993071061],[-70.517137213814223,18.184290879788833],[-70.669298468697633,18.426885891183034],[-71.400209927033899,17.598564357976599],[-71.945112067335558,18.616900132720261],[-71.701302659782499,18.785416978424053],[-71.712361416292964,19.714455878167357]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DZ","name":"Algeria","type":"Sovereign country","postal":"DZ","admin":"Algeria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[11.999505649471613,23.47166840259645],[5.677565952180686,19.601206976799716],[3.158133172222705,19.057364203360038],[3.1466610042539,19.693578599521445],[2.06099083823392,20.142233384679486],[1.823227573259032,20.610809434486043],[-8.684399786809053,27.395744126896005],[-8.674116176782974,28.841288967396579],[-5.242129278982787,30.000443020135592],[-4.859646165374471,30.501187649043846],[-3.690441046554696,30.896951605751156],[-3.647497931320146,31.637294012980675],[-1.30789913573787,32.262888902306102],[-1.124551153966308,32.651521511357132],[-2.169913702798624,35.16839630791668],[-1.208602871089056,35.714848741187097],[1.466918572606545,36.605647081034405],[5.320120070017794,36.716518866516623],[6.261819695672613,37.110655015606739],[8.420964389691676,36.946427313783161],[8.140981479534304,34.65514598239379],[7.524481642292244,34.09737641045146],[7.612641635782182,33.344114895148962],[9.055602654668149,32.102691962201291],[9.805634392952413,29.42463837332339],[9.716285841519749,26.512206325785698],[9.319410841518163,26.094324856057455],[10.303846876678362,24.379313259370917],[10.771363559622927,24.562532050061751],[11.999505649471613,23.47166840259645]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EC","name":"Ecuador","type":"Sovereign country","postal":"EC","admin":"Ecuador","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-80.302560594387216,-3.404856459164713],[-79.770293341780928,-2.65751189535964],[-79.986559210922422,-2.220794366061014],[-80.368783942369248,-2.685158786635788],[-80.967765469064361,-2.246942640800704],[-80.933659023751716,-1.057454522306358],[-80.583370327461267,-0.906662692878683],[-80.090609707342111,0.768428859862397],[-78.855258755188714,1.380923773601822],[-77.668612840470445,0.825893052570962],[-77.424984300430395,0.395686753741117],[-76.292314419240967,0.416047268064119],[-75.373223232713855,-0.15203175212045],[-75.233722703741947,-0.911416924649529],[-75.544995693652041,-1.56160979574588],[-76.635394253226721,-2.608677666843818],[-77.837904832658609,-3.003020521663103],[-78.639897223612337,-4.547784112164074],[-79.205289069317729,-4.959128513207389],[-79.624979214176179,-4.454198093283495],[-80.442241990872162,-4.425724379090674],[-80.302560594387216,-3.404856459164713]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EG","name":"Egypt","type":"Sovereign country","postal":"EG","admin":"Egypt","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.9226,29.50133],[33.92136,27.6487],[32.32046,29.76043],[34.10455,26.14227],[35.69241,23.92671],[35.52598,23.10244],[36.86623,22.0],[25.0,22.0],[25.0,29.238654529533459],[24.70007,30.04419],[24.80287,31.08929],[25.16482,31.56915],[26.49533,31.58568],[28.91353,30.87005],[30.97693,31.55586],[31.68796,31.4296],[31.96041,30.9336],[32.19247,31.26034],[33.7734,30.96746],[34.26544,31.21936],[34.9226,29.50133]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ER","name":"Eritrea","type":"Sovereign country","postal":"ER","admin":"Eritrea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[42.35156000000012,12.542230000000131],[40.8966,14.118640000000141],[40.026218702969175,14.519579169162284],[39.0994,14.74064],[38.51295,14.50547],[37.906070000000113,14.959430000000168],[37.59377,14.2131],[36.42951,14.42211],[36.852530000000115,16.95655],[38.410089959473225,17.998307399970315],[39.26611006038803,15.922723496967251],[43.081226027200159,12.699638576707116],[42.35156000000012,12.542230000000131]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ES","name":"Spain","type":"Sovereign country","postal":"E","admin":"Spain","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-9.034817674180246,41.880570583659676],[-8.984433152695672,42.592775173506269],[-9.392883673530648,43.026624660812701],[-7.97818966310831,43.748337714200993],[-1.901351284177764,43.422802028978339],[-1.502770961910528,43.034014390630432],[0.338046909190581,42.57954600683955],[0.701590610363894,42.795734361332606],[1.826793247087153,42.343384711265692],[2.985998976258458,42.473015041669861],[3.039484083680549,41.892120266276905],[2.091841668312185,41.226088568683096],[0.810524529635188,41.014731960609339],[-0.278711310212941,39.30997813573272],[0.111290724293838,38.73851430923304],[-0.467123582349103,38.292365831041153],[-0.683389451490598,37.642353827457825],[-1.438382127274849,37.443063666324221],[-2.146452602538119,36.674144192037289],[-4.368900926114719,36.677839056946155],[-5.377159796561458,35.946850083961465],[-5.866432257500904,36.029816596006057],[-6.520190802425404,36.942913316387319],[-7.453725551778092,37.097787583966067],[-7.537105475281024,37.428904323876239],[-7.029281175148796,38.075764065089771],[-7.374092169616318,38.373058580064921],[-7.098036668313128,39.030072740223787],[-7.498632371439726,39.629571031241809],[-7.066591559263529,39.711891587882775],[-6.851126674822552,41.111082668617527],[-6.389087693700915,41.381815497394655],[-6.668605515967657,41.883386949219584],[-8.013174607769912,41.790886135417125],[-8.263856980817792,42.28046865495034],[-9.034817674180246,41.880570583659676]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EE","name":"Estonia","type":"Sovereign country","postal":"EST","admin":"Estonia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[24.312862583114622,57.793423570376973],[24.428927850042161,58.383413397853289],[24.061198357853186,58.257374579493408],[23.426560092876684,58.612753404364625],[23.339795363058645,59.187240302153384],[25.864189080516638,59.611090399811332],[28.13169925305175,59.300825100330925],[27.420166456824944,58.724581203844238],[27.716685825315722,57.791899115624361],[27.288184848751513,57.474528306703832],[25.164593540149269,57.970156968815189],[24.312862583114622,57.793423570376973]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ET","name":"Ethiopia","type":"Sovereign country","postal":"ET","admin":"Ethiopia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[37.906070000000113,14.959430000000168],[38.51295,14.50547],[39.0994,14.74064],[40.026250000000118,14.51959],[41.59856,13.452090000000112],[42.35156000000012,12.542230000000131],[41.661760000000129,11.6312],[41.755570000000205,11.050910000000101],[42.776851841000962,10.92687856693442],[42.55876,10.57258000000013],[43.67875,9.18358000000012],[46.94834,7.99688],[47.78942,8.003],[44.9636,5.001620000000116],[43.66087,4.95755],[41.855083092644122,3.918911920483765],[41.171800000000133,3.91909],[40.768480000000125,4.257020000000125],[39.559384258765931,3.422060000000215],[38.120915000000139,3.598605],[36.855093238008237,4.447864127672858],[36.159078632855653,4.447864127672858],[35.817447662353629,4.776965663462022],[35.817447662353629,5.338232082790853],[35.298007118233102,5.506],[34.70702,6.594220000000121],[33.568290000000104,7.71334],[32.954180000000235,7.784970000000101],[33.294800000000123,8.35458],[33.825500000000147,8.37916],[34.25745,10.63009],[35.863630000000171,12.57828],[36.42951,14.42211],[37.59377,14.2131],[37.906070000000113,14.959430000000168]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FI","name":"Finland","type":"Country","postal":"FIN","admin":"Finland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[28.591929559043194,69.064776923286658],[28.445943637818658,68.364612942164044],[29.97742638522061,67.698297024192655],[29.054588657352326,66.944286200621931],[30.21765,65.80598],[29.544429559046989,64.948671576590485],[30.444684686003711,64.20445343693909],[30.035872430142717,63.552813625738551],[31.516092156711125,62.867687486412891],[31.139991082490894,62.357692776124409],[28.069997592895277,60.503516547275837],[22.869694858499457,59.846373196036225],[21.322244093519316,60.720169989659524],[21.544866163832694,61.705329494871791],[21.059211053153689,62.60739329695874],[21.536029493910803,63.18973501245587],[25.398067661243942,65.111426500093742],[25.294043003040404,65.534346421970454],[23.565879754335583,66.396050930437426],[23.539473097434438,67.93600861273525],[20.645592889089528,69.106247260200874],[21.244936150810673,69.370443020293081],[22.356237827247412,68.841741441514912],[24.735679152126725,68.64955678982146],[25.689212680776365,69.092113755969038],[26.179622023226244,69.825298977326142],[27.732292107867863,70.164193020296253],[29.015572950971972,69.766491197377988],[28.591929559043194,69.064776923286658]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FJ","name":"Fiji","type":"Sovereign country","postal":"FJ","admin":"Fiji","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[178.3736,-17.33992],[178.71806,-17.62846],[178.55271,-18.15059],[177.38146,-18.16432],[177.28504,-17.72465],[177.67087000000012,-17.38114],[178.3736,-17.33992]]],[[[179.36414266196428,-16.801354076946851],[178.72505936299709,-17.012041674368021],[178.59683859511708,-16.63915],[180.00000000000014,-16.06713266364244],[180.00000000000014,-16.55521656663916],[179.36414266196428,-16.801354076946851]]],[[[-179.91736938476527,-16.501783135649362],[-180.0,-16.06713266364244],[-179.79332010904861,-16.020882256741231],[-179.91736938476527,-16.501783135649362]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FK","name":"Falkland Is.","type":"Dependency","postal":"FK","admin":"Falkland Islands","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-61.2,-51.85],[-60.0,-51.25],[-59.15,-51.5],[-58.55,-51.1],[-57.75,-51.55],[-58.05,-51.9],[-59.4,-52.2],[-59.85,-51.85],[-60.7,-52.3],[-61.2,-51.85]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FR","name":"France","type":"Country","postal":"F","admin":"France","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[-52.556424730018392,2.504705308437053],[-53.418465135295264,2.053389187016038],[-53.554839240113495,2.334896551925965],[-54.088062506717279,2.105556545414629],[-54.524754197799751,2.311848863123785],[-54.011503872276819,3.622569891774859],[-54.478632981979217,4.896755682795643],[-53.958044603070931,5.756548163267809],[-52.882141282754077,5.409850979021599],[-51.82334286152593,4.565768133966145],[-51.657797410678882,4.156232408053029],[-52.556424730018392,2.504705308437053]]],[[[9.560016310269134,42.152491970379572],[9.229752231491773,41.380006822264448],[8.775723097375362,41.583611965494441],[8.54421268070783,42.256516628583086],[9.390000848028905,43.009984849614739],[9.560016310269134,42.152491970379572]]],[[[3.588184441755715,50.378992418003577],[4.286022983425141,49.907496649772554],[8.099278598674772,49.017783515003373],[7.466759067422231,47.620581976911865],[6.736571079138088,47.541801255882888],[6.037388950228973,46.725778713561908],[6.022609490593567,46.272989813820516],[6.500099724970454,46.429672756529442],[6.843592970414562,45.991146552100673],[7.096652459347837,45.333098863295874],[6.749955275101712,45.028517971367592],[7.007562290076663,44.254766750661389],[7.549596388386163,44.127901109384823],[7.435184767291844,43.693844916349178],[6.529245232783069,43.128892320318357],[4.556962517931396,43.399650987311588],[3.10041059735272,43.075200507167125],[2.985998976258486,42.473015041669896],[1.826793247087181,42.343384711265657],[0.701590610363922,42.795734361332649],[0.338046909190581,42.579546006839564],[-1.502770961910471,43.034014390630489],[-1.901351284177736,43.422802028978339],[-1.384225226232957,44.022610378590173],[-1.193797573237362,46.014917710954876],[-2.963276129559574,47.570326646507965],[-4.491554938159482,47.954954332056417],[-4.592349819344747,48.684160468126947],[-3.295813971357745,48.901692409859635],[-1.616510789384932,48.644421291694584],[-1.933494025063254,49.776341864615773],[-0.98946895995536,49.347375800160876],[1.338761020522753,50.127173163445264],[1.6390010921385,50.946606350297515],[2.513573032246171,51.148506171261857],[2.658422071960331,50.79684804951566],[3.588184441755715,50.378992418003577]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GA","name":"Gabon","type":"Sovereign country","postal":"GA","admin":"Gabon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[11.093772820691925,-3.978826592630547],[9.405245395554971,-2.144313246269043],[8.830086704146424,-0.779073581550037],[9.492888624721985,1.010119533691494],[11.285078973036462,1.057661851400013],[11.276449008843713,2.261050930180872],[12.951333855855609,2.32161570882694],[13.282631463278818,1.314183661296881],[14.276265903386957,1.196929836426619],[13.843320753645656,0.038757635901149],[14.316418491277744,-0.552627455247048],[14.299210239324566,-1.998275648612214],[13.99240726080771,-2.4708049454891],[13.109618767965628,-2.428740329603514],[12.575284458067642,-1.948511244315135],[12.495702752338161,-2.391688327650243],[11.478038771214303,-2.765618991714241],[11.855121697648116,-3.426870619321051],[11.093772820691925,-3.978826592630547]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GB","name":"United Kingdom","type":"Country","postal":"GB","admin":"United Kingdom","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[-5.661948614921897,54.554603176483852],[-6.197884894220977,53.867565009163343],[-7.572167934591079,54.059956366585993],[-7.366030646178785,54.595840969452695],[-7.572167934591079,55.131622219454897],[-6.733847011736145,55.172860012423797],[-5.661948614921897,54.554603176483852]]],[[[-3.005004848635281,58.635000108466329],[-4.073828497728016,57.553024807355257],[-1.959280564776918,57.684799709699519],[-2.219988165689301,56.870017401753529],[-3.119003058271119,55.973793036515474],[-2.085009324543023,55.909998480851272],[-1.11499101399221,54.624986477265395],[-0.4304849918542,54.464376125702159],[0.469976840831777,52.929999498091973],[1.681530795914739,52.739520168664001],[1.559987827164377,52.099998480836007],[1.050561557630914,51.806760565795685],[1.449865349950301,51.289427802121963],[0.550333693045502,50.765738837275876],[-2.489997524414378,50.500018622431242],[-2.956273972984036,50.696879991247016],[-3.617448085942328,50.228355617872722],[-4.542507900399244,50.341837063185665],[-5.245023159191135,49.959999904981089],[-5.776566941745301,50.159677639356829],[-4.309989793301838,51.210001125689161],[-3.414850633142123,51.42600861266925],[-4.984367234710874,51.593466091510976],[-5.267295701508886,51.991400458374585],[-4.222346564134853,52.301355699261364],[-4.770013393564113,52.840004991255626],[-4.579999152026915,53.495003770555172],[-3.092079637047107,53.404440822963551],[-2.945008510744344,53.984999701546684],[-3.630005458989331,54.615012925833014],[-4.844169073903004,54.790971177786844],[-5.082526617849226,55.061600653699372],[-4.719112107756644,55.508472601943481],[-5.047980922862109,55.78398550070753],[-5.58639767091114,55.311146145236819],[-5.644998745130181,56.275014960344805],[-6.149980841486354,56.785009670633542],[-5.786824713555291,57.818848375064647],[-5.009998745127575,58.630013332750053],[-3.005004848635281,58.635000108466329]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GE","name":"Georgia","type":"Sovereign country","postal":"GE","admin":"Georgia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[41.554084100110657,41.535656236327569],[41.453470086438386,42.64512339941794],[40.32139448422032,43.128633938156845],[40.076964959479767,43.553104153002316],[42.39439456560882,43.220307929042633],[43.931199985536836,42.554973863284772],[45.470279168485717,42.502780666669977],[46.404950799348825,41.860675157227305],[46.145431756379018,41.72280243587258],[46.637908156120581,41.181672675128226],[45.217426385281584,41.411451931314048],[43.582745802592733,41.092143256182567],[42.619548781104491,41.583172715819941],[41.554084100110657,41.535656236327569]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GH","name":"Ghana","type":"Sovereign country","postal":"GH","admin":"Ghana","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[1.060121697604927,5.928837388528876],[-1.964706590167594,4.710462144383371],[-2.856125047202397,4.994475816259509],[-3.244370083011262,6.250471503113502],[-2.562189500326241,8.219627793811483],[-2.940409308270461,10.962690334512558],[0.023802524423701,11.018681748900804],[0.712029249686879,8.312464504423829],[0.570384148774849,6.914358628767189],[1.060121697604927,5.928837388528876]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GN","name":"Guinea","type":"Sovereign country","postal":"GN","admin":"Guinea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-8.439298468448698,7.686042792181738],[-9.208786383490846,7.313920803247953],[-9.755342169625834,8.541055202666925],[-10.505477260774668,8.348896389189605],[-10.622395188835041,9.267910061068278],[-11.11748124840733,10.045872911006285],[-12.425928514037565,9.835834051955956],[-13.246550258832515,8.903048610871508],[-15.130311245168173,11.040411688679526],[-14.685687221728898,11.527823798056488],[-13.743160773157413,11.811269029177412],[-13.700476040084325,12.586182969610194],[-11.513942836950591,12.442987575729418],[-11.456168585648271,12.076834214725338],[-11.03655595543826,12.211244615116515],[-10.165213792348837,11.844083563682744],[-9.127473517279583,12.308060411015333],[-8.376304897484914,11.393645941610629],[-8.620321010767128,10.810890814655183],[-8.282357143578281,10.792597357623846],[-8.029943610048619,10.206534939001713],[-8.309616461612251,9.789531968622441],[-7.832100389019188,8.575704250518626],[-8.299048631208564,8.316443589710303],[-8.439298468448698,7.686042792181738]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GM","name":"Gambia","type":"Sovereign country","postal":"GM","admin":"Gambia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-16.841524624081273,13.151393947802561],[-16.713728807023472,13.594958604379855],[-15.39877031092446,13.860368760630919],[-14.046992356817482,13.794067898000449],[-13.844963344772408,13.505041612192002],[-16.841524624081273,13.151393947802561]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GW","name":"Guinea-Bissau","type":"Sovereign country","postal":"GW","admin":"Guinea Bissau","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-15.130311245168173,11.040411688679526],[-16.085214199273565,11.52459402103824],[-16.677451951554573,12.384851589401052],[-13.700476040084325,12.586182969610194],[-13.743160773157413,11.811269029177412],[-14.685687221728898,11.527823798056488],[-15.130311245168173,11.040411688679526]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GQ","name":"Eq. Guinea","type":"Sovereign country","postal":"GQ","admin":"Equatorial Guinea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.492888624721985,1.010119533691494],[9.305613234096256,1.160911363119183],[9.649158155972629,2.283866075037736],[11.276449008843713,2.261050930180872],[11.285078973036462,1.057661851400013],[9.492888624721985,1.010119533691494]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GR","name":"Greece","type":"Sovereign country","postal":"GR","admin":"Greece","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[23.699980096133004,35.705004380835533],[24.24666507334868,35.368022365860156],[26.290002882601726,35.299990342747918],[26.164997592887659,35.004995429009796],[24.724982130642303,34.91998769788961],[23.514978468528113,35.279991563450977],[23.699980096133004,35.705004380835533]]],[[[26.604195590936285,41.562114569661105],[26.056942172965506,40.824123440100834],[23.714811232200816,40.687129218095123],[24.407998894964066,40.124992987624097],[23.899967889102584,39.96200552017558],[23.3429993018608,39.960997829745793],[22.813987664488963,40.476005153966554],[22.849747755634809,39.659310818025773],[23.350027296652598,39.190011298167263],[22.973099399515547,38.970903225249657],[24.025024855248944,38.21999298761645],[24.040011020613605,37.655014553369426],[23.115002882589152,37.920011298162223],[23.409971958111072,37.409990749657396],[22.774971958108637,37.305010077456558],[23.15422529469862,36.422505804992056],[21.670026482843696,36.844986477194198],[21.120034213961333,38.310323391262727],[20.15001590341052,39.624997666984029],[21.020040317476429,40.84272695572588],[24.492644891058035,41.58389618587205],[25.197201368925533,41.234485988930658],[26.106138136507184,41.328898830727837],[26.117041863720914,41.826904608724732],[26.604195590936285,41.562114569661105]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GL","name":"Greenland","type":"Country","postal":"GL","admin":"Greenland","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[-46.76379,82.62796],[-43.40644,83.22516],[-39.89753,83.18018],[-38.62214,83.54905],[-27.10046,83.51966],[-20.84539,82.72669],[-22.69182,82.34165],[-31.9,82.2],[-24.84448,81.78697],[-22.90328,82.09317],[-22.07175,81.73449],[-23.16961,81.15271],[-15.76818,81.91245],[-12.77018,81.71885],[-12.20855,81.29154],[-16.85,80.35],[-20.04624,80.17708],[-17.73035,80.12912],[-19.70499,78.75128],[-19.67353,77.63859],[-18.47285,76.98565],[-21.67944,76.62795],[-19.83407,76.09808],[-19.59896,75.24838],[-20.66818,75.15585],[-19.37281,74.29561],[-21.59422,74.22382],[-20.43454,73.81713],[-20.76234,73.46436],[-23.56593,73.30663],[-22.31311,72.62928],[-22.29954,72.18409],[-24.27834,72.59788],[-24.79296,72.3302],[-22.13281,71.46898],[-21.75356,70.66369],[-23.53603,70.471],[-25.54341,71.43094],[-25.20135,70.75226],[-26.36276,70.22646],[-22.34902,70.12946],[-27.74737,68.47046],[-31.77665,68.12078],[-34.20196,66.67974],[-36.35284,65.9789],[-39.81222,65.45848],[-40.66899,64.83997],[-40.68281,64.13902],[-41.1887,63.48246],[-42.81938,62.68233],[-42.41666,61.90093],[-43.3784,60.09772],[-44.7875,60.03676],[-46.26364,60.85328],[-48.26294,60.85843],[-51.63325,63.62691],[-52.14014,64.27842],[-52.27659,65.1767],[-53.66166,66.09957],[-53.30161,66.8365],[-53.96911,67.18899],[-52.9804,68.35759],[-51.47536,68.72958],[-50.87122,69.9291],[-53.45629,69.283625],[-54.68336,69.61003],[-54.75001,70.28932],[-54.35884,70.821315],[-51.39014,70.56978],[-54.00422,71.54719],[-55.83468,71.65444],[-54.71819,72.58625],[-57.32363,74.71026],[-58.59679,75.09861],[-58.58516,75.51727],[-61.26861,76.10238],[-68.50438,76.06141],[-71.40257,77.00857],[-66.76397,77.37595],[-73.297,78.04419],[-73.15938,78.43271],[-65.7107,79.39436],[-65.3239,79.75814],[-68.02298,80.11721],[-67.15129,80.51582],[-62.23444,81.3211],[-62.65116,81.77042],[-57.20744,82.19074],[-54.13442,82.19962],[-53.04328,81.88833],[-50.39061,82.43883],[-44.523,81.6607],[-46.9007,82.19979],[-46.76379,82.62796]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GT","name":"Guatemala","type":"Sovereign country","postal":"GT","admin":"Guatemala","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-90.095554572290979,13.735337632700734],[-91.689746670279135,14.126218166556455],[-92.227750006869826,14.538828640190928],[-92.229248623406278,15.25144664149586],[-91.747960171255926,16.066564846251723],[-90.464472622422662,16.069562079324655],[-90.438866950222035,16.410109768128095],[-91.453921271515156,17.252177232324172],[-91.002269253284211,17.25465770107418],[-91.001519945015957,17.81759491624571],[-89.143080410503316,17.808318996649319],[-89.229121670269279,15.886937567605171],[-88.225022752622024,15.727722479713904],[-89.154810960633569,15.06641917567481],[-89.145535041037178,14.678019110569082],[-90.095554572290979,13.735337632700734]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GY","name":"Guyana","type":"Sovereign country","postal":"GY","admin":"Guyana","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-59.758284878159195,8.367034816924047],[-58.482962205628063,7.347691351750697],[-58.454876064677421,6.832787380394464],[-57.147436489476888,5.973149929219161],[-57.307245856339506,5.073566595882227],[-57.914288906472137,4.812626451024414],[-58.044694383360678,4.060863552258383],[-57.60156897645787,3.334654649260685],[-57.28143347840971,3.333491929534119],[-56.539385748914555,1.899522609866921],[-57.335822923396904,1.948537705895759],[-58.540012986878295,1.268088283692521],[-59.646043667221257,1.786893825686789],[-59.974524909084558,2.755232652188056],[-59.538039923731233,3.958802598481938],[-60.11100236676738,4.574966538914083],[-59.980958624904886,5.014061184098139],[-60.733574184803722,5.200277207861901],[-61.410302903881956,5.959068101419618],[-61.159336310456482,6.696077378766319],[-60.295668097562398,7.043911444522919],[-60.637972785063766,7.414999904810856],[-60.5505879380582,7.779602972846178],[-59.758284878159195,8.367034816924047]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HN","name":"Honduras","type":"Sovereign country","postal":"HN","admin":"Honduras","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-87.316654425795491,12.984685777229004],[-87.79311113152653,13.384480495655168],[-87.859515347021613,13.893312486217098],[-88.503997972349623,13.845485948130943],[-89.353325975282814,14.424132798719086],[-89.15481096063354,15.066419175674866],[-88.225022752621953,15.727722479714032],[-84.983721889978824,15.995923163308703],[-83.147219000974133,14.99582916916421],[-84.449335903648603,14.621614284722511],[-84.924500698572331,14.790492865452336],[-85.801294725268519,13.836054999237604],[-86.096263800790609,14.038187364147234],[-86.755086636079625,13.754845485890939],[-86.733821784191491,13.2630925562014],[-87.316654425795491,12.984685777229004]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HR","name":"Croatia","type":"Sovereign country","postal":"HR","admin":"Croatia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[18.829838087650046,45.908877671891844],[19.390475701584592,45.236515611342384],[19.005486281010121,44.860233669609158],[15.959367303133376,45.233776760430942],[15.750026075918981,44.818711656262565],[17.674921502358984,43.02856252702361],[18.56,42.65],[18.450016310304818,42.479991360029317],[16.015384555737683,43.507215481127218],[15.174453973052096,44.243191229827914],[15.376250441151797,44.317915350922078],[14.901602410550879,45.076060289076111],[14.258747592839995,45.233776760430942],[13.952254672917036,44.802123521496867],[13.656975538801191,45.136935126315961],[13.715059848697251,45.500323798192426],[15.327674594797429,45.452316392593332],[15.768732944408612,46.238108222023527],[16.564808383864943,46.503750922219808],[17.630066359129557,45.951769110694102],[18.829838087650046,45.908877671891844]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HT","name":"Haiti","type":"Sovereign country","postal":"HT","admin":"Haiti","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-73.189790615517623,19.915683905511912],[-71.712361416292964,19.714455878167357],[-71.701302659782499,18.785416978424053],[-71.945112067335558,18.616900132720261],[-71.708304816358051,18.044997056546094],[-73.922433234335656,18.030992743395004],[-74.458033616824778,18.342549953682706],[-74.369925299767132,18.664907538319412],[-72.694937099890637,18.445799465401862],[-72.334881557897006,18.668421535715254],[-72.784104783810278,19.483591416903408],[-73.415022345661754,19.639550889560283],[-73.189790615517623,19.915683905511912]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HU","name":"Hungary","type":"Sovereign country","postal":"HU","admin":"Hungary","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.202298211337364,46.852385972676963],[16.534267612380376,47.496170966169117],[16.340584344150415,47.71290192320123],[16.903754103267261,47.714865627628328],[16.979666782304037,48.123497015976305],[17.857132602620027,47.758428860050373],[20.801293979584926,48.623854071642384],[22.085608351334855,48.422264309271789],[22.710531447040495,47.882193915389408],[22.099767693782837,47.672439276716702],[21.021952345471249,46.316087958351901],[18.456062452882861,45.759481106136136],[16.202298211337364,46.852385972676963]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ID","name":"Indonesia","type":"Sovereign country","postal":"INDO","admin":"Indonesia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[120.71560875863045,-10.239581394087864],[120.2950142762069,-10.258649997603527],[118.96780846565471,-9.557969252158031],[119.90030968636162,-9.361340427287516],[120.77550174365675,-9.969675388227458],[120.71560875863045,-10.239581394087864]]],[[[124.43595014861941,-10.140000909061442],[123.45998904835503,-10.239994805546175],[123.98000898650812,-9.290026950724695],[124.96868248911622,-8.892790215697048],[125.0885201356011,-9.393173109579323],[124.43595014861941,-10.140000909061442]]],[[[117.90001834520777,-8.095681247594925],[118.87845991422213,-8.28068287519983],[119.1265067892231,-8.705824883665073],[116.74014082241663,-9.032936700072639],[117.08373742072533,-8.457157891476541],[117.63202436734215,-8.449303073768192],[117.90001834520777,-8.095681247594925]]],[[[122.90353722543611,-8.094234307490737],[122.75698286345633,-8.649807631060639],[119.92439090380961,-8.810417982623875],[119.92092858284613,-8.444858900591072],[120.71509199430758,-8.236964613480865],[121.34166873584658,-8.536739597206022],[122.90353722543611,-8.094234307490737]]],[[[108.62347863162896,-6.777673841990676],[110.53922732955331,-6.877357679881683],[110.75957563684594,-6.465186455921753],[112.61481123255638,-6.946035658397591],[112.97876834518812,-7.59421314863458],[114.47893517462117,-7.776527601760279],[115.70552697150109,-8.370806573116866],[114.56451134649652,-8.751816908404834],[113.4647335144609,-8.348947442257426],[108.27776329959633,-7.766657403192582],[106.45410200401616,-7.354899590690948],[106.28062422081231,-6.924899997590202],[105.36548628135554,-6.85141611087117],[106.05164594932708,-5.8959188777945],[107.26500857954019,-5.954985039904059],[108.48684614464926,-6.421984958525769],[108.62347863162896,-6.777673841990676]]],[[[134.72462446506668,-6.214400730009288],[134.21013390516893,-6.895237725454706],[134.11277550673103,-6.142467136259015],[134.49962527886791,-5.445042006047899],[134.72462446506668,-6.214400730009288]]],[[[127.24921512258894,-3.45906503663889],[126.87492272349888,-3.79098276124958],[126.18380211802733,-3.607376397316557],[125.98903364471929,-3.177273451351326],[127.00065148326499,-3.12931772218441],[127.24921512258894,-3.45906503663889]]],[[[130.4713440288518,-3.09376433676762],[130.8348360535928,-3.858472181822762],[129.99054650280814,-3.446300957862817],[127.89889122936236,-3.393435967628193],[128.13587934785281,-2.843650404474914],[130.4713440288518,-3.09376433676762]]],[[[134.1433679546478,-1.151867364103595],[134.42262739475305,-2.769184665542383],[135.4576029806947,-3.367752780779114],[136.29331424371881,-2.30704233155609],[137.44073774632753,-1.703513278819372],[138.32972741104479,-1.702686455902651],[141.00021040259188,-2.600151055515624],[141.0338517600139,-9.117892754760419],[140.14341515519257,-8.297167657100957],[139.12776655492812,-8.096042982620944],[138.88147667862498,-8.380935153846096],[137.61447391169284,-8.411682631059762],[138.0390991558352,-7.597882175327356],[138.66862145401481,-7.320224704623072],[137.92783979711086,-5.393365573756],[135.16459760959972,-4.462931410340772],[133.6628804871979,-3.538853448097527],[132.98395551974735,-4.112978610860282],[132.75378869031923,-3.311787204607072],[131.98980431531621,-2.820551039240456],[133.78003095920351,-2.47984832114021],[133.69621178602617,-2.214541517753688],[132.23237348849423,-2.212526136894326],[131.83622195854471,-1.617161960459598],[130.94283979708283,-1.432522067880797],[130.51955814018007,-0.937720228686075],[132.3801164084168,-0.369537855636978],[133.98554813042844,-0.780210463060442],[134.1433679546478,-1.151867364103595]]],[[[125.24050052297159,1.419836127117605],[124.43703535369738,0.427881171058971],[123.68550499887672,0.235593166500877],[120.18308312386276,0.23724681233422],[120.04086958219548,-0.519657891444851],[120.93590538949073,-1.408905938323372],[121.47582075407618,-0.955962009285116],[123.34056481332848,-0.615672702643081],[123.2583992859845,-1.076213067228338],[122.82271528533161,-0.930950616055881],[122.38852990121538,-1.516858005381124],[121.50827355355548,-1.904482924002423],[122.4545723816843,-3.186058444840882],[122.27189619353257,-3.529500013852697],[123.17096276254657,-4.683693129091708],[123.16233279835379,-5.340603936385961],[122.62851525277873,-5.634591159694494],[122.23639448454807,-5.282933037948283],[122.71956912647707,-4.46417164471579],[121.73823367725439,-4.8513314754465],[121.48946333220127,-4.574552504091216],[121.61917117725389,-4.188477878438675],[120.89818159391771,-3.602105401222829],[120.97238895068878,-2.62764291749491],[120.30545291552991,-2.931603692235726],[120.43071658740539,-5.528241062037779],[119.79654341031952,-5.673400160345651],[119.36690555224496,-5.379878024927805],[119.65360639860015,-4.459417412944958],[119.49883548388598,-3.494411716326511],[119.07834435432702,-3.487021986508765],[118.7677689962529,-2.801999200047689],[120.03570193896635,0.566477362465804],[120.8857792501677,1.309222723796836],[122.92756676645186,0.875192368977466],[124.07752241424285,0.917101955566139],[125.06598921112183,1.643259182131558],[125.24050052297159,1.419836127117605]]],[[[128.68824873262074,1.132385972494106],[128.63595218314137,0.258485826006179],[128.12016971243619,0.356412665199286],[127.96803429576889,-0.252077325037533],[128.37999881399972,-0.780003757331286],[128.10001590384232,-0.899996433112975],[127.39949018769377,1.011721503092574],[127.93237755748751,2.174596258956555],[128.00415612194084,1.628531398928331],[128.59455936087548,1.540810655112864],[128.68824873262074,1.132385972494106]]],[[[117.87562706916603,1.827640692548911],[118.99674726773819,0.902219143066048],[117.8118583517178,0.784241848143722],[117.47833865770608,0.102474676917026],[117.52164350796662,-0.803723239753211],[116.56004845587952,-1.487660821136231],[116.14808393764864,-4.012726332214015],[116.00085778204911,-3.657037448749009],[114.86480309454456,-4.106984144714417],[114.46865156459509,-3.495703627133821],[113.25699425664757,-3.118775729996855],[112.06812625534067,-3.478392022316072],[111.70329064336002,-2.994442233902632],[110.223846063276,-2.934032484553484],[110.07093550012436,-1.592874037282414],[109.09187381392255,-0.459506524257051],[109.06913618371405,1.341933905437642],[109.66326012577375,2.006466986494985],[109.83022667850886,1.338135687664192],[110.51406090702713,0.773131415200993],[111.79754845586044,0.904441229654651],[112.8598091980522,1.497790025229946],[113.80584964401956,1.217548732911041],[114.6213554220175,1.430688177898887],[115.86551720587678,4.306559149590157],[117.88203494677018,4.137551377779488],[117.31323245653354,3.234428208830579],[118.04832970588538,2.287690131027361],[117.87562706916603,1.827640692548911]]],[[[105.81765506390937,-5.852355645372413],[104.71038414919153,-5.873284600450646],[102.58426069540693,-4.220258884298204],[99.263739862060248,0.183141587724663],[98.601351352943112,1.823506577965617],[95.380876092513489,4.970782172053674],[95.293026157617334,5.479820868344817],[97.484882033277103,5.246320909034012],[100.64143354696168,2.099381211755798],[101.65801232300734,2.083697414555189],[103.83839603069836,0.104541734208667],[103.43764529827499,-0.711945896002845],[104.36999148968491,-1.084843031421016],[104.88789269411402,-2.340425306816655],[105.622111444117,-2.42884368246807],[106.10859337771271,-3.06177662517895],[105.81765506390937,-5.852355645372413]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IN","name":"India","type":"Sovereign country","postal":"IND","admin":"India","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[77.837450799474567,35.494009507787766],[78.912268914713223,34.321936346975789],[78.811086460285736,33.506198025032418],[79.208891636068586,32.994394639613716],[79.17612877799553,32.483779812137712],[78.458446486326011,32.618164374312727],[78.738894484374015,31.515906073527063],[81.111256138029319,30.183480943313402],[80.476721225917402,29.729865220655341],[80.088424513676273,28.79447011974014],[83.304248895199549,27.364505723575562],[84.675017938173795,27.234901231387536],[85.251778598983378,26.726198431906344],[88.06023766474982,26.414615383402491],[88.12044070836987,27.876541652939594],[88.730325962278556,28.086864732367516],[88.83564253128938,27.098966376243762],[89.744527622438852,26.719402981059957],[92.033483514375092,26.838310451763562],[92.103711785859744,27.452614040633208],[91.696656528696678,27.771741848251665],[92.503118931043645,27.896876329046449],[94.565990431702943,29.277438055939985],[95.40480228066464,29.031716620392132],[96.117678664131034,29.452802028922466],[96.586590610747493,28.83097951915434],[96.248833449287787,28.411030992134442],[97.327113885490036,28.261582749946339],[97.402561476636137,27.882536119085444],[97.051988559968095,27.699058946233151],[97.133999058015306,27.083773505149964],[96.419365675850969,27.264589341739224],[95.124767694074961,26.573572089132298],[95.155153436262594,26.001307277932085],[94.106741977925068,23.85074087167348],[93.325187615942795,24.078556423432204],[93.166127557348375,22.278459580977103],[92.672720981825563,22.041238918541254],[92.146034783906813,23.627498684172593],[91.869927606171316,23.624346421802784],[91.706475050832111,22.985263983649187],[91.158963250699728,23.503526923104388],[92.376201613334814,24.976692816664965],[89.920692580121852,25.269749864192178],[89.832480910199621,25.965082098895479],[88.563049350949768,26.446525580342723],[88.209789259802506,25.768065700782714],[88.931553989623083,25.238692328384776],[88.084422235062419,24.501657212821925],[88.699940220090923,24.23371491138856],[88.529769728553788,23.631141872649167],[89.031961297566227,22.055708319582976],[88.888765903685425,21.690588487224748],[86.975704380240273,21.495561631755209],[87.033168572948867,20.743307806882413],[86.499351027373791,20.151638495356607],[85.060265740909699,19.4785788029711],[82.192792189465919,17.016636053937816],[82.191241896497189,16.556664130107848],[80.324895867843878,15.89918488205835],[80.025069207686442,15.136414903214147],[80.286293572921863,13.006260687710835],[79.862546828128501,12.056215318240888],[79.857999302086824,10.35727509199711],[79.340511509115998,10.30885427493962],[78.885345493489183,9.546135972527722],[79.189719679688295,9.216543687370148],[78.277940708330505,8.933046779816934],[77.539897902337941,7.965534776232332],[76.592978957021671,8.89927623131419],[75.746467319648502,11.308250637248307],[74.864815708316826,12.741935736537897],[74.443859490867226,14.617221787977698],[73.534199253233396,15.990652167214961],[72.630533481745402,21.356009426351008],[71.175273471973952,20.757441311114235],[70.470458611945105,20.877330634031384],[69.164130080038831,22.0892980005727],[69.644927606082405,22.450774644454338],[69.349596795534353,22.84317963306269],[68.176645135373406,23.691965033456711],[68.842599318318776,24.359133612560939],[71.043240187468228,24.3565239527302],[70.168926629522019,26.491871649678842],[69.514392938113133,26.940965684511372],[70.616496209601934,27.989196275335868],[71.777665643200322,27.913180243434525],[74.421380242820277,30.979814764931177],[74.405928989565012,31.692639471965279],[75.258641798813215,32.271105455040498],[74.451559279278712,32.764899603805503],[73.749948358051967,34.317698879527853],[74.240202671204969,34.748887030571254],[76.871721632804025,34.653544012992739],[77.837450799474567,35.494009507787766]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IE","name":"Ireland","type":"Sovereign country","postal":"IRL","admin":"Ireland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-6.197884894220991,53.867565009163364],[-6.032985398777611,53.153164170944351],[-6.788856573910849,52.260117906292336],[-8.561616583683559,51.669301255899356],[-9.977085740590269,51.820454820353078],[-9.166282517930782,52.864628811242682],[-9.688524542672454,53.881362616585299],[-7.572167934591064,55.131622219454869],[-7.366030646178785,54.595840969452723],[-7.572167934591064,54.059956366586],[-6.197884894220991,53.867565009163364]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IR","name":"Iran","type":"Sovereign country","postal":"IRN","admin":"Iran","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[53.921597934795557,37.198918361961262],[54.800303989486565,37.392420762678185],[55.511578403551908,37.964117133123167],[56.619366082592819,38.121394354803485],[59.234761997316809,37.412987982730343],[60.377637973883878,36.527383124328367],[61.123070509694145,36.491597194966246],[61.210817091725744,35.650072333309225],[60.528429803311582,33.676446031218006],[60.963700392506006,33.528832302376259],[60.536077915290775,32.981268825811568],[60.941944614511129,31.548074652628753],[61.699314406180832,31.379506130492672],[61.781221551363444,30.735850328081238],[60.874248488208792,29.829238999952608],[61.771868117118629,28.699333807890799],[62.727830438085988,28.25964488373539],[62.755425652929858,27.378923448184988],[63.233897739520302,27.217047024030709],[63.316631707619592,26.756532497661667],[61.87418745305655,26.239974880472104],[61.49736290878419,25.078237006118499],[57.397251417882387,25.739902045183641],[56.970765822177555,26.966106268821363],[56.492138706290206,27.143304755150197],[54.715089552637266,26.480657863871514],[53.493096958231348,26.812368882753049],[52.483597853409613,27.580849107365495],[51.520762566947418,27.865689602158298],[50.115008579311585,30.147772528599717],[49.576850213423995,29.985715236932407],[48.941333449098551,30.317090359004037],[48.567971225789755,29.926778265903522],[48.014568312376099,30.452456773392598],[48.004698113808324,30.985137437457244],[47.685286085812272,30.984853217079632],[47.849203729042102,31.70917593029867],[47.334661492711909,32.469155381799112],[46.109361606639318,33.017287299119005],[45.416690708199042,33.967797756479584],[45.648459507028093,34.748137722303014],[46.151787957550937,35.093258775364291],[46.0763403664048,35.677383327775487],[45.420618117053209,35.977545884742824],[44.225755649600529,37.971584377589352],[44.421402622257546,38.281281236314541],[44.109225294782341,39.428136298168099],[44.793989699081948,39.713002631177048],[45.457721795438772,38.874139105783058],[46.143623081248819,38.741201483712217],[48.060095249225242,39.58223541926246],[48.355529412637878,39.288764960276907],[48.010744256386481,38.794014797514521],[48.883249139202491,38.320245266262617],[49.199612257693339,37.582874253889884],[50.842354363819709,36.872814235983398],[52.264024692601424,36.700421657857703],[53.921597934795557,37.198918361961262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IQ","name":"Iraq","type":"Sovereign country","postal":"IRQ","admin":"Iraq","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[45.420618117053209,35.977545884742824],[46.0763403664048,35.677383327775487],[46.151787957550937,35.093258775364291],[45.648459507028093,34.748137722303014],[45.416690708199042,33.967797756479584],[46.109361606639318,33.017287299119005],[47.334661492711909,32.469155381799112],[47.849203729042102,31.70917593029867],[47.685286085812272,30.984853217079632],[48.004698113808324,30.985137437457244],[48.014568312376099,30.452456773392598],[48.567971225789755,29.926778265903522],[47.302622104690961,30.059069932570722],[46.568713413281756,29.09902517345229],[44.709498732284743,29.178891099559383],[41.889980910007836,31.190008653278369],[39.195468377444968,32.161008816042667],[38.792340529136084,33.378686428352225],[41.006158888519934,34.419372260062119],[41.289707472505455,36.358814602192268],[42.349591098811771,37.229872544904097],[44.772699008977696,37.170444647768434],[45.420618117053209,35.977545884742824]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IS","name":"Iceland","type":"Sovereign country","postal":"IS","admin":"Iceland","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[-14.508695441129234,66.455892239031428],[-14.739637417041607,65.808748277440301],[-13.60973222497981,65.126671047619865],[-14.909833746794902,64.364081936288684],[-18.656245896874992,63.49638296167582],[-22.762971971110158,63.960178941495386],[-21.778484259517683,64.402115790455511],[-23.955043911219111,64.891129869233495],[-22.184402635170358,65.084968166760305],[-22.227423265053332,65.378593655042735],[-24.326184047939336,65.611189276788465],[-23.650514695723089,66.262519029395222],[-22.134922451250887,66.41046865504687],[-20.57628373867955,65.732112128351432],[-19.05684160000159,66.276600857194765],[-17.798623826559052,65.993853257909777],[-16.167818976292125,66.526792304135867],[-14.508695441129234,66.455892239031428]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IL","name":"Israel","type":"Sovereign country","postal":"IS","admin":"Israel","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.719918247222751,32.709192409794866],[35.545665317534542,32.393992011030576],[35.183930291491436,32.532510687788943],[34.974640740709333,31.866582343059722],[35.22589155451243,31.754341132121766],[34.927408481594568,31.353435370401414],[35.397560662586045,31.489086005167582],[35.420918409981965,31.100065822874356],[34.92260257339143,29.501326198844524],[34.265433383935687,31.219360866820153],[35.098457472480675,33.080539252244265],[35.821100701650238,33.277426459276299],[35.719918247222751,32.709192409794866]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IT","name":"Italy","type":"Sovereign country","postal":"I","admin":"Italy","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[15.520376010813834,38.231155096991472],[15.099988234119451,36.619987290995397],[12.431003859108813,37.612949937483819],[12.570943637755136,38.12638113051969],[15.520376010813834,38.231155096991472]]],[[[9.210011834356266,41.209991360024219],[9.809975213264977,40.500008856766101],[9.669518670295673,39.177376410471794],[8.806935662479731,38.906617743478478],[8.428302443077115,39.171847032216618],[8.15999840661766,40.950007229163788],[9.210011834356266,41.209991360024219]]],[[[12.376485223040845,46.767559109069879],[13.806475457421556,46.509306138691187],[13.937630242578336,45.591015936864665],[13.141606479554298,45.736691799495418],[12.328581170306308,45.381778062514854],[12.261453484759159,44.600482082694015],[12.589237094786483,44.091365871754476],[13.526905958722494,43.587727362637906],[14.029820997787027,42.76100779883248],[15.142569614327954,41.955139675456905],[15.926191033601896,41.961315009115737],[16.169897088290412,41.740294908203424],[15.889345737377795,41.541082261718202],[18.480247023195403,40.168866278639825],[18.293385044028099,39.810774441073249],[17.738380161213286,40.277671006830303],[16.869595981522338,40.442234605463852],[16.448743116937322,39.79540070246648],[17.171489698971499,39.424699815420723],[17.052840610429342,38.902871202137305],[16.635088331781844,38.843572496082402],[16.100960727613057,37.985898749334183],[15.684086948314501,37.90884918878703],[16.109332309644316,38.964547024077689],[15.413612501698822,40.04835683853517],[11.191906365614187,42.355425319989678],[10.511947869517797,42.931462510747224],[10.200028924204048,43.920006822274615],[8.888946160526871,44.36633616797954],[7.435184767291844,43.693844916349178],[7.549596388386163,44.127901109384823],[7.007562290076663,44.254766750661389],[6.843592970414562,45.991146552100673],[7.273850945676685,45.776947740250762],[8.316629672894379,46.163642483090854],[8.966305779667835,46.036931871111165],[9.182881707403112,46.440214748716983],[10.363378126678668,46.483571275409844],[10.442701450246602,46.893546250997446],[11.048555942436508,46.751358547546403],[12.153088006243081,47.115393174826437],[12.376485223040845,46.767559109069879]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JM","name":"Jamaica","type":"Sovereign country","postal":"J","admin":"Jamaica","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-77.569600796199211,18.490525417550487],[-76.896618618462128,18.400866807524082],[-76.199658576141644,17.886867173732966],[-77.206341315403478,17.701116237859821],[-78.33771928578561,18.225967922432233],[-77.569600796199211,18.490525417550487]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JO","name":"Jordan","type":"Sovereign country","postal":"J","admin":"Jordan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.545665317534542,32.393992011030576],[35.719918247222751,32.709192409794866],[36.834062127435544,32.312937526980775],[38.792340529136084,33.378686428352225],[39.195468377444968,32.161008816042667],[37.002165561681011,31.508412990844747],[37.998848911294374,30.508499864213135],[36.068940870922063,29.197494615184453],[34.92260257339143,29.501326198844524],[35.545665317534542,32.393992011030576]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JP","name":"Japan","type":"Sovereign country","postal":"J","admin":"Japan","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[134.63842817600388,34.149233710256425],[134.76637902235851,33.80633474378368],[134.20341596897086,33.201177883429636],[133.79295006727651,33.521985175097598],[133.28026818250888,33.289570420864948],[133.01485802625788,32.70456736910478],[132.3631148621927,32.98938202568138],[132.37117638563021,33.463642483040076],[132.92437259331481,34.060298570282043],[133.49296837782222,33.944620876596701],[133.90410607313638,34.364931138642618],[134.63842817600388,34.149233710256425]]],[[[140.9763875673053,37.142074286440163],[140.59976972876214,36.343983466124541],[140.77407433488267,35.842877102190243],[140.25327925024513,35.13811391859366],[138.97552778539622,34.667600002576108],[137.21759891169123,34.606285915661857],[135.7929830262689,33.464805202766627],[135.12098270074543,33.84907115328906],[135.07943484918272,34.59654490817482],[130.98614464734348,33.885761420216284],[132.00003624891005,33.149992377244615],[131.33279015515737,31.450354519164847],[130.68631798718596,31.029579169228242],[130.20241987520498,31.418237616495418],[130.44767622286216,32.319474595665724],[129.8146916037189,32.610309556604392],[129.40846316947258,33.29605581311759],[130.35393517468466,33.6041507024417],[132.61767296766251,35.43339305270942],[134.6083008159778,35.731617743465819],[135.67753787652893,35.527134100886826],[136.72383060114245,37.304984239240383],[137.3906116070045,36.827390651998826],[139.42640465714291,38.215962225897641],[140.05479007381209,39.438807481436385],[139.88337934789988,40.563312486323696],[140.30578250545372,41.195005194659558],[141.3689734234267,41.378559882160289],[141.9142631369705,39.991616115878685],[141.88460086483499,39.180864569651504],[140.95948937394579,38.17400096287659],[140.9763875673053,37.142074286440163]]],[[[143.9101619813795,44.174099839853739],[144.61342654843966,43.960882880217525],[145.3208252300831,44.384732977875444],[145.54313724180278,43.262088324550604],[144.0596619,42.988358262700558],[143.18384972551732,41.995214748699198],[141.61149092017249,42.678790595056086],[141.06728641170665,41.584593817707997],[139.95510623592108,41.569555975911044],[139.81754357315995,42.563758856774399],[140.31208703019323,43.333272610032651],[141.38054894426003,43.388824774746496],[141.96764489152801,45.551483466161358],[143.9101619813795,44.174099839853739]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KZ","name":"Kazakhstan","type":"Sovereign country","postal":"KZ","admin":"Kazakhstan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[70.962314894499286,42.266154283205537],[69.070027296835235,41.384244289712342],[68.632482944620051,40.668680731766869],[68.259895867795649,40.662324530594901],[67.98585574735182,41.135990708982206],[66.714047072216601,41.168443508461564],[66.510648634715722,41.987644151368556],[66.023391554635623,41.994646307944038],[66.098012322865202,42.997660020513081],[64.900824415959335,43.728080552742654],[62.013300408786279,43.504476630215663],[61.058319940032504,44.405816962250583],[58.50312706892845,45.586804307632974],[55.928917270741181,44.995858466159177],[55.968191359283026,41.308641669269377],[55.455251092353819,41.25985911718584],[54.079417759014973,42.324109402020838],[52.502459751196284,41.78331553808647],[52.501426222550322,42.792297878585202],[51.342427199108215,43.132974758469345],[50.305642938036272,44.609835516938915],[51.278503452363225,44.514854234386462],[51.316899041556042,45.245998236667901],[53.040876499245201,45.259046535821767],[53.042736850807785,46.853006089864493],[51.191945428274266,47.048704738953916],[49.101160000000107,46.399330000000134],[48.593241001180502,46.561034247415478],[48.694733514201744,47.075628160177928],[48.057253045449272,47.743752753279523],[47.315231154170249,47.715847479841955],[46.46644575377627,48.39415233010493],[47.549480421749308,50.454698391311126],[48.57784142435753,49.874759629915673],[48.702381626181023,50.605128485712839],[50.766648390512159,51.692762356159903],[52.328723585830971,51.718652248738124],[55.716940545479815,50.621716620478537],[56.777961053296565,51.043551337277052],[58.36329064314674,51.063653469438577],[59.642282342370606,50.545442206415714],[59.932807244715491,50.842194118851864],[61.337424350840934,50.799070136104262],[61.588003371024172,51.272658799843214],[59.967533807215545,51.960420437215703],[60.92726850774028,52.447548326215042],[60.739993117114579,52.719986477257748],[61.699986199800605,52.979996446334269],[60.978066440683165,53.664993394579142],[61.436591424409073,54.006264553434789],[65.178533563095925,54.354227810272107],[69.068166945272878,55.385250149143531],[70.865266554655136,55.169733588270105],[71.180131056609412,54.133285224008262],[72.224150018202181,54.376655381886735],[73.508516066384402,54.035616766976602],[73.425678745420441,53.489810289109755],[74.384845005190073,53.54686107036008],[76.891100294913429,54.490524400441927],[76.525179477854749,54.177003485727141],[77.800915561844249,53.404414984747575],[80.035559523441691,50.864750881547252],[80.568446893235489,51.38833649352847],[81.945985548839928,50.812195949906368],[83.38300377801238,51.069182847693924],[85.541269972682471,49.692858588248157],[86.829356723989633,49.826674709668168],[87.359970330762678,49.214980780629162],[86.598776483103393,48.549181626980612],[85.768232863308299,48.455750637396989],[85.720483839870724,47.452969468773119],[85.164290399113384,47.000955715516113],[83.180483839860472,47.330031236350862],[82.458925815769135,45.539649563166506],[79.966106398441411,44.917516994804657],[80.86620649610137,43.180362046881044],[80.180150180994303,42.920067857426943],[80.25999026888536,42.349999294599115],[79.142177361979805,42.856092434249604],[75.636964959622105,42.877899888676779],[74.212865838522589,43.298339341803512],[73.645303582660915,43.09127187760987],[73.489757521462366,42.50089447689129],[71.844638299450651,42.845395412765185],[71.186280552052267,42.704292914392227],[70.962314894499286,42.266154283205537]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KE","name":"Kenya","type":"Sovereign country","postal":"KE","admin":"Kenya","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[40.993,-0.85829],[41.58513,-1.68325],[40.26304,-2.57309],[39.60489,-4.34653],[39.20222,-4.67677],[37.7669,-3.67712],[37.69869,-3.09699],[33.903711197104528,-0.95],[33.893568969666944,0.109813537861896],[35.03599,1.90584],[34.005,4.249884947362048],[35.298007118232981,5.506],[35.817447662353516,5.338232082790797],[35.817447662353516,4.77696566346189],[36.159078632855646,4.447864127672769],[36.855093238008124,4.447864127672769],[38.120915,3.598605],[39.559384258765853,3.42206],[40.76848,4.25702],[41.1718,3.91909],[41.855083092643973,3.918911920483727],[40.98105,2.78452],[40.993,-0.85829]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KG","name":"Kyrgyzstan","type":"Sovereign country","postal":"KG","admin":"Kyrgyzstan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[70.962314894499144,42.266154283205495],[71.186280552052125,42.704292914392141],[71.844638299450594,42.8453954127651],[73.489757521462366,42.500894476891318],[73.645303582660915,43.091271877609827],[74.212865838522561,43.29833934180337],[75.63696495962202,42.87789988867668],[79.142177361979776,42.856092434249518],[80.259990268885304,42.349999294599058],[78.187196893225973,41.185315863604806],[76.904484490877081,41.066485907549648],[76.526368035797447,40.427946071935118],[74.776862420556057,40.366425279291633],[73.822243686828301,39.893973497063186],[73.960013055318427,39.660008449861735],[73.675379266254794,39.431236884105601],[69.46488691597753,39.526683254548701],[69.559609816368521,40.103211371412982],[71.77487511585656,40.145844428053778],[73.05541710804917,40.866033026689465],[71.870114780570475,41.392900092121266],[71.157858514291604,41.143587144529121],[70.42002241402821,41.519998277343142],[71.259247674448233,42.167710679689463],[70.962314894499144,42.266154283205495]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KH","name":"Cambodia","type":"Sovereign country","postal":"KH","admin":"Cambodia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[103.49727990113971,10.632555446815928],[102.5849324890267,12.186594956913282],[102.34809939983302,13.394247341358223],[102.98842207236163,14.225721136934467],[104.28141808473661,14.416743068901367],[106.04394616091552,13.881091009979956],[106.49637332563088,14.570583807834282],[107.38272749230109,14.202440904186972],[107.49140302941089,12.337205918827948],[105.81052371625313,11.567614650921229],[106.24967003786946,10.961811835163587],[104.33433475140347,10.48654368737523],[103.49727990113971,10.632555446815928]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KR","name":"Korea","type":"Sovereign country","postal":"KR","admin":"South Korea","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[128.34971642467661,38.61224294692785],[129.46044966035817,36.784189154602828],[129.4683044780665,35.632140611303953],[129.09137658092959,35.082484239231434],[126.48574751190876,34.39004588473648],[126.55923139862779,35.684540513647903],[126.11739790253229,36.725484727519259],[126.86014326386339,36.893924058574626],[126.17475874237624,37.74968577732804],[128.34971642467661,38.61224294692785]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"Kosovo","type":"Sovereign country","postal":"KO","admin":"Kosovo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.76216,42.05186],[20.59023,41.85541],[20.0707,42.58863],[20.81448,43.27205],[21.77505,42.6827],[21.576635989402121,42.245224397061861],[20.76216,42.05186]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KW","name":"Kuwait","type":"Sovereign country","postal":"KW","admin":"Kuwait","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[47.974519077349896,29.975819200148504],[48.416094191283946,28.55200429942667],[47.708850538937384,28.526062730416143],[47.459821811722833,29.002519436147224],[46.568713413281756,29.09902517345229],[47.302622104690961,30.059069932570722],[47.974519077349896,29.975819200148504]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LA","name":"Lao PDR","type":"Sovereign country","postal":"LA","admin":"Laos","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[105.21877689007889,14.273211778210694],[105.58903852745016,15.570316066952858],[104.7793205098688,16.441864935771449],[104.71694705609249,17.428858954330082],[103.9564766784853,18.240954087796879],[103.20019209189374,18.309632066312773],[102.99870568238771,17.961694647691601],[102.11359175009248,18.109101670804165],[101.05954756063517,17.51249725999449],[101.2820146016517,19.462584947176765],[100.60629357300316,19.508344427971224],[100.54888105672688,20.109237982661128],[100.11598758341785,20.417849636308187],[101.18000532430754,21.436572984294028],[101.80311974488293,21.174366766845068],[101.65201785686152,22.318198757409547],[102.17043582561358,22.464753119389304],[103.20386111858645,20.766562201413748],[104.43500044150805,20.758733221921531],[104.8225736836971,19.886641750563882],[103.89653201702671,19.265180975821806],[105.09459842328152,18.66697459561108],[107.3127059265456,15.908538316303179],[107.5645251811039,15.202173163305559],[107.38272749230109,14.202440904186972],[106.49637332563088,14.570583807834282],[106.04394616091552,13.881091009979956],[105.21877689007889,14.273211778210694]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LB","name":"Lebanon","type":"Sovereign country","postal":"LB","admin":"Lebanon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.821100701650238,33.277426459276299],[35.126052687324545,33.090900376918782],[35.998402540843642,34.644914048800004],[36.448194207512103,34.593935248344067],[36.611750115715893,34.201788641897181],[35.821100701650238,33.277426459276299]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LR","name":"Liberia","type":"Sovereign country","postal":"LR","admin":"Liberia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-7.712159389669751,4.364565944837722],[-9.004793667018674,4.8324185245922],[-11.438779466182055,6.785916856305748],[-10.23009355309128,8.406205552601293],[-9.755342169625834,8.541055202666925],[-9.208786383490846,7.313920803247953],[-8.439298468448698,7.686042792181738],[-8.60288021486862,6.467564195171661],[-7.570152553731688,5.707352199725904],[-7.712159389669751,4.364565944837722]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LY","name":"Libya","type":"Sovereign country","postal":"LY","admin":"Libya","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[14.8513,22.862950000000126],[14.143870883855243,22.491288967371133],[13.581424594790462,23.040506089769281],[11.999505649471701,23.471668402596435],[10.771363559622955,24.562532050061748],[10.303846876678449,24.379313259370974],[9.31941084151822,26.094324856057483],[9.716285841519664,26.512206325785655],[9.859997999723476,28.959989732371071],[9.482139926805417,30.307556057246188],[9.970017124072967,30.539324856075382],[9.950225050505196,31.376069647745283],[11.432253452203781,32.368903103152832],[11.488787469131012,33.136995754523241],[15.24563,32.26508],[15.71394,31.37626],[19.08641,30.26639],[20.05335,30.98576],[19.82033,31.751790000000142],[20.85452,32.7068],[22.89576,32.63858],[23.2368,32.19149],[24.92114,31.89936],[25.16482,31.56915],[24.80287,31.08929],[24.70007,30.04419],[25.000000000000114,29.238654529533562],[25.000000000000114,20.00304],[23.850000000000136,20.0],[23.837660000000142,19.580470000000105],[15.86085,23.40972],[14.8513,22.862950000000126]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LK","name":"Sri Lanka","type":"Sovereign country","postal":"LK","admin":"Sri Lanka","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[81.787959018891399,7.523055324733164],[81.637322218760588,6.481775214051922],[80.348356968104412,5.968369859232155],[79.872468703128533,6.76346344647493],[79.695166863935128,8.200843410673386],[80.147800734379643,9.824077663609558],[80.838817986986555,9.268426825391188],[81.787959018891399,7.523055324733164]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LS","name":"Lesotho","type":"Sovereign country","postal":"LS","admin":"Lesotho","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[28.978262566857243,-28.955596612261711],[29.325166456832591,-29.257386976846256],[28.848399692507741,-30.070050551068256],[28.107204624145425,-30.545732110314951],[27.749397006956485,-30.645105889612225],[26.999261915807637,-29.875953871379984],[28.074338413207784,-28.851468601193588],[28.541700066855498,-28.647501722937569],[28.978262566857243,-28.955596612261711]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LT","name":"Lithuania","type":"Sovereign country","postal":"LT","admin":"Lithuania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.731098667092652,54.327536932993326],[22.757763706155259,54.85657440858138],[21.268448927503467,55.190481675835315],[21.055800408622417,56.031076361711065],[22.201156853939494,56.33780182557949],[24.86068444184076,56.37252838807963],[26.494331495883756,55.615106919977634],[26.588279249790389,55.167175604871673],[25.768432651479799,54.846962592175089],[25.536353794056993,54.282423407602529],[24.450683628037037,53.905702216194754],[23.484127638449849,53.912497667041137],[22.731098667092652,54.327536932993326]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LU","name":"Luxembourg","type":"Sovereign country","postal":"L","admin":"Luxembourg","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[6.043073357781111,50.128051662794235],[6.186320428094177,49.463802802114515],[5.674051954784829,49.529483547557504],[5.782417433300907,50.09032786722122],[6.043073357781111,50.128051662794235]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LV","name":"Latvia","type":"Sovereign country","postal":"LV","admin":"Latvia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[21.055800408622417,56.031076361711065],[21.090423618257972,56.783872789122938],[21.581866489353672,57.411870632549935],[22.524341261492879,57.753374335350763],[23.318452996522097,57.006236477274868],[24.120729607853431,57.025692654032767],[24.312862583114622,57.793423570376973],[25.164593540149269,57.970156968815189],[27.770015903440932,57.244258124411232],[28.176709425577997,56.169129950578814],[26.494331495883756,55.615106919977634],[24.86068444184076,56.37252838807963],[22.201156853939494,56.33780182557949],[21.055800408622417,56.031076361711065]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MA","name":"Morocco","type":"Sovereign country","postal":"MA","admin":"Morocco","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-5.193863491222032,35.755182196590852],[-4.591006232105144,35.330711981745651],[-2.169913702798624,35.168396307916709],[-1.124551153966195,32.651521511357203],[-1.30789913573787,32.262888902306031],[-3.647497931320146,31.637294012980817],[-3.690441046554668,30.896951605751156],[-4.859646165374443,30.501187649043885],[-5.242129278982787,30.000443020135577],[-8.674116176782832,28.84128896739665],[-8.794883999049034,27.12069631602256],[-11.39255489749695,26.883423977154393],[-12.50096269372537,24.770116278578143],[-13.891110398809047,23.691009019459386],[-14.750954555713406,21.500600083903805],[-17.020428432675772,21.422310288981635],[-15.982610642958065,23.723358466074103],[-15.089331834360735,24.520260728446971],[-14.439939947964831,26.254418443297652],[-13.773804897506466,26.618892320252286],[-12.618836635783111,28.038185533148663],[-11.688919236690765,28.148643907172584],[-9.564811163765626,29.933573716749862],[-9.814718390329176,31.17773550060906],[-9.300692918321829,32.564679266890636],[-8.65747636558504,33.240245266242397],[-6.91254411460136,34.110476386037448],[-5.929994269219833,35.75998810479399],[-5.193863491222032,35.755182196590852]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MD","name":"Moldova","type":"Sovereign country","postal":"MD","admin":"Moldova","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[26.619336785597795,48.220726223333472],[27.522537469195157,48.467119452501116],[28.670891147585166,48.118148505234103],[30.024658644335375,46.42393667254504],[28.862972446414062,46.437889309263831],[28.233553501099042,45.488283189468376],[28.128030226359044,46.810476386088254],[26.619336785597795,48.220726223333472]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MG","name":"Madagascar","type":"Sovereign country","postal":"MG","admin":"Madagascar","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[49.543518914595751,-12.469832858940554],[50.056510857957164,-13.555761407121985],[50.377111443895956,-15.706069431219127],[50.200274692593183,-16.000263360256767],[49.860605503138679,-15.414252618066918],[49.672606642460863,-15.710203545802479],[49.774564243372708,-16.875042006093601],[47.095761346226595,-24.941629733990453],[45.409507684110451,-25.601434421493089],[44.039720493349762,-24.988345228782308],[43.345654331237625,-22.776903985283873],[43.43329756040464,-21.336475111580189],[43.893682895692926,-21.163307386970128],[44.464397413924388,-19.435454196859048],[43.963084344260913,-17.409944756746782],[44.446517368351401,-16.216219170804507],[46.31224327981721,-15.780018405828798],[47.705129835812357,-14.594302666891764],[48.005214878131255,-14.091232598530375],[47.869047479042166,-13.663868503476586],[48.293827752481377,-13.784067884987486],[49.194651320193316,-12.04055673589197],[49.543518914595751,-12.469832858940554]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MX","name":"Mexico","type":"Sovereign country","postal":"MX","admin":"Mexico","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-97.140008307670712,25.869997463478398],[-97.702945522842242,24.272343044526735],[-97.699043952204192,21.898689480064263],[-95.900884975959968,18.82802419684873],[-94.839063483442715,18.562717393462208],[-94.425729539756219,18.144370835843347],[-91.407903408559264,18.87608327888023],[-90.771869879910867,19.284120388256781],[-90.278618333684904,20.999855454995554],[-88.543866339862859,21.49367544197662],[-86.811982388032959,21.331514797444754],[-87.62105445021075,19.646553046135921],[-87.436750454441778,19.472403469312269],[-87.837191128271513,18.25981598558343],[-88.490122850279306,18.48683055264172],[-88.848343878926585,17.883198147040332],[-91.001519945015957,17.817594916245696],[-91.002269253284169,17.254657701074279],[-91.453921271515128,17.252177232324186],[-90.438866950222007,16.410109768128109],[-90.464472622422647,16.069562079324726],[-91.747960171255954,16.066564846251765],[-92.229248623406306,15.251446641495875],[-92.227750006869826,14.538828640190957],[-93.875168830118525,15.940164292865916],[-94.691656460330137,16.200975246642884],[-96.557434048228288,15.653515122942792],[-100.82949886758132,17.17107107184205],[-101.91852800170022,17.916090196193977],[-103.50098954955808,18.292294623278849],[-104.9920096504755,19.316133938061682],[-105.73139604370766,20.434101874264115],[-105.39777299683135,20.531718654863425],[-105.26581722697404,21.422103583252351],[-106.02871639689897,22.773752346278627],[-108.40190487347098,25.172313951105934],[-109.26019873740665,25.580609442644061],[-109.29164384645628,26.442934068298428],[-110.39173173708571,27.16211497650454],[-110.64101884646163,27.859876003525528],[-111.17891883018785,27.94124054616907],[-112.2282346260904,28.954408677683489],[-113.14866939985717,31.170965887978923],[-114.77645117883503,31.79953217216115],[-114.67389929895177,30.162681179315996],[-111.61648902061921,26.662817287700477],[-110.65504899782889,24.298594672131117],[-110.17285620811344,24.265547593680424],[-109.40910437705571,23.364672349536249],[-110.03139197471444,22.823077500901206],[-110.29507097048366,23.430973212166691],[-112.18203589562148,24.738412787367167],[-112.3007108223797,26.012004299416617],[-115.05514217818501,27.722726752222911],[-114.57036556685495,27.741485297144891],[-114.16201839888464,28.566111965442303],[-115.51865393762699,29.556361599235402],[-117.12776,32.53534],[-114.72139,32.72083],[-114.815,32.52528],[-111.02361,31.33472],[-108.24194,31.34222],[-108.24,31.754853718166373],[-106.50759,31.75452],[-105.03737,30.64402],[-104.45697,29.57196],[-103.94,29.27],[-103.11,28.97],[-102.48,29.76],[-101.6624,29.7793],[-100.9576,29.380710000000136],[-99.52,27.54],[-99.02,26.37],[-97.140008307670712,25.869997463478398]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MK","name":"Macedonia","type":"Sovereign country","postal":"MK","admin":"Macedonia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.59023,41.85541],[22.380525750424681,42.320259507815081],[22.881373732197346,41.999297186850356],[22.952377150166512,41.33799388281119],[21.020040317476401,40.84272695572588],[20.60518,41.08622],[20.59023,41.85541]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ML","name":"Mali","type":"Sovereign country","postal":"ML","admin":"Mali","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-12.170750291380301,14.616834214735505],[-11.666078253617854,15.388208319556298],[-10.650791388379417,15.132745876521426],[-9.550238409859389,15.486496893775438],[-5.537744309908447,15.501689764869257],[-5.315277268891933,16.201853745991841],[-6.453786586930335,24.956590684503425],[-4.923337368174231,24.974574082941],[1.823227573259032,20.610809434486043],[2.06099083823392,20.142233384679486],[3.1466610042539,19.693578599521445],[3.158133172222705,19.057364203360038],[4.267419467800039,19.155265204336999],[4.270209995143802,16.852227484601215],[3.638258904646477,15.568119818580456],[1.385528191746858,15.323561102759172],[1.01578331869851,14.968182277887948],[-1.066363491205664,14.973815009007765],[-3.10370683431276,13.541266791228594],[-4.006390753587226,13.472485459848116],[-5.220941941743121,11.713858954307227],[-5.404341599946974,10.370736802609146],[-6.050452032892267,10.096360785355444],[-6.205222947606431,10.524060777219134],[-6.850506557635057,10.138993841996239],[-8.029943610048619,10.206534939001713],[-8.282357143578281,10.792597357623846],[-8.620321010767128,10.810890814655183],[-8.376304897484914,11.393645941610629],[-9.127473517279583,12.308060411015333],[-10.165213792348837,11.844083563682744],[-11.03655595543826,12.211244615116515],[-11.456168585648271,12.076834214725338],[-12.170750291380301,14.616834214735505]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MM","name":"Myanmar","type":"Sovereign country","postal":"MM","admin":"Myanmar","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[99.543309360759309,20.186597601802063],[98.959675734454876,19.752980658440947],[98.25372399291561,19.708203029860044],[97.797782830804408,18.627080389881755],[97.375896437573545,18.445437730375815],[98.903348423256759,16.177824204976119],[98.192074009191401,15.123702500870351],[99.097755161538757,13.827502549693278],[99.587286004639722,11.892762762901697],[98.553550653073046,9.932959906448545],[98.764545526120784,11.441291612183749],[98.428338657629851,12.032986761925685],[98.509574009192676,13.122377631070677],[98.103603957107694,13.640459703012851],[97.164539829499802,16.92873444260934],[95.369352248112406,15.714389960182601],[94.188804152404543,16.037936102762018],[94.533485955791349,17.277240301985728],[94.324816522196755,18.2135139022499],[93.540988397193644,19.366492621330025],[93.663254835996213,19.726961574781996],[93.078277622452191,19.855144965081976],[92.36855350135562,20.670883287025347],[92.303234490938678,21.475485337809818],[92.65225711463799,21.324047552978485],[92.672720981825563,22.041238918541254],[93.166127557348375,22.278459580977103],[93.325187615942795,24.078556423432204],[94.106741977925068,23.85074087167348],[95.155153436262594,26.001307277932085],[95.124767694074961,26.573572089132298],[96.419365675850969,27.264589341739224],[97.133999058015306,27.083773505149964],[97.327113885490036,28.261582749946339],[97.911987746169444,28.335945136014345],[98.682690057370465,27.508812160750619],[98.671838006589155,25.918702500913525],[97.724609002679145,25.083637193293001],[97.604719679761985,23.897404690033042],[98.660262485755766,24.063286037689966],[98.898749220782776,23.142722072842531],[99.531992222087396,22.949038804612581],[99.240898878987252,22.118314317304581],[100.41653771362738,21.558839423096614],[101.15003299357825,21.849984442629022],[101.18000532430754,21.436572984294028],[99.543309360759309,20.186597601802063]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ME","name":"Montenegro","type":"Sovereign country","postal":"ME","admin":"Montenegro","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[19.801613396898688,42.500093492190842],[19.304490000000101,42.19574],[19.37177000000014,41.87755],[18.45,42.48],[18.70648,43.20011],[19.21852,43.52384],[20.3398,42.89852],[19.801613396898688,42.500093492190842]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MN","name":"Mongolia","type":"Sovereign country","postal":"MN","admin":"Mongolia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[87.751264276076711,49.297197984405486],[92.234711541719676,50.802170722041723],[94.147566359435629,50.48053660745709],[94.815949334698729,50.013433335970852],[97.25972781778141,49.726060695995741],[98.231761509191557,50.422400621128745],[97.825739780674311,51.010995184933179],[98.861490513100335,52.047366034546691],[102.06522260946733,51.259920559283124],[102.25590864462433,50.510560614618683],[103.67654544476022,50.089966132195116],[106.88880415245535,50.274295966180233],[108.47516727095129,49.28254771585074],[110.66201053267878,49.130128078805868],[112.89773969935439,49.543565375356991],[114.36245649623527,50.248302720737414],[115.48569542853141,49.805177313834605],[116.67880089728618,49.888531399121391],[115.48528201707306,48.135382595403442],[115.74283735561579,47.726544501326288],[117.29550744025741,47.697709052107427],[118.06414269416672,48.066730455103688],[119.77282392789751,47.048058783550132],[119.66326989143876,46.692679958678923],[117.42170128791419,46.67273285581426],[115.98509647020009,45.727235012386004],[113.46390669154417,44.808893134127118],[111.87330610560031,45.102079372735062],[111.34837690637946,44.45744171811009],[111.82958784388137,43.743118394539522],[110.41210330611528,42.871233628911028],[106.12931562706169,42.134327704428912],[104.96499393109347,41.597409572916348],[100.84586551310827,42.663804429691453],[96.349395786527808,42.725635280928685],[95.306875441471533,44.241330878265472],[93.480733677141302,44.975472113619965],[90.945539585334302,45.286073309910279],[90.585768263718279,45.719716091487527],[90.970809360725013,46.88814606382293],[90.280825636763922,47.69354909930793],[88.013832228551735,48.599462795600616],[87.751264276076711,49.297197984405486]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MZ","name":"Mozambique","type":"Sovereign country","postal":"MZ","admin":"Mozambique","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.559989047999352,-11.520020033415925],[37.47128421402661,-11.568750909067161],[39.521029900883775,-10.896853936408228],[40.316588576017189,-10.317096042525698],[40.775475294768995,-14.691764418194241],[39.452558628097051,-16.72089120856694],[37.411132846838882,-17.586368096591237],[34.786383497870048,-19.784011732667736],[34.701892531072843,-20.497043145431011],[35.562545536369086,-22.09],[35.458745558419622,-24.122609958596549],[33.013210076639012,-25.357573337507738],[32.574632195777866,-25.727318210556092],[32.915955031065693,-26.215867201443466],[32.830120477028885,-26.742191664336197],[32.071665480281069,-26.733820082304909],[31.752408481581881,-25.484283949487413],[31.930588820124253,-24.369416599222539],[31.191409132621288,-22.251509698172399],[32.65974327976258,-20.304290052982317],[32.847638787575846,-16.713398125884616],[31.17306399915768,-15.860943698797874],[30.338954705534544,-15.880839125230246],[30.17948123548183,-14.796099134991529],[33.214024692525214,-13.971860039936153],[34.459633416488543,-14.613009535381423],[34.381291945134052,-16.183559665596043],[35.033810255683534,-16.801299737213093],[35.339062941231646,-16.107440280830112],[35.771904738108361,-15.896858819240727],[35.68684533055594,-14.611045830954332],[35.267956170398008,-13.887834161029566],[34.559989047999352,-13.579997653866876],[34.28000613784198,-12.280025323132506],[34.559989047999352,-11.520020033415925]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MR","name":"Mauritania","type":"Sovereign country","postal":"MR","admin":"Mauritania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-12.170750291380301,14.616834214735505],[-13.435737677453062,16.039383042866191],[-14.577347581428981,16.598263658102809],[-16.120690070041931,16.455662543193384],[-16.463098110407884,16.13503611903846],[-16.14634741867485,18.108481553616656],[-16.277838100641517,20.092520656814699],[-17.063423224342571,20.999752102130827],[-16.845193650773993,21.333323472574879],[-12.929101935263532,21.327070624267563],[-13.118754441774712,22.771220201096256],[-12.874221564169575,23.284832261645178],[-11.937224493853321,23.374594224536168],[-11.969418911171161,25.933352769468268],[-8.6872936670174,25.881056219988906],[-8.684399786809053,27.395744126896005],[-4.923337368174231,24.974574082941],[-6.453786586930335,24.956590684503425],[-5.315277268891933,16.201853745991841],[-5.537744309908447,15.501689764869257],[-9.550238409859389,15.486496893775438],[-10.650791388379417,15.132745876521426],[-11.666078253617854,15.388208319556298],[-12.170750291380301,14.616834214735505]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MW","name":"Malawi","type":"Sovereign country","postal":"MW","admin":"Malawi","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.559989047999352,-11.520020033415925],[34.28000613784198,-12.280025323132506],[34.559989047999352,-13.579997653866876],[35.267956170398008,-13.887834161029566],[35.68684533055594,-14.611045830954332],[35.771904738108361,-15.896858819240727],[35.339062941231646,-16.107440280830112],[35.033810255683534,-16.801299737213093],[34.381291945134052,-16.183559665596043],[34.459633416488543,-14.613009535381423],[32.688165317523129,-13.712857761289277],[33.306422153463075,-12.435778090060218],[33.114289178201915,-11.607198174692314],[33.485687697083591,-10.525558770391115],[32.759375441221323,-9.23059905358906],[33.73972903823045,-9.417150974162723],[34.28000613784198,-10.159999688358404],[34.559989047999352,-11.520020033415925]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MY","name":"Malaysia","type":"Sovereign country","postal":"MY","admin":"Malaysia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[101.07551557821333,6.204867051615892],[101.15421878459384,5.691384182147715],[101.81428185425804,5.810808417174229],[102.14118696493645,6.221636053894656],[102.9617053568667,5.524495144061078],[103.38121463421217,4.855001125503748],[103.50244754436889,2.791018581550205],[104.22881147666354,1.293048000489534],[103.51970747275445,1.226333726400682],[101.39063846232918,2.760813706875624],[100.19670617065773,5.31249258058368],[100.08575687052709,6.464489447450291],[100.25959638875693,6.642824815289572],[101.07551557821333,6.204867051615892]]],[[[118.61832075406485,4.478202419447541],[117.88203494677018,4.137551377779488],[115.86551720587678,4.306559149590157],[114.6213554220175,1.430688177898887],[113.80584964401956,1.217548732911041],[112.8598091980522,1.497790025229946],[111.79754845586044,0.904441229654651],[110.51406090702713,0.773131415200993],[109.83022667850886,1.338135687664192],[109.66326012577375,2.006466986494985],[110.39613528853707,1.663774725751395],[111.16885298059751,1.850636704918784],[111.3700810079421,2.697303371588873],[112.99561486211527,3.102394924324869],[114.20401655482843,4.52587392823682],[114.65959598191355,4.00763682699781],[114.8695573263154,4.348313706881953],[115.34746097215069,4.316636053887009],[115.45071048386981,5.447729803891562],[116.72510298061977,6.924771429873999],[117.12962609260049,6.928052883324568],[117.68907514859237,5.987490139180181],[119.18190392463995,5.407835598162251],[119.11069380094173,5.016128241389865],[118.43972700406411,4.96651886638962],[118.61832075406485,4.478202419447541]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NA","name":"Namibia","type":"Sovereign country","postal":"NA","admin":"Namibia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.344976840895242,-28.576705010697701],[15.210472446359461,-27.090955905874047],[14.257714064194175,-22.111208184499958],[11.794918654028066,-18.069129327061916],[11.734198846085121,-17.301889336824473],[13.462362094789967,-16.971211846588773],[14.05850141770901,-17.423380629142663],[18.263309360434164,-17.309950860262006],[18.956186964603603,-17.789094740472258],[21.377176141045567,-17.930636488519696],[24.033861525170778,-17.295843194246324],[25.076950310982259,-17.578823337476621],[23.579005568137717,-18.281261081620059],[23.196858351339301,-17.869038181227786],[20.910641310314535,-18.252218926672022],[20.88113406747587,-21.814327080983148],[19.895457797940679,-21.849156996347869],[19.894734327888614,-28.461104831660776],[18.464899122804752,-29.045461928017279],[17.387497185951503,-28.783514092729781],[16.824017368240902,-28.08216155366447],[16.344976840895242,-28.576705010697701]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NC","name":"New Caledonia","type":"Dependency","postal":"NC","admin":"New Caledonia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[165.77998986232637,-21.080004978115628],[167.12001142808691,-22.159990736583492],[166.74003462144481,-22.39997608814695],[165.47437544175222,-21.679606621998232],[164.02960574773601,-20.105645847252354],[165.77998986232637,-21.080004978115628]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NE","name":"Niger","type":"Sovereign country","postal":"NE","admin":"Niger","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[2.15447350424995,11.940150051313424],[2.177107781593918,12.625017808477537],[1.024103224297619,12.851825669806601],[0.429927605805517,13.988733018443895],[0.374892205414767,14.928908189346146],[3.638258904646591,15.568119818580442],[4.270209995143887,16.852227484601315],[4.267419467800096,19.155265204337127],[5.677565952180714,19.601206976799801],[11.999505649471701,23.471668402596435],[13.581424594790462,23.040506089769281],[14.143870883855243,22.491288967371133],[14.8513,22.862950000000126],[15.096887648181848,21.308518785074909],[15.903246697664315,20.387618923417506],[15.247731154041844,16.627305813050782],[13.972201775781684,15.684365953021143],[13.540393507550789,14.367133693901224],[13.956698846094127,13.996691189016929],[13.95447675950561,13.353448798063766],[14.595781284247607,13.330426947477861],[14.18133629726691,12.483656927943173],[13.083987257548813,13.596147162322495],[12.302071160540549,13.037189032437539],[10.989593133191534,13.387322699431195],[9.014933302454438,12.826659247280418],[7.804671258178871,13.343526923063735],[6.820441928747812,13.115091254117601],[5.443058302440136,13.865923977102227],[4.107945997747379,13.531215725147945],[3.611180454125588,11.660167141155966],[2.848643019226586,12.235635891158211],[2.15447350424995,11.940150051313424]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NG","name":"Nigeria","type":"Sovereign country","postal":"NG","admin":"Nigeria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[8.500287713259695,4.771982937026849],[5.898172641634687,4.262453314628985],[4.325607130560684,6.270651149923467],[2.691701694356254,6.258817246928629],[2.723792758809509,8.50684540448971],[3.705438266625919,10.063210354040208],[3.680633579125811,12.552903347214226],[4.107945997747322,13.531215725147831],[5.443058302440164,13.865923977102298],[6.820441928747754,13.115091254117518],[7.804671258178786,13.343526923063747],[9.014933302454466,12.82665924728043],[10.989593133191535,13.38732269943111],[12.302071160540523,13.037189032437524],[13.318701613018561,13.556356309457826],[14.577177768622533,12.085360826053503],[14.415378859116684,11.572368882692075],[13.572949659894562,10.798565985553566],[11.745774366918511,6.981382961449754],[11.058787876030351,6.644426784690594],[10.118276808318257,7.03876963950988],[9.233162876023044,6.444490668153335],[8.500287713259695,4.771982937026849]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NI","name":"Nicaragua","type":"Sovereign country","postal":"NI","admin":"Nicaragua","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-85.712540452807303,11.088444932494824],[-87.668493415054712,12.909909979702633],[-86.733821784191605,13.263092556201443],[-86.75508663607971,13.754845485890913],[-86.096263800790595,14.038187364147248],[-85.80129472526859,13.836054999237589],[-84.924500698572402,14.79049286545235],[-84.449335903648603,14.621614284722497],[-83.147219000974133,14.995829169164111],[-83.855470343750397,11.373311265503787],[-83.655611741861577,10.938764146361422],[-83.895054490885954,10.726839097532446],[-85.712540452807303,11.088444932494824]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NL","name":"Netherlands","type":"Country","postal":"NL","admin":"Netherlands","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[6.074182570020923,53.510403347378144],[6.905139601274129,53.482162177130647],[7.092053256873896,53.144043280644894],[6.589396599970826,51.852029120483394],[5.988658074577813,51.851615709025054],[6.15665815595878,50.803721015010581],[4.973991326526914,51.475023708698131],[3.314971144228537,51.34575511331991],[3.830288527043138,51.620544542031951],[4.705997348661185,53.091798407597764],[6.074182570020923,53.510403347378144]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NO","name":"Norway","type":"Sovereign country","postal":"N","admin":"Norway","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[28.165547316202918,71.185474351680512],[31.293418409965483,70.453787746859916],[30.005435011522792,70.186258856884905],[31.101078728975125,69.558080145944871],[28.591929559043194,69.064776923286701],[29.015572950971972,69.766491197377974],[27.732292107867892,70.164193020296295],[26.179622023226301,69.825298977326156],[25.689212680776393,69.092113755969024],[24.735679152126721,68.649556789821446],[22.356237827247412,68.841741441514955],[21.24493615081073,69.370443020293123],[20.025268995857914,69.065138658312719],[19.878559604581255,68.407194322372618],[17.99386844246439,68.567391262477344],[17.729181756265348,68.010551866316234],[16.768878614985539,68.013936672631388],[13.555689731509091,64.787027696381472],[13.919905226302205,64.445420640716122],[13.57191613124877,64.049114081469668],[12.579935336973932,64.066218980558347],[11.930569288794231,63.128317572676991],[11.992064243221535,61.800362453856565],[12.631146681375242,61.2935716823701],[12.300365838274899,60.11793284773006],[11.027368605196926,58.856149400459401],[10.356556837616097,59.469807033925377],[8.382000359743643,58.313288479233279],[7.048748406613299,58.078884182357285],[5.665835402050419,58.588155422593672],[4.992078077829007,61.970998033284275],[5.912900424837886,62.614472968182696],[8.553411085655768,63.454008287196473],[10.527709181366788,64.486038316497485],[14.761145867581604,67.81064158799515],[19.184028354578516,69.817444159617821],[21.378416375420613,70.255169379346057],[23.023742303161583,70.202071845166273],[24.546543409938522,71.030496731237236],[28.165547316202918,71.185474351680512]]],[[[24.72412,77.85385],[22.49032,77.44493],[20.72601,77.67704],[21.41611,77.93504],[20.8119,78.25463],[22.88426,78.45494],[23.28134,78.07954],[24.72412,77.85385]]],[[[18.25183,79.70175],[21.54383,78.95611],[19.02737,78.5626],[18.47172,77.82669],[17.59441,77.63796],[17.1182,76.80941],[15.91315,76.77045],[13.76259,77.38035],[14.66956,77.73565],[11.22231,78.8693],[10.44453,79.65239],[13.17077,80.01046],[13.71852,79.66039],[15.14282,79.67431],[15.52255,80.01608],[16.99085,80.05086],[18.25183,79.70175]]],[[[25.447625359811894,80.407340399894508],[27.407505730913499,80.056405748200461],[25.924650506298178,79.517833970854554],[23.02446577321362,79.400011705229105],[20.075188429451885,79.566823228667261],[19.897266473070914,79.842361965647513],[18.462263624757924,79.859880276194417],[17.368015170977458,80.318896186027018],[20.455992059010697,80.59815562613224],[21.907944777115404,80.357679348462085],[22.919252557067438,80.657144273593502],[25.447625359811894,80.407340399894508]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NP","name":"Nepal","type":"Sovereign country","postal":"NP","admin":"Nepal","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[88.12044070836987,27.876541652939594],[88.06023766474982,26.414615383402491],[87.227471958366294,26.397898057556077],[85.251778598983378,26.726198431906344],[84.675017938173795,27.234901231387536],[83.304248895199549,27.364505723575562],[80.088424513676273,28.79447011974014],[80.476721225917402,29.729865220655341],[81.525804477874743,30.422716986608631],[85.823319940131512,28.203575954698707],[88.12044070836987,27.876541652939594]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NZ","name":"New Zealand","type":"Country","postal":"NZ","admin":"New Zealand","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[173.02037479074076,-40.919052422856424],[173.24723432850206,-41.331998793300784],[173.9584053897029,-40.926700534835618],[174.24758670480813,-41.34915536882167],[174.24851688058951,-41.770008233406756],[172.71124637277077,-43.372287693048506],[173.08011274647023,-43.853343601253584],[171.45292524646365,-44.242518812843727],[170.61669721911662,-45.908928724959708],[169.33233117093428,-46.641235446967855],[166.67688602118423,-46.21991749449225],[166.50914432196473,-45.852704766626218],[167.04642418850327,-45.110941257508671],[168.30376346259689,-44.123973077166127],[170.52491987536618,-43.03168832781283],[171.94870893787194,-41.514416599291152],[172.09722700427878,-40.956104424809681],[172.798579543344,-40.493962090823473],[173.02037479074076,-40.919052422856424]]],[[[174.61200890533055,-36.156397393540544],[175.3366158389272,-37.20909799575827],[175.35759647043753,-36.526193943021127],[175.8088867536425,-36.798942152657688],[175.95849002512753,-37.55538176854607],[176.76319542877658,-37.881253350578703],[178.51709354076283,-37.695373223624799],[177.97046023997936,-39.166342868812976],[177.20699262929915,-39.145775648760846],[177.03294640534014,-39.879942722331478],[176.01244022044031,-41.289624118821507],[175.23956749908299,-41.688307793953243],[174.65097293527847,-41.281820977545451],[175.22763024322367,-40.459235528323404],[174.90015669178999,-39.90893320084723],[173.82404666574402,-39.508854262043513],[173.85226199777534,-39.146602471677468],[174.57480187408041,-38.797683200842755],[174.69701663645063,-37.381128838857961],[172.63600548735374,-34.529106540669389],[173.00704227120949,-34.450661716450341],[174.3293904971263,-35.265495700828623],[174.61200890533055,-36.156397393540544]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"OM","name":"Oman","type":"Sovereign country","postal":"OM","admin":"Oman","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[58.861141391846587,21.114034532144302],[58.487985874266968,20.428985907467109],[57.826372511634105,20.243002427648634],[57.694390903560674,18.944709580963803],[56.609650913321985,18.574267076079479],[56.283520949128018,17.876066799383949],[55.661491733630697,17.884128322821539],[54.791002231674128,16.950696926333364],[53.108572625547509,16.651051133688981],[52.000009800022241,19.000003363516072],[54.999981723862419,19.999994004796122],[55.666659376859883,22.000001125572311],[55.234489373602884,23.110992743415352],[55.528631626208295,23.933604030853502],[55.981213820220518,24.130542914317857],[55.886232537668064,24.920830593357493],[56.396847365143998,24.924732163995515],[57.40345258975745,23.878594468678841],[58.729211460205448,23.565667832935418],[59.808060337162857,22.533611965418203],[58.861141391846587,21.114034532144302]]],[[[56.391421339753407,25.895990708921261],[56.261041701080927,25.714606431576755],[56.070820753814559,26.055464178973949],[56.362017449779358,26.395934353128951],[56.391421339753407,25.895990708921261]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PK","name":"Pakistan","type":"Sovereign country","postal":"PK","admin":"Pakistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[75.158027785140916,37.133030910789117],[75.89689741405013,36.666806138651836],[76.192848341785691,35.898403428687828],[77.837450799474567,35.494009507787766],[76.871721632804025,34.653544012992739],[74.240202671204969,34.748887030571254],[73.749948358051967,34.317698879527853],[74.451559279278712,32.764899603805503],[75.258641798813215,32.271105455040498],[74.405928989565012,31.692639471965279],[74.421380242820277,30.979814764931177],[71.777665643200322,27.913180243434525],[70.616496209601934,27.989196275335868],[69.514392938113133,26.940965684511372],[70.168926629522019,26.491871649678842],[71.043240187468228,24.3565239527302],[68.842599318318776,24.359133612560939],[68.176645135373406,23.691965033456711],[67.443666619745471,23.944843654876991],[66.372827589793275,25.425140896093851],[61.49736290878419,25.078237006118499],[61.87418745305655,26.239974880472104],[63.316631707619592,26.756532497661667],[63.233897739520302,27.217047024030709],[62.755425652929858,27.378923448184988],[62.727830438085988,28.25964488373539],[61.771868117118629,28.699333807890799],[60.874248488208792,29.829238999952608],[62.549856805272782,29.318572496044311],[65.046862013616106,29.472180691031905],[66.346472609324422,29.887943427036177],[66.381457553986024,30.738899237586452],[66.938891229118468,31.304911200479353],[69.317764113242561,31.901412258424443],[69.262522007122556,32.5019440780883],[69.687147251264861,33.105498969041236],[70.323594191371598,33.358532619758392],[69.930543247359594,34.02012014417511],[70.881803012988399,33.98885590263852],[71.613076206350712,35.153203436822864],[71.26234826038575,36.074387518857804],[71.846291945283923,36.509942328429858],[75.158027785140916,37.133030910789117]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PA","name":"Panama","type":"Sovereign country","postal":"PA","admin":"Panama","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-77.881571417945253,7.223771267114785],[-78.429160732726075,8.052041123888927],[-78.182095709938636,8.319182440621773],[-79.120307176413746,8.996092027213024],[-80.382659064439622,8.298408514840432],[-80.003689948227162,7.547524115423372],[-80.42115800649708,7.271571966984765],[-80.886400926420805,7.220541490096537],[-81.059542812814726,7.817921047390597],[-81.51951473664468,7.706610012233909],[-81.721311204744467,8.108962714058436],[-82.82008134635042,8.290863755725823],[-82.850958014644817,8.073822740099956],[-82.932890998043575,9.476812038608173],[-82.546196255203483,9.566134751824677],[-82.207586432610967,8.9955752628901],[-81.439287075511544,8.786234035675719],[-79.573302781884308,9.611610012241528],[-78.055927700498017,9.247730414258299],[-77.353360765273862,8.67050466555807],[-77.242566494440084,7.935278225125444],[-77.753413865861404,7.709839789252143],[-77.881571417945253,7.223771267114785]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PE","name":"Peru","type":"Sovereign country","postal":"PE","admin":"Peru","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-69.59042375352405,-17.580011895419332],[-70.372572394477714,-18.347975355708869],[-71.375250210236928,-17.773798516513857],[-71.462040778271131,-17.363487644116383],[-76.009205084929945,-14.649286390850321],[-76.423469204397747,-13.823186944232432],[-76.25924150257417,-13.535039157772943],[-79.760578172510051,-7.194340915560084],[-81.249996304026425,-6.136834405139183],[-80.926346808582437,-5.690556735866565],[-81.410942552399462,-4.73676482505546],[-81.099669562489368,-4.036394138203697],[-80.302560594387216,-3.404856459164713],[-80.442241990872162,-4.425724379090674],[-79.624979214176179,-4.454198093283495],[-79.205289069317729,-4.959128513207389],[-78.639897223612337,-4.547784112164074],[-77.837904832658609,-3.003020521663103],[-76.635394253226721,-2.608677666843818],[-75.544995693652041,-1.56160979574588],[-75.233722703741947,-0.911416924649529],[-75.373223232713855,-0.15203175212045],[-75.106624518520078,-0.05720549886486],[-73.6595035468346,-1.260491224781134],[-73.070392218707241,-2.308954359550953],[-70.813475714791963,-2.256864515800743],[-70.047708502874855,-2.725156345229699],[-70.692682054309714,-3.742872002785859],[-69.893635219996625,-4.298186944194328],[-70.794768846302304,-4.251264743673303],[-72.891927659787257,-5.274561455916981],[-73.120027431923603,-6.629930922068239],[-73.724486660441642,-6.91859547285064],[-73.987235480429661,-7.523829847853065],[-73.015382656532552,-9.032833347208062],[-73.226713426390162,-9.462212823121234],[-72.563033006465645,-9.520193780152717],[-72.18489071316985,-10.053597914269432],[-71.302412278921537,-10.079436130415374],[-70.481893886991173,-9.490118096558845],[-70.548685675728407,-11.009146823778465],[-69.529678107364958,-10.951734307502194],[-68.665079718689626,-12.561300144097173],[-68.948886684836594,-14.453639418193283],[-69.339534674747014,-14.953195489158832],[-69.160346645774951,-15.323973890853019],[-69.389764166934711,-15.660129082911652],[-68.959635382753305,-16.50069793057127],[-69.59042375352405,-17.580011895419332]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PH","name":"Philippines","type":"Sovereign country","postal":"PH","admin":"Philippines","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[126.37681359263749,8.414706325713354],[126.53742394420064,7.189380601424574],[126.19677290253256,6.27429433840004],[125.8314205262291,7.293715318221857],[125.3638521668523,6.786485297060992],[125.68316084198372,6.049656887227258],[125.39651167206065,5.58100332277229],[124.21978763234236,6.161355495626182],[123.93871951710693,6.885135606306122],[124.24366214406135,7.360610459823661],[123.61021243702757,7.833527329942754],[122.08549930225578,6.899424139834849],[121.91992801319262,7.192119452336073],[122.31235884001714,8.034962063016508],[123.48768761606354,8.693009751821194],[123.84115441293986,8.240324204944386],[124.60146976125023,8.514157619659017],[124.76461225799565,8.96040945071546],[125.47139082245158,8.986996975129642],[125.4121179546128,9.760334784377548],[126.22271447154318,9.286074327018852],[126.37681359263749,8.414706325713354]]],[[[123.98243777882581,10.278778591345812],[122.99588300994165,9.0221886255204],[122.38005496631948,9.713360907424203],[122.94741051645192,10.881868394408031],[123.49884972543848,10.940624497923949],[123.33777428598475,10.267383938025446],[124.07793582570125,11.23272553145371],[123.98243777882581,10.278778591345812]]],[[[118.50458092659036,9.316382554558089],[117.17427453010069,8.367499904814665],[119.51149620979757,11.369668077027214],[119.68967654833992,10.554291490109875],[118.50458092659036,9.316382554558089]]],[[[121.88354780485915,11.89175507247198],[123.12021650603597,11.58366018314787],[123.10083784392648,11.16593374271649],[122.00261030485959,10.441016750526089],[121.88354780485915,11.89175507247198]]],[[[125.50255171112352,12.162694606978349],[125.78346479706218,11.046121934447768],[125.01188398651229,11.31145457605038],[125.27744917206027,10.358722032101312],[124.80181928924574,10.134678859899893],[124.7601680848185,10.837995103392302],[124.45910119028608,10.889929917845635],[124.30252160044174,11.495370998577229],[124.89101281138161,11.415582587118593],[124.87799035044398,11.794189968304991],[124.26676150929572,12.557760931849685],[125.22711632700785,12.535720933477194],[125.50255171112352,12.162694606978349]]],[[[121.52739383350351,13.069590155484519],[121.26219038298157,12.205560207564403],[120.32343631396751,13.46641347905387],[121.18012820850217,13.429697373910443],[121.52739383350351,13.069590155484519]]],[[[121.32130822152359,18.504064642811016],[121.9376013530364,18.218552354398383],[122.24600630095429,18.478949896717097],[122.51565392465338,17.093504746971973],[122.25231082569391,16.262444362854126],[121.6627860861083,15.931017564350128],[121.72882856657728,14.328376369682246],[122.70127566944566,14.336541245984421],[123.95029503794026,13.78213064214107],[124.07741906137827,12.536676947474575],[122.92865197152994,13.552919826710408],[122.67135501514869,13.185836289925135],[122.03464969288055,13.784481919810347],[120.62863732308332,13.857655747935652],[120.99181928923056,14.525392767795083],[120.6933362163127,14.756670640517285],[120.564145135583,14.396279201713824],[120.07042850146641,14.970869452367097],[119.88377322802828,16.363704331929966],[120.28648766487882,16.034628811095331],[120.71586714079191,18.505227362537539],[121.32130822152359,18.504064642811016]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PG","name":"Papua New Guinea","type":"Sovereign country","postal":"PG","admin":"Papua New Guinea","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[155.88002566957843,-6.81999684003776],[155.16699425681512,-6.535931491729301],[154.51411421123967,-5.139117526880014],[156.01996544822478,-6.540013929880388],[155.88002566957843,-6.81999684003776]]],[[[151.98279585185449,-5.478063246282346],[150.24119673075384,-6.317753594592986],[148.31893680236075,-5.74714242922613],[148.40182579975689,-5.437755629094724],[149.84556196512725,-5.505503431829339],[150.13975589416495,-5.001348158389789],[150.23690758687351,-5.532220147324281],[150.80746707580809,-5.455842380396888],[151.64788089417087,-4.757073662946169],[151.53786176982155,-4.16780730552189],[152.33874311748102,-4.312966403829762],[151.98279585185449,-5.478063246282346]]],[[[147.19187381407497,-7.38802418378998],[148.0846358583494,-8.044108168167611],[148.7341052593936,-9.104663588093757],[149.30683515848446,-9.071435642130069],[149.26663089416135,-9.514406019736029],[150.80162763895916,-10.293686618697421],[150.69057498596388,-10.582712904505868],[147.91301842670802,-10.130440769087471],[146.56788089415065,-8.942554619994155],[146.04848107318494,-8.06741423913131],[144.74416792213802,-7.630128269077474],[143.2863757671843,-8.245491224809058],[143.41391320208069,-8.983068942910947],[142.62843143124425,-9.326820570516503],[141.0338517600139,-9.117892754760419],[141.00021040259188,-2.600151055515624],[144.58397098203326,-3.861417738463402],[145.82978641172568,-4.876497897972683],[145.98192182839298,-5.465609226100014],[147.6480733583476,-6.083659356310804],[147.8911076194162,-6.614014580922316],[146.97090538959489,-6.721656589386257],[147.19187381407497,-7.38802418378998]]],[[[153.14003787659877,-4.499983412294114],[152.82729210836831,-4.766427097190999],[152.40602583232496,-3.789742526874562],[150.66204959533886,-2.741486097833956],[150.93996544820456,-2.500002129734028],[152.2399894553711,-3.240008640153661],[153.01999352438466,-3.980015150573294],[153.14003787659877,-4.499983412294114]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PL","name":"Poland","type":"Sovereign country","postal":"PL","admin":"Poland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[15.016995883858669,51.10667409932158],[14.074521111719491,52.981262518925433],[14.353315463934138,53.248171291712971],[14.119686313542587,53.75702912049104],[17.622831658608675,54.851535956432912],[18.620858595461641,54.682605699270781],[18.696254510175464,54.43871877706929],[23.243987257589509,54.220566718149144],[23.799198846133379,52.691099351606567],[23.199493849386187,52.486977444053672],[24.029985792748903,50.705406602575181],[22.518450148211603,49.476773586619743],[22.776418898212626,49.027395331409622],[21.607808058364213,49.470107326854091],[19.825022820726872,49.217125352569226],[19.320712517990472,49.571574001659194],[18.909574822676319,49.435845852244576],[18.392913852622172,49.988628648470751],[17.649445021238989,50.049038397819956],[17.554567091551121,50.362145901076417],[16.868769158605659,50.47397370055603],[16.719475945714436,50.215746568393541],[16.176253289462267,50.422607326857907],[16.238626743238569,50.697732652379841],[15.016995883858669,51.10667409932158]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PR","name":"Puerto Rico","type":"Dependency","postal":"PR","admin":"Puerto Rico","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-66.282434455008215,18.514761664295364],[-65.591003790942949,18.228034979723915],[-65.847163865813769,17.975905666571862],[-67.184162360285271,17.946553453030077],[-67.10067908391774,18.520601101144351],[-66.282434455008215,18.514761664295364]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KP","name":"Dem. Rep. Korea","type":"Sovereign country","postal":"KP","admin":"North Korea","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[130.64001590385243,42.395009467125277],[130.78000735893113,42.22000722916885],[130.40003055228902,42.280003567059708],[129.66736209525482,41.601104437825228],[129.70518924369247,40.882827867184332],[127.53343550019417,39.756850083976701],[127.38543419811027,39.213472398427655],[128.34971642467661,38.61224294692785],[128.20574588431145,38.370397243801889],[125.2753304383362,37.669070542952724],[124.71216067921938,38.10834605564979],[125.38658979706059,39.387957872061165],[124.26562462778531,39.928493353834156],[125.07994184784064,40.569823716792449],[126.86908328664987,41.81656932226619],[128.20843305879066,41.466771552082491],[128.05221520397231,41.994284572917948],[129.59666873587952,42.424981797854556],[129.99426720593323,42.985386867843786],[130.64001590385243,42.395009467125277]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PT","name":"Portugal","type":"Sovereign country","postal":"P","admin":"Portugal","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-9.034817674180246,41.880570583659676],[-8.263856980817792,42.28046865495034],[-8.013174607769912,41.790886135417125],[-6.668605515967657,41.883386949219584],[-6.389087693700915,41.381815497394655],[-6.851126674822552,41.111082668617527],[-7.066591559263529,39.711891587882775],[-7.498632371439726,39.629571031241809],[-7.098036668313128,39.030072740223787],[-7.374092169616318,38.373058580064921],[-7.029281175148796,38.075764065089771],[-7.855613165711986,36.838268540996268],[-8.898856980820327,36.868809312480778],[-8.83999752443988,38.266243394517616],[-9.526570603869715,38.737429104154913],[-8.768684047877102,40.760638943030187],[-9.034817674180246,41.880570583659676]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PY","name":"Paraguay","type":"Sovereign country","postal":"PY","admin":"Paraguay","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-62.685057135657885,-22.249029229422387],[-61.786326463453769,-19.633736667562964],[-59.115042487206111,-19.356906019775401],[-58.183471442280506,-19.868399346600363],[-57.8706739976178,-20.732687676681952],[-57.937155727761294,-22.090175876557172],[-55.797958136606908,-22.356929620047822],[-55.400747239795422,-23.956935316668805],[-54.292959560754518,-24.021014092710729],[-54.788794928595053,-26.621785577096134],[-55.695845506398157,-27.387837009390864],[-56.486701626192996,-27.548499037386293],[-58.618173590719749,-27.123718763947096],[-57.633660040911131,-25.603656508081642],[-57.777217169817938,-25.16233977630904],[-60.846564704009914,-23.880712579038292],[-62.685057135657885,-22.249029229422387]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PS","name":"Palestine","type":"Disputed","postal":"PAL","admin":"Palestine","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.545665317534542,32.393992011030576],[35.397560662586045,31.489086005167582],[34.927408481594568,31.353435370401414],[35.22589155451243,31.754341132121766],[34.974640740709333,31.866582343059722],[35.183930291491436,32.532510687788943],[35.545665317534542,32.393992011030576]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"QA","name":"Qatar","type":"Sovereign country","postal":"QA","admin":"Qatar","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[50.810108270069577,24.754742539971378],[50.743910760303692,25.482424221289396],[51.286461622936059,26.114582017515868],[51.606700473848811,25.215670477798739],[51.38960778179063,24.627385972588058],[50.810108270069577,24.754742539971378]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RO","name":"Romania","type":"Sovereign country","postal":"RO","admin":"Romania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.710531447040495,47.882193915389408],[23.142236362406805,48.096341050806949],[24.866317172960578,47.737525743188314],[26.197450392366932,48.220881252630349],[26.924176059687568,48.123264472030996],[28.128030226359044,46.810476386088254],[28.233553501099042,45.488283189468376],[29.149724969201653,45.464925442072456],[29.626543409958771,45.035390936862399],[28.8378577003202,44.913873806328056],[28.558081495891997,43.707461656258133],[27.242399529740908,44.175986029632405],[25.569271681426926,43.688444729174719],[22.944832391051847,43.82378530534713],[22.474008416440601,44.409227606781769],[22.705725538837356,44.578002834647023],[21.562022739353608,44.7689472519655],[21.483526238702236,45.18117015235778],[20.220192498462836,46.127468980486555],[21.021952345471249,46.316087958351901],[22.099767693782837,47.672439276716702],[22.710531447040495,47.882193915389408]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RU","name":"Russia","type":"Sovereign country","postal":"RUS","admin":"Russia","sales_rgn":5},"geometry":{"type":"MultiPolygon","coordinates":[[[[143.64800744036287,50.747600409541519],[144.65414757708564,48.976390692737596],[143.17392785051723,49.306551418650372],[142.5586682476501,47.861575018904915],[143.53349246640406,46.836728013692493],[143.50527713437262,46.137907619809482],[142.74770063697392,46.740764878926569],[142.09203006405451,45.966755276058791],[141.90444461483506,48.85918854429957],[142.17998335181531,50.952342434281917],[141.59407596249005,51.935434882202543],[141.68254601457366,53.301966457728781],[142.60693403541077,53.762145087287905],[142.2097489768154,54.225475979216867],[142.65478641171299,54.365880845753878],[143.64800744036287,50.747600409541519]]],[[[22.731098667092652,54.327536932993326],[20.892244500418656,54.312524929412575],[19.660640089606403,54.426083889373984],[19.888481479581344,54.866160386771497],[21.268448927503499,55.190481675835287],[22.757763706155288,54.856574408581423],[22.731098667092652,54.327536932993326]]],[[[-175.01425,66.58435],[-174.33983,66.33556],[-174.57182,67.06219],[-171.85731,66.91308],[-169.89958,65.97724],[-170.89107,65.54139],[-172.53025,65.43791],[-172.555,64.46079],[-172.95533,64.25269],[-175.98353,64.92288],[-176.20716,65.35667],[-178.35993,65.39052],[-178.90332,65.74044],[-178.68611,66.11211],[-179.88377,65.87456],[-179.43268,65.40411],[-180.0,64.979708702198366],[-180.0,68.963636363636368],[-174.92825,67.20589],[-175.01425,66.58435]]],[[[180.00000000000014,70.832199208546683],[178.90342500000011,70.78114],[178.7253,71.0988],[180.00000000000014,71.51571433642826],[180.00000000000014,70.832199208546683]]],[[[-178.69378,70.89302],[-180.0,70.832199208546683],[-180.0,71.51571433642826],[-177.577945,71.26948],[-178.69378,70.89302]]],[[[143.60385,73.21244],[142.08763,73.20544],[139.86312,73.36983],[142.06207,73.85758],[143.60385,73.21244]]],[[[150.73167,75.08406],[149.575925,74.68892],[146.11919,75.17298],[146.358485,75.49682],[150.73167,75.08406]]],[[[145.086285,75.56262],[144.3,74.82],[138.95544,74.61148],[136.97439,75.26167],[137.51176,75.94917],[138.831075,76.13676],[145.086285,75.56262]]],[[[57.5356925799924,70.72046397570216],[53.677375115784201,70.76265778266847],[53.412016635965387,71.206661688920207],[51.601894565645722,71.474759019650492],[51.455753615124223,72.014881089965144],[52.478275180883571,72.22944163684096],[52.444168735570855,72.774731350384855],[54.427613559797663,73.627547512497586],[53.50828982932515,73.749813951300155],[55.902458937407658,74.627486477345343],[55.631932814359715,75.081412258597169],[61.170044386647504,76.251883450008137],[68.157059767534832,76.939696763812918],[68.852211134725138,76.544811306454619],[61.583507521414759,75.260884507946798],[58.47708214705338,74.309056301562833],[55.419335971910954,72.371267605265984],[55.622837762276305,71.54059479439033],[57.5356925799924,70.72046397570216]]],[[[106.97013000000013,76.97419],[107.24000000000015,76.48],[111.07726000000017,76.71],[114.13417,75.84764],[113.88539,75.327790000000135],[109.4,74.18],[112.11919,73.787740000000127],[113.01954000000026,73.976930000000152],[113.52958000000032,73.335050000000109],[115.56782,73.75285],[118.77633000000023,73.58772],[119.02,73.12],[123.20066000000011,72.97122],[123.25777000000019,73.735030000000108],[126.97644,73.56549],[128.59126,73.03871],[129.05157,72.39872],[128.46000000000012,71.98],[129.71599000000023,71.19304],[131.28858000000028,70.786990000000117],[132.25350000000017,71.836300000000108],[133.85766000000032,71.386420000000157],[135.56193,71.655250000000137],[137.49755,71.34763],[138.23409000000018,71.62803],[139.86983000000012,71.487830000000145],[139.14791,72.416190000000114],[140.46817,72.849410000000148],[149.5,72.2],[150.3511800000002,71.60643],[152.96890000000022,70.84222],[158.99779,70.86672],[159.83031000000025,70.45324],[159.70866,69.72198],[160.94053000000034,69.437280000000101],[167.83567,69.58269],[169.5776300000002,68.6938],[170.81688000000028,69.01363],[170.00820000000019,69.65276],[170.45345000000029,70.09703],[175.72403000000023,69.877250000000231],[180.00000000000014,68.963636363636567],[180.00000000000014,64.979708702198479],[178.70720000000026,64.53493],[177.41128000000018,64.60821],[179.37034,62.982620000000111],[179.22825000000014,62.304100000000147],[177.3643,62.5219],[173.68013,61.65261],[170.69850000000011,60.33618],[170.33085000000031,59.88177],[168.90046,60.57355],[166.29498000000032,59.788550000000214],[165.84000000000023,60.16],[164.87674,59.7316],[163.53929000000014,59.86871],[163.21711000000025,59.21101],[162.0173300000001,58.24328],[162.05297,57.83912],[163.19191,57.615030000000104],[163.05794000000017,56.159240000000125],[162.12958000000023,56.12219],[161.70146,55.285680000000156],[162.11749000000017,54.85514],[160.36877000000035,54.34433],[160.02173000000025,53.20257],[158.53094000000019,52.958680000000243],[158.23118,51.94269],[156.78979000000029,51.01105],[155.43366000000012,55.381030000000123],[155.91442000000032,56.767920000000146],[156.75815,57.3647],[156.81035000000011,57.83204],[158.36433000000019,58.05575],[161.87204,60.343000000000131],[163.66969,61.140900000000101],[164.47355000000013,62.55061],[163.2584200000002,62.46627],[162.65791,61.6425],[160.1214800000001,60.54423],[159.30232,61.773960000000102],[156.7206800000001,61.43442],[154.21806000000035,59.758180000000124],[155.04375,59.14495],[151.26573000000027,58.78089],[151.33815000000013,59.50396],[149.78371,59.655730000000148],[148.54481,59.16448],[145.48722,59.33637],[142.19782000000018,59.03998],[135.12619,54.72959],[136.70171,54.603550000000126],[137.19342,53.97732],[138.1647,53.755010000000254],[138.80463,54.254550000000108],[139.90151,54.18968000000018],[141.34531,53.089570000000123],[141.37923,52.23877],[140.5974200000002,51.239670000000103],[140.06193000000022,48.446710000000166],[138.21971,46.30795],[134.86939000000027,43.39821],[133.53687000000028,42.81147],[132.90627000000015,42.798490000000101],[132.27807000000027,43.284560000000113],[130.78,42.220000000000198],[130.63386640840983,42.903014634770557],[131.14468794161499,42.929989732426947],[131.28855512911562,44.111519680348266],[131.02519000000026,44.96796],[131.88345421765959,45.321161607436522],[133.09712000000022,45.14409],[135.02631147678679,48.478229885443909],[132.50669000000013,47.78896],[130.98726000000013,47.79013],[130.58229332898267,48.729687404976204],[129.39781782442051,49.440600084015614],[127.65740000000037,49.76027],[125.94634891164648,52.79279857035695],[125.06821129771046,53.161044826868931],[123.57147,53.4588],[121.00308475147037,53.251401068731241],[120.17708865771689,52.753886216841209],[120.725789015792,52.516226304730907],[120.7382,51.96411],[119.27939,50.58292],[119.28846072802585,50.142882798861962],[117.8792444194265,49.510983384797044],[116.67880089728621,49.888531399121405],[115.48569542853144,49.805177313834747],[114.36245649623535,50.248302720737485],[112.89773969935439,49.543565375356991],[110.66201053267886,49.130128078805853],[108.47516727095129,49.282547715850711],[106.88880415245532,50.27429596618029],[103.67654544476036,50.089966132195144],[102.25589000000011,50.510560000000112],[102.06521,51.259910000000104],[98.861490513100506,52.047366034546712],[97.825739780674525,51.01099518493325],[98.231761509191728,50.42240062112873],[97.259760000000227,49.72605],[94.815949334698786,50.013433335970888],[94.147566359435615,50.480536607457168],[92.23471154171969,50.802170722041751],[88.805566847695587,49.470520738312473],[87.359970330762707,49.214980780629162],[86.829356723989662,49.82667470966814],[85.5412699726825,49.692858588248157],[83.383003778012466,51.069182847693895],[81.945985548839957,50.812195949906339],[80.56844689323546,51.388336493528442],[80.035559523441719,50.864750881547224],[77.800915561844334,53.404414984747547],[76.525179477854778,54.177003485727141],[76.891100294913457,54.490524400441927],[74.384820000000133,53.54685000000012],[73.425678745420527,53.489810289109755],[73.508516066384374,54.035616766976602],[72.224150018202209,54.376655381886792],[71.180131056609497,54.133285224008262],[70.865266554655165,55.169733588270105],[69.068166945272907,55.385250149143502],[65.178533563095954,54.354227810272079],[61.436600000000141,54.00625],[60.97806644068325,53.664993394579142],[61.699986199800634,52.979996446334269],[60.739993117114551,52.719986477257748],[60.927268507740251,52.447548326215014],[59.967533807215574,51.960420437215674],[61.588003371024143,51.272658799843185],[61.337424350841019,50.799070136104262],[59.932807244715576,50.842194118851836],[59.642282342370578,50.545442206415714],[58.36332000000013,51.06364],[56.77798,51.04355],[55.716940000000108,50.621710000000149],[52.328723585831057,51.718652248738096],[50.766648390512188,51.692762356159875],[48.702381626181051,50.605128485712839],[48.577841424357615,49.874759629915644],[47.549480421749394,50.454698391311126],[46.466445753776298,48.39415233010493],[47.315240000000159,47.71585],[48.05725,47.74377],[48.694733514201886,47.075628160177899],[48.593250000000154,46.561040000000105],[49.101160000000135,46.399330000000106],[48.645410000000112,45.80629],[47.67591,45.641490000000118],[46.68201,44.609200000000101],[47.59094,43.660160000000133],[47.49252,42.98658],[48.584370000000177,41.80888],[47.81566572448466,41.151416124021353],[45.7764,42.092440000000238],[45.470279168485916,42.502780666670049],[43.931210000000107,42.554960000000108],[42.394400000000161,43.2203],[39.955008579271095,43.434997666999294],[36.675460000000129,45.24469],[37.40317,45.404510000000101],[38.23295,46.24087],[37.67372,46.63657],[39.14767,47.044750000000136],[39.12120000000013,47.26336],[38.223538038899477,47.102189846375978],[38.255112339029807,47.54640045835697],[39.738277622238996,47.898937079452082],[39.67465,48.783820000000134],[40.069040000000115,49.60105],[38.010631137857075,49.915661526074729],[37.393459506995242,50.383953355503678],[36.626167840325394,50.225590928745135],[35.356116163888117,50.577197374059153],[35.022183058417937,51.207572333371502],[34.224815708154409,51.255993150428935],[34.391730584457235,51.768881740925906],[33.752699822735877,52.33507457133166],[31.78597,52.10168],[31.305200636527985,53.073995876673308],[32.693643019346126,53.351420803432148],[31.731272820774592,53.794029446012019],[30.757533807098781,54.811770941784403],[30.873909132620071,55.550976467503517],[29.37157189303079,55.670090643936277],[28.17670942557794,56.169129950578792],[27.770015903440992,57.244258124411203],[27.288184848751655,57.474528306703917],[27.716685825315778,57.79189911562446],[27.420150000000206,58.724570000000142],[28.131699253051863,59.300825100330997],[27.98112,59.47537],[29.1177,60.028050000000121],[28.07,60.503520000000151],[31.139991082491036,62.357692776124452],[31.516092156711267,62.867687486412905],[30.035872430142803,63.552813625738565],[30.44468468600374,64.204453436939076],[29.544429559047018,64.948671576590556],[30.21765,65.80598],[29.054588657352383,66.944286200622031],[29.977426385220696,67.698297024192755],[28.445943637818772,68.364612942164001],[28.591929559043365,69.064776923286701],[32.132720000000262,69.905950000000246],[33.77547,69.301420000000121],[36.51396,69.06342],[41.059870000000132,67.45713000000012],[41.125950000000188,66.791580000000124],[38.38295,65.999530000000107],[33.918710000000175,66.75961],[33.18444,66.63253],[34.81477,65.900150000000139],[34.943910000000159,64.414370000000162],[37.012730000000118,63.849830000000111],[37.141970000000157,64.33471],[36.539579035089815,64.76446],[37.176040000000143,65.143220000000127],[39.59345,64.520790000000176],[40.435600000000107,64.76446],[39.762600000000162,65.49682],[42.093090000000103,66.47623],[43.949750000000137,66.06908],[44.53226,66.756340000000137],[43.69839,67.35245],[44.187950000000143,67.95051],[43.45282,68.57079],[46.250000000000142,68.25],[46.821340000000163,67.68997],[45.55517,67.56652],[45.562020000000103,67.010050000000206],[46.349150000000151,66.667670000000101],[47.894160000000255,66.884550000000161],[48.13876,67.52238],[53.717430000000178,68.85738000000012],[54.47171,68.80815],[53.485820000000132,68.20131],[54.72628,68.09702],[55.442680000000138,68.43866],[57.317020000000156,68.46628],[58.80200000000022,68.88082],[59.941420000000193,68.278440000000103],[61.07784000000018,68.94069],[60.03,69.52],[60.55,69.85],[63.504000000000161,69.54739],[68.512160000000137,68.092330000000175],[69.18068,68.615630000000124],[68.13522,69.35649],[66.930080000000117,69.454610000000116],[67.25976,69.92873],[66.69466,71.028970000000243],[68.540060000000125,71.934500000000241],[69.196360000000112,72.84336000000016],[69.94,73.040000000000134],[72.58754,72.776290000000103],[72.79603,72.22006],[71.848110000000105,71.40898],[72.47011,71.09019],[72.79188,70.39114],[72.564700000000215,69.02085],[73.66787,68.4079],[73.2387,67.7404],[71.280000000000115,66.320000000000164],[72.423010000000176,66.172670000000181],[73.92099000000016,66.789460000000133],[74.186510000000197,67.28429],[75.052,67.760470000000169],[74.469260000000162,68.32899],[74.935840000000127,68.98918],[73.84236,69.07146],[73.601870000000218,69.62763],[74.3998,70.63175],[73.1011,71.447170000000256],[74.890820000000218,72.12119],[74.65926,72.83227],[75.158010000000189,72.854970000000122],[75.68351,72.300560000000132],[75.288980000000123,71.33556],[76.35911,71.152870000000149],[75.903130000000175,71.87401],[77.576650000000114,72.26717],[79.652020000000135,72.32011],[81.5,71.75],[80.610710000000125,72.582850000000121],[80.51109,73.6482],[86.82230000000024,73.93688],[86.00956,74.459670000000159],[87.166820000000172,75.11643],[92.90058,75.77333],[93.234210000000161,76.0472],[96.67821,75.91548],[98.922540000000225,76.44689],[100.75967000000023,76.43028],[101.99084000000013,77.287540000000206],[104.3516000000001,77.69792],[106.06664000000015,77.37389],[104.70500000000024,77.1274],[106.97013000000013,76.97419]]],[[[105.07547,78.30689],[99.43814,77.921],[101.2649,79.23399],[102.08635,79.34641],[105.37243,78.71334],[105.07547,78.30689]]],[[[51.13618655783128,80.547280178540944],[47.586119012244154,80.010181179515342],[46.502825962109654,80.247246812654367],[47.072455275262911,80.559424140129465],[44.846958042181114,80.589809882317184],[48.318477410684665,80.784009914869955],[48.522806023966695,80.514568996900152],[50.039767693894618,80.918885403151819],[51.522932977103693,80.69972565380192],[51.13618655783128,80.547280178540944]]],[[[99.93976,78.88094],[94.97259,79.044745],[93.31288,79.4265],[92.5454,80.14379],[91.18107,80.34146],[95.940895,81.2504],[100.186655,79.780135],[99.93976,78.88094]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RW","name":"Rwanda","type":"Sovereign country","postal":"RW","admin":"Rwanda","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[30.419104852019245,-1.134659112150416],[30.816134881317712,-1.698914076345389],[30.758308953583111,-2.287250257988369],[29.938359002407939,-2.348486830254238],[29.632176141078588,-2.917857761246097],[29.024926385216787,-2.839257907730158],[29.291886834436614,-1.620055840667987],[30.419104852019245,-1.134659112150416]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EH","name":"W. Sahara","type":"Indeterminate","postal":"WS","admin":"Western Sahara","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-8.794883999049077,27.120696316022507],[-8.665589565454809,27.656425889592356],[-8.6872936670174,25.881056219988906],[-11.969418911171161,25.933352769468268],[-11.937224493853321,23.374594224536168],[-12.874221564169575,23.284832261645178],[-13.118754441774712,22.771220201096256],[-12.929101935263532,21.327070624267563],[-16.845193650773993,21.333323472574879],[-17.063423224342571,20.999752102130827],[-17.020428432675743,21.422310288981478],[-14.750954555713534,21.500600083903663],[-13.891110398809047,23.691009019459305],[-12.50096269372537,24.7701162785782],[-12.030758836301615,26.030866197203043],[-11.718219773800357,26.104091701760623],[-11.392554897496979,26.883423977154365],[-8.794883999049077,27.120696316022507]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SA","name":"Saudi Arabia","type":"Sovereign country","postal":"SA","admin":"Saudi Arabia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[42.77933230975097,16.347891343648683],[40.93934126156654,19.486485297111756],[39.801684604660949,20.338862209550058],[39.139399448408284,21.291904812092934],[39.066328973147591,22.57965566659027],[38.492772251140082,23.688451036060854],[37.483634881344386,24.285494696545015],[36.93162723160259,25.602959499610179],[35.130186801907882,28.063351955674719],[34.632336053207979,28.058546047471566],[34.956037225084259,29.356554673778845],[36.068940870922063,29.197494615184453],[37.998848911294374,30.508499864213135],[37.002165561681011,31.508412990844747],[39.195468377444968,32.161008816042667],[40.399994337736246,31.889991766887935],[41.889980910007836,31.190008653278369],[44.709498732284743,29.178891099559383],[47.459821811722833,29.002519436147224],[47.708850538937384,28.526062730416143],[48.416094191283946,28.55200429942667],[48.807594842327177,27.689627997339883],[50.152422316290881,26.689663194275997],[50.239858839728754,25.608049628190926],[50.810108270069577,24.754742539971378],[51.38960778179063,24.627385972588058],[52.000733270074335,23.00115448657894],[55.006803012924905,22.496947536707136],[55.208341098863194,22.708329982997046],[55.666659376859826,22.000001125572339],[54.999981723862362,19.999994004796108],[52.000009800022241,19.000003363516058],[49.116671583864871,18.616667588774945],[48.183343540241339,18.166669216377315],[47.466694777217633,17.116681626854884],[47.000004917189756,16.949999294497445],[46.749994337761649,17.283338120996177],[43.791518589051918,17.319976711491108],[43.380794305196105,17.579986680567671],[43.218375278502748,16.66688996018641],[42.77933230975097,16.347891343648683]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SD","name":"Sudan","type":"Sovereign country","postal":"SD","admin":"Sudan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.963392794971185,9.464285229420625],[33.721959248183111,10.325262079630193],[33.206938084561784,10.720111638406593],[33.206938084561784,12.179338268667095],[32.743419037302544,12.248007757149992],[32.073891524594785,11.973329803218519],[32.400071594888345,11.080626452941488],[31.352861895524882,9.810240916008695],[30.837840731903384,9.707236683284521],[29.996639497988554,10.290927335388687],[28.966597170745786,9.398223985111656],[26.752006167173818,9.466893473594496],[25.790633328413946,10.411098940233728],[25.069603699343986,10.273759963267992],[24.53741516360202,8.91753756573172],[23.886979580860668,8.619729712933065],[23.459012892355986,8.954285793489021],[23.554304233502194,10.08925527591532],[22.977543572692753,10.71446259199854],[22.28801,12.64605],[21.93681,12.588180000000136],[22.51202,14.09318],[22.30351,14.32682],[23.024590000000103,15.68072],[23.886890000000108,15.61084],[23.850000000000136,20.0],[25.000000000000114,20.00304],[25.000000000000114,22.0],[36.86623,22.0],[37.481790000000103,18.61409],[38.410089959473225,17.998307399970315],[36.852530000000115,16.95655],[36.27022,13.563330000000121],[34.731150000000127,10.910170000000107],[34.25745,10.63009],[33.963392794971185,9.464285229420625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SS","name":"S. Sudan","type":"Sovereign country","postal":"SS","admin":"South Sudan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.963392794971185,9.464285229420625],[33.825500000000147,8.37916],[33.294800000000123,8.35458],[32.95418,7.784970000000101],[33.568290000000104,7.71334],[34.0751,7.22595],[35.298007118233102,5.506],[33.3900000000001,3.79],[31.881450000000143,3.55827],[31.24556,3.7819],[30.83385,3.50917],[29.71599531425602,4.600804755060153],[27.979977247842953,4.408413397637389],[27.213409051225256,5.550953477394614],[26.465909458123292,5.946717434101856],[26.21341840994512,6.546603298362129],[25.124130893664812,7.500085150579423],[25.114932488716875,7.825104071479245],[23.886979580860668,8.619729712933065],[24.53741516360202,8.91753756573172],[25.069603699343986,10.273759963267992],[25.790633328413946,10.411098940233728],[26.752006167173818,9.466893473594496],[28.966597170745786,9.398223985111656],[29.996639497988554,10.290927335388687],[30.837840731903384,9.707236683284521],[31.352861895524882,9.810240916008695],[32.400071594888345,11.080626452941488],[32.073891524594785,11.973329803218519],[32.743419037302544,12.248007757149992],[33.206938084561784,12.179338268667095],[33.206938084561784,10.720111638406593],[33.721959248183111,10.325262079630193],[33.963392794971185,9.464285229420625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SN","name":"Senegal","type":"Sovereign country","postal":"SN","admin":"Senegal","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-16.713728807023472,13.594958604379855],[-17.625042690490659,14.729540513564073],[-17.185172898822231,14.919477240452862],[-16.120690070041931,16.455662543193384],[-14.577347581428981,16.598263658102809],[-13.435737677453062,16.039383042866191],[-12.170750291380301,14.616834214735505],[-11.513942836950591,12.442987575729418],[-15.54847693527401,12.628170070847347],[-16.677451951554573,12.384851589401052],[-16.841524624081273,13.151393947802561],[-13.844963344772408,13.505041612192002],[-14.046992356817482,13.794067898000449],[-14.687030808968487,13.630356960499784],[-15.081735398813819,13.876491807505985],[-16.713728807023472,13.594958604379855]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SB","name":"Solomon Is.","type":"Sovereign country","postal":"SB","admin":"Solomon Islands","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[162.11902469304087,-10.482719008021135],[162.39864586817222,-10.826367282762121],[161.70003218001838,-10.820011081590224],[161.31979699121476,-10.204751478723125],[162.11902469304087,-10.482719008021135]]],[[[160.85222863183796,-9.872937106977005],[159.8494474632142,-9.794027194867368],[159.70294477766666,-9.242949720906779],[160.36295617089846,-9.400304457235535],[160.85222863183796,-9.872937106977005]]],[[[161.67998172428915,-9.599982191611375],[161.52939660059056,-9.784312025596435],[160.57999718652437,-8.320008640173967],[160.92002811100494,-8.320008640173967],[161.67998172428915,-9.599982191611375]]],[[[159.87502729719861,-8.337320244991716],[159.917401971678,-8.538289890174866],[158.21114953026486,-7.421872246941149],[158.82000125552773,-7.560003350457393],[159.87502729719861,-8.337320244991716]]],[[[157.5384257346893,-7.347819919466929],[156.9020304710148,-7.176874281445393],[156.54282759015396,-6.59933847415148],[157.14000044171891,-7.021638278840655],[157.5384257346893,-7.347819919466929]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SL","name":"Sierra Leone","type":"Sovereign country","postal":"SL","admin":"Sierra Leone","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-11.438779466182055,6.785916856305748],[-12.949049038128194,7.798645738145738],[-13.246550258832515,8.903048610871508],[-11.917277390988659,10.046983954300558],[-11.11748124840733,10.045872911006285],[-10.622395188835041,9.267910061068278],[-10.505477260774668,8.348896389189605],[-10.23009355309128,8.406205552601293],[-11.438779466182055,6.785916856305748]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SV","name":"El Salvador","type":"Sovereign country","postal":"SV","admin":"El Salvador","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-87.793111131526572,13.384480495655055],[-88.48330156121682,13.163951320849492],[-90.095554572290979,13.735337632700734],[-89.3533259752828,14.424132798719114],[-88.503997972349708,13.845485948130857],[-87.859515347021599,13.893312486216983],[-87.793111131526572,13.384480495655055]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"Somaliland","type":"Indeterminate","postal":"SL","admin":"Somaliland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[48.938129510296505,9.451748968946674],[47.78942,8.003],[46.948328484897957,7.996876532417389],[43.67875,9.18358000000012],[42.55876,10.57258000000013],[43.145304803242141,11.462039699748857],[44.11780358254282,10.445538438351605],[48.948206414593471,11.41062164961852],[48.938129510296505,9.451748968946674]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SO","name":"Somalia","type":"Sovereign country","postal":"SO","admin":"Somalia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[49.72862,11.5789],[51.1112,12.02464],[51.04531,10.6409],[48.59455,5.33911],[46.56476,2.85529],[43.13597,0.2922],[41.58513,-1.68325],[40.993,-0.85829],[40.98105,2.78452],[42.12861,4.23413],[42.76967,4.25259],[43.66087,4.95755],[44.9636,5.00162],[48.938129510296449,9.451748968946617],[48.942005242718352,11.394266058798138],[49.72862,11.5789]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RS","name":"Serbia","type":"Sovereign country","postal":"RS","admin":"Republic of Serbia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.874312778413412,45.41637543393432],[22.145087924902896,44.478422349620587],[22.705725538837441,44.578002834647009],[22.410446404721597,44.008063462900054],[22.986018507588483,43.211161200527101],[22.380525750424681,42.320259507815081],[21.576635989402121,42.245224397061861],[21.77505,42.6827],[20.81448,43.27205],[20.25758,42.812750000000108],[19.21852,43.52384],[19.59976,44.03847],[19.11761,44.423070000000109],[19.36803,44.863],[19.00548,44.86023],[19.390475701584592,45.236515611342384],[18.82982,45.90888],[20.220192498462893,46.127468980486583],[20.874312778413412,45.41637543393432]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SR","name":"Suriname","type":"Sovereign country","postal":"SR","admin":"Suriname","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.147436489476888,5.973149929219161],[-53.958044603070903,5.756548163267765],[-54.478632981979231,4.896755682795586],[-54.006930508019011,3.620037746592558],[-54.524754197799716,2.311848863123785],[-55.973322109589375,2.510363877773017],[-55.995698004771754,1.817667141116601],[-56.539385748914555,1.899522609866921],[-57.28143347840971,3.333491929534119],[-57.60156897645787,3.334654649260685],[-58.044694383360678,4.060863552258383],[-57.914288906472137,4.812626451024414],[-57.307245856339506,5.073566595882227],[-57.147436489476888,5.973149929219161]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SK","name":"Slovakia","type":"Sovereign country","postal":"SK","admin":"Slovakia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[18.853144158613617,49.496229763377642],[19.320712517990472,49.571574001659194],[19.825022820726872,49.217125352569226],[21.607808058364213,49.470107326854091],[22.558137648211755,49.085738023467144],[21.872236362401736,48.319970811550021],[20.801293979584926,48.623854071642384],[17.857132602620027,47.758428860050373],[16.979666782304037,48.123497015976305],[17.101984897538898,48.816968899117114],[17.886484816161811,48.903475246773709],[18.853144158613617,49.496229763377642]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SI","name":"Slovenia","type":"Sovereign country","postal":"SLO","admin":"Slovenia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[13.806475457421527,46.509306138691215],[16.202298211337364,46.852385972676963],[16.564808383864857,46.50375092221983],[15.768732944408553,46.238108222023449],[15.327674594797429,45.452316392593232],[13.715059848697223,45.500323798192376],[13.937630242578308,45.591015936864622],[13.806475457421527,46.509306138691215]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SE","name":"Sweden","type":"Sovereign country","postal":"S","admin":"Sweden","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.18317345550193,65.723740546320172],[21.21351687997722,65.026005357515274],[21.369631381930958,64.413587958424287],[17.847779168375212,62.74940013289681],[17.119554884518124,61.341165676510968],[18.787721795332089,60.081914374422595],[17.86922488777634,58.953766181058697],[16.829185011470088,58.719826972073392],[16.447709588291474,57.041118069071885],[15.879785597403783,56.104301866268663],[14.666681349352075,56.200885118222175],[14.100721062891465,55.407781073622651],[12.942910597392057,55.361737372450577],[11.027368605196868,58.856149400459358],[12.300365838274899,60.117932847730032],[12.631146681375185,61.293571682370136],[11.992064243221563,61.80036245385655],[11.930569288794231,63.128317572676977],[12.579935336973934,64.066218980558332],[13.571916131248713,64.04911408146971],[13.919905226302204,64.44542064071608],[13.555689731509091,64.787027696381514],[16.768878614985482,68.013936672631402],[17.729181756265348,68.010551866316277],[17.993868442464333,68.567391262477358],[19.878559604581255,68.407194322372575],[20.025268995857886,69.065138658312705],[20.645592889089528,69.106247260200874],[23.539473097434438,67.93600861273525],[23.565879754335583,66.396050930437426],[23.903378533633802,66.006927395279618],[22.18317345550193,65.723740546320172]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SZ","name":"Swaziland","type":"Sovereign country","postal":"SW","admin":"Swaziland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.071665480281069,-26.733820082304909],[31.86806033705108,-27.177927341421277],[31.282773064913329,-27.285879408478998],[30.68596194837448,-26.743845310169533],[31.044079624157149,-25.731452325139443],[31.83777794772806,-25.843331801051349],[32.071665480281069,-26.733820082304909]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SY","name":"Syria","type":"Sovereign country","postal":"SYR","admin":"Syria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[38.792340529136084,33.378686428352225],[36.834062127435544,32.312937526980775],[35.700797967274752,32.716013698857381],[36.066460402172055,33.82491242119255],[36.611750115715893,34.201788641897181],[36.448194207512103,34.593935248344067],[35.998402540843642,34.644914048800004],[35.905023227692226,35.410009467097325],[36.685389031731802,36.259699205056464],[36.739494256341402,36.817520453431086],[39.522580193852548,36.716053778625991],[42.349591098811771,37.229872544904097],[41.289707472505455,36.358814602192268],[41.006158888519934,34.419372260062119],[38.792340529136084,33.378686428352225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TD","name":"Chad","type":"Sovereign country","postal":"TD","admin":"Chad","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[14.495787387762903,12.859396267137356],[14.595781284247607,13.330426947477861],[13.95447675950561,13.353448798063766],[13.956698846094127,13.996691189016929],[13.540393507550789,14.367133693901224],[13.97217,15.68437],[15.247731154041844,16.627305813050782],[15.903246697664315,20.387618923417506],[15.096887648181848,21.308518785074909],[14.8513,22.862950000000126],[15.86085,23.40972],[23.837660000000142,19.580470000000105],[23.886890000000108,15.61084],[23.024590000000103,15.68072],[22.30351,14.32682],[22.51202,14.09318],[21.93681,12.588180000000136],[22.28801,12.64605],[22.864165480244253,11.142395127807617],[21.723821648859541,10.567055568885962],[21.000868361096309,9.47598521569148],[20.059685499764271,9.012706000194839],[18.812009718509273,8.982914536978626],[18.911021762780592,8.630894680206438],[17.964929640380888,7.890914008002994],[15.279460483469165,7.421924546738012],[15.436091749745742,7.692812404811889],[14.979995558337691,8.796104234243444],[13.954218377344091,9.549494940626687],[14.171466098699113,10.021378282100045],[15.467872755605242,9.982336737503545],[14.923564894275046,10.891325181517516],[14.89336,12.21905],[14.495787387762903,12.859396267137356]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TG","name":"Togo","type":"Sovereign country","postal":"TG","admin":"Togo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[1.865240512712319,6.142157701029731],[1.060121697604927,5.928837388528876],[0.570384148774849,6.914358628767189],[0.712029249686879,8.312464504423829],[0.023802524423701,11.018681748900804],[0.899563022474069,10.99733938236426],[0.772335646171484,10.470808213742359],[1.425060662450136,9.825395412633],[1.865240512712319,6.142157701029731]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TH","name":"Thailand","type":"Sovereign country","postal":"TH","admin":"Thailand","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[102.5849324890267,12.186594956913282],[101.68715783081996,12.645740057826572],[100.83180952352487,12.627084865769206],[100.97846723836921,13.412721665902566],[100.09779747925111,13.406856390837433],[100.01873253784456,12.307001044153354],[99.153772414143162,9.963061428258556],[99.222398716226763,9.239255479362427],[99.873831821698133,9.20786204674512],[100.45927412313276,7.429572658717177],[102.14118696493638,6.221636053894628],[101.81428185425798,5.810808417174243],[101.15421878459387,5.691384182147715],[101.07551557821336,6.204867051615921],[100.25959638875696,6.642824815289544],[100.08575687052711,6.464489447450291],[98.503786248775995,8.382305202666288],[98.339661899817003,7.794511623562386],[98.150009393305822,8.350007432483878],[98.553550653073046,9.932959906448545],[99.587286004639722,11.892762762901697],[99.097755161538757,13.827502549693278],[98.192074009191401,15.123702500870351],[98.903348423256759,16.177824204976119],[97.375896437573545,18.445437730375815],[97.797782830804408,18.627080389881755],[98.25372399291561,19.708203029860044],[98.959675734454876,19.752980658440947],[100.11598758341785,20.417849636308187],[100.54888105672688,20.109237982661128],[100.60629357300316,19.508344427971224],[101.2820146016517,19.462584947176765],[101.05954756063517,17.51249725999449],[102.11359175009248,18.109101670804165],[102.99870568238771,17.961694647691601],[103.20019209189374,18.309632066312773],[103.9564766784853,18.240954087796879],[104.71694705609249,17.428858954330082],[104.7793205098688,16.441864935771449],[105.58903852745016,15.570316066952858],[105.54433841351769,14.723933620660418],[105.21877689007889,14.273211778210694],[102.98842207236163,14.225721136934467],[102.34809939983302,13.394247341358223],[102.5849324890267,12.186594956913282]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TJ","name":"Tajikistan","type":"Sovereign country","postal":"TJ","admin":"Tajikistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[71.01419803252017,40.244365546218233],[70.648018833299972,39.935753892571171],[69.559609816368521,40.103211371412982],[69.46488691597753,39.526683254548701],[73.675379266254794,39.431236884105601],[73.928852166646436,38.505815334622739],[74.864815708316826,38.378846340481601],[74.980002475895418,37.419990139305895],[73.260055779925011,37.495256862939002],[71.844638299450594,36.738171291646921],[71.448693475230243,37.06564484308052],[71.348131137990265,38.258905341132163],[70.806820509732887,38.486281643216415],[70.116578403610333,37.588222764632093],[69.518785434857961,37.60899669041342],[69.196272820924378,37.151143500307427],[67.829999627559516,37.144994004864685],[68.392032505165957,38.157025254868742],[68.176025018185925,38.901553453113905],[67.442219679641312,39.140143541005486],[67.701428664017357,39.580478420564532],[68.536416456989429,39.533452867178937],[69.329494663372827,40.727824408524853],[70.666622348925046,40.960213324541414],[70.458159621059622,40.496494859370287],[71.01419803252017,40.244365546218233]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TM","name":"Turkmenistan","type":"Sovereign country","postal":"TM","admin":"Turkmenistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[61.210817091725744,35.650072333309225],[61.123070509694145,36.491597194966246],[60.377637973883878,36.527383124328367],[59.234761997316809,37.412987982730343],[57.330433790928986,38.02922943781094],[55.511578403551908,37.964117133123167],[54.800303989486565,37.392420762678185],[53.921597934795557,37.198918361961262],[53.880928582581845,38.952093003895357],[53.101027866432901,39.290573635407128],[53.35780805849123,39.975286363274449],[52.693972609269821,40.033629055331971],[52.915251092343624,40.876523342444727],[53.858139275941134,40.631034450842179],[54.73684533063215,40.951014919593462],[53.72171349469059,42.12319143327003],[52.916749708880076,41.868116563477329],[52.814688755103617,41.135370591794711],[52.502459751196149,41.78331553808637],[54.079417759014952,42.324109402020831],[55.45525109235377,41.25985911718584],[57.096391229079103,41.322310085610567],[56.932215203687804,41.826026109375604],[58.62901085799146,42.751551011723052],[59.976422153569786,42.223081976890207],[60.083340691981675,41.425146185871405],[60.465952996670694,41.220326646482548],[61.882714064384693,41.084856879229406],[62.374260288345006,40.053886216790389],[64.170223016216767,38.892406724598246],[66.546150343700219,37.974684963526869],[66.51860680528867,37.362784328758792],[65.745630731066825,37.661164048812068],[65.588947788357842,37.305216783185642],[64.746105177677407,37.111817735333304],[64.546479119733903,36.312073269184268],[63.193538445900352,35.857165635718914],[62.98466230657661,35.404040839167621],[62.230651483005886,35.270663967422294],[61.210817091725744,35.650072333309225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TL","name":"Timor-Leste","type":"Sovereign country","postal":"TL","admin":"East Timor","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[124.96868248911623,-8.892790215697083],[125.94707238169826,-8.432094821815035],[127.33592817597463,-8.397316582882603],[125.08852013560109,-9.393173109579294],[124.96868248911623,-8.892790215697083]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TT","name":"Trinidad and Tobago","type":"Sovereign country","postal":"TT","admin":"Trinidad and Tobago","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-61.68,10.76],[-60.895,10.855],[-60.935,10.11],[-61.95,10.09],[-61.68,10.76]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TN","name":"Tunisia","type":"Sovereign country","postal":"TN","admin":"Tunisia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.482139926805274,30.307556057246188],[9.055602654668149,32.102691962201291],[7.612641635782182,33.344114895148962],[7.524481642292244,34.09737641045146],[8.140981479534304,34.65514598239379],[8.420964389691676,36.946427313783161],[9.509993523810607,37.349994411766545],[10.210002475636317,37.230001735984814],[10.180650262094531,36.724037787415085],[11.02886722173335,37.092103176413957],[10.600004510143094,36.410000108377375],[10.593286573945138,35.947444362932814],[10.939518670300687,35.698984076473494],[10.807847120821009,34.83350718844919],[10.149592726287125,34.330773016897709],[10.339658644256616,33.785741685515319],[10.856836378633687,33.768740139291282],[11.488787469131012,33.136995754523141],[11.432253452203696,32.368903103152874],[9.950225050505082,31.376069647745258],[9.970017124072854,30.53932485607524],[9.482139926805274,30.307556057246188]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TR","name":"Turkey","type":"Sovereign country","postal":"TR","admin":"Turkey","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[36.913127068842158,41.335358384764305],[38.347664829264517,40.948586127275718],[40.373432651538252,41.013672593747344],[41.554084100110714,41.535656236327611],[42.619548781104555,41.583172715819927],[43.582745802592711,41.092143256182567],[43.65643639504097,40.253563951166171],[44.793989699082005,39.713002631177034],[44.109225294782362,39.428136298168056],[44.421402622257602,38.281281236314527],[44.225755649600529,37.971584377589352],[44.772699008977753,37.170444647768448],[44.293451775902867,37.00151439060636],[42.779125604021857,37.385263576805812],[39.522580193852519,36.716053778626019],[36.739494256341374,36.817520453431115],[36.68538903173183,36.259699205056506],[36.149762811026591,35.821534735653671],[35.782084995269855,36.274995429014922],[36.160821567537056,36.650605577128374],[34.714553256984374,36.795532131490916],[34.02689497247647,36.219960028623973],[32.509158156064103,36.1075637883892],[31.699595167779563,36.644275214172609],[30.621624790171069,36.677864895162315],[30.391096225717121,36.26298065850699],[29.699975620245567,36.144357408181008],[28.732902866335394,36.676831366516438],[27.64118655773737,36.658822129862756],[26.318218214633049,38.208133246405396],[26.804700148228733,38.985760199533559],[26.170785353304382,39.463612168936464],[27.280019972449395,40.420013739578309],[28.81997765474722,40.460011298172219],[29.240003696415584,41.219990749672689],[31.145933872204438,41.087621568357065],[33.513282911927519,42.018960069337311],[35.16770389175187,42.040224921225445],[36.913127068842158,41.335358384764305]]],[[[27.192376743282409,40.690565700842455],[26.35800906749779,40.151993923496491],[26.056942172965336,40.824123440100749],[26.604195590936285,41.56211456966102],[26.117041863720829,41.826904608724561],[27.135739373490509,42.141484890301314],[27.996720411905414,42.007358710287775],[28.115524529744448,41.622886054036286],[28.98844282401879,41.299934190428189],[27.192376743282409,40.690565700842455]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TW","name":"Taiwan","type":"Sovereign country","postal":"TW","admin":"Taiwan","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[121.77781782438993,24.3942735865194],[121.17563235889274,22.790857245367167],[120.74707970589623,21.970571397382113],[120.1061885926124,23.556262722258236],[121.49504438688878,25.295458889257386],[121.95124393116146,24.997595933527037],[121.77781782438993,24.3942735865194]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TZ","name":"Tanzania","type":"Sovereign country","postal":"TZ","admin":"United Republic of Tanzania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.903711197104599,-0.95],[37.69869,-3.09699],[37.7669,-3.67712],[39.20222,-4.67677],[38.74054,-5.90895],[38.79977,-6.47566],[39.44,-6.839999999999861],[39.18652,-8.48551],[40.31659,-10.317099999999868],[39.521,-10.89688],[36.514081658684404,-11.720938002166747],[34.559989047999466,-11.520020033415847],[34.28,-10.16],[33.73972,-9.41715],[30.74,-8.34],[30.2,-7.08],[29.62,-6.52],[29.339997592900374,-4.499983412294114],[29.753512404099865,-4.452389418153302],[30.75224,-3.35931],[30.46967,-2.41383],[30.758308953583139,-2.287250257988376],[30.816134881317851,-1.698914076345375],[30.419104852019302,-1.134659112150416],[33.903711197104599,-0.95]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UG","name":"Uganda","type":"Sovereign country","postal":"UG","admin":"Uganda","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.86617,-1.02736],[29.579466180141026,-1.341313164885605],[29.875778842902434,0.597379868976361],[31.17414920423596,2.204465236821307],[30.77332,2.339890000000139],[30.83385,3.50917],[31.24556,3.7819],[31.88145,3.55827],[33.3900000000001,3.79],[34.005,4.249884947362148],[35.03599,1.90584],[33.893568969667001,0.109813537861839],[33.903711197104599,-0.95],[31.86617,-1.02736]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UA","name":"Ukraine","type":"Sovereign country","postal":"UA","admin":"Ukraine","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.785998162571587,52.101677964885454],[33.752699822735707,52.335074571331695],[34.391730584457008,51.768881740925792],[34.224815708154267,51.255993150428957],[35.02218305841788,51.207572333371459],[35.356116163887947,50.577197374059061],[36.626167840325337,50.225590928745135],[37.393459506995072,50.383953355503593],[38.010631137856905,49.915661526074629],[40.069058465339111,49.601055406281702],[39.674663934087533,48.783818467801879],[39.738277622238826,47.89893707945199],[38.7705847511412,47.825608222029814],[38.255112339029751,47.546400458356814],[38.22353803889942,47.102189846375886],[34.962341749823878,46.273196519549643],[35.020787794745985,45.651218980484657],[36.529997999830158,45.469989732437057],[36.33471276219916,45.113215643893966],[33.882511020652885,44.361478583344073],[33.326420932760044,44.564877020844889],[33.546924269349461,45.03477081967489],[32.454174432105503,45.327466132176077],[33.588162062318389,45.851568508480241],[31.744140252415178,46.333347886737386],[31.675307244602408,46.706245022155542],[30.748748813609101,46.583100084004002],[29.603289015427436,45.293308010431126],[28.233553501099042,45.488283189468376],[28.862972446414062,46.437889309263831],[30.024658644335375,46.42393667254504],[28.670891147585166,48.118148505234103],[27.522537469195157,48.467119452501116],[24.866317172960578,47.737525743188314],[23.142236362406805,48.096341050806949],[22.710531447040495,47.882193915389408],[22.085608351334855,48.422264309271789],[22.776418898212626,49.027395331409622],[22.518450148211603,49.476773586619743],[23.922757195743262,50.424881089878753],[23.527070753684374,51.57845408793024],[25.327787713327009,51.910656032918553],[30.555117221811457,51.319503485715657],[30.927549269338982,52.04235342061439],[31.785998162571587,52.101677964885454]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UY","name":"Uruguay","type":"Sovereign country","postal":"UY","admin":"Uruguay","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.625133429582959,-30.216294854454262],[-56.976025763564735,-30.109686374636127],[-53.787951626182192,-32.047242526987624],[-53.209588995971544,-32.727666110974724],[-53.650543992718099,-33.20200408298183],[-53.373661668498244,-33.768377780900764],[-53.806425950726535,-34.396814874002231],[-54.93586605489773,-34.952646579733624],[-56.215297003796067,-34.859835707337417],[-57.81786068381551,-34.462547295877499],[-58.427074144104388,-33.909454441057576],[-57.625133429582959,-30.216294854454262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UZ","name":"Uzbekistan","type":"Sovereign country","postal":"UZ","admin":"Uzbekistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[66.51860680528867,37.362784328758792],[66.546150343700219,37.974684963526869],[64.170223016216767,38.892406724598246],[62.374260288345006,40.053886216790389],[61.882714064384693,41.084856879229406],[60.465952996670694,41.220326646482548],[60.083340691981675,41.425146185871405],[59.976422153569786,42.223081976890207],[58.62901085799146,42.751551011723052],[56.932215203687804,41.826026109375604],[57.096391229079103,41.322310085610567],[55.968191359282912,41.308641669269363],[55.928917270741096,44.995858466159113],[58.503127068928471,45.586804307632832],[61.058319940032447,44.405816962250512],[62.01330040878625,43.504476630215649],[64.900824415959278,43.728080552742583],[66.098012322865088,42.997660020513095],[66.023391554635623,41.994646307943981],[66.510648634715722,41.987644151368443],[66.714047072216516,41.1684435084615],[67.98585574735182,41.13599070898222],[68.25989586779562,40.662324530594901],[68.632482944620023,40.668680731766813],[69.07002729683532,41.38424428971237],[70.962314894499144,42.266154283205495],[71.259247674448233,42.167710679689463],[70.42002241402821,41.519998277343142],[71.157858514291604,41.143587144529121],[71.870114780570475,41.392900092121266],[73.05541710804917,40.866033026689465],[71.77487511585656,40.145844428053778],[70.601406691372688,40.218527330072291],[70.666622348925046,40.960213324541414],[69.329494663372827,40.727824408524853],[68.536416456989429,39.533452867178937],[67.701428664017357,39.580478420564532],[67.442219679641312,39.140143541005486],[68.176025018185925,38.901553453113905],[68.392032505165957,38.157025254868742],[67.829999627559516,37.144994004864685],[66.51860680528867,37.362784328758792]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VE","name":"Venezuela","type":"Sovereign country","postal":"VE","admin":"Venezuela","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-71.331583624950298,11.776284084515808],[-71.947049933546509,11.423282375530022],[-71.633063930941091,10.446494452349029],[-72.074173956984509,9.865651353388373],[-71.695644090446535,9.072263088411248],[-71.264559292267734,9.137194525585983],[-71.03999935574339,9.859992784052409],[-71.400623338492238,10.968969021036015],[-70.155298834906517,11.375481675660041],[-70.29384334988103,11.846822414594214],[-69.943244594996827,12.162307033736099],[-69.584300096297468,11.459610907431212],[-68.882999233664449,11.443384507691563],[-68.194126552997631,10.554653225135922],[-66.227864142507997,10.648626817258688],[-64.89045223657817,10.077214667191299],[-64.318006557864948,10.64141795495398],[-61.880946010980196,10.715625311725104],[-62.730118984616411,10.420268662960906],[-62.388511928950976,9.94820445397464],[-61.58876746280194,9.873066921422264],[-60.830596686431718,9.381339829948942],[-60.671252407459733,8.580174261911878],[-59.758284878159195,8.367034816924047],[-60.5505879380582,7.779602972846178],[-60.637972785063766,7.414999904810856],[-60.295668097562398,7.043911444522919],[-61.159336310456482,6.696077378766319],[-61.410302903881956,5.959068101419618],[-60.601179165271944,4.91809804933213],[-63.093197597899106,3.770571193858785],[-64.816064012294021,4.056445217297423],[-64.368494432214106,3.797210394705246],[-64.269999152265797,2.497005520025567],[-63.368788011311665,2.200899562993129],[-65.548267381437569,0.78925446207603],[-66.325765143484958,0.724452215982012],[-67.809938117123707,2.820655015469569],[-67.303173183853445,3.31845408773718],[-67.823012254493548,4.503937282728899],[-67.341439581965574,6.095468044454023],[-69.389479946557117,6.099860541198837],[-70.093312954372422,6.96037649172311],[-71.960175747348643,6.991614895043539],[-72.444487270788073,7.423784898300482],[-72.439862230097958,8.405275376820029],[-72.788729824500393,9.085027167187334],[-73.304951544880055,9.151999823437606],[-72.905286017534706,10.450344346554772],[-71.973921678338286,11.60867157637712],[-71.331583624950298,11.776284084515808]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VN","name":"Vietnam","type":"Sovereign country","postal":"VN","admin":"Vietnam","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[108.05018029178294,21.552379869060118],[106.71506798709009,20.696850694252021],[105.66200564984631,19.05816518806057],[107.36195356651974,16.697456569887052],[108.87710656131748,15.27669057867044],[109.33526981001722,13.426028347217724],[109.20013593957398,11.666859239137764],[105.15826378786511,8.599759629750494],[104.79518517458239,9.241038316276502],[105.07620161338562,9.918490505406808],[104.33433475140347,10.48654368737523],[106.24967003786946,10.961811835163587],[105.81052371625313,11.567614650921229],[107.49140302941089,12.337205918827948],[107.5645251811039,15.202173163305559],[107.3127059265456,15.908538316303179],[105.09459842328152,18.66697459561108],[103.89653201702671,19.265180975821806],[104.8225736836971,19.886641750563882],[104.43500044150805,20.758733221921531],[103.20386111858645,20.766562201413748],[102.17043582561358,22.464753119389304],[104.47685835166448,22.819150092046968],[105.32920942588663,23.352063300056912],[106.72540327354847,22.794267889898421],[106.56727339073532,22.218204860924772],[107.04342003787264,21.811898912029914],[108.05018029178294,21.552379869060118]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VU","name":"Vanuatu","type":"Sovereign country","postal":"VU","admin":"Vanuatu","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[167.84487674384511,-16.466333103097156],[167.5151811058229,-16.59784962327997],[167.21680138576963,-15.891846205308454],[167.84487674384511,-16.466333103097156]]],[[[167.10771243720151,-14.933920179913954],[167.27002811103026,-15.740020847234874],[166.79315799384088,-15.668810723536723],[166.62913699774649,-14.626497084209603],[167.10771243720151,-14.933920179913954]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"YE","name":"Yemen","type":"Sovereign country","postal":"YE","admin":"Yemen","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[53.108572625547509,16.651051133688952],[52.385205926325881,16.382411200419654],[52.1681649107,15.597420355689948],[49.57457645040315,14.708766587782748],[48.679230584514158,14.00320241948566],[45.625050083199881,13.290946153206763],[44.989533318874415,12.69958690027471],[44.175112745954493,12.585950425664876],[43.482958611837127,12.636800035040084],[42.60487267433362,15.213335272680595],[43.380794305196105,17.579986680567671],[43.791518589051918,17.319976711491108],[46.749994337761649,17.283338120996177],[47.000004917189756,16.949999294497445],[47.466694777217633,17.116681626854884],[48.183343540241339,18.166669216377315],[49.116671583864871,18.616667588774945],[52.000009800022241,19.000003363516058],[53.108572625547509,16.651051133688952]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZA","name":"South Africa","type":"Sovereign country","postal":"ZA","admin":"South Africa","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.521001417778876,-29.257386976846256],[30.055716180142781,-31.140269463832958],[27.464608188595975,-33.226963799778801],[25.909664340933489,-33.667040297176399],[25.780628289500697,-33.944646091448341],[22.574157342222236,-33.864082533505311],[19.616405063564571,-34.819166355123713],[18.377410922934615,-34.136520684548067],[17.925190463948439,-32.611290785453427],[18.247909783611192,-32.42913136162457],[18.221761508871481,-31.661632989225669],[16.344976840895242,-28.576705010697701],[16.824017368240902,-28.08216155366447],[17.387497185951503,-28.783514092729781],[18.464899122804752,-29.045461928017279],[19.894734327888614,-28.461104831660776],[19.895767856534434,-24.767790215760591],[20.758609246511838,-25.86813648855145],[20.889609002371738,-26.828542982695915],[21.605896030369394,-26.726533705351756],[23.312096795350186,-25.26868987396572],[24.211266717228796,-25.670215752873574],[25.664666375437719,-25.486816094669713],[25.941652052522159,-24.696373386333221],[26.485753208123299,-24.616326592713104],[28.017235955525251,-22.827753594659079],[29.839036899542972,-22.102216485281176],[31.191409132621288,-22.251509698172399],[31.930588820124253,-24.369416599222539],[31.83777794772806,-25.843331801051349],[31.044079624157149,-25.731452325139443],[30.68596194837448,-26.743845310169533],[31.282773064913329,-27.285879408478998],[31.86806033705108,-27.177927341421277],[32.071665480281069,-26.733820082304909],[32.830120477028885,-26.742191664336197],[32.462132602678452,-28.301011244420557],[31.521001417778876,-29.257386976846256]],[[28.978262566857243,-28.955596612261711],[28.541700066855498,-28.647501722937569],[28.074338413207784,-28.851468601193588],[26.999261915807637,-29.875953871379984],[27.749397006956485,-30.645105889612225],[28.107204624145425,-30.545732110314951],[28.848399692507741,-30.070050551068256],[29.325166456832591,-29.257386976846256],[28.978262566857243,-28.955596612261711]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZM","name":"Zambia","type":"Sovereign country","postal":"ZM","admin":"Zambia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.759375441221323,-9.23059905358906],[33.485687697083591,-10.525558770391115],[33.114289178201915,-11.607198174692314],[33.306422153463075,-12.435778090060218],[32.688165317523129,-13.712857761289277],[33.214024692525214,-13.971860039936153],[30.17948123548183,-14.796099134991529],[30.27425581230511,-15.507786960515213],[28.947463413211267,-16.04305144619444],[27.044427117630732,-17.938026218337434],[25.264225701608012,-17.736539808831417],[24.682349074001507,-17.353410739819473],[23.215048455506064,-17.523116143465984],[21.887842644953874,-16.08031015387688],[21.933886346125917,-12.898437188369359],[24.016136508894675,-12.911046237848574],[23.912215203555718,-10.926826267137514],[24.257155389103989,-10.951992689663657],[24.314516228947952,-11.26282642989927],[25.418118116973204,-11.330935967659961],[25.752309604604733,-11.784965101776358],[26.553087599399618,-11.924439792532127],[27.164419793412463,-11.608748467661075],[27.388798862423783,-12.132747491100666],[28.155108676879987,-12.272480564017897],[28.934285922976837,-13.248958428605135],[29.699613885219492,-13.257226657771831],[29.61600141777123,-12.178894545137311],[29.34154788586909,-12.360743910372413],[28.372253045370428,-11.793646742401393],[28.673681674928929,-9.605924981324932],[28.449871046672826,-9.164918308146085],[28.734866570762502,-8.526559340044578],[30.346086053190817,-8.238256524288218],[32.759375441221323,-9.23059905358906]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZW","name":"Zimbabwe","type":"Sovereign country","postal":"ZW","admin":"Zimbabwe","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.191409132621288,-22.251509698172399],[29.43218834810904,-22.091312758067588],[28.021370070108617,-21.485975030200585],[27.724747348753255,-20.499058526290391],[26.164790887158485,-19.293085625894939],[25.264225701608012,-17.736539808831417],[27.044427117630732,-17.938026218337434],[28.947463413211267,-16.04305144619444],[30.27425581230511,-15.507786960515213],[30.338954705534544,-15.880839125230246],[31.17306399915768,-15.860943698797874],[32.847638787575846,-16.713398125884616],[32.65974327976258,-20.304290052982317],[31.191409132621288,-22.251509698172399]]]}}]});\n// CONCATENATED MODULE: ./src/map/map3D.js\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}//import * as d3 from \'d3\';\n//import turf from \'./turf.min\';\n//import { transformSVGPath } from \'./d3-threeD\';\n//import TrackballControls from \'three-trackballcontrols\';\n//const transformSVGPathExposed = $d3g.transformSVGPath;\nvar map3D_Map3D=function(){function Map3D(props){_classCallCheck(this,Map3D);this.Geo=geoAll;this.radius=100;this.interpolatePos=0.0;//this.countries = [];\nthis.type=\'plane\';this.country={};this.countries=[];this.globalPointCount=0;//0xdd380c 0x154492 0x3dba00\n//this.flightColor = 0x58E01C;\nthis.flightColor=0xdd380c;this.pointColor=0x3dba00;this.flightSpeed=10.0;this.flightWeight=6.0;this.flightHeight=0.5*35.1+0.05;this.spin=0.1;this.isMove=true;this.fls=[];this.depth=20;Object.assign(this,props);this.wrap=document.getElementById(this.el);this.el=document.createElement("div");this.el.style="user-select: none;width: 100%;height: 100%;";this.wrap.appendChild(this.el);this.containt=document.createElement("div");this.containt.style="user-select: none;";this.wrap.appendChild(this.containt);if(!this.point){this.point=new three_module["u" /* Mesh */](new three_module["h" /* CubeGeometry */](5,5,1,1,1,1));}this.renderer=new three_module["W" /* WebGLRenderer */]({preserveDrawingBuffer:this.mode==1?true:false,antialias:false,alpha:true});var w=this.el.offsetWidth-30||window.innerWidth,h=this.el.offsetHeight||window.innerHeight;this.renderer.setSize(w,h);this.renderer.autoClear=false;this.renderer.sortObjects=false;this.renderer.generateMipmaps=false;this.el.appendChild(this.renderer.domElement);this.scene=new three_module["H" /* Scene */]();this.scene.matrixAutoUpdate=false;//this.camera = new THREE.PerspectiveCamera(45, w / h, 1, 2000);\nthis.camera=new three_module["A" /* PerspectiveCamera */](70,w/h,0.1,10000);//this.camera.position.z = Math.min(w , h);\nthis.camera.position.z=400;//this.camera.position.x = 0;\n//this.camera.position.y = 0;\n//this.camera.position.z = 300;\nthis.scene.add(this.camera);this.rotating=new three_module["x" /* Object3D */]();this.rotating.rotation.x=-296;this.rotating.position.x=-60;//this.camera.position.x = 80;\nthis.scene.add(this.rotating);this.visualizationMesh=new three_module["x" /* Object3D */]();this.rotating.add(this.visualizationMesh);this.createLight();this.getRect(w,h);this.creat3DMap();this.controls=new three_module["TrackballControls"](this.camera,this.renderer.domElement,this);// this.controls.rotateSpeed = 0.5;\n// this.controls.zoomSpeed = 1.0;\n// this.controls.panSpeed = 0.25;\n// this.controls.noRotate = false;\n// this.controls.noZoom = false;\n// this.controls.noPan = true;\n// this.controls.staticMoving = false;\n// this.controls.dynamicDampingFactor = 0.2;\n}_createClass(Map3D,[{key:\'getRect\',value:function getRect(w,h){var Geo=this.Geo;var boundingRect=void 0;for(var i=0;i<Geo.features.length;i++){var gm=Geo.features[i].geometry,coordinates=gm.coordinates;if(Geo.features[i].properties.name===\'Antarctica\'){continue;}if(gm.type==\'Polygon\'){for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){this.union(coordinates[a][b]);}}}else if(gm.type==\'MultiPolygon\'){for(var _a=0;_a<coordinates.length;_a++){var path=[];for(var _b=0;_b<coordinates[_a].length;_b++){for(var c=0;c<coordinates[_a][_b].length;c++){this.union(coordinates[_a][_b][c]);}}}}}this.boundingRect.center={x:(this.boundingRect.right+this.boundingRect.left)/2,y:(this.boundingRect.top+this.boundingRect.bottom)/2};this.boundingRect.aspect=h/(this.boundingRect.top-this.boundingRect.bottom);}},{key:\'union\',value:function union(other){if(!this.boundingRect){this.boundingRect={left:other[0],right:other[0],top:other[1],bottom:other[1]};}else{this.boundingRect.left=Math.min(other[0],this.boundingRect.left);this.boundingRect.right=Math.max(other[0],this.boundingRect.right);this.boundingRect.bottom=Math.min(other[1],this.boundingRect.bottom);this.boundingRect.top=Math.max(other[1],this.boundingRect.top);}}},{key:\'translate\',value:function translate(a,b,c){var s=c||1;var a=[1,0,0,a[0]||0,0,1,0,a[1]||0,0,0,1,a[2]||0,0,0,0,1];var m=[(a[0]*b[0]+a[1]*b[1]+a[2]*(b[2]||0)+a[3]*1)*(c||1),(a[4]*b[0]+a[5]*b[1]+a[6]*(b[2]||0)+a[7]*1)*(c||1),(a[8]*b[0]+a[9]*b[1]+a[10]*(b[2]||0)+a[11]*1)*(c||1),a[12]*b[0]+a[13]*b[1]+a[14]*(b[2]||0)+a[15]*1];return m;}},{key:\'createVector3\',value:function createVector3(type,lon,lat){if(type==\'sphere\'){return new three_module["T" /* Vector3 */](-radius*Math.sin((90-lat)*Math.PI/180)*Math.cos((lon-180)*Math.PI/180),radius*Math.cos((90-lat)*Math.PI/180),radius*Math.sin((90-lat)*Math.PI/180)*Math.sin((lon-180)*Math.PI/180));}else if(type==\'plane\'){//var projected = this.projection([lon, lat]);\nvar projected=this.translate([lon,lat],[-this.boundingRect.center.x,-this.boundingRect.center.y],this.boundingRect.aspect);//return new THREE.Vector3(projected[0], -projected[1]);\nreturn new three_module["T" /* Vector3 */](projected[0],projected[1],projected[2]//(lon / 180) * this.radius * 2,\n//(lat / 180) * this.radius * 2\n);}}},{key:\'creat3DMap\',value:function creat3DMap(){var Geo=this.Geo;var count=0;var options={depth:this.depth,// 定义图形拉伸的深度，默认100\nsteps:0,// 拉伸面方向分为多少级，默认为1\nbevelEnabled:true,// 表示是否有斜角，默认为true\nbevelThickness:0,// 斜角的深度，默认为6\nbevelSize:0,// 表示斜角的高度，高度会叠加到正常高度\nbebelSegments:0,// 斜角的分段数，分段数越高越平滑，默认为1\ncurveSegments:0// 拉伸体沿深度方向分为多少段，默认为1\n// var material2 = new THREE.MeshPhongMaterial({\n//   color: 0x000000,\n//   side: THREE.DoubleSide\n// });\n};var material2=new three_module["v" /* MeshBasicMaterial */]({color:0x00173A});var lineMaterial=new three_module["v" /* MeshBasicMaterial */]({color:0x0080F5});//var baseLine = new THREE.Geometry();\nfor(var i=0;i<Geo.features.length;i++){if(Geo.features[i].properties.name===\'Antarctica\'){continue;}//var color = new THREE.Color(0xffffff).setHSL(Math.floor(Math.random() * 30 + 30) / 30, 0.6, 0.6);\nvar color=new three_module["g" /* Color */](0x00173A);this.country[Geo.features[i].properties.name]={color:color};var base=new three_module["n" /* Geometry */]();var gm=Geo.features[i].geometry;var coordinates=gm.coordinates;if(gm.type==\'Polygon\'){var path=[],v;for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){var v=this.createVector3(this.type,coordinates[a][b][0],coordinates[a][b][1]);path.push(v);count++;}}//this.toPath(path, base, this.country[Geo.features[i].properties.name]);\nvar shape=new three_module["J" /* Shape */](path);var lineGeometry=new three_module["K" /* ShapeGeometry */](shape);var geometry=new three_module["l" /* ExtrudeGeometry */](shape,options);//base.merge(geometry);\nvar mesh=new three_module["u" /* Mesh */](geometry,[new three_module["v" /* MeshBasicMaterial */]({color:color}),material2]);this.rotating.add(mesh);var line=new three_module["q" /* Line */](lineGeometry,lineMaterial);line.position.z=this.depth+1;this.rotating.add(line);}else if(gm.type==\'MultiPolygon\'){for(var a=0;a<coordinates.length;a++){var path=[],v;for(var b=0;b<coordinates[a].length;b++){for(var c=0;c<coordinates[a][b].length;c++){var v=this.createVector3(this.type,coordinates[a][b][c][0],coordinates[a][b][c][1]);path.push(v);count++;}}//this.toPath(path, base, this.country[Geo.features[i].properties.name]);\nvar shape=new three_module["J" /* Shape */](path);var lineGeometry=new three_module["K" /* ShapeGeometry */](shape);var geometry=new three_module["l" /* ExtrudeGeometry */](shape,options);//base.merge(geometry);\nvar mesh=new three_module["u" /* Mesh */](geometry,[new three_module["v" /* MeshBasicMaterial */]({color:color}),material2]);this.rotating.add(mesh);var line=new three_module["q" /* Line */](lineGeometry,lineMaterial);line.position.z=this.depth+1;this.rotating.add(line);}}}}},{key:\'getGeometry\',value:function getGeometry(){var data=this.Geo;var count=0;var geoPath=d3.geoPath().projection(this.projection);for(var _i=0;_i<data.features.length;_i++){var feature=data.features[_i];if(feature.properties.name!==\'Antarctica\'){var t=geoPath(feature);if(t!==undefined){var shapes=transformSVGPath(t);var pointCount=0;console.log(shapes);for(var p=0;p<shapes.length;p++){pointCount+=shapes[p].getPoints().length;}this.globalPointCount+=pointCount;var country={name:feature.properties.name,//sovereignt: feature.properties.SOVEREIGNT,\n//gdp: feature.properties.GDP_MD_EST,\n//gdpPerCapita: feature.properties.GDP_PER_CAPITA,\n//population: feature.properties.POP_EST,\n//type: feature.properties.TYPE,\nproperties:feature.properties,shapes:shapes,//geometry: THREE.ShapeGeometry(shapes),\ndestinations:[],numDestinationsFreeOrOnArrival:0,numSourcesFreeOrOnArrival:0,color:new three_module["g" /* Color */](0xffffff).setHSL(Math.floor(Math.random()*30+30)/30,0.6,0.6)//colorLast: new THREE.Color(Config.colorCountryDefault)\n};// var shape3d = new THREE.ExtrudeGeometry(shapes, {\n//   depth: 0.1,\n//   bevelEnabled: false\n// });\nvar shape3d=new three_module["K" /* ShapeGeometry */](shapes);for(var k=0;k<shape3d.vertices.length;k++){shape3d.vertices[k].y=-shape3d.vertices[k].y;count++;}country.geometry=shape3d;// var material = new THREE.MeshLambertMaterial({\n//   color: new THREE.Color(0xffffff).setHSL(Math.floor(Math.random() * 30 + 30) / 30, 0.6, 0.6),\n//   //emissive: color\n// });\n// var mesh = new THREE.Mesh(shape3d, material);\n// this.rotating.add(mesh);\n// let material = new THREE.LineBasicMaterial({color:0xff0000});\n// let mesh = new THREE.Line(shape3d, material);\n// mesh.position.z = 2;\n// this.rotating.add(mesh);\nthis.countries.push(country);}}}this.bufferGeometry=new three_module["d" /* BufferGeometry */]();var positions=new Float32Array(count*3*3);var normals=new Float32Array(count*3*3);var colors=new Float32Array(count*3*3);var color=new three_module["g" /* Color */](0x237DB9);var index=0;for(var i=0;i<this.countries.length;i++){var vertices=this.countries[i].geometry.vertices;for(var f=0;f<this.countries[i].geometry.faces.length;f++){var face=this.countries[i].geometry.faces[f];positions[index]=vertices[face.a].x;positions[index+1]=vertices[face.a].y;positions[index+2]=vertices[face.a].z;positions[index+3]=vertices[face.b].x;positions[index+4]=vertices[face.b].y;positions[index+5]=vertices[face.b].z;positions[index+6]=vertices[face.c].x;positions[index+7]=vertices[face.c].y;positions[index+8]=vertices[face.c].z;normals[index]=face.normal.x;normals[index+1]=face.normal.y;normals[index+2]=face.normal.z;normals[index+3]=face.normal.x;normals[index+4]=face.normal.y;normals[index+5]=face.normal.z;normals[index+6]=face.normal.x;normals[index+7]=face.normal.y;normals[index+8]=face.normal.z;colors[index]=color.r;colors[index+1]=color.g;colors[index+2]=color.b;colors[index+3]=color.r;colors[index+4]=color.g;colors[index+5]=color.b;colors[index+6]=color.r;colors[index+7]=color.g;colors[index+8]=color.b;index+=9;}}this.bufferGeometry.addAttribute(\'position\',new three_module["c" /* BufferAttribute */](positions,3));this.bufferGeometry.addAttribute(\'normal\',new three_module["c" /* BufferAttribute */](normals,3));this.bufferGeometry.addAttribute(\'color\',new three_module["c" /* BufferAttribute */](colors,3));this.bufferGeometry.verticesNeedUpdate=true;var mesh=new three_module["u" /* Mesh */](this.bufferGeometry,new three_module["w" /* MeshPhongMaterial */]({//color: 0xFFFFFF,\n//specular: 0xFFFFFF,\nshininess:5,//transparent: true,\n//opacity: 0.9,\nside:three_module["j" /* DoubleSide */],vertexColors:three_module["U" /* VertexColors */]}));this.rotating.add(mesh);//console.log(this.globalPointCount);\n}},{key:\'updateMap\',value:function updateMap(){var positions=this.bufferGeometry.getAttribute(\'position\').array;var normals=this.bufferGeometry.getAttribute(\'normal\').array;var colors=this.bufferGeometry.getAttribute(\'color\').array;var color=new three_module["g" /* Color */]();var v=new three_module["T" /* Vector3 */]();var index=0;var i,f;for(i=0;i<this.countries.length;i++){var vertices=this.countries[i].geometry.vertices;color.set(this.countries[i].color);for(f=0;f<this.countries[i].geometry.faces.length;f++){var face=this.countries[i].geometry.faces[f];v.copy(vertices[face.a]);positions[index]=v.x;positions[index+1]=v.y;positions[index+2]=v.z;v.copy(vertices[face.b]);positions[index+3]=v.x;positions[index+4]=v.y;positions[index+5]=v.z;v.copy(vertices[face.c]);//v.applyMatrix4(m);\npositions[index+6]=v.x;positions[index+7]=v.y;positions[index+8]=v.z;// normals\nnormals[index]=face.normal.x;normals[index+1]=face.normal.y;normals[index+2]=face.normal.z;normals[index+3]=face.normal.x;normals[index+4]=face.normal.y;normals[index+5]=face.normal.z;normals[index+6]=face.normal.x;normals[index+7]=face.normal.y;normals[index+8]=face.normal.z;// colors\ncolors[index]=color.r;colors[index+1]=color.g;colors[index+2]=color.b;colors[index+3]=color.r;colors[index+4]=color.g;colors[index+5]=color.b;colors[index+6]=color.r;colors[index+7]=color.g;colors[index+8]=color.b;index+=9;}}this.bufferGeometry.attributes.position.needsUpdate=true;this.bufferGeometry.attributes.normal.needsUpdate=true;this.bufferGeometry.attributes.color.needsUpdate=true;this.bufferGeometry.computeBoundingSphere();}// addTrack(start_lat, start_lng, end_lat, end_lng, radius, hue) {\n//   var num_control_points = 8;\n//   var max_altitude = 500 + Math.random() * 1200;\n//   var points = [];\n//   for (var i = 0; i < num_control_points + 1; i++) {\n//     var arc_angle = i * 180.0 / num_control_points;\n//     var arc_radius = radius + (Math.sin(latlngDeg2rad(arc_angle))) * max_altitude;\n//     var latlng = latlngInterPoint(start.y, start.x, end_lat, end_lng, i / num_control_points);\n//     var pos = latlngPosFromLatLng(latlng.lat, latlng.lng, arc_radius);\n//     points.push(new THREE.Vector3(pos.x, pos.y, pos.z));\n//   }\n//   var spline = new THREE.SplineCurve3(points);\n//   addTrackLine(spline, hue);\n// }\n// getLinePoints(start, end, config) {\n//   let x1 = start.x || 0,\n//   y1 = start.y || 0,\n//   z1 = start.z || 0,\n//   x2 = end.x || 0,\n//   y2 = end.y || 0,\n//   z2 = end.z || 0,\n//   //degree = [60, 45, 30, 15],\n//   degree = [25, 21, 15, 6],\n//   baseHeight = (config && config.height) ? config.height : this.depth,\n//   rs = [];\n//   const num = 9;\n//   const max = num - 1;\n//   let distance = Math.sqrt(Math.abs((x2 - x1) ** 2 + (y2 - y1) ** 2));\n//   let averageDistance = distance / max;\n//   let xAdd = (x2 - x1) / max;\n//   let yAdd = (y2 - y1) / max;\n//   let zAdd = [];\n//   let tanDegree = degree.map(item => Math.tan(item * Math.PI / 180));\n//   for(let i = 0, sum = 0; i < tanDegree.length; i++) {\n//     sum += tanDegree[i];\n//     zAdd.push(sum * averageDistance);\n//   }\n//   let z = [\n//     baseHeight,\n//     baseHeight + zAdd[0],\n//     baseHeight + zAdd[1],\n//     baseHeight + zAdd[2],\n//     baseHeight + zAdd[3],\n//     baseHeight + zAdd[2],\n//     baseHeight + zAdd[1],\n//     baseHeight + zAdd[0],\n//     baseHeight\n//   ];\n//   for(let i = 0; i < num; i++) {\n//     rs.push({\n//       x: x1 + i * xAdd,\n//       y: y1 + i * yAdd,\n//       z: z[i],\n//       d: distance\n//     });\n//   }\n//   return rs;\n// }\n},{key:\'getLinePoints\',value:function getLinePoints(start,end,config){var x1=start.x||0,y1=start.y||0,z1=start.z||0,x2=end.x||0,y2=end.y||0,z2=end.z||0,baseDeepth=config&&config.deepth?Number(config.deepth):0,degree=3.14/10,distance=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)),halfDistance=distance/2,maxHeight=halfDistance*Math.tan(degree),radius=(halfDistance*halfDistance+maxHeight*maxHeight)/(2*maxHeight),arcLength=2*degree*radius,xyoz_start=[0,0],xyoz_end=[distance,0],o=[distance/2,maxHeight-radius],baseSamples=2*Math.floor(arcLength)+5,rs=[];for(var i=0;i<baseSamples;i++){var x=x1+(x2-x1)/(baseSamples-1)*i,y=y1+(y2-y1)/(baseSamples-1)*i,t=Math.sqrt((x-x1)*(x-x1)+(y-y1)*(y-y1)),z=Math.sqrt(radius*radius-(t-o[0])*(t-o[0]))+o[1];rs.push({x:x1+(x2-x1)/(baseSamples-1)*i,y:y1+(y2-y1)/(baseSamples-1)*i,z:z+baseDeepth});}return rs;}},{key:\'getLine\',value:function getLine(lines){var geometry=new three_module["n" /* Geometry */]();var points=[];for(var i=0;i<lines.length;i++){points.push(new three_module["T" /* Vector3 */](lines[i].x,lines[i].y,lines[i].z));}var curve=new three_module["e" /* CatmullRomCurve3 */](points);var material=new three_module["r" /* LineBasicMaterial */]({//color: this.flightColor,\ncolor:0xdd380c,opacity:0.8,//vertexColors: THREE.VertexColors,\ntransparent:true,depthTest:true,depthWrite:false//linewidth: 0.2\n});//material.vertexColors = true;\ngeometry.vertices=curve.getPoints(lines.length/2);var line=new three_module["q" /* Line */](geometry,material);this.rotating.add(line);}},{key:\'flight\',value:function flight(data){if(this.fls!==undefined&&this.fls.length){for(var i=0;i<this.fls.length;i++){this.rotating.remove(this.fls[i]);this.fls[i].geometry.dispose();this.fls[i].material.dispose();// var o, ol, zobject;\n// if (this.fls[i] instanceof THREE.Mesh || this.fls[i] instanceof THREE.ParticleSystem) {\n//   for (o = this.scene.__webglObjects.length - 1; o >= 0; o--) {\n//     zobject = this.scene.__webglObjects[o].object;\n//     if (this.fls[i] == zobject) {\n//       this.scene.__webglObjects.splice(o, 1);\n//     }\n//   }\n// }\nthis.fls[i]=null;}}this.fls=[];if(!data||!data.length){return;}for(var i=0;i<data.length;i++){var s_lat=Number(data[i].start.lat);var s_lon=Number(data[i].start.lon);var e_lat=Number(data[i].end.lat);var e_lon=Number(data[i].end.lon);var sv={lat:s_lat,lon:s_lon,name:data[i].start.name,value:data[i].start.value||0,center:this.createVector3(this.type,s_lon,s_lat)};var ev={lat:e_lat,lon:e_lon,name:data[i].end.name,value:data[i].end.value||0,center:this.createVector3(this.type,e_lon,e_lat)};var lines=this.getLinePoints(sv.center,ev.center,{deepth:this.depth+2});var sum=lines.length;var paths=[];this.getLine(lines);for(var k=0;k<sum/6;k++){paths.push(new three_module["T" /* Vector3 */](0,0,0));}var number,linesGeo=new three_module["d" /* BufferGeometry */](),max_height=data[i].style!=undefined&&data[i].style.height!=undefined?data[i].style.height:this.flightHeight,points=[],G=paths.length,positions=new Float32Array(G*3),pos=new Float32Array(G),max=new Float32Array(G),colors=new Float32Array(G*3),start=new Float32Array(G*3),end=new Float32Array(G*3);for(var j=0;j<G;j++){var color=new three_module["g" /* Color */](0xffffff).setHSL(j/G,0.6,0.6);positions[3*j+0]=paths[j].x;positions[3*j+1]=paths[j].y;positions[3*j+2]=paths[j].z;colors[3*j+0]=color.r;colors[3*j+1]=color.g;colors[3*j+2]=color.b;start[3*j+0]=sv.center.x;start[3*j+1]=sv.center.y;start[3*j+2]=sv.center.z;end[3*j+0]=ev.center.x;end[3*j+1]=ev.center.y;end[3*j+2]=ev.center.z;pos[j]=j;max[j]=G;}linesGeo.addAttribute(\'customColor\',new three_module["c" /* BufferAttribute */](colors,3));linesGeo.addAttribute(\'position\',new three_module["c" /* BufferAttribute */](positions,3));linesGeo.addAttribute(\'pos\',new three_module["c" /* BufferAttribute */](pos,1));linesGeo.addAttribute(\'max\',new three_module["c" /* BufferAttribute */](max,1));linesGeo.addAttribute(\'start\',new three_module["c" /* BufferAttribute */](start,3));linesGeo.addAttribute(\'end\',new three_module["c" /* BufferAttribute */](end,3));var uniforms={size:{type:"f",value:parseFloat(data[i].style!=undefined&&data[i].style.weight!=undefined?data[i].style.weight:this.flightWeight,10)},c:{type:"f",value:1.0},p:{type:"f",value:1.4},glowColor:{type:"c",value:new three_module["g" /* Color */](0xffffff)},viewVector:{type:"v3",value:this.camera.position},time:{type:"f",value:0.0},sum:{type:"f",value:sum},leng:{type:"f",value:80.0},color:{type:"c",value:new three_module["g" /* Color */](data[i].style!=undefined&&data[i].style.color!=undefined?data[i].style.color:this.flightColor)},pColor:{type:"c",value:new three_module["g" /* Color */](0xffffff)},/*sColor: {\n          type: "c",\n          value: new THREE.Color(0xC91224)\n        },*/texture:{type:"t",value:new three_module["N" /* TextureLoader */]().load(\'assets/images/earth/particle.png\')}};var shaderMaterial=new three_module["I" /* ShaderMaterial */]({uniforms:uniforms,vertexShader:\'\\n          vec3 local(vec3 s, vec3 e, float i) {\\n            float PI = 3.14;\\n            float x1 = s.x;\\n            float y1 = s.y;\\n            float z1 = s.z;\\n            float x2 = e.x;\\n            float y2 = e.y;\\n            float z2 = e.z;\\n            float baseDeepth = 22.0;\\n            float degree = PI / 10.0;\\n            float distance = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\\n            float halfDistance = distance / 2.0;\\n            float maxHeight = halfDistance * tan(degree);\\n            float radius = (halfDistance * halfDistance + maxHeight * maxHeight) / (2.0 * maxHeight);\\n            float arcLength = 2.0 * degree * radius;\\n            vec2 xyoz_start = vec2(0, 0);\\n            vec2 xyoz_end = vec2(distance, 0);\\n            vec2 o = vec2(distance / 2.0, maxHeight - radius);\\n            float baseSamples = 2.0 * floor(arcLength) + 5.0;\\n\\n            float x = x1 + (x2 - x1) / (baseSamples - 1.0) * i;\\n            float y = y1 + (y2 - y1) / (baseSamples - 1.0) * i;\\n            float t = sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\\n            float z = sqrt(radius * radius - (t - o.x) * (t - o.x)) + o.y;\\n            return vec3(\\n              x1 + (x2 - x1) / (baseSamples - 1.0) * i,\\n              y1 + (y2 - y1) / (baseSamples - 1.0) * i,\\n              z + baseDeepth\\n            );\\n\\n          }\\n\\n          attribute vec3 customColor;\\n          attribute vec3 start;\\n          attribute vec3 end;\\n          uniform vec3 viewVector;\\n          uniform float c;\\n          uniform float p;\\n          uniform float size;\\n          varying float intensity;\\n          attribute float pos;\\n          attribute float max;\\n          varying float vMax;\\n          varying float vPos;\\n          varying vec3 vNormal;\\n          varying vec3 vColor;\\n          uniform float leng;\\n          uniform float time;\\n          void main() {\\n            gl_PointSize = 5.0;\\n            vec3 s = vec3(start.x, start.y, 0.0);\\n            vec3 e = vec3(end.x, end.y, 0.0);\\n            vec3 p = local(s, e, time + pos);\\n            vec4 mvPosition = modelViewMatrix * vec4(p, 1.0);\\n            gl_Position = projectionMatrix * mvPosition;\\n          }\\n        \',fragmentShader:\'\\n          uniform float time;\\n          uniform float leng;\\n          uniform vec3 color;\\n          varying float vPos;\\n          varying float vMax;\\n          varying vec3 vNormal;\\n          uniform sampler2D texture;\\n          uniform vec3 pColor;\\n          uniform vec3 glowColor;\\n          varying vec3 vColor;\\n          varying float intensity;\\n          void main() {\\n            gl_FragColor = vec4(color * glowColor, 1.0);\\n            gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\\n          }\\n        \',blending:three_module["a" /* AdditiveBlending */],depthTest:true,depthWrite:false,transparent:true});var points=new three_module["D" /* Points */](linesGeo,shaderMaterial);this.rotating.add(points);this.fls.push(points);var self=this;var speed=data[i].style!=undefined&&data[i].style.speed!=undefined?Number(data[i].style.speed):this.flightSpeed;points.update=function(){if(this.material.uniforms.time.value>=this.material.uniforms.sum.value-G){this.material.uniforms.time.value=0.0;}else{this.material.uniforms.time.value+=speed;}this.geometry.verticesNeedUpdate=true;};}}},{key:\'pot\',value:function pot(arr){if(this.points){this.rotating.remove(this.points);this.points.geometry.dispose();this.points.material.dispose();}this.points=null;if(!arr||!arr.length){return;}this._baseGeometry=new three_module["n" /* Geometry */]();var h=void 0,color=void 0;for(var i=0;i<arr.length;i++){var p=this.createVector3(\'plane\',arr[i].lon,arr[i].lat);this.point.position.x=p.x;this.point.position.y=p.y;this.point.position.z=this.depth+60/2;//(this.radius * Math.sin((90 - arr[i].lat) * Math.PI / 180) * Math.sin((180 - arr[i].lon) * Math.PI / 180));\n//this.point.lookAt(this.rotating.position);\nthis.point.scale.z=60;this.point.updateMatrix();for(var j=0;j<this.point.geometry.faces.length;j++){this.point.geometry.faces[j].color=new three_module["g" /* Color */](arr[i].style.color!==undefined?Number(arr[i].style.color):this.pointColor);}//this._baseGeometry.merge(this.point);\nthree_module["o" /* GeometryUtils */].merge(this._baseGeometry,this.point);}this.points=new three_module["u" /* Mesh */](this._baseGeometry,new three_module["w" /* MeshPhongMaterial */]({color:0xffffff,vertexColors:three_module["m" /* FaceColors */],morphTargets:false}));this.rotating.add(this.points);}},{key:\'createLight\',value:function createLight(){this.scene.add(new three_module["b" /* AmbientLight */](0xffffff));}},{key:\'render\',value:function render(){requestAnimationFrame(this.animate);this.controls.update();this.renderer.clear();this.renderer.render(this.scene,this.camera);if(this.bufferGeometry){this.updateMap();}for(var i=0;i<this.fls.length;i++){if(this.fls[i]&&this.fls[i].update!==undefined){this.fls[i].update();}}}},{key:\'load\',value:function load(data,type){if(!this.isAnimate){this.animate();this.isAnimate=true;}}}]);return Map3D;}();/* harmony default export */ var map3D = (map3D_Map3D);;var map3D_lines=[],pots=[];[{"from":"116.85059,31.69078","to":"118.69629,36.20882"},{"from":"120.89355,37.09024","to":"116.93848,31.61597"},{"from":"121.28906,29.34388","to":"117.20215,31.12820"},{"from":"118.16895,31.57854","to":"119.79492,32.47270"},{"from":"116.76270,33.35806","to":"116.49902,38.95941"},{"from":"116.41113,30.93992","to":"114.78516,26.58853"},{"from":"115.83984,32.13841","to":"97.47070,37.54458"},{"from":"116.27930,32.36140","to":"114.08203,36.27971"},{"from":"103.66699,25.79989","to":"116.05957,31.54109"},{"from":"112.14844,24.40714","to":"116.71875,33.21112"},{"from":"116.93848,31.65338","to":"118.34473,26.62782"},{"from":"90.70313,42.26105","to":"116.23535,32.32428"},{"from":"116.41113,30.82678","to":"114.87305,36.94989"},{"from":"116.45508,30.78904","to":"118.91602,28.57487"},{"from":"116.01562,40.07807","to":"116.71875,31.69078"},{"from":"116.71875,31.72817","to":"108.45703,40.24599"},{"from":"117.99316,40.84706","to":"116.85059,31.69078"},{"from":"118.30078,36.56260","to":"117.24609,40.97990"},{"from":"119.35547,26.86328","to":"120.41016,32.28713"},{"from":"113.07129,31.42866","to":"106.04004,31.31610"},{"from":"116.85059,31.31610","to":"110.43457,32.76880"},{"from":"-98.789063,45.58329","to":"112.506475,37.996794"},{"from":"-58.359375,-18.979026","to":"117.427515,30.749109"},{"from":"144.140625,-28.613459","to":"117.778677,28.918633"},{"from":"10.195313,16.636192","to":"114.263844,36.879973"},{"from":"116.372386,30.142774","to":"-109.335938,56.559482"},{"from":"113.560997,36.597899","to":"-52.382813,-9.795678"}].forEach(function(item){var froms=item.from.split(\',\'),tos=item.to.split(\',\');map3D_lines.push({start:{lon:parseFloat(froms[0],10),lat:parseFloat(froms[1],10)},end:{lon:parseFloat(tos[0],10),lat:parseFloat(tos[1],10)}});pots.push({lon:parseFloat(froms[0],10),lat:parseFloat(froms[1],10),style:{height:100}});});var map=new map3D_Map3D({el:\'id-map0\'});if(!map.animate){map.animate=function(){//TWEEN.update();\nmap.render();};map.load();}map.flight(map3D_lines);map.pot(pots);\n// EXTERNAL MODULE: ./node_modules/tween/tween.js\nvar tween = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/map2/geo.js\n/* harmony default export */ var geo = ({"type":"FeatureCollection","crs":{"type":"name","properties":{"name":"urn:ogc:def:crs:OGC:1.3:CRS84"}},"features":[{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Alberta","type":"Province","postal":"AB","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.99966285694285,53.465628031282392],[-109.99943214404341,48.993082694652713],[-114.06251701583469,48.993082694652713],[-114.73402338910687,49.587201369660278],[-114.99279537163449,50.545033437448694],[-116.67403322873736,51.790685340435289],[-118.22102364419568,52.386100402211071],[-118.80367259220323,53.153396574059229],[-119.89384048046952,53.515549908186784],[-120.00000686635538,60.001087264965378],[-110.0000254057848,60.001087264965378],[-109.99966285694285,53.465628031282392]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"British Columbia","type":"Province","postal":"BC","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-130.02508110132067,55.888212352212292],[-131.82427367483723,56.58998606062346],[-133.40110295862132,58.410882126178876],[-135.47593702214496,59.793280860553836],[-137.43857869857629,58.903124576597065],[-139.05651882377236,60.00158164974988],[-120.00000686635538,60.001087264965378],[-119.89384048046952,53.515549908186784],[-118.80367259220323,53.153396574059229],[-118.22102364419568,52.386100402211071],[-116.67403322873736,51.790685340435289],[-114.99279537163449,50.545033437448694],[-114.73402338910687,49.587201369660278],[-114.05060234252861,49.014626884927679],[-123.08643459639794,48.993027763009991],[-123.22942166239935,49.26051190407307],[-122.94763332157184,49.293273135791566],[-122.87911159044232,49.398950630057215],[-123.27676175209584,49.343964055694016],[-123.18748684634653,49.68033247672858],[-123.53056791412153,49.397291694447063],[-124.02860015968245,49.602867874164161],[-123.99260894737199,49.736164998389683],[-123.81719023950843,49.586586135261825],[-123.58247831649238,49.681255328326301],[-123.87439605223753,49.736813191773791],[-123.82545745173786,50.144230199502999],[-124.28126923670382,49.772101279057409],[-124.78237765425709,50.020095673283265],[-125.05670078483888,50.418624741220327],[-124.8626547569288,50.637296624561998],[-124.8598642294786,50.872404055405639],[-125.05877170776944,50.513865223369095],[-126.09433754317158,50.497594470795292],[-126.44747110156443,50.587770255485225],[-125.90412025075912,50.704917476750893],[-126.51433939024807,50.67938524921442],[-126.5173386579406,51.056831552675362],[-127.05758587093221,50.867537111860599],[-127.70811934301372,51.151193128540598],[-127.41965680759569,51.60805960104679],[-126.69143351321461,51.703409946481003],[-127.33873151153989,51.707386997413948],[-127.71405745359181,51.490187282097196],[-127.79534529848956,52.191027152582109],[-127.24225506742991,52.39509820528869],[-126.71399393887991,52.060696337063519],[-127.19398663297143,52.457676332675845],[-126.95131511492519,52.72122736812014],[-127.01934795443449,52.842461503604227],[-127.8343083126712,52.251001520104325],[-128.10225387953312,51.788411170426656],[-128.35761460704782,52.158881155262094],[-127.94022201300055,52.545160466872488],[-128.27154221606909,52.363007139611369],[-128.05326584055501,52.910675617534537],[-128.3650248856508,52.825773270545767],[-128.52468370521785,53.140685391933687],[-129.17156971622273,53.533578473327623],[-128.85458667190423,53.70454771813084],[-128.9056126748273,53.559319441106453],[-127.92784591389562,53.274707613843105],[-128.67555346194965,53.554617292489581],[-128.5321214496422,53.858103632191671],[-128.959357794065,53.841470330775905],[-129.56371572727568,53.251482515300893],[-130.3352416356133,53.723905629025523],[-129.62603567594203,54.230254525294328],[-130.43025140486264,54.421021134134008],[-129.56066702110468,55.462536066442766],[-129.7951702038784,55.559556333815692],[-130.04846550162677,55.057261392779651],[-129.98513481073434,55.358847097643604],[-130.09469047897608,55.694787051864949],[-130.02508110132067,55.888212352212292]]],[[[-130.21408989759328,55.025895424786256],[-130.03655082832071,55.297916919538039],[-130.14651848388283,55.654489198765191],[-130.1119774669402,55.779799262139164],[-130.02508110132067,55.888212352212292],[-130.12251884917825,55.691018741174332],[-130.01787406979577,55.284942065527474],[-130.21408989759328,55.025895424786256]]],[[[-130.21408989759328,55.025895424786256],[-130.34943047892801,54.814562408912053],[-130.57533136645168,54.769683256809401],[-130.31253289451266,54.945947911970876],[-130.21408989759328,55.025895424786256]]],[[[-130.92716853807633,54.479050921503926],[-130.90681087128411,54.631804833581015],[-130.75800654431862,54.613776268440148],[-130.7633568863196,54.576719382260933],[-130.92716853807633,54.479050921503926]]],[[[-132.6555157719763,54.127466435435792],[-132.1660858216654,53.955211790192919],[-132.53464418533417,53.651714464162296],[-131.66764158878408,54.141342168386984],[-132.01131591830045,53.265171480666851],[-132.74752627353308,53.310490085911226],[-132.42501161279264,53.336956151373954],[-133.09794071561129,54.005595092896129],[-132.6555157719763,54.127466435435792]]],[[[-130.23628228125236,53.958562620398851],[-130.38422967459141,53.843953241026867],[-130.70726069277345,53.921494747891074],[-130.44799981862562,54.089003299202915],[-130.23628228125236,53.958562620398851]]],[[[-129.84860770591689,53.167920500394501],[-129.93438895918916,53.17665463158707],[-130.51755975780256,53.544224225686861],[-129.94474906700626,53.436371438369463],[-129.84860770591689,53.167920500394501]]],[[[-129.16774098072511,53.117899746533254],[-129.32388417515807,53.14213558730151],[-129.23820179884268,53.330078709705361],[-129.1770189351806,53.259150972624667],[-129.16774098072511,53.117899746533254]]],[[[-128.55242967795598,52.939767415519299],[-128.50992906598316,52.51860651078141],[-128.67893725114124,52.289651423922464],[-128.74632189726645,52.763392897072379],[-129.18430287100534,52.990667075664078],[-129.0332298671955,53.279948092558641],[-128.55242967795598,52.939767415519299]]],[[[-131.75373595241987,53.195562103011468],[-131.63467161682325,52.922167317191651],[-131.97178161503453,52.879826006982711],[-131.45522641954827,52.701693675968755],[-131.22154721141536,52.153640676546559],[-132.54678957153965,53.137477383998828],[-131.75373595241987,53.195562103011468]]],[[[-129.31370534176196,52.992194175331718],[-129.40972036007309,53.023735924581814],[-129.51472219513329,53.179390227394549],[-129.450748804021,53.174688078777677],[-129.31370534176196,52.992194175331718]]],[[[-128.93687976586378,52.510026188188448],[-129.15102528184528,52.605321601979938],[-129.26352528613683,52.800779373107929],[-128.99400867429307,52.661692453739704],[-128.93687976586378,52.510026188188448]]],[[[-128.36877671684863,52.400888000431422],[-128.43980333088621,52.69636530662487],[-128.24728440264374,52.784376784591615],[-128.32376572880347,52.458972719444063],[-128.36877671684863,52.400888000431422]]],[[[-131.02930843455079,51.961632612581411],[-131.10343868640206,52.01388359113713],[-131.09811581022245,52.150619436196934],[-131.0106536486829,52.095270312991772],[-131.02930843455079,51.961632612581411]]],[[[-127.92464339912502,51.473861597880671],[-128.09178940159489,51.511116237973681],[-128.14240341719753,51.646588655250923],[-127.99869125351222,51.703816440637127],[-127.92464339912502,51.473861597880671]]],[[[-127.19732098368456,50.640372796554345],[-125.48207494657343,50.316770489288018],[-124.83061862289422,49.530105420216643],[-123.9958114621426,49.224026306978146],[-123.2837875091998,48.455181062805281],[-125.01722141321568,48.711492107739019],[-125.13568699390666,48.822399094391642],[-124.84965793026115,49.028271904979448],[-124.81263400306753,49.212655456935011],[-125.54313146745724,48.952828786867144],[-125.9354093144527,49.401477485622365],[-126.54855081733439,49.418945748007474],[-126.13408058667986,49.672312456891405],[-127.24979718197542,50.138000951218515],[-127.86389449544045,50.127739720358306],[-127.90588424313597,50.445189683639938],[-127.46593671658769,50.583112052182514],[-128.34988572491704,50.69660082604301],[-127.19732098368456,50.640372796554345]]],[[[-125.18413670278611,50.097120822705932],[-125.35846776412382,50.311508037915388],[-125.30115758127354,50.414076401203062],[-125.07401523862438,50.220651100855719],[-125.18413670278611,50.097120822705932]]],[[[-124.97774204159248,50.029609833802454],[-125.02595554440823,50.134100804585358],[-124.99081577255994,50.217146462050152],[-124.90746249789589,50.083970187438638],[-124.97774204159248,50.029609833802454]]],[[[-126.64123148493238,49.605812210213998],[-126.93854900115694,49.718466023105151],[-126.92583781903143,49.837733605779846],[-126.73812540952702,49.843677209522184],[-126.64123148493238,49.605812210213998]]],[[[-124.15368500332124,49.531160107756875],[-124.36232636870216,49.588190139229255],[-124.64985506619395,49.758357382048757],[-124.42149324107639,49.727771443381982],[-124.15368500332124,49.531160107756875]]],[[[-126.09206337316296,49.353994573654774],[-126.0640317558827,49.263610048722512],[-126.22962868602784,49.295646182757082],[-126.20854592155172,49.379779486747765],[-126.09206337316296,49.353994573654774]]],[[[-123.37235928992229,48.886108813618847],[-123.54103239205978,48.945951345198552],[-123.68923796411963,49.095090755184629],[-123.3779183721656,48.908224292978133],[-123.37235928992229,48.886108813618847]]],[[[-123.4353823636155,48.754437666017878],[-123.51752164897542,48.750152997885692],[-123.58234648054986,48.925802418648686],[-123.46785795079184,48.867410082436805],[-123.4353823636155,48.754437666017878]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Manitoba","type":"Province","postal":"MB","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-94.713384197645709,58.903333316839394],[-94.287054225327822,58.716005428834023],[-94.332219021972605,58.297371379661286],[-94.123187641928382,58.736703671811114],[-93.178753401799511,58.725618466310124],[-92.432803666312537,57.320324223249258],[-92.798154022046418,56.921948963911831],[-90.897447772782414,57.256922121221294],[-88.948495061717026,56.851306871373311],[-95.153826108978492,52.822356522368551],[-95.162043882729478,48.99176433522743],[-101.36727055986977,48.993137626295436],[-102.00110481256425,55.817526314359583],[-102.00164863582719,60.001087264965378],[-94.771886397143021,60.001768417335114],[-94.957352102460163,59.068853342684747],[-94.713384197645709,58.903333316839394]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"New Brunswick","type":"Province","postal":"NB","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-66.359614805488377,48.06066200478682],[-65.60726004046019,47.670010134415861],[-64.703228023552228,47.724842900179453],[-65.31890187516332,47.10120396037388],[-64.831416505004739,47.060796243988705],[-64.541509267383148,46.240326241987134],[-63.831913293048586,46.107160953704152],[-65.884478068613348,45.222904328175559],[-67.36694028336791,45.17378445325491],[-67.43264951439015,45.603108200101076],[-67.802240592942056,45.727517384534394],[-67.806788932959307,47.082812846391079],[-69.053660318414302,47.294585315407062],[-68.429636857109699,47.528187619240157],[-68.377913222324096,47.929375378684881],[-66.359614805488377,48.06066200478682]]],[[[-64.476085680903068,47.9588846571543],[-64.591299308344986,47.907204967682901],[-64.519569569280591,48.005082168682236],[-64.476085680903068,47.9588846571543]]],[[[-64.508561268079404,47.886737437605234],[-64.533906728030644,47.813777229743891],[-64.684573237684361,47.753594121979347],[-64.663281732965899,47.863017954278547],[-64.508561268079404,47.886737437605234]]],[[[-66.762483473200348,44.681772715736173],[-66.897044025208416,44.628906502781973],[-66.802166091901611,44.805379898185777],[-66.762483473200348,44.681772715736173]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Newfoundland and Labrador","type":"Province","postal":"NL","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-64.768442869789979,60.012095566166579],[-64.283517314182163,60.064082872837218],[-63.750185995009062,59.51259115258074],[-63.945446012223272,59.380194907295845],[-63.415146919728343,59.194372146301021],[-63.941029508148546,59.027401925087872],[-63.248407411414604,59.06833698524315],[-62.926079518259399,58.765048399454884],[-63.53705122125362,58.329923871137424],[-62.607882484636761,58.496377734909032],[-63.261503115039162,58.014671173564636],[-62.486252841325083,58.154076696460663],[-61.899055553300286,57.861323999746133],[-62.495558261601943,57.489206065629105],[-61.333743031735324,57.010575676277057],[-61.371623892555377,56.680832011354568],[-62.49726114252627,56.80170359799672],[-61.425292107493277,56.360646452265456],[-61.713078983705842,56.230930871145347],[-61.364702505572595,56.216022423310989],[-61.449527948261547,55.995702590687699],[-60.341018384490894,55.784655219355642],[-60.192362372960744,55.480905207768501],[-60.617126793461097,55.060205728829459],[-59.758797903296568,55.309595386780416],[-59.437865273866464,55.175913741055865],[-59.837789605528613,54.813936188185039],[-59.259579134252874,55.199940841581821],[-57.404504600596781,54.59088075975427],[-60.395400710784159,53.653318468129726],[-60.100307926089769,53.48696348131503],[-60.329460766862496,53.266105318593077],[-57.92826682760797,54.103571170852376],[-58.309975826544019,54.201657112094068],[-57.416073204553712,54.162765509047972],[-57.134977002424492,53.791856071070754],[-57.524079800470716,53.611405624734005],[-57.331764119306328,53.469088724773798],[-56.524290943972417,53.766433706819726],[-55.966086576975485,53.471132181883007],[-55.802818748481684,52.643169503814363],[-56.324900067225627,52.544523259816913],[-55.746458883050479,52.474573305976662],[-56.011712799419115,52.394471984561676],[-55.695229633049365,52.137798390785974],[-57.09558002826536,51.442550561529998],[-57.101029247223238,52.001117477368894],[-63.756898641749501,52.010521774602637],[-64.059418184539709,52.485120181378988],[-63.409686714441918,52.688718821958162],[-63.722544392392123,53.109187587997781],[-64.178477026972075,52.815325272100324],[-64.13067551147671,52.1866875528072],[-64.598011955085425,51.600369171065921],[-65.137133069401273,52.154695364086791],[-66.407438293640823,52.18368828511467],[-66.428037659661001,53.010816002213943],[-67.029473229478938,52.720370434493702],[-66.944439046547643,53.355138525114427],[-67.757251577553987,54.033654175997754],[-67.601421493484537,54.552791158691889],[-67.150180021192924,54.616665672847262],[-67.408150001736814,55.071785319114952],[-66.724448803780689,54.747974271606267],[-66.773986159186009,55.328250172648296],[-65.675803744246807,54.744931058599576],[-63.698824909065422,54.615193504822344],[-63.534018994575447,55.140350995558634],[-63.111825374954407,55.339829762933761],[-64.121479954485309,56.299408656960679],[-63.601255325265313,57.723061055018718],[-64.400378890905699,58.121414341699051],[-63.848008264365689,58.459738329214474],[-64.070811007239939,58.641693902561769],[-63.4967094228397,58.753446836512296],[-64.848313478305556,58.949223211168089],[-64.324364483709104,59.019964180663521],[-64.887270999322908,60.035408555337142],[-64.436348130559068,60.228108758000559],[-64.768442869789979,60.012095566166579]]],[[[-61.743620977058427,57.554574720466462],[-61.637471070665384,57.416081062839595],[-62.011225967735498,57.54847730812449],[-61.848342660740741,57.579326918676315],[-61.743620977058427,57.554574720466462]]],[[[-60.994485206293675,56.039318315007762],[-60.982729834751495,56.015137405882228],[-61.195842635849843,56.063916704618009],[-61.086891215678051,56.140831990755203],[-60.994485206293675,56.039318315007762]]],[[[-55.361245245308865,51.889650187960484],[-55.399818244827188,51.938484418338987],[-55.274090700968557,51.995173873626527],[-55.293569461477247,51.929959027388776],[-55.361245245308865,51.889650187960484]]],[[[-55.458726938480623,51.536549588553271],[-56.031092682970893,51.328391621628299],[-55.800028221031482,51.033320809591004],[-56.822185242445556,49.613458694880677],[-56.179408118316175,50.11497360659007],[-55.502913951884977,49.983148650389495],[-56.140186925413758,49.619116654080898],[-55.229541138722254,49.508143749456991],[-55.3531812801575,49.079435237009307],[-54.502202243788986,49.527336865423507],[-53.619461731599472,49.32163983609243],[-54.161285482737156,48.787693282520848],[-53.706330631397634,48.655527750135377],[-54.114472736810768,48.393580718658541],[-53.027584267614898,48.634708657544337],[-53.869576487234355,48.019682999317325],[-53.63821539442425,48.014640274515585],[-53.863654856149083,47.787036506067579],[-53.672349917210752,47.648257203898567],[-52.865997347388344,48.112978901313795],[-53.169824263275288,47.512092647923055],[-52.782402373496325,47.769436407739931],[-52.653653589288069,47.549402219658788],[-53.069782755552765,46.681229579118764],[-53.589798644530418,46.638888268909824],[-53.597368224897295,47.146006208176715],[-54.173743979306167,46.880389742966116],[-53.849526437641373,47.440307977215923],[-54.191827476089742,47.859820932672221],[-54.488139743252532,47.403877311763722],[-55.788525535045821,46.867217135041756],[-54.784605819014942,47.664736696714698],[-59.259732942852494,47.634194703362112],[-59.340866979150647,47.933660046817067],[-58.330234616379329,48.522098789967345],[-59.167700468638614,48.558485510105385],[-58.716458996346987,48.598069251849779],[-58.403667236368065,49.084346125868507],[-57.990515365138819,48.98794109289409],[-58.213395012312873,49.386645942087824],[-57.791322242305824,49.490005321030679],[-57.926146466198958,49.700843952120408],[-57.035913277942385,51.010842781389783],[-56.025566559713212,51.568376982345512],[-55.458726938480623,51.536549588553271]]],[[[-55.53613660940232,50.719694088642711],[-55.633860001802049,50.740183591377445],[-55.469295786540044,50.796378661880482],[-55.472734507374341,50.775922118131376],[-55.53613660940232,50.719694088642711]]],[[[-54.093697589533889,49.744459676440471],[-53.980648268815145,49.66198530805994],[-54.286134120312255,49.595375198097088],[-54.277663661004766,49.711489704479646],[-54.093697589533889,49.744459676440471]]],[[[-54.554420263359063,49.588860305270458],[-54.786495467524531,49.496157665015375],[-54.863575548589907,49.576094191502222],[-54.55916635729011,49.631498246350077],[-54.554420263359063,49.588860305270458]]],[[[-54.227126549701921,47.441340692099089],[-54.325959561284606,47.408118034581747],[-54.128161702176712,47.646807008530743],[-54.147541585728504,47.573121702985503],[-54.227126549701921,47.441340692099089]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Nova Scotia","type":"Province","postal":"NS","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-61.105183452703969,45.94473907250827],[-60.737910489474871,45.751423635446372],[-60.297940990269495,46.311253979067828],[-59.828022759452907,45.965151670943186],[-60.672959315122185,45.590814498460219],[-61.449780633818065,45.716223438791076],[-61.408647819748964,46.17036530181835],[-60.489070147951111,47.009709816258663],[-60.494541339566069,46.270274973598333],[-61.105183452703969,45.94473907250827]]],[[[-63.87470504272784,45.959208067200819],[-62.483055819718757,45.621817917611679],[-61.955514295688403,45.868153376227383],[-61.031520119815809,45.291755649161416],[-63.609758743558444,44.479975833038225],[-64.286066142404394,44.550332281034599],[-65.344302266757268,43.549620572938608],[-66.125726857113136,43.813841774424105],[-66.021697312129092,44.561703131077735],[-64.44815843374397,45.337436803247755],[-64.135509496036107,45.02306301195847],[-63.368015570274167,45.364781774994015],[-64.912880131159199,45.374801306626239],[-63.87470504272784,45.959208067200819]]],[[[-60.961570165975559,45.489938029768354],[-61.002889747629908,45.481720256017354],[-61.081749613919413,45.557789594856672],[-60.91245029105491,45.567292769047327],[-60.961570165975559,45.489938029768354]]],[[[-66.273778620573353,44.292307368847986],[-66.324106991633855,44.257293939777952],[-66.210376518545388,44.392019286714202],[-66.273778620573353,44.292307368847986]]],[[[-59.787582084082089,43.939591290939802],[-60.03775177135968,43.906621318978978],[-60.117457584947104,43.95336814693411],[-59.727124318103947,44.002839584368161],[-59.787582084082089,43.939591290939802]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Northwest Territories","type":"Territoire","postal":"NT","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-110.00436500555972,78.686722743390817],[-110.00366737369717,78.321701977513243],[-113.29256215247885,78.334391186981691],[-110.87756938457295,78.735040616327751],[-110.00436500555972,78.686722743390817]]],[[[-110.00354103091891,78.089648746004883],[-110.86560527278843,77.834117730397764],[-110.15275185204054,77.762959280417647],[-110.1984879377696,77.524522992025169],[-110.89399943891064,77.42597562498463],[-112.37267137031749,77.36411160895284],[-113.16435169836927,77.530257855525178],[-113.28346547244435,77.813023979593112],[-110.00354103091891,78.089648746004883]]],[[[-113.83245230979279,77.754631643381231],[-114.60834528372669,77.769331350973232],[-115.02935787302923,77.967535704237264],[-114.33038018523254,78.077563784606355],[-113.61791677914796,77.83240386314489],[-113.83245230979279,77.754631643381231]]],[[[-115.55128538317356,77.36328763431203],[-116.32919984155959,77.137046170603469],[-115.81005736570118,76.939127461881583],[-116.25274598122122,76.901400409661164],[-115.94630431914078,76.711260021548526],[-117.23361637996658,76.281518794217675],[-117.99297492944163,76.405829101694138],[-117.88081000817068,76.805083267315098],[-118.79140086321948,76.512978763984677],[-118.62453501212748,76.365882811107809],[-118.99394481625841,76.144859853457689],[-119.58034559546377,76.326507809605772],[-119.52613355726292,75.997225570482129],[-119.91287978783643,75.858830789812174],[-120.84838214285895,76.182685782635019],[-122.40048120109027,75.944249494242513],[-122.90280360794766,76.13473045854002],[-119.09019054746895,77.305104038342506],[-116.5113092235065,77.547616254624842],[-115.55128538317356,77.36328763431203]]],[[[-113.56071096641887,76.743274182926001],[-113.71245962943418,76.710567882850228],[-114.83525691347643,76.794690200512377],[-113.89164664798837,76.89486354417744],[-113.56071096641887,76.743274182926001]]],[[[-113.92327079470255,76.229146966047978],[-110.00240394591459,75.539062711207748],[-110.002815933235,74.850988954491044],[-113.01692066247178,74.401922775251165],[-114.37694024560241,74.670846125353535],[-111.0334763729422,75.226776322341834],[-113.71178946339299,75.068617136621043],[-113.85330436136948,75.259383745460696],[-113.46707448823754,75.416125694799319],[-114.01652275138483,75.434264123225603],[-114.45176812931625,75.087876170558843],[-115.72884642510323,74.96813617575674],[-117.60010382070479,75.271688433430086],[-115.14185787732076,75.678534152075031],[-117.16364445346923,75.644894014073003],[-114.99152645068764,75.896349101790264],[-116.6542962895079,75.929319073751088],[-116.45422975355567,76.143233876833165],[-114.77859492401026,76.172611319360072],[-115.82217528608531,76.270027094560561],[-115.58069029152183,76.437502686886745],[-113.92327079470255,76.229146966047978]]],[[[-110.00340919497638,76.479668215838984],[-110.00263465881402,76.244231195139037],[-110.31444863555252,76.369398436241909],[-110.27000893659167,76.416991211494917],[-110.00340919497638,76.479668215838984]]],[[[-118.32814584066489,75.579679167835252],[-118.81713633783401,75.522110806264209],[-119.3945667797831,75.61731832942732],[-117.51261419334388,76.099442371256401],[-118.32814584066489,75.579679167835252]]],[[[-121.07622211737066,75.745276097980394],[-121.24091267541093,75.751856908778308],[-120.88781207600371,75.92797874166871],[-120.92124347376338,75.814446022494025],[-121.07622211737066,75.745276097980394]]],[[[-119.73630202231146,74.112630772028041],[-117.51483892487406,74.23174454610313],[-115.3928240734178,73.501977672561623],[-118.96156810603895,72.684144389410619],[-120.17989151677213,72.212644127283681],[-120.61932268587884,71.505761776099519],[-122.83993983601835,71.09746586208675],[-124.00777557392712,71.677434145929539],[-125.84531043406258,71.978657301951557],[-123.79727202585798,73.768154440527951],[-124.6962613179642,74.348177656013462],[-121.50415609365599,74.545118581494904],[-119.56264662017922,74.23283219262899],[-119.73630202231146,74.112630772028041]]],[[[-114.52153131557125,72.592935889837548],[-113.07355518611659,72.99528820010795],[-111.26974286144724,72.713730572179855],[-111.89517806596976,72.356103605412471],[-111.67511641206727,72.300139247808858],[-110.20512917337452,72.661303812367436],[-110.66083658821931,73.008208122475793],[-110.0018326568303,72.98185192029851],[-110.0000254057848,70.001151123000056],[-117.05535770617436,70.002183837883194],[-116.65049501983165,69.649808336159879],[-116.85603824056312,69.649676500217367],[-117.16273808136435,70.092491458515667],[-111.63256086845171,70.308834240205982],[-113.75728934305836,70.690719020398717],[-117.58705755555866,70.629536156736663],[-118.37651315208026,70.967706335652451],[-115.30342282489023,71.493720760015179],[-117.93563728077,71.392075248325227],[-118.22644539733218,71.467111872281379],[-117.74234381636518,71.659350649145978],[-118.98772106113819,71.764248114084978],[-118.21350350230725,72.262873621387286],[-118.37452462661378,72.533862401255931],[-116.57323915750956,73.054921991445298],[-114.20641045394096,73.297796756569596],[-114.07473930633999,72.90681529634233],[-114.52153131557125,72.592935889837548]]],[[[-126.61216165960469,69.730338124388112],[-125.38678502594622,69.349200414536341],[-125.20116551202946,69.828808587128833],[-124.5550265713656,70.151224370912388],[-124.12461517799358,69.690007312302725],[-124.33809052793389,69.364833960054597],[-123.52839811423408,69.389355445365027],[-122.95667506996364,69.818843987139331],[-120.96243121947521,69.660399156876394],[-120.68185137478756,69.566938459951785],[-120.6779512281544,68.002847824114582],[-112.50390306477671,65.502337474821417],[-110.66946634929069,65.497140941420071],[-108.97293002969016,64.779195357391984],[-101.99914375291914,64.228428734819403],[-102.00164863582719,60.001087264965378],[-123.81915679231783,60.001087264965378],[-124.582596762847,60.952821920411822],[-126.85927714754703,60.769416151696674],[-127.166597715911,61.464521158681578],[-129.25471425064444,62.152770696654983],[-129.61177542149181,63.058681375743959],[-130.13360405467924,63.276452380145031],[-129.84493827218316,63.485785884224214],[-130.30260674667306,63.703710697224892],[-130.11791557751829,63.793370124473256],[-132.58810366002973,64.794081832569248],[-132.35258973502997,65.057248346514513],[-132.77323428232629,65.203410461465154],[-132.19468872802994,65.597654861270001],[-132.55484804352676,65.85700911921046],[-132.34274598465444,65.978968352378445],[-133.62163153148694,65.974628752603536],[-133.63519415407461,66.565649282961687],[-134.05558052265016,67.004487190327012],[-136.1693061892199,67.015242805971695],[-136.44543657084716,67.746591710823566],[-136.44375566257992,68.895124469480351],[-135.2312220469895,68.694283397365751],[-135.91019912367167,69.11148922382776],[-134.40894479394242,69.681789538551755],[-133.87980475910891,69.507722149099095],[-134.17433724104754,69.252828340547552],[-130.66547968532026,70.127032475458293],[-129.53844167845998,70.105180667984087],[-132.68672793137006,69.259859590815779],[-133.41831304228563,68.844268754649733],[-133.19682316567241,68.739832715509579],[-131.78838683264794,69.431960427459018],[-131.06341549151591,69.450692117626716],[-130.97065791961813,69.209058807627883],[-130.1176354261404,69.720087879856464],[-128.89894946656528,69.96617065291565],[-129.15789723034962,69.800079337986034],[-128.85301013375815,69.751036367365174],[-127.68377913212427,70.260362558669442],[-128.17010544462147,70.418444840090416],[-127.99099533036708,70.5738354710181],[-126.61216165960469,69.730338124388112]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Nunavut","type":"Territoire","postal":"NU","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-86.595531104771069,67.7359129994787],[-86.959804800307637,68.100241626657976],[-86.70208750532025,68.305598079804213],[-86.421123139133556,68.183430106393871],[-86.595531104771069,67.7359129994787]]],[[[-109.32316869051164,67.99088371233006],[-109.36081334526799,67.987576827438289],[-109.49796117764819,68.047012864861841],[-109.46912755838422,68.098011401963532],[-109.32316869051164,67.99088371233006]]],[[[-73.621731781734894,67.78382437825951],[-74.480719851612065,67.80490714273563],[-74.749280652872471,68.018437424318648],[-73.435227868370347,67.970009688096269],[-73.621731781734894,67.78382437825951]]],[[[-109.16640476851595,67.982358321379849],[-108.97050205108191,67.979721602529253],[-108.886061129892,67.898543620916939],[-109.09622959494054,67.92402091681069],[-109.16640476851595,67.982358321379849]]],[[[-107.89986785496703,67.401829734781302],[-108.15225678061051,67.429427392084079],[-108.12752655505776,67.628587555931432],[-107.99087310746204,67.622127594747496],[-107.89986785496703,67.401829734781302]]],[[[-62.681567790182015,67.056320688398046],[-62.871631273994865,67.062571909339653],[-62.396340728520215,67.178323866880248],[-62.484604892043478,67.134246716761339],[-62.681567790182015,67.056320688398046]]],[[[-108.09272735939435,67.005190315353843],[-107.96645599227278,66.997280158802084],[-107.80553374492315,66.998598518227396],[-107.94392303242884,66.857830690591896],[-108.09272735939435,67.005190315353843]]],[[[-83.123499722323587,66.282828227251031],[-82.948157918759819,66.271918803006741],[-82.931337849758819,66.257295999714557],[-83.059888880053265,66.199266212344639],[-83.237856416139067,66.331530621687023],[-83.123499722323587,66.282828227251031]]],[[[-83.725989979681756,65.796705161831909],[-83.23393429684883,65.696553790823941],[-84.118245854020131,65.77179915502245],[-84.467391375151479,66.088271335063666],[-83.725989979681756,65.796705161831909]]],[[[-84.674769312749817,65.575012038140613],[-85.096347697972391,65.756198568489822],[-85.149631391411248,66.015399017830674],[-84.757353544415778,65.85892074037713],[-84.674769312749817,65.575012038140613]]],[[[-84.919621617012069,65.261077699993109],[-84.501141376438937,65.458436105959237],[-82.050025560280048,64.644294229199062],[-81.676116854610314,64.212641380701541],[-81.887087321642568,64.01640358024693],[-80.828961060575125,64.089935077192564],[-80.261319437358821,63.80195044706619],[-81.046369516134234,63.461550043455929],[-83.30395016866035,64.143790059715712],[-85.392616019821006,63.119666485492246],[-85.768919745113351,63.700326908033304],[-87.177125365238382,63.595132812223596],[-86.252098474482651,64.136857686404397],[-86.374255461564445,64.565829870737133],[-85.813985664801223,65.831949303801366],[-85.241092576540836,65.795518638349165],[-84.919621617012069,65.261077699993109]]],[[[-77.642079835489639,63.991904067593595],[-77.714062260110538,63.945706556065659],[-77.965989759955193,63.992936782476733],[-77.563604490699163,64.022083512104217],[-77.642079835489639,63.991904067593595]]],[[[-76.67759005260352,63.393962150252662],[-76.921860081452934,63.406365715178964],[-77.364751944051037,63.588310302197698],[-77.133687482111625,63.682056643664481],[-76.67759005260352,63.393962150252662]]],[[[-77.876692881548792,63.470547846533549],[-77.532732907490256,63.233660630465778],[-78.536751500478019,63.423724114278627],[-78.234913110057548,63.489565181243393],[-77.876692881548792,63.470547846533549]]],[[[-82.000466232217633,62.954190404961082],[-83.015800743605823,62.209899605084274],[-83.698864734506387,62.160263372722056],[-83.91239501608942,62.425517289090692],[-83.376405005408657,62.904949680426455],[-82.000466232217633,62.954190404961082]]],[[[-70.337072232606957,62.548739950041238],[-70.766066389596787,62.596849082735844],[-71.220142334652778,62.873913302289367],[-70.44261789093008,62.733793668037976],[-70.337072232606957,62.548739950041238]]],[[[-74.000441512978412,62.618426231996438],[-74.253522577320183,62.621996788773288],[-74.626442513420955,62.712765835204578],[-74.108931507351343,62.680312220685323],[-74.000441512978412,62.618426231996438]]],[[[-64.823835938309315,62.558737509016368],[-64.515306873805486,62.551794149376519],[-64.418077866190245,62.487403277779578],[-64.956495855479261,62.458355425108977],[-64.823835938309315,62.558737509016368]]],[[[-79.545318433483047,62.411696487782194],[-79.272000551963046,62.185993354172325],[-79.668771807333044,61.644455247576786],[-80.265175638677803,61.818193047173111],[-80.021597748526659,62.342966016410344],[-79.545318433483047,62.411696487782194]]],[[[-65.030543709866464,61.879035334650297],[-64.960571783369119,61.871674494525763],[-64.847039064194433,61.761503591885571],[-65.235339860256943,61.897723079503805],[-65.030543709866464,61.879035334650297]]],[[[-93.043951150563458,61.844076837222985],[-93.08480381325468,61.841703790257469],[-93.196683089983466,61.918542172094874],[-92.993024024597304,61.889714045995163],[-93.043951150563458,61.844076837222985]]],[[[-64.832625001144578,61.366050695940856],[-65.393883567476777,61.562859785479787],[-65.432126977138765,61.649519945035593],[-64.789635497551544,61.662231127161135],[-64.832625001144578,61.366050695940856]]],[[[-78.531631871376476,60.728547009512653],[-78.668884073877862,60.716912487584466],[-78.241680688440709,60.818667862559863],[-78.278858424233931,60.783885146389252],[-78.531631871376476,60.728547009512653]]],[[[-68.233816537139745,60.240918817082985],[-68.141882939882763,60.561983282455628],[-67.818851921700727,60.449494264492643],[-67.922310177600465,60.33988366460818],[-68.233816537139745,60.240918817082985]]],[[[-64.407014633346336,60.367063841426273],[-64.737955808080116,60.375644164019235],[-64.836426270820837,60.501009159035902],[-64.646307855365279,60.514599247444949],[-64.407014633346336,60.367063841426273]]],[[[-80.064224703277759,59.77082480500971],[-80.167089697436111,59.763848486384205],[-79.898627773132603,59.853145364790606],[-79.949637296562841,59.809914161969573],[-80.064224703277759,59.77082480500971]]],[[[-80.285247660927865,59.624113373631843],[-80.298969585279437,59.674189059135841],[-80.167243506035732,59.708861912021007],[-80.183063819139235,59.683494479412673],[-80.285247660927865,59.624113373631843]]],[[[-69.160062910363862,59.040222970498832],[-69.220861252526888,58.967559393508168],[-69.352818044670016,58.960747869810831],[-69.303203784964879,59.144867749881342],[-69.160062910363862,59.040222970498832]]],[[[-79.716496418528592,57.515507336163665],[-79.80845198844267,57.442437265016878],[-79.838224938797168,57.482998790001687],[-79.742566976163729,57.607957290862231],[-79.716496418528592,57.515507336163665]]],[[[-79.867009119582704,56.774567366492789],[-79.943671720163394,56.776764632201605],[-79.898166347333756,56.865259508624291],[-79.82664534851169,56.843089097622311],[-79.867009119582704,56.774567366492789]]],[[[-79.518193188307677,56.656695047543195],[-79.577387526503259,56.644917703343936],[-79.570125563335623,56.795705062611631],[-79.49105695680376,56.742685041057825],[-79.518193188307677,56.656695047543195]]],[[[-78.935588185614307,56.266076136157892],[-79.175474669374623,55.885059275920128],[-79.182143370800901,56.212177208320554],[-79.495088939379443,55.874754099745758],[-79.764737387165724,55.806770698714899],[-79.544725171741661,56.128362507857673],[-80.008238373017036,55.911052929255447],[-79.45886701416957,56.539723607534228],[-79.536331616733975,56.180086142643262],[-79.272418032447732,56.600423072740341],[-78.935588185614307,56.266076136157892]]],[[[-79.977597502707567,56.207013633904836],[-80.057490083880225,56.28736764087634],[-79.579738600811694,56.4663459191882],[-79.687942950642494,56.3267975740211],[-79.977597502707567,56.207013633904836]]],[[[-78.82650492949999,56.145303426472651],[-78.799423629638795,56.383278289066311],[-78.668730265278242,56.438627412271444],[-78.672817179496647,56.260495081257488],[-78.82650492949999,56.145303426472651]]],[[[-79.938211514876983,53.304139988012736],[-80.00410751348447,53.280079928501181],[-80.074024508339079,53.34428403251286],[-79.974565276029395,53.352249120707341],[-79.938211514876983,53.304139988012736]]],[[[-80.731677121317162,52.747275953098182],[-81.096599010237838,52.779883376217072],[-82.039280930963912,53.04988338651674],[-81.135611462897913,53.205801361214554],[-80.731677121317162,52.747275953098182]]],[[[-79.384291816012251,51.95197562979115],[-79.520621166915916,51.952953413031565],[-79.643766923566687,52.01006034880379],[-79.271308413264777,52.086799853684283],[-79.384291816012251,51.95197562979115]]],[[[-69.48888372368863,83.016797371460683],[-66.422577454374576,82.926874272327268],[-68.469352434796605,82.653358636893472],[-64.904871097650556,82.900836673677759],[-61.207213485892979,82.341050275370463],[-68.688540675579844,81.293328067434288],[-64.780066405389633,81.492850780123604],[-69.550681821749166,80.383264556155609],[-70.712573955915587,80.539578038681015],[-70.264881067743701,80.233608788727963],[-72.055982210287539,80.123218159516881],[-70.559072973497493,80.071000139946818],[-71.387837653549852,79.761745977759062],[-74.394466186212384,79.874092173450975],[-74.660214487365494,79.835178597747813],[-73.201109207095669,79.596588500755701],[-76.89884372315305,79.512301388165383],[-74.53232263678369,79.052743265165901],[-78.581652625237737,79.075023539453326],[-74.433127076359057,78.724131192083462],[-76.416126419582596,78.511534748426669],[-75.193435943253149,78.327722485555427],[-75.969620054893483,77.99312286341646],[-78.012593765639238,77.946046445604992],[-78.076160662595385,77.519062786738743],[-78.493212680457773,77.369385046654003],[-81.659088045366957,77.525445843622862],[-81.277719622615791,77.3651992554787],[-82.05679313866321,77.296523715749544],[-77.998750991673688,76.851950944884209],[-78.284307643191809,76.571217291596923],[-80.799715453990743,76.173567129943422],[-80.974529913784394,76.470066164691445],[-82.529842473114854,76.723279064975742],[-82.233167657110116,76.46582544187342],[-84.223791512343254,76.675323740880771],[-84.275339365872156,76.35653344551676],[-86.453708589595351,76.584884284305787],[-88.395992599234475,76.405257812609847],[-88.495858325700297,76.772838393038171],[-88.545780202604675,76.420913330785169],[-89.570079558084842,76.491917972165652],[-89.499745082745534,76.82678126618967],[-88.556217214721556,77.072193873207681],[-86.812236435303348,77.184924590398623],[-88.016975250791731,77.784734183592064],[-86.755063581559881,77.863725885824095],[-84.487034930588322,77.367989782928902],[-83.608073715417987,77.442246377558433],[-82.595288032252029,77.992134093847483],[-84.860548128430466,77.499507121930264],[-85.547534238621282,77.927699276936352],[-84.222703865817394,78.176001288361448],[-84.910371128377946,78.239721993917215],[-84.783193389151492,78.527607747086677],[-85.585931456882903,78.10954498699823],[-86.217777184110901,78.081178286697366],[-85.920047680565915,78.34286164628918],[-87.551726209606386,78.176627509088462],[-86.807929794514067,78.774360686187066],[-83.271419649841278,78.770339689939931],[-81.750098791026247,78.975773047385957],[-84.411998306632157,78.996570167319931],[-83.57587278645525,79.053677103092127],[-86.420738617634512,79.84520911570857],[-86.4985437963838,80.258229150995277],[-83.72361693271624,80.228950585425252],[-81.688366610936967,79.685808474862284],[-80.475937365467715,79.606256469874495],[-80.12448471534212,79.669504763302854],[-82.987027549148834,80.322587063606591],[-76.863006319442206,80.864784349914771],[-78.716224163574367,80.951653249712933],[-76.885121798801478,81.430272652736448],[-81.007016487289278,80.654868570422735],[-85.145852094392083,80.521131993055462],[-86.615405373107336,80.630039467913093],[-83.288832980583678,81.147945981810267],[-87.711665180551336,80.656263834147836],[-89.263253374505354,80.914288746334449],[-86.476757906880863,81.035720635732361],[-84.941220738929758,81.286230899194805],[-89.623055634324459,81.032468682483284],[-89.980935286648361,81.124709896939521],[-87.597022842193695,81.525820752084428],[-91.684068896539628,81.63568403752538],[-88.063194734976747,82.096483615650357],[-85.044832803429117,81.982797087876065],[-86.615636086006759,82.218552712103815],[-84.896824985283075,82.449441392786525],[-79.424864327325594,81.854432825166867],[-82.447543885991038,82.395026107507618],[-80.809691040308792,82.586385978088657],[-81.010169563581428,82.77903124910938],[-78.74877665505052,82.679374262885887],[-80.154949804394889,82.911119877195034],[-79.88633407149176,82.938508794255455],[-76.009357605237469,82.535167714416076],[-75.565619795341462,82.608545402762104],[-77.124920391933443,83.008546638724056],[-72.658714166873693,82.721638668795009],[-73.440710046313839,82.945836675394361],[-69.48888372368863,83.016797371460683]]],[[[-91.885547175709789,81.13287273904777],[-90.643015390029717,80.593685706760681],[-89.235578812902773,80.510640049295858],[-88.857330507458116,80.166196676781396],[-87.675003802199683,80.37210244635483],[-87.92232803038435,80.097718890966036],[-86.977196158392928,79.894219127343774],[-87.295184451773224,79.58015295325373],[-85.647872377214512,79.611420044290213],[-85.042141152935827,79.284565783774838],[-87.617380508985903,78.676329676588097],[-88.040200349333958,78.995328712194436],[-88.253785562559713,78.671990076813188],[-87.982840728005229,78.537066975963143],[-88.741578549917534,78.584044516817698],[-88.822426941673527,78.185877997722599],[-90.037086411837237,78.606830162218159],[-89.489835414398769,78.171947333128685],[-91.409630409508139,78.187987372803065],[-92.848229707550402,78.460118730840293],[-91.866892389841922,78.542702962506269],[-94.16967079799845,78.972806738679054],[-91.299898960009713,79.372731070341217],[-95.103179134390217,79.289894153118723],[-95.732986897673285,79.418203484185227],[-94.40188333127071,79.736323613508034],[-95.857500452227782,79.67378943143504],[-96.773260374856562,80.135775533042789],[-94.645895181399339,80.048708879330832],[-94.262587671660128,80.194870994281473],[-96.394111190471293,80.3150174832397],[-95.549070264680864,80.36662026841131],[-96.151824193924099,80.553486730617834],[-95.926956021283559,80.720654705744778],[-93.927905652057092,80.559188635132216],[-95.514732494816286,80.838120530538248],[-95.269759340940055,81.000795097290677],[-93.235646104165099,81.128851742800634],[-94.179360739774339,81.339272893405706],[-91.885547175709789,81.13287273904777]]],[[[-98.791613723335018,79.981109999799031],[-98.945197103217197,79.724073857181367],[-100.12602966779363,80.001269912677429],[-99.731219472068759,80.144103170079205],[-98.791613723335018,79.981109999799031]]],[[[-103.42600965207632,79.315624134568992],[-102.57618967336919,78.879368014411511],[-101.70365546039714,79.078923686086455],[-100.0147656254633,78.728635586786538],[-98.999634361153184,77.996891174107077],[-99.955906370288318,77.793808890969473],[-101.07413334165622,78.193832099588519],[-104.51263444938714,78.29465363663769],[-104.99554950687138,78.518511067052174],[-103.37156690097605,78.736326016767407],[-105.58019247350968,79.114189800713007],[-103.42600965207632,79.315624134568992]]],[[[-96.204509132457304,78.53127718082041],[-94.915389820585986,78.39050935318491],[-95.329239323677783,78.225044258982308],[-94.934302785174651,78.075652163439685],[-96.989630622368253,77.806025688310513],[-97.65816519376925,78.090637515573832],[-96.944669072801545,78.151875310878637],[-98.049487230181384,78.325920727674173],[-98.340811704185157,78.751212491944642],[-96.204509132457304,78.53127718082041]]],[[[-109.81597693684985,78.650390954895499],[-109.46726537569599,78.567191488831071],[-109.35210667989679,78.368657545710704],[-110.00366737369717,78.321701977513243],[-109.81597693684985,78.650390954895499]]],[[[-103.00337108614924,78.146448064577839],[-103.11819469892785,78.126343083342164],[-103.27358532985554,78.165773016486895],[-102.78826975958441,78.218166817313687],[-103.00337108614924,78.146448064577839]]],[[[-109.77179541660976,77.957417295648156],[-110.00359046939735,77.928940732061847],[-110.00354103091891,78.089648746004883],[-109.62224401930327,78.074773257156181],[-109.77179541660976,77.957417295648156]]],[[[-101.69358099712221,77.696601856011313],[-102.37782601834128,77.728121632604342],[-102.47154489398669,77.873492731899802],[-101.00204654691414,77.735097951229847],[-101.69358099712221,77.696601856011313]]],[[[-95.484371775884682,77.791996146759715],[-93.582863524636963,77.770759573683961],[-93.128727154773969,77.660171190559112],[-93.836180795042438,77.452221963876468],[-96.276595927199381,77.630563035132781],[-95.484371775884682,77.791996146759715]]],[[[-104.55813432905251,77.141726346563246],[-105.21507283067521,77.182057158648632],[-106.06612877134356,77.725386036796863],[-105.28966450832536,77.642087693775522],[-104.55813432905251,77.141726346563246]]],[[[-89.833246072030093,77.267607699021482],[-90.99320461237275,77.329493687710396],[-91.182652861787133,77.55717436045822],[-90.171932608387465,77.59469267243631],[-89.719471653627437,77.442147500601521],[-89.833246072030093,77.267607699021482]]],[[[-94.294964381879581,76.912463642505088],[-93.211877182359956,76.754699964611859],[-93.534567624357123,76.447687013447137],[-91.305040561768351,76.680750987181568],[-90.542611333465231,76.495774173484619],[-91.415079628466003,76.455849855555385],[-89.284522906566721,76.301623775453379],[-91.407334266842412,76.220050286013475],[-89.277601519583939,75.795088111599341],[-89.646039033638715,75.565056364543068],[-88.916678654253317,75.453951623976621],[-88.64496477670076,75.658429170839327],[-85.951490552859127,75.395009971337572],[-82.153659597436487,75.831035378595601],[-79.66019148474011,75.449502160916268],[-79.50909650827316,75.259801225945381],[-80.381982283758617,75.034174996635301],[-79.401430488541038,74.91762103711099],[-81.940184247496177,74.47271867638932],[-83.522083721903357,74.901471134151166],[-83.531894513293238,74.585680106479714],[-84.42553346339848,74.508083667972755],[-88.423040940110042,74.494163989707403],[-88.534947682660189,74.8317628795389],[-89.558719694370239,74.554720632642443],[-91.508364544133912,74.650686212475108],[-92.389237380470931,75.26331685107948],[-92.185116889285908,75.846537088171317],[-93.091730693401729,76.353995603623076],[-95.273895693636902,76.264391108017435],[-96.898010135474763,76.753996839585056],[-95.849518884540501,77.06622829680822],[-94.294964381879581,76.912463642505088]]],[[[-89.726458958581489,76.507419681741368],[-90.164571768262917,76.52360254368682],[-90.562474615472951,76.754282484127202],[-89.948767316671251,76.836240495066136],[-89.726458958581489,76.507419681741368]]],[[[-108.29237641486191,76.057112047375995],[-106.91352077144242,75.679621798600891],[-106.67702357003796,76.023735581259047],[-105.90484946831623,76.009002914681417],[-105.4814363662268,75.702253635401718],[-106.09263878212045,75.089447215540645],[-110.002815933235,74.850988954491044],[-110.00240394591459,75.539062711207748],[-108.89949740970142,75.624063935153401],[-109.79605872319939,75.863016580987477],[-109.41662389427198,76.071844713953624],[-110.00340919497638,76.479668215838984],[-108.49238801917143,76.75418360717029],[-108.62762972354925,76.586697028515573],[-108.12321442110421,76.233431634180192],[-108.29237641486191,76.057112047375995]]],[[[-101.22611821073524,76.579358161048106],[-101.61306768838682,76.604571785056805],[-100.26914307657329,76.734122571248776],[-100.74655947662121,76.649176278945845],[-101.22611821073524,76.579358161048106]]],[[[-97.700929477627142,76.466495607914624],[-97.531042386185533,76.109406971245903],[-97.890504069819784,75.760338354414358],[-97.336018575035027,75.419839073847214],[-97.878232340836021,75.416125694799319],[-97.659923006336314,75.151179395629924],[-97.991814498489148,75.045809518563487],[-100.23439331938832,75.007719917501106],[-100.48349733279713,75.188434035722935],[-100.14571716854465,75.246156205893612],[-100.7311566440024,75.346516317143937],[-99.194559295346792,75.698375461425655],[-102.79749278239717,75.599674285785511],[-102.14471809929267,75.875057597071788],[-101.26141179118315,75.758196020348265],[-100.9727954471655,75.79842795547674],[-102.13774178066717,76.28484765176654],[-101.78753058566704,76.451279542881053],[-99.865472406877601,75.924199444649531],[-100.11285156670499,76.11721825084075],[-99.54105161813473,76.146288076168418],[-100.89078799774809,76.475482424663682],[-98.890342364796524,76.465561769988369],[-98.710814770057468,76.693868663463206],[-97.700929477627142,76.466495607914624]]],[[[-104.02284195023428,76.583126471738723],[-103.72276137238087,76.601056159922706],[-103.03355053065987,76.431515137830218],[-104.27066056320344,76.326244137720693],[-104.60304094697649,76.582719977582599],[-104.02284195023428,76.583126471738723]]],[[[-102.22734627627281,76.014891586781033],[-102.00803169271131,75.939393537026007],[-103.31474560974598,75.764216528390421],[-103.04151012569007,75.918827129991485],[-104.40605058301659,76.108484119648182],[-102.72801524068431,76.30701806276852],[-102.22734627627281,76.014891586781033]]],[[[-79.063106501025629,75.925858380259683],[-79.355639471169241,75.831134255552513],[-79.698742511601338,75.883275370822787],[-78.845159715367856,76.106308826596461],[-79.063106501025629,75.925858380259683]]],[[[-94.526550694424827,75.749330053213185],[-94.751446332886729,75.769665747348284],[-94.901206470435568,75.930769269118912],[-94.296304713961959,75.788056861331114],[-94.526550694424827,75.749330053213185]]],[[[-96.078572848356345,75.510124721822592],[-96.857108034305099,75.369148153944764],[-97.020661507341046,75.468058069827237],[-96.367809919936732,75.654660860148709],[-96.078572848356345,75.510124721822592]]],[[[-93.542604123687127,75.027923775693722],[-93.573096678561257,74.66882464090142],[-94.534510289455028,74.636733575224099],[-96.599599479560055,75.031801949669784],[-94.878184618971417,75.630007538895768],[-93.90906959176823,75.422530724340533],[-93.542604123687127,75.027923775693722]]],[[[-104.11994461507126,75.036350289687022],[-104.63430803801299,75.061289255482137],[-104.88738910235476,75.147762647452709],[-104.3462080514369,75.429913537122161],[-103.64348951877095,75.186577346198987],[-104.11994461507126,75.036350289687022]]],[[[-95.306656925355398,74.505424976465093],[-95.77719588373472,74.550743581709469],[-95.85073287384462,74.582472098544827],[-95.510211620620396,74.636788506866822],[-95.306656925355398,74.505424976465093]]],[[[-97.355497335543703,74.526299000698856],[-97.65609976400296,74.465687426121093],[-97.749994420905082,74.510544605566622],[-97.416526390606151,74.626560234992269],[-97.355497335543703,74.526299000698856]]],[[[-93.170870711069114,74.161003576607698],[-90.354613279418672,73.868646387720787],[-92.117940983403031,72.753797712380191],[-94.211325462673386,72.756950788672327],[-93.541620847282431,72.437028901468295],[-94.143759542127199,72.000827712953537],[-95.192942931759745,72.027436600687338],[-95.632917924129387,73.695446918223126],[-94.697596843527847,73.663564592788163],[-95.134138608227474,73.881225733903761],[-94.973523978077068,74.041428376733762],[-93.170870711069114,74.161003576607698]]],[[[-98.270378351888965,73.868514551778247],[-98.973926352359996,73.812055809390159],[-99.41699948937908,73.895409084054194],[-97.659148470173946,74.071629793901479],[-98.270378351888965,73.868514551778247]]],[[[-100.00190063473816,73.945902250042877],[-99.157947355473596,73.731569966476115],[-97.111743664135872,73.790324851529931],[-97.625898346835243,73.502285289760835],[-97.272506609721617,73.386840949419479],[-98.430910584575273,72.958077505329101],[-96.542113515453082,72.698712261060081],[-96.472866686639648,72.4343921826177],[-96.801451293900712,72.32240853576775],[-96.613425774032791,71.833857491740361],[-97.582282622515194,71.629687562076896],[-98.322700741580221,71.852358469008635],[-98.198626640167475,71.440854547061008],[-99.167120939807916,71.367169241515768],[-100.5944757305853,72.152340169905159],[-102.7087397272537,72.764498396382123],[-102.20398934178806,73.077301142689606],[-101.27319462854669,72.721662701388709],[-100.12814453603836,72.906716419385447],[-100.53639101157268,73.197854125803957],[-99.825141594792214,73.213850220164176],[-101.52320501406039,73.486366099700462],[-100.52166383815931,73.449320199849751],[-100.9850946419706,73.76531996776356],[-100.00190063473816,73.945902250042877]]],[[[-86.589356788129294,71.010805702530945],[-84.823710968822112,71.028636513758016],[-84.699400661345678,71.631467347301054],[-85.911599193915507,71.986512526860565],[-85.321864063997026,72.233133630018415],[-84.28374390720839,72.044487382587761],[-85.64990484799516,72.722179058830278],[-85.262131395702781,72.954001577439243],[-84.256629648361553,72.79674327065905],[-85.454754694066409,73.105459102748114],[-83.410352760609911,73.631682267353199],[-81.605353912457787,73.696018207307418],[-80.277260600076303,72.770189314567972],[-81.229346818036134,72.311707851765789],[-80.611453728059132,72.45082773011967],[-80.925135380650133,71.907652660571074],[-79.884367518682367,72.177202231400429],[-80.108928074123682,72.332175381843456],[-79.831292565485853,72.446279390102404],[-78.585091346072048,71.880626292352588],[-78.862748827366957,72.100814289033337],[-78.699250285973733,72.3514014567956],[-77.516506100230629,72.177795493141815],[-78.422416779319619,72.571534521833655],[-76.893493381152069,72.720673931819732],[-75.07145473742807,72.322847988909501],[-75.922807308967094,71.717226627916261],[-74.266343622731142,72.037675858890424],[-75.204806793296299,71.709107731122174],[-74.700754039693209,71.675577456405591],[-74.996220359558109,71.21810673582948],[-73.866595072325694,71.771048651453782],[-74.197272575174409,71.40417119605226],[-73.712863377008176,71.587620910081569],[-73.180619704360936,71.282882128925451],[-73.278211260818139,71.538006650376445],[-72.901929508182874,71.677774722114407],[-71.640688004992199,71.516253719859122],[-71.186557128293487,71.278696337750148],[-72.632720513538359,70.830772736678853],[-70.672627665329259,71.052202188485097],[-71.890176539900054,70.431540543714988],[-71.275854006699888,70.500292987743933],[-71.429431893417799,70.12775757314219],[-70.08470527962055,70.829531281553358],[-68.49576356861661,70.610266136470329],[-70.057733843044787,70.042624513253998],[-68.778222075485289,70.203541267439363],[-69.008319740512817,69.978936766683887],[-68.744065580041706,69.941418454705797],[-67.855337518795665,70.28178589933043],[-67.192763030629834,69.756826162507906],[-68.02038513251361,69.770053702075018],[-69.250777025152459,69.511929912931492],[-66.676284739443375,69.25843136810505],[-66.802891189585523,69.152753873839401],[-67.93846008056029,69.24812619193068],[-69.040608560103919,69.098008998704159],[-67.751703481639211,69.038682824566052],[-67.883187861654946,68.78396479727121],[-69.319101002368186,68.856990923103808],[-66.713901928378348,68.445717714055604],[-67.032955895627424,68.326087582538946],[-66.923092610186472,68.065711596043883],[-66.212387016668956,68.280428401109674],[-66.526475163416094,67.85115958590626],[-65.942376020040726,68.070941088430885],[-65.401277366586953,67.674839999102062],[-64.976908453914191,68.043387376442297],[-65.021117439975626,67.787570716293033],[-63.850183557417424,67.566086332844066],[-64.589233878578696,67.315532124067431],[-63.040128594875654,67.235013322167759],[-63.701527545887259,66.822377808380082],[-62.123594136084506,67.046707650921974],[-61.299718372234267,66.648749872069203],[-62.123330464199455,66.643058953883383],[-61.576420042945841,66.412488876728446],[-61.862679819490793,66.312820904176419],[-62.553126623173,66.40685289018532],[-61.991615371284297,66.035295258824021],[-62.624131264553483,66.016255951457111],[-62.382003569770177,65.833289635883744],[-62.658913980724094,65.639919267179124],[-63.458751657719844,65.853032068277486],[-63.60660566726628,64.928082081821572],[-64.345732892727369,65.172407042313694],[-64.269663553888066,65.40075788110272],[-64.555077383135114,65.116596493309714],[-65.401606956443274,65.763998861756136],[-64.445367906293768,66.317116558637167],[-65.825745156216612,65.996930999548056],[-65.656346956395211,66.204748390288159],[-66.986340903614831,66.627513298993478],[-67.307306492030563,66.569736197180077],[-67.22537045374871,66.310272075954174],[-67.883396601897289,66.467420519448922],[-67.350460790551779,65.929749600500912],[-68.459893205920139,66.249286966205915],[-68.748921537258198,66.200046241671288],[-68.217172249395446,66.078856051501361],[-67.936757199635949,65.5649156022086],[-67.117968105901625,65.440396554489809],[-67.33650815330077,65.346606267708893],[-66.697422435562217,64.815164597045367],[-65.431940209553517,64.726439007723258],[-65.529323025768377,64.504800815674685],[-65.074631846313906,64.436685578701287],[-65.580332549198616,64.293852321299511],[-64.41094773896512,63.706347416075459],[-64.66465502403392,63.245339097708154],[-65.191855971879406,63.764278326488494],[-64.672378413000416,62.921945530684155],[-65.162786146551738,62.932591283043394],[-65.108469738229729,62.626457238162175],[-67.893262324929879,63.733736333135909],[-67.722578724668821,63.422746331038184],[-68.911090732897577,63.703216312440389],[-65.980201949218042,62.208866890201108],[-66.323744442791906,61.870279230800662],[-71.347265142236509,63.066130106496871],[-71.992239532074706,63.416176506568831],[-71.380828375938719,63.580301268689055],[-72.498467578729517,63.823494637341156],[-73.454552820279403,64.399277130008642],[-73.27127888750681,64.582518103795593],[-74.064799425589712,64.424677521602575],[-74.681407115127058,64.830666306621083],[-74.919447895691974,64.765506392026055],[-74.694711558993959,64.496583041923685],[-76.856150850430694,64.237624291810818],[-78.174554221036288,64.617740273107984],[-77.326695301974297,65.453107736615351],[-75.828335869816414,65.227031067834957],[-75.452109048823871,64.841619676179533],[-75.79867278274736,65.29750836544531],[-73.550804044654228,65.485253733935366],[-74.416383911657846,66.167076269710464],[-72.220030068107974,67.254294328762654],[-73.284484454416813,68.3569701520764],[-73.82049643775467,68.362957701132927],[-73.851554788548825,68.701391551933796],[-74.422426392357096,68.579948676207351],[-74.910406147300179,68.823142044859452],[-74.854859270181237,69.06584102872705],[-76.585085166262232,68.6987548330832],[-76.55723482340295,69.009481163295845],[-75.64773161488003,69.212574432761983],[-79.066380426931758,70.603542503401343],[-79.40522077188875,70.400712905820257],[-78.809838669098596,70.178558356330086],[-79.092890437708661,69.92534545604579],[-81.651935945484752,70.094611819924665],[-80.921718632472931,69.730887440815309],[-85.780026923271421,70.036658936854565],[-86.322015469337273,70.145434575769656],[-86.396865325708191,70.465312517659527],[-87.900706935809581,70.251892099361925],[-89.455909631854595,71.061705362675724],[-87.14010143804478,71.01160770451466],[-89.693324191692497,71.423496147961345],[-90.025177231695437,71.948785474640147],[-88.705202816108027,73.40327649692145],[-86.768752546925811,73.833995507492716],[-85.009324989574608,73.77862441163046],[-86.667777201277033,72.762564802558359],[-86.218480309137718,71.899127269620834],[-85.023409462768143,71.353238576921854],[-86.589356788129294,71.010805702530945]]],[[[-79.53728742731731,73.65446791275366],[-77.20654881301607,73.499549693953355],[-76.089997256751133,72.881184191848973],[-79.500516185680226,72.755973005431912],[-80.77640246482018,73.334183476707636],[-80.860722536396111,73.670540911413667],[-79.53728742731731,73.65446791275366]]],[[[-105.28891743798435,72.91994395895253],[-106.18002403936019,73.304102909153897],[-106.9496657923525,73.510371227569294],[-105.51231344259999,73.76575942090534],[-104.58751177157941,73.578090956715101],[-105.28891743798435,72.91994395895253]]],[[[-107.49627408957114,73.288392459335853],[-105.62416525350741,72.92751353931942],[-104.38592362912381,71.576953185065264],[-104.51480424927459,71.064265177226503],[-101.09077762940053,70.135689702351044],[-100.93512332658779,69.71533079959687],[-103.43476575592595,69.667683092701139],[-103.04894787011442,69.471785868431368],[-103.1202106902157,69.20460934456753],[-102.15140877337602,69.487694072163208],[-101.78928290506983,69.18161495892474],[-102.89505687303301,68.823658402301021],[-105.10587971127546,68.920393025131773],[-106.65906641603264,69.439584939468631],[-107.43989774464711,69.002142295828378],[-109.4720993602554,68.676683299038103],[-112.86426562735159,68.477116641034627],[-113.55482229431922,68.767584181411962],[-113.6941399265869,69.195029266077057],[-116.10153564830458,69.33715939845203],[-117.07530338564618,69.889013667550472],[-110.0000254057848,70.001151123000056],[-110.0018326568303,72.98185192029851],[-108.7549832440324,72.55107797808455],[-107.81284514656925,71.626171936942796],[-107.30600186551595,71.89467780656048],[-108.23741730632007,73.149898801708986],[-107.49627408957114,73.288392459335853]]],[[[-96.782329589069718,72.936632192011018],[-97.092775767904484,72.996936149389541],[-97.069210093177404,73.130156369315245],[-96.5984898603771,73.073829462869668],[-96.782329589069718,72.936632192011018]]],[[[-94.308345730046284,71.764874334811992],[-93.031294900080667,71.335693410236928],[-92.981449927476106,70.852261995311096],[-91.564076216181022,70.178250739130874],[-92.320506909099066,70.235346688574538],[-92.511866779680119,70.103840335901708],[-91.976700743640151,70.038669434978146],[-92.887785983473421,69.668199450142708],[-90.415565430181317,69.456998270211017],[-91.237210969337099,69.285534640623325],[-90.479022463852004,68.881171832229342],[-90.573636725273758,68.474688662426388],[-90.247760247998798,68.267409601784948],[-89.279557086064784,69.255465059398148],[-88.041331941173993,68.811716263173594],[-87.827911522876406,68.299962093261087],[-88.346949628613629,68.28828362601871],[-88.313836834381732,67.95032218734525],[-87.359388555784918,67.177247206682921],[-86.560814306571729,67.482106837453017],[-85.689774234281685,68.670948435538094],[-84.867579378698693,68.773319044911972],[-85.106663860475294,68.844071000735937],[-84.862207064040632,69.073970911849671],[-85.386771293035537,69.231899384671038],[-85.415137993336401,69.849539789091523],[-82.618359322194635,69.691040027185863],[-82.374188170302119,69.641799302651236],[-82.754842481697921,69.494362773589472],[-82.227564629552617,69.248895234928767],[-81.377849020966664,69.185646941500409],[-81.957938154423431,68.883654742480331],[-81.281542864949131,68.657204538529442],[-82.552683050158024,68.446464784396596],[-81.301054584443449,67.356972555335773],[-83.406452613976754,66.371246199373928],[-84.538450948174685,66.972813605134405],[-84.845771516538662,67.028723031095296],[-85.113717083400601,66.906928592855451],[-84.223066414659343,66.682488887028143],[-83.869064936311517,66.213581398437611],[-86.708162945005128,66.523066273524762],[-85.958730543369683,66.119066013972741],[-87.291460086396782,65.354824041459864],[-89.749398412581556,65.936022794099586],[-91.411520058017715,65.959357755927243],[-87.002695426943774,65.108587459801043],[-88.105623935814037,64.183318869817356],[-90.041656724511583,64.140889668980066],[-89.855724100231313,63.956978529151911],[-90.168186270353928,63.9787534323263],[-90.245288324076384,63.641901612835795],[-93.696341312168926,64.147140889921644],[-93.559814207351451,63.865297617451432],[-92.156876531763317,63.691691653797648],[-92.465076006410811,63.555087644680356],[-90.970045431801793,63.442796380631165],[-90.698595226134287,63.063855936488238],[-92.361282667490471,62.819366181067949],[-91.935831601456115,62.592410606004023],[-92.551401082946043,62.546729451917685],[-92.767974577535796,62.379967970946865],[-92.527961750997207,62.168426214830305],[-93.205362289533312,62.364927687169995],[-92.905539890400675,62.215118111142715],[-93.581775878111088,61.942063901507765],[-93.312023060203657,61.767293387028303],[-94.761702070582643,60.498218631585701],[-94.771886397143021,60.001768417335114],[-102.00164863582719,60.001087264965378],[-101.99914375291914,64.228428734819403],[-109.21511265611619,64.81304423563634],[-110.66946634929069,65.497140941420071],[-112.50390306477671,65.502337474821417],[-120.6779512281544,68.002847824114582],[-120.68185137478756,69.566938459951785],[-117.22694767854031,68.913416706506268],[-115.44230100401613,68.940904500523601],[-113.96440910193591,68.399080749385917],[-115.43450071074983,67.902366863250279],[-115.1332226230851,67.819167397185851],[-112.50305162431455,67.681937167341545],[-110.07394691739374,67.99292716943927],[-107.98872528023166,67.256414690171653],[-108.49605745290516,67.092289928051429],[-107.25949124362452,66.398536239477437],[-107.74600432370697,66.961497686733964],[-107.15650539985218,66.88175891416094],[-107.95839202712142,67.818596108101559],[-105.75020590772955,68.592297309490931],[-107.73416655470071,68.173718191960887],[-108.71811312543841,68.297490169338658],[-108.34573151943631,68.597801460091517],[-106.16447289130602,68.919876667690204],[-104.48682207047278,68.063184740478761],[-103.47414625059227,68.115018238549794],[-102.32036202689139,67.735660313922182],[-98.412129455929147,67.807181312744234],[-98.631542916447543,68.072534106069782],[-97.607397369566996,67.631070466182393],[-97.155408826934377,67.726409825288044],[-98.192529227825503,67.922988201927552],[-98.65048334685757,68.363528990217219],[-97.828546669995362,68.532773381439],[-96.430646226044686,68.310607845620325],[-96.722075070169623,68.03879509111087],[-95.970286101061461,68.249139337416096],[-96.36912278619775,67.509759426398489],[-95.418898750926147,67.013243294176675],[-96.422532822414865,67.051772348380808],[-95.787534018894718,66.616812614991545],[-96.036874238367233,66.937492558865131],[-95.399650703316894,66.949456670649653],[-95.258751039738868,67.262556047827815],[-95.650485063471393,67.73744009914634],[-95.460707224200704,68.021381760368456],[-93.448918207027347,68.618917183553265],[-93.852457040780507,69.000340537947153],[-94.60042276755533,68.803245803866076],[-94.083631366005363,69.123090786770319],[-94.254732446751106,69.313758518653117],[-93.430983025679112,69.375073218257711],[-96.050151216412772,69.831137688780188],[-96.545623647422914,70.327236340517345],[-95.886339564656041,70.694289577175567],[-96.358867048501835,70.678656031657312],[-96.524749623189138,71.12703007219892],[-95.564236891235979,71.336781056762788],[-95.406264473100435,71.491655330248904],[-95.872331995762309,71.573151915388991],[-95.201237609810534,71.903730541280822],[-94.308345730046284,71.764874334811992]]],[[[-100.30834229681861,70.49579957936939],[-100.6206726309987,70.546907979756526],[-100.67829592421248,70.646180444480962],[-100.27611939519879,70.594610618294979],[-100.30834229681861,70.49579957936939]]],[[[-86.913035999695424,70.113244633135452],[-86.515232029442274,70.017048340403363],[-87.323243534874848,70.080120852574993],[-87.107263302026482,70.146676030895122],[-86.913035999695424,70.113244633135452]]],[[[-97.439471337770499,69.642700181591863],[-96.2999583548484,69.344399388962586],[-95.267770815473568,68.82608638090926],[-96.598824943397702,68.460834902132262],[-99.564046003777534,69.034134484548787],[-98.503541202580294,69.308276340709597],[-98.54601984189604,69.572915022679751],[-98.041346360730202,69.456635721369054],[-98.304512874675467,69.669287096668569],[-98.080754321217881,69.833049309946858],[-97.439471337770499,69.642700181591863]]],[[[-79.430654122468326,69.787785636345177],[-79.977850188264071,69.509688701908487],[-80.794782592474448,69.689238269304639],[-80.424235703339207,69.797596427735044],[-79.430654122468326,69.787785636345177]]],[[[-78.029084244783931,69.714891346455119],[-78.039982682699673,69.608411850205727],[-78.848202928374576,69.482783183304008],[-78.578554480588309,69.638800034958706],[-78.029084244783931,69.714891346455119]]],[[[-67.914707638247961,69.540944806616437],[-68.202340705860919,69.580407698746825],[-68.221412972213457,69.616728500913609],[-67.754614858703405,69.631461167491238],[-67.914707638247961,69.540944806616437]]],[[[-95.513672314111787,69.573640120363677],[-95.496231517548026,69.350079320819873],[-95.985947112401078,69.391915259915805],[-95.875820155075061,69.605983871597488],[-95.513672314111787,69.573640120363677]]],[[[-101.17172489811342,69.397078834331523],[-101.2685144525869,69.390596900490493],[-101.35130193133094,69.559215070985289],[-101.00062381736768,69.461909159070217],[-101.17172489811342,69.397078834331523]]],[[[-76.995347633084378,69.143734098104687],[-77.321938221714703,69.193579070709234],[-77.340911611110357,69.403879371700327],[-76.668855921410966,69.36615231947988],[-76.995347633084378,69.143734098104687]]],[[[-90.199815910232374,69.419073464076803],[-90.295462886537265,69.257783174720942],[-90.492041263176759,69.369876684856337],[-90.322071774271066,69.428730446867064],[-90.199815910232374,69.419073464076803]]],[[[-79.210663879701372,68.845466264461038],[-79.405770088315947,68.923051716639435],[-78.650207315352901,69.351221898988456],[-78.228969506315195,69.303991672577411],[-79.210663879701372,68.845466264461038]]],[[[-90.492557620618328,69.221099823712194],[-90.574416754600392,69.209421356469818],[-90.765699720881628,69.335972874969258],[-90.5996853102518,69.367811255090061],[-90.492557620618328,69.221099823712194]]],[[[-99.994693603213236,69.013513145871514],[-100.14130066446992,68.96989742155148],[-100.24736268023462,69.052789270416667],[-100.15313294031191,69.129473843654438],[-99.994693603213236,69.013513145871514]]],[[[-100.2172381673667,68.806706497357482],[-100.59654116035159,68.76639765792919],[-100.61158144412846,68.990211143029512],[-100.32994141873631,68.997550010496951],[-100.2172381673667,68.806706497357482]]],[[[-101.84592292187891,68.586309760434375],[-101.88720954454762,68.584958442023463],[-102.30816720220744,68.681978709396361],[-101.82835028937264,68.798950149405357],[-101.84592292187891,68.586309760434375]]],[[[-74.880852923516557,68.348697446682706],[-75.310154697705627,68.474479922184031],[-75.396166663877338,68.588836615999526],[-74.983630027046573,68.647591501053341],[-74.880852923516557,68.348697446682706]]],[[[-104.54069353248875,68.405903259411787],[-104.85113971132353,68.45395746046367],[-105.05136005587538,68.559019720330866],[-104.60200823209335,68.561502630581828],[-104.54069353248875,68.405903259411787]]],[[[-78.982719535068483,68.192845389956148],[-79.174046446663894,68.234977959922759],[-79.153458066972263,68.335261166873266],[-78.828515427623557,68.268189631111568],[-78.982719535068483,68.192845389956148]]],[[[-75.675867602281457,68.32249505310503],[-75.078145411511429,68.173146902876596],[-75.201972320531922,67.459189356110016],[-76.693948695805673,67.235815324151474],[-77.224192856657879,67.508177395088154],[-76.740245084290493,68.231231621889236],[-75.675867602281457,68.32249505310503]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Ontario","type":"Province","postal":"ON","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-93.377886099825503,48.616537270132397],[-94.620884804468702,48.742605390175896],[-95.155298277003396,49.369672064487219],[-95.153826108978492,52.822356522368551],[-88.948495061717026,56.851306871373311],[-87.482402476493149,56.02131172252399],[-85.676678530657128,55.601051696726728],[-85.217999313941149,55.348970388282453],[-85.365271048074746,55.079277995182025],[-83.910604244536742,55.31466008423925],[-82.393260436654671,55.067797281853444],[-82.291559993321982,53.030712243207319],[-81.599410308715434,52.432616517266752],[-81.827892983446986,52.22420586478529],[-80.657936884129199,51.758341589201478],[-80.443296983363211,51.388596702049938],[-80.851230348534017,51.125023693948549],[-80.26565903713373,51.316350605543988],[-79.51955549304715,50.918524662633757],[-79.3649448914461,47.021959572585331],[-78.780999556670352,46.393442702906185],[-76.823708222239986,45.879678034870125],[-76.553125936527465,45.542079145038628],[-74.577223761543408,45.632199998085838],[-74.340446408761068,45.214444855196632],[-76.151158147756107,44.303941890776173],[-76.81996188420645,43.628788056427368],[-78.845566209523994,43.583337615240453],[-79.171849180955078,43.466574915473785],[-79.036695367205624,42.802319519040708],[-82.690012156959213,41.675177142059283],[-83.149669156915621,42.141920323926598],[-82.54532221003349,42.624681572811227],[-82.137850270661545,43.570879118671428],[-82.551079046190594,45.347357457923096],[-83.977785643583886,46.084913638402355],[-84.125222172645636,46.527234211916181],[-84.561752951016715,46.45737214870428],[-84.875972933706379,46.899901462460434],[-88.378194746993046,48.303097316769367],[-89.455645959969544,47.996216201547156],[-91.518307171466319,48.05831093047837],[-93.377886099825503,48.616537270132397]]],[[[-79.520357495030865,51.22588917631191],[-79.52046735831631,50.965985601944226],[-79.737458333390734,51.186283461910421],[-79.521346264599828,51.544712430661548],[-79.520357495030865,51.22588917631191]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Prince Edward Island","type":"Province","postal":"PE","admin":"Canada","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-63.811269981714233,46.468688067104694],[-63.681433550980117,46.561918051129879],[-62.023728409618684,46.421556717650532],[-62.804889328089487,45.973215636094551],[-62.978473319086191,46.316351635512262],[-63.568878615045861,46.20922394587879],[-64.403147445698821,46.691622645921484],[-63.993577117574944,47.061576273315353],[-63.811269981714233,46.468688067104694]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Qu�bec","type":"Province","postal":"QC","admin":"Canada","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.682674319460062,46.186669013377781],[-78.780999556670352,46.393442702906185],[-79.546713697208148,47.407447868540544],[-79.521346264599828,51.544712430661548],[-78.90316753008068,51.200291030804152],[-78.73136332430812,51.497482204250474],[-78.981631888542609,51.774568396461092],[-78.448102815455726,52.261361627921417],[-79.100361141118654,53.656625353021496],[-78.996023978935384,54.002496948246687],[-79.713936603977828,54.654964014151972],[-77.775278082758248,55.291248218111775],[-76.546380330801384,56.358778776412976],[-76.89091159394421,57.758129415731474],[-78.515097446917608,58.682365290832024],[-77.726158207837599,59.675869967403088],[-77.34907445321862,59.578948576987074],[-77.50355321887713,60.542713262189267],[-77.790801764991045,60.639865365504704],[-77.589576171377402,60.808593399284916],[-78.181376731062173,60.81912928835871],[-77.514363766164522,61.556289961010407],[-78.021382828474515,61.832090752781369],[-78.133421406967202,62.282299510189858],[-77.603968261770163,62.531381550941575],[-74.632572884748555,62.115691837818645],[-73.705052097413315,62.473143023329328],[-72.686949031232018,62.124557804953724],[-72.771620665321365,61.840407403489252],[-72.226127480449946,61.8315743953398],[-72.215866249589766,61.587271407504772],[-71.638303971698136,61.617165207473249],[-71.854394067831947,61.439812905785914],[-71.42271924667736,61.158958402884679],[-69.992442092507233,60.856493791737194],[-69.503352718381208,61.040404931565348],[-69.67375067410012,60.07587120336504],[-70.654829813087829,60.026234971002822],[-69.733933781864678,59.917997662186394],[-69.681891543551302,59.341731771062967],[-69.34402898183474,59.303103839901922],[-69.531664487039336,58.869220766709986],[-70.15434761626156,58.760598936394501],[-68.381143202916064,58.743493222851356],[-68.356544813305831,58.163217321809327],[-69.040795327689167,57.902511745457957],[-68.41359681743532,58.051750032400946],[-68.021033325897704,58.485314502065108],[-68.063847048234052,58.138981481041071],[-67.755933218128689,58.404597946251641],[-67.678270861650489,57.991138457823183],[-66.362427305595659,58.791162902404182],[-66.002405319205664,58.431217820314004],[-66.043043748490277,58.820650208216534],[-65.38354543231678,59.060218088449062],[-65.700017612357982,59.213312576711047],[-65.475072535417638,59.470326746671617],[-65.038245126175866,59.387896323605247],[-65.433412377578435,59.776504736866997],[-65.054471933435494,59.752785253540281],[-64.931227299827839,60.25198204992688],[-64.614271721330695,60.30597985472113],[-64.846687501681032,60.25076256745848],[-64.622302727496432,60.141316762502214],[-64.887270999322908,60.035408555337142],[-64.661468988756127,59.921513287320494],[-64.818024170509489,59.54024374152624],[-64.385294661814655,59.514766445632461],[-64.324364483709104,59.019964180663521],[-64.848313478305556,58.949223211168089],[-63.4967094228397,58.753446836512296],[-64.070811007239939,58.641693902561769],[-63.848008264365689,58.459738329214474],[-64.394589095762967,58.144331823042052],[-63.601255325265313,57.723061055018718],[-64.121479954485309,56.299408656960679],[-63.111825374954407,55.339829762933761],[-63.534018994575447,55.140350995558634],[-63.698824909065422,54.615193504822344],[-65.675803744246807,54.744931058599576],[-66.773986159186009,55.328250172648296],[-66.724448803780689,54.747974271606267],[-67.426442238762732,55.05886539674708],[-67.150180021192924,54.616665672847262],[-67.601421493484537,54.552791158691889],[-67.757251577553987,54.033654175997754],[-66.944439046547643,53.355138525114427],[-67.029473229478938,52.720370434493702],[-66.300211727050453,52.896876788883134],[-66.37886285309763,52.16451714180522],[-65.137133069401273,52.154695364086791],[-64.506342029713508,51.608894562016133],[-64.13067551147671,52.1866875528072],[-64.178477026972075,52.815325272100324],[-63.722544392392123,53.109187587997781],[-63.409686714441918,52.688718821958162],[-64.059418184539709,52.485120181378988],[-63.756898641749501,52.010521774602637],[-57.101029247223238,52.001117477368894],[-57.100128368282626,51.44334157718518],[-58.510377445516852,51.295059100825512],[-60.080202944854065,50.254576883399892],[-66.495526675907371,50.211873024348989],[-67.372004980826745,49.348457464068559],[-68.281925669834337,49.197153747359295],[-69.67388251004266,48.199177635070754],[-71.018246574997946,48.455598543289938],[-69.774989691633962,48.098103412465093],[-70.705861309175148,47.13980991887783],[-72.981020087371817,46.209740303320388],[-73.476591395338858,45.73824004119345],[-74.315100948809842,45.531070843837455],[-73.973854597901692,45.345138219557185],[-74.340446408761068,45.214444855196632],[-74.577223761543408,45.632199998085838],[-76.41344575541784,45.496343059309567],[-77.682674319460062,46.186669013377781]]],[[[-61.801134406986776,49.093904231701885],[-63.041523858600755,49.224949158575839],[-64.485204333594666,49.886985316643006],[-62.858535570370293,49.705491169094557],[-61.801134406986776,49.093904231701885]]],[[[-64.216226051849574,48.873661303378384],[-64.513735828823684,48.841097825573712],[-64.348831037376812,48.423199860413405],[-65.259421892425593,48.021254044299155],[-68.377913222324096,47.929375378684881],[-68.429636857109699,47.528187619240157],[-69.242877854929262,47.4629947456595],[-70.689788310515127,45.428337685621614],[-71.517520275684348,45.007561302382754],[-74.708872936487296,45.003869895991954],[-73.558087980478959,45.425085732372565],[-73.159558912541911,46.01003082304581],[-72.10928787638349,46.551217367127947],[-71.261176271764981,46.756266203074944],[-70.519489231753113,47.032528420644752],[-68.238211068557376,48.626435952150615],[-65.523390408354572,49.266136904287663],[-64.216226051849574,48.873661303378384]]],[[[-61.914095837077156,47.284499865803582],[-61.924686657793671,47.42516881648217],[-61.395519157138779,47.637666383182051],[-61.684086062677977,47.498755245070527],[-61.914095837077156,47.284499865803582]]],[[[-71.025739251065019,46.872951998541765],[-71.116640133438864,46.864844088076239],[-70.825799057891032,46.995372657508625],[-70.913469959672909,46.919512058911636],[-71.025739251065019,46.872951998541765]]],[[[-73.566514494472273,45.469107950848752],[-73.64356161655202,45.449112832898493],[-73.960539167706258,45.441411416589091],[-73.687430026428586,45.561404096947683],[-73.476075037897289,45.704753711791028],[-73.566514494472273,45.469107950848752]]],[[[-73.695340182980345,45.585486129116333],[-73.85770713253352,45.573598921631628],[-73.572348234929194,45.694470508273781],[-73.695340182980345,45.585486129116333]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Saskatchewan","type":"Province","postal":"SK","admin":"Canada","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.89491370743917,48.993082694652713],[-110.0000254057848,60.001087264965378],[-102.00164863582719,60.001087264965378],[-102.00110481256425,55.817526314359583],[-101.36727055986977,48.993137626295436],[-109.89491370743917,48.993082694652713]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"CA","name":"Yukon","type":"Territoire","postal":"YT","admin":"Canada","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-140.86002627782463,69.635229478181884],[-136.44375566257992,68.895124469480351],[-136.1693061892199,67.015242805971695],[-134.05558052265016,67.004487190327012],[-133.63519415407461,66.565649282961687],[-133.62163153148694,65.974628752603536],[-132.34274598465444,65.978968352378445],[-132.55484804352676,65.85700911921046],[-132.19468872802994,65.597654861270001],[-132.77323428232629,65.203410461465154],[-132.35258973502997,65.057248346514513],[-132.58810366002973,64.794081832569248],[-130.11791557751829,63.793370124473256],[-130.30260674667306,63.703710697224892],[-129.84493827218316,63.485785884224214],[-130.13360405467924,63.276452380145031],[-129.61177542149181,63.058681375743959],[-129.25471425064444,62.152770696654983],[-127.166597715911,61.464521158681578],[-126.85927714754703,60.769416151696674],[-124.582596762847,60.952821920411822],[-123.81915679231783,60.001087264965378],[-139.05651882377236,60.00158164974988],[-139.0792577772765,60.343706906941549],[-141.00213718412465,60.300244991221092],[-140.86002627782463,69.635229478181884]]],[[[-139.04313472902354,69.576892073612726],[-139.12574093334658,69.539318829991913],[-139.2913900485523,69.597875961131962],[-138.87885615830368,69.589702132695152],[-139.04313472902354,69.576892073612726]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Alaska","type":"State","postal":"AK","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-155.97352294810878,70.841978791793821],[-154.94381831898491,71.083051799036923],[-154.19523461122949,70.801109649609799],[-152.30041428748299,70.846790803696138],[-152.47058427688461,70.653618188905313],[-151.76902480188005,70.560135519323609],[-151.94467422264304,70.452106950749538],[-143.21833233702515,70.116232914499449],[-141.00213718412465,69.650786119400323],[-141.00213718412465,60.300244991221092],[-139.0792577772765,60.343706906941549],[-139.18516873102374,60.083572619674442],[-137.43857869857629,58.903124576597065],[-135.47593702214496,59.793280860553836],[-133.40110295862132,58.410882126178876],[-131.82427367483723,56.58998606062346],[-130.09786552792531,56.109290241505107],[-130.03655082832071,55.297916919538039],[-130.84960505855503,54.807608062943615],[-131.03276912804216,56.088097613743543],[-131.78420104147264,55.876533884969916],[-132.11900940385397,55.569784605690216],[-131.55134580798057,56.206804893662508],[-133.46585088589595,57.17217358283213],[-133.64871283134812,57.642300553891062],[-133.11706242044227,57.566198256066116],[-133.53520208483053,57.832957299445297],[-133.19431828276436,57.877704615605381],[-134.03109199632536,58.072162630835891],[-133.87673408028081,58.518185597069049],[-134.20882881951172,58.232958535407249],[-134.77613535970744,58.45384965711483],[-135.36366773075284,59.419427086526809],[-135.09025097227595,58.245845498789464],[-135.8975373800246,58.40020341483401],[-136.04311172639814,58.82162799145695],[-135.82637893004448,58.897961002181347],[-136.15003067578928,59.04807819540784],[-136.2258418359078,58.765454893611007],[-136.98899616189482,59.034488106998793],[-136.06148636088813,58.452707078946247],[-136.60741899890132,58.243988809265517],[-139.799109489307,59.546264249568395],[-139.51230588949912,59.953549421355092],[-139.28671261917466,59.610940765707483],[-138.98807399694266,59.835006936364294],[-139.4314327785039,60.012249374766185],[-140.41984803837693,59.710718601544954],[-141.40872747063091,60.117674183475316],[-144.14721542909984,60.016391220627298],[-144.90133075327722,60.335181515991309],[-144.69113756898946,60.669110972089101],[-145.89889213166319,60.478168581992719],[-145.6749275845454,60.651126352262423],[-146.57047815581734,60.729162243911105],[-146.59910852800323,61.053533594175519],[-146.28488854531358,61.112651028071298],[-147.99075500443018,60.948273580394556],[-147.75185454365669,61.218954743063961],[-148.55614717687709,60.826984513267746],[-148.25673401848272,60.675318247716518],[-148.64012117910389,60.48942956875041],[-147.96408843847152,60.484892215061706],[-148.43070253097846,59.989134139509417],[-149.3952692181644,60.105732044347889],[-150.93450328567059,59.249095048779168],[-151.94950546062032,59.265069170482263],[-151.0464841859384,59.771802588250125],[-151.85320479776703,59.7820857917674],[-151.32179059292488,60.742906140919786],[-150.44125009302633,61.023562889907225],[-149.07508091249315,60.876412005387635],[-150.05326515390948,61.171098295925901],[-149.43353460048348,61.500798015534201],[-153.02502033319092,60.295652705889665],[-152.66010668401665,59.997220077317877],[-154.17833489134654,59.155590406540369],[-153.43760640850013,58.754842100237397],[-156.43587159855846,57.359962896636375],[-156.62898653512445,57.009982414535671],[-158.41440774581099,56.435836884821242],[-158.47610971349675,56.075496294903473],[-161.17801319791386,55.388872733554621],[-161.51695791299201,55.618410095826391],[-162.07397712979724,55.139318280675496],[-162.63037836562188,55.246654710551297],[-163.33529553728772,54.839182771179367],[-163.27881344895147,55.121828045633293],[-161.69733420161108,55.907207714265013],[-160.2917076221118,55.805067817790587],[-160.53905931611783,56.006293411404215],[-160.30204575727177,56.314130337209775],[-157.46190954053074,57.506201915886805],[-157.61086492951372,58.050827180803253],[-157.19370579494802,58.194176795646598],[-157.52360876163439,58.421341110952852],[-156.80889865136254,59.134276929164827],[-158.19093483689554,58.614250053858626],[-158.50318826677582,58.850357240599777],[-158.08052772819167,58.977436102869319],[-158.80947337367451,58.973865546092497],[-158.95070537369099,58.40455400093748],[-160.36312425081269,59.051176340057282],[-162.14492958611714,58.64422075812692],[-161.6443910843571,59.109678539554579],[-161.98103691018741,59.146153150320998],[-161.8286949854307,59.588616546105868],[-162.42134698557766,60.283974238647289],[-161.94659477020167,60.684821421907145],[-162.68497355203067,60.268955927527514],[-162.57074320099346,59.989727401250803],[-163.90688949219776,59.806794044663064],[-165.35382878689609,60.541219121507282],[-164.80515505991116,60.892045550905863],[-163.72999998960034,60.589976447585968],[-163.42094907449069,60.757430067255086],[-163.9065269433558,60.853802141243875],[-163.5869085534778,60.902976947807247],[-165.1148253292925,60.932815816133001],[-164.86897464242378,61.1117501491307],[-165.56588278058101,61.102367824554022],[-166.16809425985235,61.65081633180381],[-165.19451054351387,62.473527544828386],[-164.75787127514843,62.496730670713504],[-164.79965090931054,62.918067356708093],[-164.4090553438734,63.21506077624062],[-163.28785657063432,63.046431619417291],[-162.28280251618128,63.529192868301948],[-160.92670917221409,63.660556398703676],[-160.98753223361632,64.251269311862586],[-161.49070608093589,64.433763215308545],[-160.88696887528795,64.795554000594166],[-161.75937125231746,64.816252243571228],[-162.71107020219611,64.377513213162786],[-163.20388256840752,64.652017618165559],[-163.14435177390027,64.423820587976138],[-166.14277351914035,64.582781775680672],[-166.92840999320183,65.157059141337612],[-166.15703652017274,65.285829898202934],[-168.08836441367126,65.657750078406195],[-164.46049882728113,66.588445914690681],[-163.7276750078222,66.616450066149582],[-163.63822294752512,66.574669058696372],[-164.0337541210607,66.215547951247004],[-163.69537794848472,66.083821872003284],[-161.03430103422855,66.188807227570663],[-161.82815253545883,66.370828718889243],[-162.60743341845753,66.894393191986637],[-162.36160882411912,66.94731433658356],[-161.5910359797827,66.459510362897163],[-160.23171128193249,66.42028916999476],[-161.85667853752358,66.700319698255186],[-161.71994269246377,67.02056018898702],[-163.53182172886662,67.102573131568704],[-164.12516998758505,67.606724762128692],[-166.78630046019288,68.359595884598434],[-166.38053689490954,68.425129334363959],[-166.20907463861292,68.885357623404644],[-163.53567106373026,69.17009030028197],[-161.88096656335244,70.331751721548954],[-162.07387413296715,70.16196900022851],[-160.11714584787467,70.591193870117763],[-159.86568801357527,70.278841563280594],[-159.38675275360612,70.524528828512189],[-160.08159408870597,70.634864526080548],[-159.68089522088147,70.786794463516827],[-157.90937446238533,70.860117220220133],[-156.47023683424442,71.407686821186388],[-155.57943785006779,71.121086468456554],[-155.97352294810878,70.841978791793821]]],[[[-166.10985573224011,66.227457131388803],[-166.14863884529183,66.221821144845677],[-165.82219794538793,66.328091900852712],[-165.82987189587598,66.317138531294233],[-166.10985573224011,66.227457131388803]]],[[[-171.4630431923074,63.640022950654753],[-170.43041894637292,63.698854740008386],[-168.7160010037758,63.310608875588628],[-169.67635580725613,62.956102026127752],[-170.52710413072523,63.379284415317755],[-171.79098235276649,63.424712883847576],[-171.7463847253328,63.703084476497878],[-171.4630431923074,63.640022950654753]]],[[[-147.93070647919029,60.826160538626937],[-148.05741729945362,60.817942764875966],[-148.12379669651705,60.844353898695942],[-148.0377297987026,60.924136616583183],[-147.93070647919029,60.826160538626937]]],[[[-172.74221438368201,60.45739343471584],[-172.3875084070163,60.39848474106239],[-172.23206559102803,60.299135372038137],[-173.07402965818059,60.493208865769589],[-172.74221438368201,60.45739343471584]]],[[[-152.02074081490022,60.361746458410948],[-151.95973647907701,60.503744754843382],[-151.89940505587711,60.490363406676664],[-151.88728713549295,60.472686404049227],[-152.02074081490022,60.361746458410948]]],[[[-147.65826750395382,60.450472047733058],[-147.73211485784509,60.222066277301309],[-147.81583068135109,60.1851631997217],[-147.89143310122728,60.299421016580283],[-147.65826750395382,60.450472047733058]]],[[[-146.39392785611372,60.449648073092249],[-146.10223808668587,60.411195923187904],[-146.70287440110224,60.395595336655305],[-146.56029932242123,60.480541628958235],[-146.39392785611372,60.449648073092249]]],[[[-145.11852772201183,60.337093137158007],[-145.15046223250738,60.312648556147394],[-145.28425374151738,60.336829465272928],[-145.12813801290579,60.401121459912986],[-145.11852772201183,60.337093137158007]]],[[[-166.13543465167291,60.383554320570966],[-165.72969717891985,60.314197628472101],[-165.59179952961651,59.913141704969917],[-166.14871574959164,59.764134130926351],[-167.43641507849864,60.206663444682505],[-166.13543465167291,60.383554320570966]]],[[[-147.73588591511785,59.813254005847],[-147.18088131630941,60.358252805933915],[-146.95787257977494,60.288874141177956],[-147.4993118094136,59.890191264641288],[-147.73588591511785,59.813254005847]]],[[[-148.02176117016376,60.065324327962713],[-148.07416046415483,60.034705430310311],[-148.2718731792165,60.053261339221308],[-147.91419677397067,60.0923506961812],[-148.02176117016376,60.065324327962713]]],[[[-144.56564073803025,59.818417580262718],[-144.44492570656988,59.950703962262168],[-144.23573777134391,60.015204697144554],[-144.24896805749313,59.982124861898285],[-144.56564073803025,59.818417580262718]]],[[[-160.91898303666545,58.577094290722499],[-161.13150257602243,58.668203913338658],[-160.71514544344043,58.795227843965506],[-160.91898303666545,58.577094290722499]]],[[[-152.48608873304246,58.485006884865896],[-152.63662066017153,58.541696340153408],[-152.36792802296858,58.611096977566461],[-152.36227006376836,58.570843069780892],[-152.48608873304246,58.485006884865896]]],[[[-152.41694352776807,58.36021317893352],[-151.98250015182037,58.24435135810748],[-153.38132894053302,58.087202914612732],[-152.84110370019849,58.416386276779463],[-152.41694352776807,58.36021317893352]]],[[[-134.68027414999594,58.16166824948462],[-134.24009591054823,58.143991246857183],[-133.82273078232231,57.628677506496388],[-134.30688729493204,58.034391633301283],[-133.90882514595813,57.36871900048601],[-134.43530099611971,57.056981928047293],[-134.92348949130513,58.354654096690183],[-134.68027414999594,58.16166824948462]]],[[[-134.31272652855324,58.228904580174486],[-134.45622995199622,58.206525428930149],[-134.66159739147099,58.29091141847735],[-134.51997263020905,58.332538617330925],[-134.31272652855324,58.228904580174486]]],[[[-135.73036940489766,58.244252481150596],[-135.61324415628906,57.991863555507081],[-134.95467967804183,58.015319366948717],[-135.33847607940123,57.768665304805239],[-134.93149852481378,57.48114210047774],[-135.56422315832529,57.666426531373901],[-135.91076491959168,57.446568124549458],[-136.5686097933193,57.972176054756062],[-135.73036940489766,58.244252481150596]]],[[[-152.8980513342068,57.823915551053489],[-152.21623429159598,57.57699781702496],[-152.94078815224333,57.498094005421279],[-152.67904711442668,57.345131353101834],[-153.27436055266344,57.22634716888308],[-153.7325755969984,57.052334711073144],[-153.97271476631525,56.774204817650855],[-153.79318991815833,56.989492911800937],[-154.24375847782662,57.143026853204645],[-154.3389467749148,56.920916249028693],[-154.70595057309455,57.335364507026128],[-154.11616875127976,57.651210466340331],[-153.68771841755287,57.305130130872783],[-153.84153525691661,57.862829126756679],[-153.48793752614279,57.730949238913382],[-153.21746510371571,57.795746604666448],[-153.16046528464679,57.971967314513734],[-152.8980513342068,57.823915551053489]]],[[[-153.24064076377945,57.850084985645537],[-153.29497914475857,57.829463646968264],[-153.52008077688066,57.955740507254092],[-153.34696645142921,57.932790066925492],[-153.24064076377945,57.850084985645537]]],[[[-134.96976390713286,57.351437505686135],[-134.62071726295841,56.718295391689935],[-134.68190012662046,56.216154259253528],[-135.45493116196866,57.24942944515422],[-135.81232741583659,57.00954296139389],[-135.44867994102705,57.534370862273875],[-134.96976390713286,57.351437505686135]]],[[[-170.16056450492647,57.183950927031418],[-170.26399529500483,57.136775632263067],[-170.38662194763191,57.203023193383956],[-170.11617424444404,57.241782960487541],[-170.16056450492647,57.183950927031418]]],[[[-153.00708789842483,57.12483349313564],[-153.29539113207898,57.000424308702293],[-153.37458608138908,57.051917230588487],[-153.28521229868286,57.185038573557279],[-153.00708789842483,57.12483349313564]]],[[[-133.3662213654938,57.00350048069464],[-132.95415164762616,56.880277819744066],[-133.00412296300897,56.623725075582371],[-133.32896123223651,56.830070298297557],[-133.18080509865513,56.473970431197813],[-133.60279547119808,56.464093721836662],[-133.97946723849665,57.009597893036613],[-133.3662213654938,57.00350048069464]]],[[[-133.98959663341432,56.84495677347482],[-133.7383667654322,56.650443826601617],[-134.18958077190248,56.076968462928392],[-134.3736786793159,56.83865062089049],[-133.98959663341432,56.84495677347482]]],[[[-132.74687808014897,56.525694065983402],[-132.94802676946284,56.567244360537188],[-132.84253054961815,56.794771224685377],[-132.56797670613696,56.575824683130122],[-132.74687808014897,56.525694065983402]]],[[[-169.75521430025458,56.635040993982784],[-169.55049780074606,56.628119607],[-169.47432683836772,56.594061988513317],[-169.6326109935757,56.545700170262194],[-169.75521430025458,56.635040993982784]]],[[[-154.20864342521756,56.514894505024557],[-154.32220361021359,56.570606177071681],[-154.11038170271917,56.602927955648397],[-154.11596275761957,56.543887426052436],[-154.20864342521756,56.514894505024557]]],[[[-154.68279963227002,56.43578195317852],[-154.77716120813525,56.4399128127111],[-154.44488244790122,56.573187964279526],[-154.51118219408272,56.52143137050831],[-154.68279963227002,56.43578195317852]]],[[[-132.11234619559195,56.109389118462019],[-132.36858033622588,55.939738233084086],[-132.69902712617517,56.198169639426851],[-132.37984681614785,56.49877756105036],[-132.11234619559195,56.109389118462019]]],[[[-132.77989749058827,56.247267541690405],[-132.89144168429647,56.259407434731628],[-133.03766422405411,56.364832243440759],[-132.64334291994945,56.435155732451506],[-132.77989749058827,56.247267541690405]]],[[[-133.56610662702508,56.339201138947402],[-132.17269959144895,55.480597590569261],[-132.51125978502805,55.593921569501617],[-132.63127993120801,55.473181818802004],[-131.97643432517296,55.208598068474544],[-132.02170349193889,54.726320218045856],[-133.68018316946268,55.785171576797211],[-133.24152653651834,55.920819775331154],[-133.74253058395044,55.964852980135902],[-133.56610662702508,56.339201138947402]]],[[[-130.9791338720899,55.489166926833661],[-131.18787960759198,55.206290939480311],[-131.44757993488156,55.408790947205063],[-131.81099120362742,55.223111008481311],[-131.62495970239027,55.83168769185292],[-131.26921689096818,55.955393751259436],[-130.9791338720899,55.489166926833661]]],[[[-155.56600157025838,55.821195748093317],[-155.68062193595892,55.791840278223475],[-155.73736082972491,55.829798043343345],[-155.59395902982095,55.924335400465282],[-155.56600157025838,55.821195748093317]]],[[[-133.30508794031019,55.543747007040736],[-133.28170354000409,55.49785711271204],[-133.65018499937304,55.269286547352152],[-133.73713080347102,55.496923274785786],[-133.30508794031019,55.543747007040736]]],[[[-160.68491381386923,55.314813892838856],[-160.55277849388725,55.380753836760533],[-160.48753892841029,55.184845626162229],[-160.79509020967367,55.145217939103674],[-160.68491381386923,55.314813892838856]]],[[[-160.32927811915044,55.337709401524762],[-160.34330766070127,55.25879460359252],[-160.51748216685721,55.3338312275487],[-160.36230027617188,55.356979421791095],[-160.32927811915044,55.337709401524762]]],[[[-132.86227298201189,54.894422031099054],[-132.70582217037969,54.684154689093617],[-133.42903569894469,55.303805591637683],[-133.09740238551262,55.213739670233196],[-132.86227298201189,54.894422031099054]]],[[[-159.87297469598215,55.128749432616075],[-160.16959732692629,54.941685216495756],[-160.2270613183762,54.922689854443036],[-159.92046584769614,55.267528734785088],[-159.87297469598215,55.128749432616075]]],[[[-131.33972714756419,55.079838297937755],[-131.23203366201071,54.903782383018637],[-131.57847654632019,55.248775071960324],[-131.4046343766027,55.21332218974851],[-131.33972714756419,55.079838297937755]]],[[[-159.51511701631534,55.151875654201405],[-159.53498579148732,55.059634439745167],[-159.64849104484065,55.074575846565153],[-159.57475080765269,55.21771672116617],[-159.51511701631534,55.151875654201405]]],[[[-159.36199780881415,54.972402991105042],[-159.42134870219149,54.97813785460508],[-159.46191572034056,55.058810465104358],[-159.39042218733985,55.040880776920403],[-159.36199780881415,54.972402991105042]]],[[[-163.47603727239292,54.980730628141487],[-163.37896207337729,54.815518219495374],[-163.08327053377724,54.669015528359864],[-164.90393451314216,54.544782125183247],[-164.47863725570744,54.906825596025357],[-163.47603727239292,54.980730628141487]]],[[[-162.29815041715736,54.847037996088375],[-162.39075418045553,54.872976717781],[-162.43390435910354,54.931533848921021],[-162.26461190269438,54.983521155591689],[-162.29815041715736,54.847037996088375]]],[[[-162.55441339690373,54.401355606040084],[-162.73311015054662,54.402311416623405],[-162.82054759284696,54.494552631079642],[-162.6453898102863,54.462055071246198],[-162.55441339690373,54.401355606040084]]],[[[-165.56115453943383,54.136694951412835],[-165.65414694410424,54.25330384257984],[-165.4078568040938,54.196845100191751],[-165.46759496555231,54.18092591013135],[-165.56115453943383,54.136694951412835]]],[[[-165.84155173640943,54.070656130534275],[-166.03642311225138,54.047189332764077],[-166.10582512295551,54.144813848206923],[-165.69287787209538,54.099923709775737],[-165.84155173640943,54.070656130534275]]],[[[-166.61535456133782,53.900950313513619],[-166.23088112748187,53.932601926049159],[-166.77040873595385,53.47601011175658],[-167.80876921867937,53.323772557121032],[-166.74126337961744,53.712952259467073],[-167.03806728498256,53.942182004539632],[-166.61535456133782,53.900950313513619]]],[[[-166.20974617794516,53.723279408298509],[-166.25075127594494,53.767774038902104],[-166.11373115963406,53.843074334743335],[-166.13863853973459,53.787417594338962],[-166.20974617794516,53.723279408298509]]],[[[-167.96436721655834,53.345118993482231],[-168.50562654506706,53.043170739776315],[-169.08889759392844,52.832024491487346],[-168.28770722523066,53.500147075567952],[-167.82809691717057,53.507947368834266],[-167.96436721655834,53.345118993482231]]],[[[-169.69196188695304,52.847372392463456],[-169.72276205902639,52.792330886457535],[-169.99184059101944,52.829849198435625],[-169.82063651344362,52.883385577431],[-169.69196188695304,52.847372392463456]]],[[[-170.73339716837984,52.581492255367806],[-170.82703501985225,52.600718330319978],[-170.58462030723572,52.66758112583932],[-170.61402521558398,52.609606270112153],[-170.73339716837984,52.581492255367806]]],[[[-174.67739435862632,52.035010300927411],[-175.29554837390626,52.022145310202291],[-174.01833892882226,52.331794980217609],[-174.12063263389635,52.135216603578101],[-174.67739435862632,52.035010300927411]]],[[[-172.46479036186867,52.272293024822773],[-172.61984590977576,52.272831354921436],[-172.31361024135552,52.329575741851698],[-172.46479036186867,52.272293024822773]]],[[[-173.55330274775247,52.136304250103962],[-173.35724210184563,52.095632861833735],[-173.02289585190871,52.079142382689042],[-173.83579215367018,52.048193895180333],[-173.99250045737762,52.123329396093396],[-173.55330274775247,52.136304250103962]]],[[[-176.02154968333929,52.002435836794177],[-176.14286072312319,52.004314498975219],[-176.1845112679249,52.056049120089369],[-176.07741241740388,52.099972461608644],[-176.02154968333929,52.002435836794177]]],[[[-176.59329813349447,51.866699747631884],[-176.45235109137462,51.735709752400624],[-176.96162235103614,51.603676055957692],[-176.69835627348846,51.986055220934929],[-176.59329813349447,51.866699747631884]]],[[[-177.14819973547284,51.716736363004969],[-177.65488714798991,51.676592318504845],[-177.67023504896602,51.701080844829647],[-177.11003666333832,51.928772503906004],[-177.14819973547284,51.716736363004969]]],[[[-177.87903365617422,51.649719758885993],[-178.05889358735172,51.672604281243338],[-178.19451843993753,51.882212443536133],[-177.64450026099701,51.826292031246709],[-177.87903365617422,51.649719758885993]]],[[[-176.00896690392864,51.812372352981328],[-176.20443291480302,51.83481742219692],[-176.19365875972895,51.886288371425991],[-176.07162468219772,51.843298867832942],[-176.00896690392864,51.812372352981328]]],[[[-176.28670197616887,51.791981727203478],[-176.34964402568909,51.733281773792385],[-176.41372247356804,51.840585244682558],[-176.37858201507422,51.86111869273148],[-176.28670197616887,51.791981727203478]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Alabama","type":"State","postal":"AL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-87.566195204298964,30.7956357114127],[-87.622269425188023,30.26476532983348],[-88.005933990604916,30.230916451589124],[-87.790294333941418,30.291791698051952],[-88.011317291591524,30.694176967307982],[-88.399585128668392,30.370805372941078],[-88.203138587971424,35.024196663735125],[-85.623603577460599,35.000861701907468],[-84.921533238178739,32.285887233105029],[-85.007281532465399,31.00167331692866],[-87.59369398464483,31.000739479002419],[-87.566195204298964,30.7956357114127]]],[[[-88.071335604427915,30.252339792250112],[-88.159314123409033,30.230916451589124],[-88.316253826661438,30.240452584765393],[-88.109370273847574,30.273730173925458],[-88.071335604427915,30.252339792250112]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Arkansas","type":"State","postal":"AR","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-90.303043453232689,36.099373706702991],[-89.688907687617771,35.92095573114689],[-91.070174830152681,33.974200285790317],[-91.149957548039893,33.015917778531616],[-94.041306535289237,33.011995659241379],[-94.047327043331393,33.55443464477753],[-94.484148959408898,33.648433671800802],[-94.618379921560646,36.500869083346956],[-90.162242666611562,36.500869083346956],[-90.303043453232689,36.099373706702991]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Arizona","type":"State","postal":"AZ","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-109.04674717117793,36.291843196466999],[-109.04780735188244,31.327879384059941],[-111.04197429807105,31.324209950326207],[-114.83595454533898,32.508327427137331],[-114.47753106975215,32.842004197678591],[-114.71942805163603,33.330862858905192],[-114.50905084634516,33.903920742093746],[-114.12561150066342,34.286508647313312],[-114.61093256409882,34.907401004982844],[-114.74136225657432,36.013515549130901],[-114.04287895356211,36.181771170783719],[-114.04026970053289,37.00415279395196],[-109.04667026687812,37.000845909060189],[-109.04674717117793,36.291843196466999]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"California","type":"State","postal":"CA","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-124.22840851691392,42.000767974792069],[-120.00080886833911,42.00055923454974],[-120.0000617979981,39.000258827128619],[-114.61054254943551,34.991116828488856],[-114.12506767740048,34.317182476608423],[-114.70170161053014,33.417808663003157],[-114.51646661811242,32.772757368865157],[-117.12827396872153,32.533365269889316],[-117.46742193087775,33.295486880993209],[-118.50619577421476,34.017409515954242],[-120.64469561165143,34.579986441711725],[-120.65908770204419,35.122403454590795],[-121.87741111277737,36.331064389369416],[-121.80744467944429,36.85123408694669],[-122.49923730837315,37.542614728555151],[-122.44562402507796,37.798002921891182],[-122.07052879592547,37.478278788600932],[-122.31423302885486,38.007347412298913],[-121.52534322825329,38.055917970792365],[-122.99879116043742,37.988615722131243],[-123.70112517160433,38.907292514988484],[-123.83292815514784,39.775509100842697],[-124.35653657355942,40.371077971218085],[-124.06851898444742,41.384171271583284],[-124.22840851691392,42.000767974792069]]],[[[-119.88239272612657,34.079680026142171],[-119.56912855402024,34.052961275122939],[-119.54928724466961,34.028154145270364],[-119.80958083370058,33.967795256249104],[-119.88239272612657,34.079680026142171]]],[[[-120.30660233703544,34.024869233035687],[-120.35970475605333,34.022265473170734],[-120.4415583968711,34.032933198187052],[-120.36773576221907,34.073296969258053],[-120.30660233703544,34.024869233035687]]],[[[-120.04357315219698,33.918862148913703],[-120.16713089616815,33.918082119587083],[-120.25190690037866,34.013838959177406],[-120.07184097554094,34.026506195988759],[-120.04357315219698,33.918862148913703]]],[[[-118.34796517735842,33.38576154264004],[-118.44630380415663,33.317086002910898],[-118.56942209498602,33.46418195578778],[-118.55484873017228,33.477079905498556],[-118.34796517735842,33.38576154264004]]],[[[-119.43802869550356,33.217198303787981],[-119.54367872394783,33.224614075555252],[-119.57517652788377,33.278326235807327],[-119.47879896073069,33.274634829416513],[-119.43802869550356,33.217198303787981]]],[[[-118.35039315596667,32.827612107285816],[-118.47320382959684,32.838928025686243],[-118.59016977644154,33.011160698272022],[-118.55710092752383,33.032660943232813],[-118.35039315596667,32.827612107285816]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Colorado","type":"State","postal":"CO","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-108.6687900034397,37.000845909060189],[-109.04667026687812,37.000845909060189],[-109.04639011550024,41.000858268679792],[-102.02500557031193,41.000627555780369],[-102.01278327980663,37.000845909060189],[-108.6687900034397,37.000845909060189]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Connecticut","type":"State","postal":"CT","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-72.807699768260164,42.034078522937762],[-71.801637718163192,42.022707672894626],[-71.842353051747608,41.335512822461482],[-73.630465912927463,40.991860465602173],[-73.480568446271818,42.055567781570034],[-72.807699768260164,42.034078522937762]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"District of Columbia","type":"Federal District","postal":"DC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-76.931242406029583,38.888220248635918],[-77.019737282452269,38.806525909582035],[-77.122052960183439,38.943536412855451],[-77.042116433696592,39.01178348577136],[-76.931242406029583,38.888220248635918]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Delaware","type":"State","postal":"DE","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-75.128484768900464,38.632447533800843],[-75.707024830032523,38.455073259456441],[-75.676823412864806,39.827232735628286],[-75.421028725372636,39.81542243244337],[-75.573881514406622,39.476944636328341],[-75.128484768900464,38.632447533800843]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Florida","type":"State","postal":"FL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-82.399280944696827,30.575030234247265],[-82.112274097810882,30.371354689368289],[-81.957081220796994,30.814290497280567],[-81.503939113667244,30.731431607401007],[-80.524123402462124,28.486089724873011],[-80.456887071772258,27.900672222072359],[-80.838189576552168,28.757649793825962],[-80.041307221934773,26.568612845086449],[-80.484638537674641,25.229829835031552],[-81.110496715846111,25.13805004637419],[-80.940406377326426,25.264217043374572],[-81.715502842440884,25.983173369628702],[-81.828640053787979,26.687056453120334],[-82.039610520820247,26.552045461641953],[-82.01325431864295,26.961560858123107],[-82.290065852639984,26.870813784348869],[-82.714588573912366,27.499583339584532],[-82.405762878537843,27.862901224537751],[-82.843513139377322,27.846004251236934],[-82.65148310275508,28.887486224560078],[-83.694371326131858,29.925979916519211],[-84.309682628901001,30.064759218688224],[-85.318941700604299,29.680204760659265],[-85.603531555210537,30.28678193223584],[-86.454433687279248,30.399128127927767],[-86.257393884840909,30.493017291665595],[-87.475766734052513,30.294274608302914],[-87.607437881653496,30.929328343465798],[-85.007281532465399,31.00167331692866],[-84.883938021900846,30.720939663641403],[-82.399280944696827,30.575030234247265]]],[[[-84.907888218126971,29.642631517038453],[-85.008270302034376,29.606618332070909],[-85.116738323750226,29.632787766662943],[-84.737171658880285,29.732444752886437],[-84.907888218126971,29.642631517038453]]],[[[-80.18675522553005,27.278439532320434],[-80.170506445613327,27.204798172089369],[-80.436891953821998,27.8505525912542],[-80.395759139752911,27.794555274664944],[-80.18675522553005,27.278439532320434]]],[[[-82.083764575238959,26.552331106184099],[-82.085214770606783,26.493598193787363],[-82.169139334355123,26.700723445829198],[-82.121129078617429,26.665534235502463],[-82.083764575238959,26.552331106184099]]],[[[-82.037182542211994,26.453629930543954],[-82.144958425229575,26.44665361191845],[-82.201384208632049,26.548046438051898],[-82.116064381158594,26.460913866368685],[-82.037182542211994,26.453629930543954]]],[[[-80.381828475158997,25.142290769192201],[-80.580582144850226,24.954237783502933],[-80.257056741883716,25.347603277024263],[-80.381828475158997,25.142290769192201]]],[[[-80.638304315020903,24.903184314758519],[-80.665143915654127,24.898449207156006],[-80.614606804351283,24.937934071943488],[-80.638304315020903,24.903184314758519]]],[[[-80.829400513716891,24.803681137134646],[-80.848362916783998,24.803681137134646],[-80.785191527655456,24.835277818027464],[-80.786773558965805,24.821039536234323],[-80.829400513716891,24.803681137134646]]],[[[-81.044194223082499,24.716812237336484],[-81.137369275464962,24.710506084752183],[-80.930485722651113,24.759472151073211],[-80.988922004177155,24.727875470180393],[-81.044194223082499,24.716812237336484]]],[[[-81.33479359940236,24.650487771915778],[-81.379035544449437,24.636271462779732],[-81.420091454218721,24.749990949539651],[-81.322313130176269,24.68508372050114],[-81.33479359940236,24.650487771915778]]],[[[-81.566693022311114,24.599895728970225],[-81.631501374392741,24.590019019609088],[-81.562298490893482,24.689137675733917],[-81.532228909668291,24.61415598342046],[-81.566693022311114,24.599895728970225]]],[[[-81.783837805985158,24.544579564750705],[-81.811413490630841,24.557807104317803],[-81.738651036683294,24.575429175302531],[-81.739760655866249,24.554500219426018],[-81.783837805985158,24.544579564750705]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Georgia","type":"State","postal":"GA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-83.121357388257479,35.000554084708227],[-83.355574926489055,34.708317745435295],[-80.872346071995764,32.029565201842743],[-81.380947165616107,31.353257802996794],[-81.288464251931913,31.26390599294767],[-81.441767480436212,31.199723861593071],[-81.520396633826309,30.874649386301826],[-81.503939113667244,30.731431607401007],[-81.957081220796994,30.814290497280567],[-82.112274097810882,30.371354689368289],[-84.883938021900846,30.720939663641403],[-85.067442667572877,31.117579083068861],[-84.921533238178739,32.285887233105029],[-85.623603577460599,35.000861701907468],[-83.121357388257479,35.000554084708227]]],[[[-81.418981835035765,30.971438940775315],[-81.46349843829644,30.727762173667287],[-81.484636134415268,30.897830539529878],[-81.418981835035765,30.971438940775315]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Hawaii","type":"State","postal":"HI","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-177.37146733737362,28.200500114369262],[-177.39048467208346,28.196369254836682],[-177.35410413175521,28.217034538828116],[-177.36154599605277,28.207113884152804],[-177.37146733737362,28.200500114369262]]],[[[-159.37277265053376,21.932360226821203],[-159.60885786461782,21.909519649778019],[-159.78918196817634,22.041806031777469],[-159.3520524348996,22.219575813949476],[-159.37277265053376,21.932360226821203]]],[[[-160.18000961980397,21.841074822948315],[-160.22091172097365,21.897269893451352],[-160.04872848686631,22.004650268641342],[-160.08004226979912,21.907443233683196],[-160.18000961980397,21.841074822948315]]],[[[-157.79935462176263,21.456652200861882],[-157.63541113406336,21.307644626818316],[-158.27312356073392,21.585247176470517],[-157.96249610747816,21.701361682853047],[-157.79935462176263,21.456652200861882]]],[[[-157.21360203594139,21.215392426033546],[-156.95235263632708,21.199692962544034],[-156.71216128194965,21.155088468655009],[-157.29031407500054,21.112582363517902],[-157.21360203594139,21.215392426033546]]],[[[-156.48682619034599,20.932571370322904],[-156.27753663158097,20.951281087833493],[-155.98985412548956,20.757130689802253],[-156.40879304527942,20.605178779708865],[-156.69776919155689,20.949061849467597],[-156.48682619034599,20.932571370322904]]],[[[-156.849594758872,20.772632399377969],[-156.97341068156396,20.757548170286924],[-157.050564920347,20.912466389087214],[-156.88054873954499,20.904819904420521],[-156.849594758872,20.772632399377969]]],[[[-155.58132475199525,19.012018318543994],[-155.88130645289178,19.070520518041306],[-156.04868591484319,19.749959020522326],[-155.83162078205109,20.275819636285433],[-154.80418757635374,19.524442654497676],[-155.58132475199525,19.012018318543994]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Iowa","type":"State","postal":"IA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-91.215128448963469,40.649559427153804],[-91.441952188084855,40.379449553568691],[-91.731529835850125,40.624653420344345],[-95.765028524872136,40.601867774943884],[-96.621769890562035,42.729535092436095],[-96.598621696319626,43.497501430325428],[-91.245252961831383,43.502412319184629],[-91.069581568411294,42.788553649374961],[-90.14943260752915,42.053711092046058],[-90.436670167314517,41.560359022444942],[-91.048114282436131,41.369098028820787],[-91.215128448963469,40.649559427153804]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Idaho","type":"State","postal":"ID","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-114.75368891720079,46.734568204200343],[-114.33012200651174,46.637646813784329],[-114.52923273188065,45.575719283040655],[-113.80227286528215,45.601097701977494],[-112.97007495755976,44.454498537144474],[-111.37252545814152,44.746240491632904],[-111.05143352694752,44.498883304462623],[-111.0502964419432,42.000877838077514],[-117.01667484337061,42.00055923454974],[-116.91242007865142,44.199472892650391],[-117.20170109554599,44.436206300118556],[-116.47704286477747,45.641087937878012],[-117.03899906297221,46.39655183388416],[-117.03905399461493,48.993082694652713],[-116.04849365409368,48.993082694652713],[-116.04901001153524,48.004719619840273],[-114.75368891720079,46.734568204200343]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Illinois","type":"State","postal":"IL","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.175730101513281,41.943748929648223],[-87.521085339296917,41.760760641417761],[-87.529456921647508,38.7422888465847],[-88.471666430246202,37.08838497489954],[-89.300826618126152,37.012051964175157],[-89.52342062075806,37.644523912130182],[-90.365775389219479,38.254254159998908],[-90.134205556167032,38.846669954082159],[-90.577075446108054,38.909610630311278],[-91.466814249580153,39.942863843554875],[-91.048114282436131,41.369098028820787],[-90.176612784347242,41.883642726183467],[-90.650584970396594,42.512983570503422],[-87.039126092396003,42.49280168496793],[-87.175730101513281,41.943748929648223]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Indiana","type":"State","postal":"IN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-84.901241489357801,38.769567900359704],[-85.405426078903417,38.729962185958243],[-86.021330643413933,37.984353026656123],[-86.361445402482033,38.178986823143305],[-86.599233497490431,37.874797358414412],[-88.041991120886635,37.788851310213957],[-87.517679577448249,38.811821319940293],[-87.521085339296917,41.760760641417761],[-84.796398956061495,41.759727926534623],[-84.901241489357801,38.769567900359704]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Kansas","type":"State","postal":"KS","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-95.116203426879238,39.872089915073815],[-94.622384438314967,39.124404339676886],[-94.618066811197139,37.000845909060189],[-102.01278327980663,37.000845909060189],[-102.02448921287036,40.001124343824216],[-95.116203426879238,39.872089915073815]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Kentucky","type":"State","postal":"KY","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-84.660542017285223,39.09446659439422],[-83.689877917757315,38.649531274686922],[-82.880438189614026,38.71025271255013],[-81.965277021890898,37.539725324148051],[-83.730384511099402,36.586815131547411],[-89.450328576954206,36.500023136049066],[-89.046207467788207,37.182977263664199],[-88.471666430246202,37.08838497489954],[-87.892115626888099,37.912985836433691],[-86.599233497490431,37.874797358414412],[-86.361445402482033,38.178986823143305],[-86.021330643413933,37.984353026656123],[-84.660542017285223,39.09446659439422]]],[[[-89.487220668205268,36.503066349055771],[-89.557313444316605,36.501077823589299],[-89.549644986992817,36.553065130259952],[-89.519520474124917,36.554822942827002],[-89.487220668205268,36.503066349055771]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Louisiana","type":"State","postal":"LA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-91.176885039301482,31.001233863786894],[-89.735313939388035,31.001156959487091],[-89.520860806207295,30.192629096612947],[-90.225282219797592,30.379286818577128],[-90.413060547273261,30.140301213757425],[-89.400736289906149,30.046049501177635],[-89.720877903681085,29.619307541539342],[-89.021378365278551,29.142720609296489],[-89.376148886624463,28.981331442983731],[-90.15906761766233,29.537140790358052],[-90.135864491777198,29.13607388052732],[-90.751021985946721,29.130888333454507],[-91.893171687719388,29.83601287207162],[-92.260823679283263,29.556850263766165],[-93.826463387445187,29.725138844404611],[-93.530590573424149,31.046189920189335],[-94.043300553919991,31.999231948732501],[-94.041306535289237,33.011995659241379],[-91.149957548039893,33.015917778531616],[-90.93764674892526,32.27732888316919],[-91.65644926657977,31.001805152871185],[-91.176885039301482,31.001233863786894]]],[[[-89.223955277303119,30.084051211611651],[-89.220439652169006,30.037601014527226],[-89.342003377509428,30.062847597521554],[-89.18467915275798,30.168678900386823],[-89.223955277303119,30.084051211611651]]],[[[-88.827469666475267,29.807690117084945],[-88.855660585519416,29.775862723292704],[-88.866866640634399,30.056717226193953],[-88.812583191298017,29.933362729300839],[-88.827469666475267,29.807690117084945]]],[[[-88.88930072352143,29.712581470878703],[-88.943584172857811,29.660231615366101],[-88.872656435777131,29.752989187263893],[-88.88930072352143,29.712581470878703]]],[[[-91.793690482752609,29.500732097562917],[-91.830846245888736,29.486471843112682],[-92.006649475251351,29.610287765804642],[-91.875231013206886,29.640983567756848],[-91.793690482752609,29.500732097562917]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Massachusetts","type":"State","postal":"MA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-70.78133738627308,42.721240414385278],[-71.04617382215703,42.331115887784478],[-70.426676728212598,41.757299947926384],[-70.001406936599224,41.826184227897869],[-70.10894112038882,42.078309481656305],[-69.977896193514852,41.96126113734752],[-69.948639600601922,41.677143694868676],[-71.168539549481167,41.489409312707153],[-71.387134528523035,42.016862946109171],[-73.507287197291063,42.080012362580646],[-73.25332722666576,42.752221860879644],[-70.78133738627308,42.721240414385278]]],[[[-70.509898166934121,41.376338019331342],[-70.78531443720604,41.327448857310117],[-70.829182847082606,41.359001592888745],[-70.615993141684442,41.457208383744415],[-70.509898166934121,41.376338019331342]]],[[[-69.977940138829027,41.265595827606859],[-70.055097124194205,41.249467897304129],[-70.233075646608555,41.28633801589811],[-70.041199418585933,41.397475715450184],[-69.977940138829027,41.265595827606859]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Maryland","type":"State","postal":"MD","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-75.784720145496365,39.722357243346352],[-75.707024830032523,38.455073259456441],[-75.037660790826436,38.45558961689801],[-75.659256273522786,37.953964841903158],[-76.341177686254781,38.70964846448021],[-75.958919370891536,39.585050109202257],[-76.570407431327325,39.269335985830594],[-76.394087844523142,38.368973402656366],[-76.668548304211726,38.537514668851315],[-76.341177686254781,38.087031253229242],[-77.232520493694309,38.407711197102827],[-76.931242406029583,38.888220248635918],[-77.883251719689611,39.61071417268127],[-78.777769576078384,39.62662237641311],[-79.487980784811413,39.210910690633085],[-79.477499827380356,39.722796696488103],[-75.784720145496365,39.722357243346352]]],[[[-75.225790680815521,38.040339356916832],[-75.252476472849125,38.037449952509746],[-75.097887843905156,38.298078624561299],[-75.136230130524055,38.18053589546804],[-75.225790680815521,38.040339356916832]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Maine","type":"State","postal":"ME","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-68.937183263189809,47.211254013400094],[-68.235497445406992,47.345946401350687],[-67.806788932959307,47.082812846391079],[-67.802240592942056,45.727517384534394],[-66.987022055984554,44.827704117787391],[-68.05661804405203,44.3843178704048],[-68.450598771971826,44.507595462998069],[-68.532534810253694,44.258645258188892],[-68.762720365909573,44.570766852126638],[-69.226057785928248,43.986458968508913],[-70.178814169929268,43.766369848785075],[-70.733096417635963,43.070034373003239],[-71.084549067761557,45.294007846512955],[-70.421095673312195,45.73824004119345],[-70.007680130197897,46.708937099706986],[-69.242877854929262,47.4629947456595],[-68.937183263189809,47.211254013400094]]],[[[-68.187256476769875,44.332484372333738],[-68.315104382037504,44.249702386753995],[-68.41170716892573,44.294350825957196],[-68.29943787753362,44.456509035268027],[-68.187256476769875,44.332484372333738]]],[[[-68.623193993399568,44.196067130801708],[-68.701713283504219,44.182674796306458],[-68.703031642929503,44.232003411469464],[-68.676730372394942,44.256217279580625],[-68.623193993399568,44.196067130801708]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Michigan","type":"State","postal":"MI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.743888082171168,48.060530168844281],[-84.875972933706379,46.899901462460434],[-84.561752951016715,46.45737214870428],[-84.149479986071,46.542768880477524],[-83.977785643583886,46.084913638402355],[-82.551079046190594,45.347357457923096],[-82.137850270661545,43.570879118671428],[-83.12166500545672,41.950000150589801],[-87.221257447000013,41.760727682432133],[-87.032490349955367,44.091466296733387],[-86.264524012066019,45.226903351765628],[-87.115272335535124,45.452364786147541],[-87.653613420524337,45.121797146584271],[-88.151744543042156,45.945409238549445],[-90.412588135145867,46.585274985614632],[-89.498382778006075,47.997897109814403],[-88.378194746993046,48.303097316769367],[-87.743888082171168,48.060530168844281]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Minnesota","type":"State","postal":"MN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-93.377886099825503,48.616537270132397],[-91.518307171466319,48.05831093047837],[-89.498382778006075,47.997897109814403],[-89.95767722912052,47.287136584654149],[-90.654023691230904,47.309098255413801],[-92.291645824013727,46.660718103726936],[-92.292629100418424,46.08437530830372],[-92.896520114665975,45.658578172920215],[-92.769809294402648,44.725849865855082],[-91.382691931918018,43.99079856828385],[-91.245252961831383,43.502412319184629],[-96.453618639030395,43.501170864059162],[-96.453668077508837,45.29733670406182],[-96.851060060441583,45.626003708786953],[-96.560845205620765,46.138241277155402],[-97.225737809109404,48.993181571609597],[-95.162043882729478,48.99176433522743],[-94.939340016812125,49.349413274651909],[-94.620884804468702,48.742605390175896],[-93.377886099825503,48.616537270132397]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Missouri","type":"State","postal":"MO","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-91.466814249580153,39.942863843554875],[-90.577075446108054,38.909610630311278],[-90.134205556167032,38.846669954082159],[-90.365775389219479,38.254254159998908],[-89.154312940662095,36.992111777867635],[-89.70477194603545,36.001573410003459],[-90.381068358552852,35.992740401854007],[-90.162242666611562,36.500869083346956],[-94.618379921560646,36.500869083346956],[-94.622384438314967,39.124404339676886],[-95.05793743344563,39.508958797705844],[-94.929935719578367,39.861499094357328],[-95.765028524872136,40.601867774943884],[-91.731529835850125,40.624653420344345],[-91.466814249580153,39.942863843554875]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Mississippi","type":"State","postal":"MS","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-88.444233567871592,31.139705548756666],[-88.399585128668392,30.370805372941078],[-89.520860806207295,30.192629096612947],[-89.735313939388035,31.001156959487091],[-91.65644926657977,31.001805152871185],[-90.93764674892526,32.27732888316919],[-91.207481964296775,33.675668780261617],[-90.293705073970216,35.001114387463986],[-88.084771884237341,34.933109013776033],[-88.444233567871592,31.139705548756666]]],[[[-88.558106863231146,30.215909126797882],[-88.659236017479543,30.225599068573771],[-88.722846859749851,30.264248972391911],[-88.573993094305905,30.22915863902206],[-88.558106863231146,30.215909126797882]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Montana","type":"State","postal":"MT","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-104.01801345883915,46.896462741626124],[-104.00547805797034,45.000969505256307],[-111.05086223786323,45.001057395884658],[-111.05143352694752,44.498883304462623],[-111.37252545814152,44.746240491632904],[-112.85385608105605,44.398325439298503],[-113.80227286528215,45.601097701977494],[-114.52923273188065,45.575719283040655],[-114.33686761223782,46.659223963044951],[-115.71331724970615,47.446745965742764],[-116.04901001153524,48.004719619840273],[-116.04849365409368,48.993082694652713],[-104.03392715573527,48.993137626295436],[-104.01801345883915,46.896462741626124]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"North Carolina","type":"State","postal":"NC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-75.924872738733384,36.382996764397362],[-75.820074150751253,36.112831959169512],[-76.733631314506951,36.229155205794399],[-76.726215542739681,35.957595136841448],[-76.06977142590145,35.970306318966962],[-76.083570254552839,35.690539462591587],[-75.812010185599888,35.955738447317501],[-76.103510440860362,35.380296530834883],[-77.039996072287579,35.527392483711765],[-76.512948933041713,35.270433245393932],[-76.974957007306543,35.025174446975555],[-76.439801957595122,34.842911256429005],[-77.412267815004256,34.730795773636515],[-78.013340835980244,33.911808925988396],[-78.564272253480979,33.876663660975836],[-79.653555742299474,34.796790649200901],[-80.784081908472501,34.828629029321689],[-81.087315562618073,35.155714002736488],[-84.324689953692229,34.988095588139231],[-83.871306147334508,35.514890041828593],[-82.051365892362426,36.122862477130269],[-81.658890291453162,36.610578560188287],[-75.924872738733384,36.382996764397362]]],[[[-75.558687422030147,35.879361491278942],[-75.534198895705359,35.8190795065575],[-75.809790947233978,36.271046076533025],[-75.889057307679636,36.550505315709174],[-75.558687422030147,35.879361491278942]]],[[[-75.635690598795705,35.855894693508759],[-75.65077482788675,35.835591958359274],[-75.717176197607259,35.946125409841414],[-75.64886320672008,35.910386883087469],[-75.635690598795705,35.855894693508759]]],[[[-75.544119550380671,35.240099992283689],[-75.690105884074612,35.221566056029801],[-75.503525066410248,35.769157629653137],[-75.464743326649582,35.44864248070769],[-75.544119550380671,35.240099992283689]]],[[[-75.781962577031791,35.190200088036406],[-75.96367645115113,35.118843884142507],[-75.984198912871491,35.123073620631985],[-75.864920343868249,35.174127089376384],[-75.781962577031791,35.190200088036406]]],[[[-76.503643512764853,34.642949090597938],[-76.437033402802015,34.756328001172989],[-76.207386177244786,34.938898808918765],[-76.357712110713649,34.803668090869508],[-76.503643512764853,34.642949090597938]]],[[[-76.546226522201778,34.654858270739737],[-76.607793907362876,34.663570429275197],[-76.673920618869786,34.700154903327032],[-76.622273888384001,34.694551875769548],[-76.546226522201778,34.654858270739737]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"North Dakota","type":"State","postal":"ND","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-96.570480215753932,46.019237366365758],[-104.0110865786921,45.943058164241023],[-104.03392715573527,48.993137626295436],[-97.225737809109404,48.993181571609597],[-96.570480215753932,46.019237366365758]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Nebraska","type":"State","postal":"NE","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-103.33663037620583,43.001380805931177],[-98.441765077176839,43.001095161389031],[-96.804527465893059,42.701421077691748],[-96.383751082654214,42.417776047340283],[-95.34668012024153,40.001486892666179],[-102.02448921287036,40.001124343824216],[-102.02500557031193,41.000627555780369],[-104.02165542675152,41.000858268679792],[-104.02886245827645,43.001402778588272],[-103.33663037620583,43.001380805931177]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Hampshire","type":"State","postal":"NH","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-71.084549067761557,45.294007846512955],[-70.806111557140014,42.876762881255502],[-72.466859911508166,42.730315121762715],[-72.031208039420605,44.300733882841314],[-71.084549067761557,45.294007846512955]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Jersey","type":"State","postal":"NJ","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-74.241514520221486,40.456265962749001],[-73.972250593934262,40.400323577802453],[-74.079916613666384,39.788110419682766],[-74.064590685347383,39.993115310315574],[-74.954307516162388,38.949952428725197],[-75.524245282044404,39.490172175895452],[-74.734888562479711,40.154504476628347],[-75.189019439178423,40.5958143079161],[-75.1230355499426,40.999001579155845],[-74.699051158768867,41.357298711964432],[-73.910078960703217,40.992255973429764],[-74.241514520221486,40.456265962749001]]],[[[-74.133222279762336,39.680784976135499],[-74.250501336970558,39.529371396140789],[-74.106767200628155,39.746439275515002],[-74.133222279762336,39.680784976135499]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New Mexico","type":"State","postal":"NM","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-106.56635828261329,31.819528572736743],[-108.21184113346942,31.779329596593897],[-108.21445038649864,31.329428456384647],[-109.04780735188244,31.327879384059941],[-109.04667026687812,37.000845909060189],[-103.00083873741983,37.000845909060189],[-103.06564159633717,32.002747573866614],[-106.66826197302404,32.000945815985375],[-106.56635828261329,31.819528572736743]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Nevada","type":"State","postal":"NV","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-114.0619237540933,36.175212332642886],[-114.71575861790231,36.08498161631023],[-114.61054254943551,34.991116828488856],[-120.0000617979981,39.000258827128619],[-120.00080886833911,42.00055923454974],[-114.04259330901996,42.001108550976937],[-114.0619237540933,36.175212332642886]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"New York","type":"State","postal":"NY","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-73.352182210905525,45.005418968316661],[-73.25332722666576,42.752221860879644],[-73.484139003048654,41.218958862937171],[-73.987082137468789,40.751391706429018],[-73.871967386983755,41.055163690673254],[-73.925327984722429,41.218057983996545],[-73.910078960703217,40.992255973429764],[-74.935367085752361,41.474369028930312],[-75.351342443417437,41.998416900483647],[-79.762957601941579,42.000899810734609],[-79.762023764015325,42.538977223838742],[-78.915076710222479,42.90913959147494],[-79.171849180955078,43.466574915473785],[-76.81996188420645,43.628788056427368],[-75.179384429045257,44.899378925209049],[-73.352182210905525,45.005418968316661]]],[[[-72.509783497129945,40.98602672514528],[-71.903206325553356,41.060700800259468],[-74.03203819387123,40.638682961895142],[-72.27413773618764,41.153040891672589],[-72.509783497129945,40.98602672514528]]],[[[-74.188131949825731,40.522854100054758],[-74.188153922482812,40.614600929726492],[-74.068754503865591,40.649306741597286],[-74.079707873424056,40.58646494232508],[-74.188131949825731,40.522854100054758]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Ohio","type":"State","postal":"OH","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-80.520278187471689,41.696237933878308],[-80.874312624805157,39.664294496990806],[-82.072272875581831,38.962949255392857],[-82.387064147355801,38.433990494980321],[-84.821711457027092,39.091983684143258],[-84.796113311519349,41.701434467279654],[-83.12166500545672,41.950000150589801],[-82.439073426683535,41.674869524860043],[-80.52076158592763,42.324392254715491],[-80.520278187471689,41.696237933878308]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Oklahoma","type":"State","postal":"OK","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-94.618303017260843,36.625882515850222],[-94.484148959408898,33.648433671800802],[-95.215860413102718,33.95903915239947],[-97.119000134139242,33.734764241500301],[-99.999340820187399,34.586721061109259],[-100.00244445800111,36.500902042332584],[-103.0002949141569,36.501231632188905],[-103.00083873741983,37.000845909060189],[-94.618066811197139,37.000845909060189],[-94.618303017260843,36.625882515850222]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Oregon","type":"State","postal":"OR","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-123.96294586030294,46.225450753138432],[-123.04227504881496,46.160027166658352],[-122.72591273205919,45.673750292639596],[-122.20253502654704,45.591067184016737],[-116.89647891593393,46.002098693836984],[-116.47704286477747,45.641087937878012],[-117.20170109554599,44.436206300118556],[-116.91242007865142,44.199472892650391],[-117.01667484337061,42.00055923454974],[-124.22840851691392,42.000767974792069],[-124.53962923191105,42.812866394443034],[-124.14871918281932,43.691728732656486],[-123.96294586030294,46.225450753138432]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Pennsylvania","type":"State","postal":"PA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-75.320877354364654,39.864696115963653],[-80.519443226502332,39.722511051945958],[-80.52076158592763,42.324392254715491],[-79.762023764015325,42.538977223838742],[-79.762957601941579,42.000899810734609],[-75.351342443417437,41.998416900483647],[-74.699051158768867,41.357298711964432],[-75.192282378756033,40.689868266582096],[-74.734888562479711,40.154504476628347],[-75.320877354364654,39.864696115963653]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Rhode Island","type":"State","postal":"RI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-71.34072827675277,41.797916404553888],[-71.522859631356781,41.37897473818191],[-71.842353051747608,41.335512822461482],[-71.800835716179478,42.011963043578504],[-71.34072827675277,41.797916404553888]]],[[[-71.241378907728517,41.491969127257931],[-71.346232427353371,41.469403208428361],[-71.232051514794577,41.654303117825492],[-71.241378907728517,41.491969127257931]]],[[[-71.365359625348631,41.485267466846039],[-71.393078132265387,41.466744516920699],[-71.38398145223087,41.570532362676772],[-71.354472173761437,41.542297498318447],[-71.365359625348631,41.485267466846039]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"South Carolina","type":"State","postal":"SC","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-81.051170541708004,35.088972056831111],[-80.784081908472501,34.828629029321689],[-79.653555742299474,34.796790649200901],[-78.564272253480979,33.876663660975836],[-79.940727384113572,32.667156778899312],[-80.634195428145404,32.511733188986],[-80.579340689724745,32.287326442144305],[-80.802560913083667,32.448045442415875],[-80.872346071995764,32.029565201842743],[-83.355574926489055,34.708317745435295],[-82.39253533897076,35.21093128999911],[-81.051170541708004,35.088972056831111]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"South Dakota","type":"State","postal":"SD","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-104.0110865786921,45.943058164241023],[-96.556401235724678,45.942772519698877],[-96.851060060441583,45.626003708786953],[-96.453668077508837,45.29733670406182],[-96.480952624448094,42.511258716921986],[-98.441765077176839,43.001095161389031],[-104.02886245827645,43.001402778588272],[-104.0110865786921,45.943058164241023]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Tennessee","type":"State","postal":"TN","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-87.868714747089172,36.675046336085046],[-83.730384511099402,36.586815131547411],[-81.658890291453162,36.610578560188287],[-82.051365892362426,36.122862477130269],[-83.871306147334508,35.514890041828593],[-84.324689953692229,34.988095588139231],[-90.293705073970216,35.001114387463986],[-89.557313444316605,36.501077823589299],[-87.868714747089172,36.675046336085046]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Texas","type":"State","postal":"TX","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-102.81291758767308,36.501209659531824],[-100.00244445800111,36.500902042332584],[-99.999340820187399,34.586721061109259],[-99.15750790233183,34.223282326542048],[-97.119000134139242,33.734764241500301],[-95.215860413102718,33.95903915239947],[-94.047327043331393,33.55443464477753],[-94.043300553919991,31.999231948732501],[-93.530590573424149,31.046189920189335],[-93.710629032440508,30.112813419740093],[-93.890464244378805,29.689356372336491],[-94.759609174994992,29.384255042338424],[-94.526265049882682,29.547962323973991],[-95.022874565897141,29.702320240018523],[-94.888286548067711,29.370555090643933],[-95.853419031173658,28.64034876396066],[-96.640040154930873,28.708760631804736],[-96.421110092868417,28.457338503073117],[-97.15649098029597,28.144359975508934],[-97.439108788928536,27.328284504924994],[-97.768445959694887,27.457494714932096],[-97.146235242600056,25.961464384425568],[-99.107767299848433,26.446917283803501],[-99.505318584545066,27.548340665663218],[-101.38034429083724,29.742552175146997],[-102.34307626115631,29.864972834113857],[-103.09000927304798,29.041866113261705],[-103.42293348008397,29.070683253032854],[-104.40062333671581,29.573747237066982],[-104.91785419140754,30.583357871283695],[-106.66826197302404,32.000945815985375],[-103.06564159633717,32.002747573866614],[-103.04215282590989,36.500616397790438],[-102.81291758767308,36.501209659531824]]],[[[-95.039694634898154,29.145917630902829],[-95.089665950280974,29.136304593426743],[-94.767618208503634,29.339035314050932],[-94.864951586240053,29.252891511936681],[-95.039694634898154,29.145917630902829]]],[[[-96.764399900885749,28.152566762931372],[-96.755610838050472,28.202433708193013],[-96.403564926183492,28.38157678143304],[-96.413331772259198,28.337807248513357],[-96.764399900885749,28.152566762931372]]],[[[-97.014355354756731,27.901628032655694],[-96.978671759645508,28.013842392405081],[-96.85741565150434,28.132912221165981],[-96.83976611469825,28.088802112061444],[-97.014355354756731,27.901628032655694]]],[[[-97.353613180198394,27.300060626895217],[-97.250907487803914,27.541188565781013],[-97.060558359448933,27.822021096025182],[-97.384825339592169,27.242525224309787],[-97.353613180198394,27.300060626895217]]],[[[-97.17070179626775,26.159383093147454],[-97.402084861734949,26.820507385945461],[-97.385989890417846,27.196503494038581],[-97.351234640068597,26.801468078578552],[-97.17070179626775,26.159383093147454]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Utah","type":"State","postal":"UT","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-113.66853628791489,42.001075591991309],[-111.0502964419432,42.000877838077514],[-111.04998882474398,41.000858268679792],[-109.04639011550024,41.000858268679792],[-109.04667026687812,37.000845909060189],[-114.04026970053289,37.00415279395196],[-114.04259330901996,42.001108550976937],[-113.66853628791489,42.001075591991309]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Virginia","type":"State","postal":"VA","admin":"United States of America","sales_rgn":1},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.948598401869887,39.216315964276788],[-77.053047830597976,38.915301548497126],[-77.313698475306623,38.396625991601837],[-76.264284372774654,37.893551021239176],[-76.49248140296406,37.682218005364973],[-76.939976537222137,38.09545776722257],[-77.111099590624974,38.165682379276433],[-76.549456502793731,37.669144274397496],[-76.305570995443361,37.571508772626117],[-76.453930376102832,37.273537569853175],[-76.75769137401852,37.505436992761929],[-76.338277295519134,37.013117638043937],[-76.63089815629111,37.221704071782128],[-77.25088963502003,37.329194310257563],[-76.487856158646991,36.897025104318487],[-75.999414977905062,36.912658649836729],[-75.857427667801176,36.550582220008991],[-83.667520739170087,36.605030464273526],[-81.965277021890898,37.539725324148051],[-81.589017241912728,37.208070038058906],[-80.371182722799773,37.47259885674363],[-79.639603105048479,38.572451193621532],[-79.240272035127703,38.476518572774495],[-78.322221462997476,39.451851861933648],[-77.948598401869887,39.216315964276788]]],[[[-75.333050206391519,37.888277583538013],[-75.378544592892609,37.872050776278385],[-75.225790680815521,38.040339356916832],[-75.225845612458244,38.040262452617014],[-75.333050206391519,37.888277583538013]]],[[[-75.853999933295427,37.296641818781396],[-75.888156428739009,37.619156479521862],[-75.37596280568475,38.02499145594075],[-75.58710905397372,37.558720686200786],[-75.853999933295427,37.296641818781396]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Vermont","type":"State","postal":"VT","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-72.296692668688664,43.714953831198699],[-72.466859911508166,42.730315121762715],[-73.25332722666576,42.752221860879644],[-73.352182210905525,45.005418968316661],[-71.517520275684348,45.007561302382754],[-72.296692668688664,43.714953831198699]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Washington","type":"State","postal":"WA","admin":"United States of America","sales_rgn":0},"geometry":{"type":"MultiPolygon","coordinates":[[[[-117.03737308634769,48.833660081149361],[-116.89647891593393,46.002098693836984],[-122.64984888638415,45.627442917826244],[-122.94199733502873,46.114862370013583],[-124.07275970726545,46.279448557932653],[-123.88915069147225,46.660014978700104],[-124.11254669608789,46.86266879502449],[-123.84287627564453,46.963182714874421],[-124.13923798128576,46.95470126923837],[-124.70166109844362,48.151639791460468],[-124.70997774915151,48.380375151748524],[-122.7785976705924,48.137577290924014],[-122.65664393058867,47.881134410047764],[-122.82138392710738,47.793155891066647],[-123.13904263063134,47.386101432179373],[-122.53280054207536,47.919707409566058],[-122.67547999087752,47.612342895887906],[-122.57788843442032,47.293190051681961],[-123.02757534122296,47.138909039937232],[-122.7019350700117,47.110871929492703],[-122.35381677059922,47.371577505844073],[-122.24201439817024,48.010762100539523],[-122.7887765039885,48.993027763009991],[-117.03737308634769,48.833660081149361]],[[-122.85309047128564,47.204717147916369],[-122.84919032465248,47.216296738201834],[-122.88510463266313,47.274711047070781],[-122.90797267552766,47.226107529591701],[-122.85309047128564,47.204717147916369]]],[[[-123.04920192896201,48.993027763009991],[-123.06325893633417,48.977734793676603],[-123.08643459639794,48.993027763009991],[-123.04920192896201,48.993027763009991]]],[[[-122.78214076154786,48.672688395321273],[-122.89254237708748,48.594498695072929],[-123.00285060883446,48.65219889258654],[-122.89771144466746,48.710360515898969],[-122.78214076154786,48.672688395321273]]],[[[-123.01313381235174,48.500862216891619],[-123.13992153691487,48.507948398802569],[-123.16214138639531,48.606385902557662],[-123.11418606230032,48.613263344226255],[-123.01313381235174,48.500862216891619]]],[[[-122.82092250130853,48.431362702521682],[-122.92161220241516,48.456938875372316],[-122.91223537100277,48.537963048385024],[-122.86890529122485,48.548608800744262],[-122.82092250130853,48.431362702521682]]],[[[-122.57276880531877,48.15664955727658],[-122.36673669296708,47.985438613245378],[-122.38314477464769,47.923201062043091],[-122.74151881175607,48.225270165362986],[-122.62863428596549,48.384231353067491],[-122.57276880531877,48.15664955727658]]],[[[-122.49727075556375,47.594588988960652],[-122.57592188161092,47.619473023113045],[-122.54977441967598,47.703957889617129],[-122.50786706944453,47.682644412241586],[-122.49727075556375,47.594588988960652]]],[[[-122.39412561002752,47.395242057528066],[-122.50993249921082,47.357987417435027],[-122.4864711946049,47.488779658752492],[-122.46859094489939,47.489966182235236],[-122.39412561002752,47.395242057528066]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Wisconsin","type":"State","postal":"WI","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-90.298846675728853,46.760715666135297],[-90.118550037991696,46.341664136477874],[-88.151744543042156,45.945409238549445],[-87.653613420524337,45.121797146584271],[-87.115272335535124,45.452364786147541],[-86.264524012066019,45.226903351765628],[-87.032490349955367,44.091466296733387],[-87.039126092396003,42.49280168496793],[-90.650584970396594,42.512983570503422],[-91.117591824149002,42.881651797457636],[-91.319916050617053,43.936284406048031],[-92.769809294402648,44.725849865855082],[-92.896520114665975,45.658578172920215],[-92.292629100418424,46.08437530830372],[-92.291645824013727,46.660718103726936],[-90.654023691230904,47.309098255413801],[-89.95767722912052,47.287136584654149],[-90.298846675728853,46.760715666135297]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"West Virginia","type":"State","postal":"WV","admin":"United States of America","sales_rgn":1},"geometry":{"type":"Polygon","coordinates":[[[-80.519553089787777,39.838186105186736],[-79.477499827380356,39.722796696488103],[-79.487980784811413,39.210910690633085],[-78.181135031834202,39.685739810308888],[-77.726641606293541,39.34643803955305],[-77.835790780379114,39.145212445939393],[-78.322221462997476,39.451851861933648],[-79.240272035127703,38.476518572774495],[-79.639603105048479,38.572451193621532],[-80.371182722799773,37.47259885674363],[-81.829266274514993,37.298597385262255],[-82.612778267294232,38.448217790444914],[-80.874312624805157,39.664294496990806],[-80.519080677660384,40.646955667288864],[-80.519553089787777,39.838186105186736]]]}},{"type":"Feature","properties":{"featurecla":"Admin-1 scale rank","iso_a2":"US","name":"Wyoming","type":"State","postal":"WY","admin":"United States of America","sales_rgn":0},"geometry":{"type":"Polygon","coordinates":[[[-110.79953898608851,41.000858268679792],[-111.04998882474398,41.000858268679792],[-111.05086223786323,45.001057395884658],[-104.03721206796996,45.001134300184475],[-104.02165542675152,41.000858268679792],[-110.79953898608851,41.000858268679792]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AF","name":"Afghanistan","type":"Sovereign country","postal":"AF","admin":"Afghanistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[61.210817091725744,35.650072333309225],[62.230651483005886,35.270663967422294],[62.98466230657661,35.404040839167621],[63.193538445900352,35.857165635718914],[64.546479119733903,36.312073269184268],[64.746105177677407,37.111817735333304],[65.588947788357842,37.305216783185642],[65.745630731066825,37.661164048812068],[68.135562371701383,37.023115139304309],[68.859445835245936,37.344335842430596],[69.196272820924378,37.151143500307427],[69.518785434857961,37.60899669041342],[70.116578403610333,37.588222764632093],[70.806820509732887,38.486281643216415],[71.348131137990265,38.258905341132163],[71.448693475230243,37.06564484308052],[71.844638299450594,36.738171291646921],[73.260055779925011,37.495256862939002],[74.980002475895418,37.419990139305895],[75.158027785140916,37.133030910789117],[71.846291945283923,36.509942328429858],[71.26234826038575,36.074387518857804],[71.613076206350712,35.153203436822864],[70.881803012988399,33.98885590263852],[69.930543247359594,34.02012014417511],[70.323594191371598,33.358532619758392],[69.687147251264861,33.105498969041236],[69.262522007122556,32.5019440780883],[69.317764113242561,31.901412258424443],[66.938891229118468,31.304911200479353],[66.381457553986024,30.738899237586452],[66.346472609324422,29.887943427036177],[64.148002150331251,29.340819200145972],[62.549856805272782,29.318572496044311],[60.874248488208792,29.829238999952608],[61.781221551363444,30.735850328081238],[61.699314406180832,31.379506130492672],[60.941944614511129,31.548074652628753],[60.536077915290775,32.981268825811568],[60.963700392506006,33.528832302376259],[60.528429803311582,33.676446031218006],[61.210817091725744,35.650072333309225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AO","name":"Angola","type":"Sovereign country","postal":"AO","admin":"Angola","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[16.326528354567046,-5.877470391466218],[17.472970004962292,-8.068551120641658],[19.016751743249671,-7.98824594486014],[19.417502475673217,-7.155428562044278],[20.09162153492062,-6.943090101756951],[20.601822950938327,-6.939317722199689],[20.51474816252653,-7.299605808138665],[21.728110792739756,-7.290872491081316],[22.155268182064333,-11.084801120653779],[23.912215203555746,-10.926826267137542],[24.016136508894704,-12.911046237848552],[21.933886346125945,-12.898437188369357],[21.887842644953878,-16.080310153876894],[23.215048455506093,-17.523116143465955],[21.377176141045595,-17.93063648851971],[18.956186964603631,-17.789094740472237],[18.263309360434221,-17.309950860262006],[14.058501417709039,-17.423380629142656],[13.462362094789967,-16.971211846588744],[11.73419884608515,-17.301889336824502],[12.175618930722266,-14.449143568583892],[13.633721144269828,-12.038644707897191],[13.738727654686926,-11.297863050993143],[12.875369500386569,-9.166933689005489],[13.236432732809874,-8.562629489784342],[12.72829837408392,-6.927122084178805],[12.227347039446443,-6.294447523629373],[13.375597364971895,-5.864241224799557],[16.326528354567046,-5.877470391466218]]],[[[12.436688266660923,-5.684303887559224],[12.182336866920281,-5.789930515163803],[11.914963006242118,-5.037986748884734],[12.62075971848455,-4.438023369976122],[12.995517205465205,-4.781103203961919],[12.468004184629763,-5.248361504744992],[12.436688266660923,-5.684303887559224]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AL","name":"Albania","type":"Sovereign country","postal":"AL","admin":"Albania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.59024743010491,41.855404161133606],[20.463175083099202,41.51508901627534],[20.999989861747224,40.580003973953978],[20.15001590341052,39.624997666983973],[19.406081984136733,40.250773423822466],[19.540027296637106,41.719986070312757],[19.304486118250793,42.19574514420782],[19.738051385179631,42.688247382165571],[20.52295,42.21787],[20.59024743010491,41.855404161133606]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AE","name":"United Arab Emirates","type":"Sovereign country","postal":"AE","admin":"United Arab Emirates","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[51.579518670463273,24.245497137951105],[51.794389275932872,24.019826158132506],[54.008000929587581,24.121757920828216],[56.070820753814559,26.055464178973981],[56.261041701080956,25.714606431576769],[56.396847365144005,24.924732163995486],[55.886232537668008,24.920830593357447],[55.981213820220461,24.130542914317829],[55.528631626208238,23.933604030853502],[55.006803012924905,22.496947536707136],[52.000733270074335,23.00115448657894],[51.579518670463273,24.245497137951105]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AR","name":"Argentina","type":"Sovereign country","postal":"AR","admin":"Argentina","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-65.5,-55.2],[-68.63335,-54.8695],[-68.634010227583161,-52.63637045887446],[-67.75,-53.85],[-65.05,-54.7],[-65.5,-55.2]]],[[[-64.964892137294584,-22.075861504812352],[-64.377021043542271,-22.798091322523547],[-63.986838141522469,-21.993644301035957],[-62.846468471921554,-22.034985446869456],[-60.84656470400995,-23.880712579038303],[-57.777217169817959,-25.16233977630904],[-57.633660040911138,-25.60365650808167],[-58.618173590719721,-27.123718763947124],[-56.486701626192996,-27.54849903738625],[-55.6958455063982,-27.387837009390822],[-54.788794928595053,-26.621785577096091],[-54.625290696823555,-25.739255466415486],[-54.130049607954419,-25.54763925547725],[-53.62834896504873,-26.124865004177437],[-53.648735317587892,-26.923472588816111],[-55.162286342984601,-27.881915378533421],[-57.625133429582917,-30.216294854454247],[-58.495442064026548,-34.431489760070107],[-57.225829637263644,-35.288026625307893],[-57.362358771378751,-35.977390232081504],[-56.737487352105461,-36.413125909166581],[-56.788285285048346,-36.901571547189334],[-57.749156867083428,-38.183870538079915],[-59.231857062401872,-38.720220228837206],[-62.335956997310149,-38.827707208004369],[-62.145994432205242,-40.676896661136738],[-62.745802781816991,-41.028761488612091],[-63.770494757732536,-41.166789239263665],[-64.732089809819712,-40.802677097335135],[-65.118035244391592,-41.064314874028881],[-64.978560553635845,-42.058000990569326],[-64.30340796574248,-42.359016208669502],[-63.75594784204236,-42.043686618824509],[-63.45805904809589,-42.563138116222362],[-65.181803961839705,-43.495380954767796],[-65.565268927661606,-45.036785577169795],[-66.509965786389358,-45.03962778094585],[-67.293793911392441,-45.551896254255198],[-67.580546434180093,-46.301772963242541],[-66.597066413017274,-47.033924655953811],[-65.641026577401448,-47.236134535511894],[-65.985088263600744,-48.133289076531142],[-67.166178961847663,-48.697337334996945],[-67.816087612566463,-49.869668877970419],[-69.138539191347803,-50.732510267947802],[-68.815561489523532,-51.771104011594105],[-68.149994879820412,-52.349983406127706],[-71.914803839796349,-52.009022305865926],[-72.329403856074038,-51.425956312872408],[-72.30997351753237,-50.677009779666356],[-72.975746832964631,-50.741450290734313],[-73.328050910114484,-50.378785088909872],[-73.415435757120036,-49.318436374712959],[-72.648247443314943,-48.878618259476788],[-72.331160854771952,-48.244238376661826],[-72.447355312780275,-47.738532810253531],[-71.552009446891248,-45.560732924177131],[-71.65931555854533,-44.973688653341441],[-71.222778896759735,-44.784242852559416],[-71.793622606071949,-44.207172133156106],[-71.464056159130507,-43.787611179378331],[-71.915423956983915,-43.408564548517418],[-72.148898078078531,-42.254888197601389],[-71.746803758415467,-42.051386407235995],[-71.915734015577556,-40.832339369470731],[-71.413516608349056,-38.916022230791114],[-70.814664272734717,-38.552995293940739],[-71.121880662709799,-36.658123874662337],[-70.364769253201672,-36.005088799789945],[-70.388049485949097,-35.169687595359449],[-69.817309129501467,-34.193571465798286],[-69.814776984319224,-33.273886000299854],[-70.535068935819453,-31.365010267870289],[-69.919008348251936,-30.336339206668313],[-70.013550381129875,-29.367922865518551],[-69.656130337183157,-28.459141127233693],[-68.295541551370405,-26.89933969493579],[-68.594799770772681,-26.506908868111267],[-68.417652960876126,-24.518554782816878],[-67.328442959244143,-24.025303236590915],[-67.106673550063618,-22.7359245744764],[-66.273339402924847,-21.832310479420684],[-64.964892137294584,-22.075861504812352]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AM","name":"Armenia","type":"Sovereign country","postal":"ARM","admin":"Armenia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[43.582745802592733,41.092143256182567],[44.972480096218078,41.248128567055595],[45.560351189970447,40.812289537105926],[45.35917483905817,40.561503811193461],[45.891907179555091,40.218475653639999],[45.610012241402927,39.899993801425182],[46.483498976432458,39.464154771475535],[46.505719842317973,38.770605373686294],[46.143623081248819,38.741201483712217],[45.739978468616982,39.473999131827128],[43.656436395040942,40.253563951166186],[43.582745802592733,41.092143256182567]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AQ","name":"Antarctica","type":"Indeterminate","postal":"AQ","admin":"Antarctica","sales_rgn":5},"geometry":{"type":"MultiPolygon","coordinates":[[[[-59.572094692611529,-80.040178725096297],[-60.1596557277702,-81.000326837079314],[-64.488125372969762,-80.921933689292558],[-66.29003089055513,-80.25577280061799],[-61.883245612217138,-80.392870375488286],[-60.610119188058405,-79.628679294756125],[-59.572094692611529,-80.040178725096297]]],[[[-159.20818356019765,-79.497059421708727],[-161.12760128481466,-79.634208673011301],[-163.71289567772874,-78.595666605797277],[-163.10580095116381,-78.223337911134294],[-161.24511349184638,-78.380175883140168],[-159.48240454815448,-79.046337579258989],[-159.20818356019765,-79.497059421708727]]],[[[-45.154757656421026,-78.047069600586738],[-43.920827806155756,-78.478102722333261],[-43.333266770997085,-80.026122735512928],[-50.482106899606464,-81.025441583173119],[-54.164259406131606,-80.633527520671578],[-53.98799109558405,-80.222028090331406],[-50.991326463410587,-79.614623305172657],[-48.660616014182523,-78.047017924154446],[-46.662856818211026,-77.831475525065031],[-45.154757656421026,-78.047069600586738]]],[[[-121.21151139385712,-73.500990499006036],[-119.91885127829205,-73.65772511814734],[-118.72414303269191,-73.481353454735199],[-120.23221716370998,-74.088809916326156],[-122.62173539288614,-73.657776794579632],[-122.40624467022903,-73.32461883559391],[-121.21151139385712,-73.500990499006036]]],[[[-125.55956640689531,-73.481353454735199],[-124.03188187726685,-73.873267517236741],[-127.28313045312616,-73.461768086896569],[-126.55847184309721,-73.246225687807168],[-125.55956640689531,-73.481353454735199]]],[[[-98.981549648823901,-71.933334248999785],[-96.787936774466232,-71.952971293270707],[-96.200349901091442,-72.521205342752182],[-100.78345516640921,-72.501619974913552],[-102.33072506387639,-71.89416351332261],[-98.981549648823901,-71.933334248999785]]],[[[-68.451345994730417,-70.955822855766741],[-68.333833787698694,-71.406493021784186],[-68.784297247986984,-72.170735778948625],[-71.075888637970138,-72.50384206150207],[-72.388134121373781,-72.484256693663426],[-71.898499925408288,-72.092342631161884],[-74.190039638959064,-72.366692810199496],[-74.953894822881381,-72.07275726332324],[-75.01262508818121,-71.661257832983068],[-73.230330776650561,-71.151779887017511],[-72.074716559523551,-71.190950622694771],[-71.741791144483187,-69.505782165656797],[-71.173815477163146,-69.035474955368414],[-70.253251512315728,-68.878740336227196],[-68.451345994730417,-70.955822855766741]]],[[[-58.614142829000912,-64.152467130133147],[-60.611927863188697,-64.309201749274436],[-62.022100185785433,-64.799094327401363],[-62.648857794837369,-65.484942321890657],[-62.120078701410705,-66.190325622674706],[-63.745690070232371,-66.503846537389592],[-65.508424852140564,-67.581610209268916],[-65.665081956633287,-67.95388722749945],[-64.783714565679333,-68.678907572554493],[-63.197299770751044,-69.227556254197253],[-61.806661139560589,-70.716767679984471],[-60.69026933454316,-73.166178894187084],[-60.827366909413428,-73.695242207991186],[-61.96336992048569,-74.439847920884887],[-63.295200771727963,-74.576997172187376],[-64.352836473229587,-75.262846781565159],[-69.797723761662837,-76.222994893548176],[-70.600723843046239,-76.634494323888447],[-77.240370246067613,-76.712887471675202],[-76.926978522433586,-77.104801534176744],[-73.656118740519446,-77.908111674153957],[-77.925858120419264,-78.378418884442254],[-78.02378495961247,-79.18183318472822],[-75.360097418911749,-80.259545180175252],[-59.691415574773458,-82.375850111824349],[-58.222487148660917,-83.21843434034335],[-49.761349860215461,-81.729171238123755],[-42.808363409992381,-82.081914564948107],[-40.771433478343596,-81.356894219893221],[-28.549802212018704,-80.337938327962007],[-29.685805223090966,-79.632503350745679],[-29.685805223090966,-79.260226332514975],[-35.639912075328255,-79.456131687333453],[-35.914107225069017,-79.083854669102919],[-35.777009650198721,-78.33924814876498],[-28.882779303491361,-76.673665059565721],[-22.45859778491095,-76.105431010084246],[-17.522981736714172,-75.125697530262499],[-15.701490851290259,-74.498604024400635],[-15.407710333710867,-74.106741638331371],[-16.465320196996373,-73.871613871403412],[-15.446855231171952,-73.146541849916076],[-12.293507656289563,-72.401936137022545],[-10.295774298534155,-71.265416361627302],[-7.416621873392415,-71.696501159806033],[-6.868231573911118,-70.932310079073972],[-4.341667446296867,-71.461373392878073],[-0.659489101555522,-71.226245625950042],[-0.228636847322065,-71.637745056290299],[6.273911980828927,-70.462054545217796],[7.742866245157842,-69.893768819304029],[8.487110223025326,-70.148533630502996],[9.525134718472202,-70.011332702768215],[10.81782067225339,-70.834331563448501],[13.422777947654396,-69.972161967090955],[14.734997592842006,-70.030918070606774],[15.126756626046586,-70.403246765269756],[15.949342075268646,-70.030918070606774],[19.259372592860046,-69.893768819304029],[21.452985467217815,-70.070140482716255],[22.569403110451447,-70.697182312145827],[27.093726434037279,-70.462054545217796],[31.990171746556854,-69.658641052376069],[33.8704187354966,-68.50258758557456],[36.162010125479782,-69.247141622035969],[37.200034620926573,-69.168748474249043],[38.649403517416914,-69.776204935840184],[41.959434035008229,-68.600514424767667],[46.503342726432635,-67.601195577107461],[47.443440382686305,-67.718759460571476],[48.990736118369597,-67.091717631141904],[50.753470900277733,-66.876175232052404],[50.949324578663919,-66.523483581660429],[51.791547072157044,-66.249133402622903],[54.533550245996054,-65.818048604444002],[56.355041131419881,-65.974783223585376],[58.744507684163949,-67.287674662392675],[61.427806430919333,-67.95388722749945],[62.387489455011661,-68.012695007447547],[64.052349074159025,-67.40523854585669],[68.890038283162909,-67.934301859660806],[69.673452996707482,-69.227556254197253],[69.555940789675816,-69.678226420214713],[67.812739699174159,-70.305268249644286],[67.949888950476662,-70.697182312145827],[69.066306593710266,-70.67754526787499],[67.949888950476662,-71.853287455379615],[69.869306675093952,-72.264786885719801],[71.024895054004588,-72.088415222307759],[73.864876743469239,-69.874183451465484],[77.644904412755267,-69.462684021125298],[79.113858677083925,-68.326215922162433],[82.776425815770409,-67.209281514605919],[86.752358839874859,-67.150473734657723],[87.477017449903798,-66.876175232052404],[87.986288690140242,-66.20991099051335],[88.828407830768555,-66.95456837983923],[89.670630324261566,-67.150473734657723],[94.175419956441004,-67.111302998980449],[95.781471795640272,-67.385653178017975],[99.718182407635055,-67.248503926715486],[102.83241092327265,-65.56328379324512],[106.18156050010876,-66.934931335568393],[110.23583499556784,-66.699803568640363],[113.60467329310737,-65.876804707959906],[115.60238081264654,-66.699803568640363],[119.8329236186531,-67.268089294553945],[123.22129560759893,-66.484261169550862],[128.80328047090242,-66.75861134858846],[134.75738732313991,-66.209962666945628],[135.07075320855782,-65.30857065847843],[135.69748497939358,-65.582869161083664],[136.61804894424111,-66.778196716427018],[137.46027143773395,-66.95456837983923],[145.49042728086502,-66.915345967729678],[146.19555219948782,-67.228866882444464],[145.99969852110152,-67.601195577107461],[146.64606733620823,-67.895131123983703],[148.83962853413371,-68.385023702110544],[152.50224734925249,-68.874812927372986],[153.63819868389257,-68.894501648076101],[154.28456749899928,-68.561292012658186],[156.81113162661339,-69.384290873338458],[159.18101281151874,-69.599833272427958],[161.57047936426281,-70.579618428681812],[167.30909549384299,-70.834331563448501],[171.20679039945762,-71.696501159806033],[169.28732099840832,-73.656019795881633],[166.09480268784844,-74.381040140936605],[164.2341927431797,-75.45880381281593],[163.56823856023428,-76.242580261386735],[163.48989708887976,-77.065579122067263],[164.74346398341615,-78.182513529623776],[166.60412560451735,-78.319611104494058],[166.99578128485743,-78.750747579105251],[161.76638471908112,-79.162247816889675],[159.78821089094842,-80.945394789553049],[163.70533613510477,-82.395435479662893],[168.89566531806796,-83.335998223807366],[169.40478152900758,-83.825890801934378],[172.28393395414938,-84.041433201023708],[173.22408328683539,-84.413710219254412],[175.98567182851312,-84.158997084487638],[180.00000000000014,-84.71338],[180.00000000000014,-90.0],[-180.0,-90.0],[-180.0,-84.71338],[-179.0586773346912,-84.139411716649093],[-177.25677181710574,-84.452932631363879],[-175.82988216866252,-84.117914320815672],[-174.38250281481569,-84.534323012223567],[-172.8891055980128,-84.061018568862337],[-169.95122290757143,-83.884646905450126],[-167.02209937240332,-84.570496514827909],[-158.07137956442494,-85.373910007669707],[-155.19225297749929,-85.09955982863211],[-148.5330728830715,-85.609037774597667],[-143.10771847860045,-85.040752048683913],[-142.89227943237563,-84.570496514827909],[-150.06073157448395,-84.296146335790382],[-150.90292822976073,-83.904232273288841],[-153.5862011383002,-83.688689874199355],[-152.66563717345275,-82.454191583178812],[-152.86151669005505,-82.042692152838541],[-156.8374497141595,-81.102129408694253],[-152.09766150613282,-81.004150893068783],[-150.64829260964262,-81.337308852054591],[-146.41774899619185,-80.337938327962007],[-146.77028642473118,-79.926438897621921],[-149.53190080462511,-79.358204848140446],[-155.32937639058576,-79.064269301264204],[-158.05176835837011,-78.025675557617902],[-158.36513424378796,-76.889207458654951],[-156.97457312724595,-77.300758565427515],[-153.74283240457675,-77.065579122067263],[-152.92024695535477,-77.496663920245993],[-151.3337804839943,-77.398737081052801],[-146.10440894899,-76.477759704747058],[-146.49609127499048,-75.733153991853541],[-146.202309949967,-75.380410665029189],[-144.90962399618576,-75.204039001616962],[-144.32203712281108,-75.53719696060277],[-135.21458269569129,-74.302698669582142],[-121.07361283428624,-74.518241068671642],[-117.46980099167121,-74.02834849054463],[-116.21631161178341,-74.243890889633946],[-113.94433142785508,-73.71482757582983],[-112.29908301476259,-74.714198099922413],[-111.26105851931563,-74.420262553046172],[-107.55934648316811,-75.184453633778418],[-104.87607357462866,-74.949325866850458],[-100.64553076862231,-75.302017517242433],[-100.11669999876327,-74.870932719063532],[-101.25270300983553,-74.185083109685834],[-102.54533728718451,-74.106741638331371],[-103.11331295450454,-73.734412943668389],[-103.68128862182439,-72.617530212544153],[-99.137379930400101,-72.911414082988102],[-97.688036872126105,-73.558041280256333],[-96.336594814828914,-73.616849060204359],[-92.439003262078955,-73.166178894187084],[-90.088733283228436,-73.322913513328203],[-89.226951260112941,-72.558722432595957],[-88.42395117872951,-73.009392598613402],[-86.01482174349843,-73.087785746400158],[-85.192236294276569,-73.47969980890187],[-81.470913052074138,-73.851976827132404],[-80.295790981756994,-73.126956482077432],[-76.221879442027074,-73.969540710596419],[-74.890048590784801,-73.871613871403412],[-68.935915900331224,-73.009392598613402],[-67.36906063502559,-72.480329284809301],[-67.251548427993669,-71.637745056290299],[-68.544208543558938,-69.717397155891973],[-67.427842576757513,-68.149844258750221],[-67.741182623959332,-67.326845398069935],[-63.001394415932566,-64.642308031827866],[-62.041685553623978,-64.583551928311948],[-58.594557461162282,-63.388224372968601],[-57.223581712458838,-63.525425300703638],[-58.614142829000912,-64.152467130133147]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TF","name":"Fr. S. Antarctic Lands","type":"Dependency","postal":"TF","admin":"French Southern and Antarctic Lands","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[68.935,-48.625],[70.525,-49.065],[70.56,-49.255],[70.28,-49.71],[68.745,-49.775],[68.935,-48.625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AU","name":"Australia","type":"Country","postal":"AU","admin":"Australia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[145.39797814349484,-40.792548516605891],[146.36412072162372,-41.137695407883342],[148.28906782449602,-40.87543751400213],[148.35986453673584,-42.062445163746446],[147.91405195535381,-43.211522312188492],[147.56456424376401,-42.937688897473862],[146.87034305235497,-43.634597263362096],[146.04837772032042,-43.549744561538887],[144.71807132383063,-41.162551771815714],[144.74375451067968,-40.703975111657712],[145.39797814349484,-40.792548516605891]]],[[[143.56181115129996,-13.763655694232213],[143.92209923723894,-14.548310642152003],[144.56371382057486,-14.171176039285882],[145.37472374896348,-14.984976495018287],[145.48525963763578,-16.285672295804773],[146.38747846901961,-18.958274021075908],[148.84841352762325,-20.391209812097259],[148.71746544819561,-20.633468926681516],[149.67833703023067,-22.342511895438392],[150.07738244038862,-22.122783705333319],[150.48293908101519,-22.556142266533016],[150.72726525289121,-22.402404880464658],[150.89955447815228,-23.462236830338682],[152.85519738180594,-25.267501316023015],[153.13616214417678,-26.07117319102619],[153.09290897034859,-27.26029957449451],[153.56946902894421,-28.110066827102102],[152.89157759013941,-31.640445651985956],[152.45000247620536,-32.550002536755244],[151.70911746643682,-33.041342054986345],[150.32821984273326,-35.67187916437193],[149.99728397033616,-37.425260512035138],[149.42388227762555,-37.77268116633347],[148.30462243061592,-37.809061374666882],[146.3179219911548,-39.03575652441144],[144.87697635312819,-38.417448012039117],[145.03221235573298,-37.896187839510986],[143.60997358619611,-38.809465427405328],[140.63857872941324,-38.019332777662555],[139.99215823787435,-37.402936293285109],[139.57414757706525,-36.138362318670673],[139.0828080588341,-35.732754001611781],[138.12074791885632,-35.612296237939404],[138.44946170466503,-35.127261244447894],[138.20756432510669,-34.384722588845932],[137.71917036351616,-35.076825046531027],[136.82940555231474,-35.260534763328621],[137.89011600153768,-33.640478610978334],[137.81032759007914,-32.900007012668112],[136.37206912653167,-34.094766127256193],[135.98904341038437,-34.890118096660487],[135.20821251845413,-34.478670342752608],[135.23921837782919,-33.947953383114978],[134.08590376193914,-32.848072198214766],[134.27390262261704,-32.617233575166964],[131.32633060112093,-31.495803318001052],[126.14871382050117,-32.215966078420607],[124.22164798390494,-32.959486586236068],[123.65966678273074,-33.890179131812729],[119.89369510302825,-33.976065362281815],[118.02497195848954,-35.064732761374714],[116.62510908413495,-35.025096937806836],[115.02680870977954,-34.196517022438925],[115.04861616420678,-33.623425388322033],[115.71467370001668,-33.259571628554951],[115.68961063035513,-31.612437025683789],[115.16090905157697,-30.601594333622458],[115.04003787644629,-29.461095472940798],[113.33895307826251,-26.116545098578484],[113.77835778204027,-26.549025160429181],[113.44096235560662,-25.621278171493159],[114.23285200404732,-26.298446140245872],[113.39352339076268,-24.384764499613269],[114.14975630092189,-21.755881036061012],[114.22530724493268,-22.517488295178637],[114.6477620789187,-21.829519952076907],[116.71161543179156,-20.70168181730682],[117.44154503791427,-20.746898695562166],[119.25249393115067,-19.952941989829839],[120.85622033089666,-19.683707777589191],[122.24166548064179,-18.197648614171769],[122.31277225147542,-17.254967136303449],[123.01257449757193,-16.405199883695857],[123.43378909718305,-17.268558037996229],[123.85934451710662,-17.069035332917252],[123.50324222218327,-16.596506036040367],[123.81707319549193,-16.111316013251994],[124.25828657439988,-16.327943617419564],[124.37972619028582,-15.567059828353976],[125.68579634003052,-14.230655612853838],[126.12514936737611,-14.347340996968953],[126.14282270721989,-14.095986830301214],[127.06586714081735,-13.817967624570926],[128.35968997610897,-14.869169610252257],[129.62147342337963,-14.969783623924556],[129.40960005098302,-14.420669854391036],[130.33946577364296,-13.357375583553477],[130.18350630098601,-13.107520033422304],[130.617795037967,-12.536392103732467],[131.22349450086003,-12.183648776908115],[132.57529829318312,-12.114040622611014],[132.55721154188106,-11.603012383676685],[131.82469811414367,-11.273781833545101],[132.35722374891142,-11.128519382372644],[135.29849124566803,-12.248606052299053],[136.49247521377166,-11.857208754120393],[136.95162031468502,-12.351958916882737],[136.30540652887512,-13.291229750219898],[135.96175825413414,-13.324509372615893],[136.07761681533256,-13.724278252825783],[135.50018436090321,-14.997740573794431],[140.2152453960783,-17.710804945550066],[140.87546349503927,-17.369068698803943],[141.27409549373883,-16.388870131091608],[141.70218305884467,-15.044921156476931],[141.68699018775081,-12.407614434461138],[142.51526004452498,-10.668185723516643],[143.52212365129989,-12.834358412327433],[143.56181115129996,-13.763655694232213]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AT","name":"Austria","type":"Sovereign country","postal":"A","admin":"Austria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.979666782304037,48.123497015976305],[16.903754103267261,47.714865627628328],[16.340584344150415,47.71290192320123],[16.534267612380376,47.496170966169117],[16.011663852612656,46.683610744811702],[14.632471551174829,46.431817328469549],[12.376485223040817,46.76755910906985],[12.153088006243054,47.115393174826451],[11.048555942436536,46.751358547546339],[9.479969516649021,47.102809963563374],[9.89606814946319,47.580196845075704],[10.402083774465211,47.302487697939164],[10.544504021861627,47.566399237653769],[12.141357456112788,47.703083401065776],[12.932626987365948,47.467645575543997],[12.884102817443903,48.289145819687917],[13.595945672264437,48.877171942737149],[14.338897739324722,48.555305284207208],[15.253415561593982,49.039074205107582],[16.499282667718774,48.785808010445109],[16.960288120194576,48.5969823268506],[16.979666782304037,48.123497015976305]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"AZ","name":"Azerbaijan","type":"Sovereign country","postal":"AZ","admin":"Azerbaijan","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[45.001987339056797,39.740003567049598],[45.739978468617011,39.473999131827156],[46.143623081248819,38.741201483712217],[45.457721795438744,38.874139105783115],[44.952688022650278,39.335764675446427],[44.793989699082005,39.713002631177034],[45.001987339056797,39.740003567049598]]],[[[47.373315464066224,41.219732367511256],[47.815665724484717,41.151416124021353],[48.58435265482629,41.808869533854676],[49.618914829309603,40.572924302729973],[50.392821079312711,40.256561184239104],[49.569202101444802,40.176100979160708],[48.883249139202547,38.320245266262646],[48.010744256386516,38.794014797514535],[48.355529412637935,39.288764960276893],[48.06009524922527,39.582235419262446],[46.505719842317973,38.770605373686266],[46.483498976432458,39.464154771475535],[45.610012241402927,39.899993801425182],[45.891907179555147,40.218475653639985],[44.972480096218163,41.24812856705563],[46.501637404166985,41.064444688474111],[46.145431756378997,41.722802435872637],[46.404950799348825,41.860675157227348],[47.373315464066224,41.219732367511256]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BI","name":"Burundi","type":"Sovereign country","postal":"BI","admin":"Burundi","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[29.339997592900346,-4.499983412294093],[29.024926385216787,-2.839257907730158],[29.632176141078588,-2.917857761246097],[29.938359002407939,-2.348486830254238],[30.469696079232989,-2.413857517103459],[30.752262811004954,-3.35932952231557],[29.753512404099922,-4.452389418153281],[29.339997592900346,-4.499983412294093]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BE","name":"Belgium","type":"Sovereign country","postal":"B","admin":"Belgium","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[3.314971144228537,51.345780951536085],[4.973991326526914,51.475023708698131],[6.15665815595878,50.803721015010581],[6.043073357781111,50.128051662794235],[5.782417433300907,50.09032786722122],[5.674051954784829,49.529483547557504],[4.79922163251581,49.985373033236385],[4.286022983425085,49.907496649772554],[3.123251580425801,50.780363267614575],[2.658422071960274,50.796848049515745],[2.513573032246143,51.148506171261829],[3.314971144228537,51.345780951536085]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BJ","name":"Benin","type":"Sovereign country","postal":"BJ","admin":"Benin","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[2.691701694356254,6.258817246928629],[1.865240512712319,6.142157701029731],[1.664477573258381,9.128590399609379],[0.772335646171484,10.470808213742359],[1.447178175471066,11.547719224488858],[2.848643019226671,12.235635891158267],[3.611180454125559,11.660167141155968],[3.797112257511714,10.734745591673105],[3.705438266625919,10.063210354040208],[2.723792758809509,8.50684540448971],[2.691701694356254,6.258817246928629]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BF","name":"Burkina Faso","type":"Sovereign country","postal":"BF","admin":"Burkina Faso","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-2.827496303712707,9.642460842319778],[-4.779883592131967,9.821984768101743],[-5.404341599946974,10.370736802609146],[-5.220941941743121,11.713858954307227],[-4.006390753587226,13.472485459848116],[-3.10370683431276,13.541266791228594],[-1.066363491205664,14.973815009007765],[0.374892205414682,14.92890818934613],[0.429927605805517,13.988733018443924],[1.024103224297477,12.851825669806574],[2.177107781593776,12.625017808477535],[2.154473504249921,11.940150051313339],[0.899563022474069,10.99733938236426],[-2.940409308270461,10.962690334512558],[-2.827496303712707,9.642460842319778]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BD","name":"Bangladesh","type":"Sovereign country","postal":"BD","admin":"Bangladesh","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[92.672720981825563,22.041238918541254],[92.65225711463799,21.324047552978485],[92.303234490938678,21.475485337809818],[92.36855350135562,20.670883287025347],[91.41708702999766,22.765019029221222],[90.496006300827275,22.805016587815128],[90.272970819055558,21.836367702720111],[89.031961297566227,22.055708319582976],[88.529769728553788,23.631141872649167],[88.699940220090923,24.23371491138856],[88.084422235062419,24.501657212821925],[88.931553989623083,25.238692328384776],[88.209789259802506,25.768065700782714],[88.563049350949768,26.446525580342723],[89.832480910199621,25.965082098895479],[89.920692580121852,25.269749864192178],[92.376201613334814,24.976692816664965],[91.158963250699728,23.503526923104388],[91.706475050832111,22.985263983649187],[91.869927606171316,23.624346421802784],[92.146034783906813,23.627498684172593],[92.672720981825563,22.041238918541254]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BG","name":"Bulgaria","type":"Sovereign country","postal":"BG","admin":"Bulgaria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.657149692482989,44.234923000661283],[22.944832391051847,43.82378530534713],[25.569271681426926,43.688444729174719],[27.242399529740908,44.175986029632405],[28.558081495891997,43.707461656258133],[27.673897739378049,42.577892361006221],[27.99672041190539,42.007358710287789],[27.13573937349048,42.141484890301342],[26.1170418637208,41.826904608724561],[26.106138136507212,41.32889883072778],[25.197201368925448,41.23448598893053],[24.492644891058035,41.583896185872035],[22.952377150166452,41.337993882811148],[22.881373732197432,41.999297186850256],[22.380525750424592,42.320259507815088],[22.986018507588483,43.211161200526966],[22.50015669118028,43.642814439460992],[22.657149692482989,44.234923000661283]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BS","name":"Bahamas","type":"Sovereign country","postal":"BS","admin":"The Bahamas","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-77.53466,23.75975],[-77.78,23.71],[-78.40848,24.57564],[-78.19087,25.2103],[-77.89,25.17],[-77.53466,23.75975]]],[[[-77.82,26.58],[-78.91,26.42],[-78.98,26.79],[-77.85,26.84],[-77.82,26.58]]],[[[-77.0,26.59],[-77.17255,25.87918],[-77.79,27.04],[-77.0,26.59]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BA","name":"Bosnia and Herz.","type":"Sovereign country","postal":"BiH","admin":"Bosnia and Herzegovina","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[19.005486281010121,44.860233669609158],[19.36803,44.863],[19.11761,44.423070000000109],[19.59976,44.03847],[19.454,43.568100000000129],[18.70648,43.20011],[18.56,42.65],[17.674921502358984,43.02856252702361],[15.750026075918981,44.818711656262565],[15.959367303133376,45.233776760430942],[19.005486281010121,44.860233669609158]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BY","name":"Belarus","type":"Sovereign country","postal":"BY","admin":"Belarus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[23.484127638449849,53.912497667041137],[25.536353794056993,54.282423407602529],[25.768432651479799,54.846962592175089],[26.588279249790389,55.167175604871673],[26.494331495883756,55.615106919977634],[28.176709425577997,56.169129950578814],[29.371571893030673,55.670090643936184],[30.87390913262001,55.550976467503411],[30.757533807098721,54.811770941784317],[31.731272820774507,53.794029446012019],[32.693643019346041,53.35142080343212],[31.305200636528014,53.073995876673209],[31.785998162571587,52.101677964885454],[30.927549269338982,52.04235342061439],[30.555117221811457,51.319503485715657],[25.327787713327009,51.910656032918553],[23.527070753684374,51.57845408793024],[23.199493849386187,52.486977444053672],[23.799198846133379,52.691099351606567],[23.484127638449849,53.912497667041137]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BZ","name":"Belize","type":"Sovereign country","postal":"BZ","admin":"Belize","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-89.143080410503316,17.808318996649319],[-88.490122850279349,18.486830552641607],[-88.106812913754382,18.348673610909287],[-88.355428229510565,16.530774237529627],[-88.930612759135272,15.887273464415076],[-89.229121670269279,15.886937567605171],[-89.143080410503316,17.808318996649319]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BO","name":"Bolivia","type":"Sovereign country","postal":"BO","admin":"Bolivia","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-62.846468471921561,-22.034985446869449],[-63.986838141522476,-21.99364430103595],[-64.377021043542257,-22.79809132252354],[-64.964892137294612,-22.075861504812327],[-66.273339402924847,-21.83231047942072],[-67.106673550063604,-22.735924574476417],[-67.828179897722734,-22.872918796482175],[-68.757167121033746,-20.372657972904463],[-68.442225104430918,-19.405068454671429],[-68.966818406841867,-18.981683444904107],[-69.59042375352405,-17.580011895419332],[-68.959635382753305,-16.50069793057127],[-69.389764166934711,-15.660129082911652],[-69.160346645774951,-15.323973890853019],[-69.339534674747014,-14.953195489158832],[-68.948886684836594,-14.453639418193283],[-68.665079718689626,-12.561300144097173],[-69.529678107364958,-10.951734307502194],[-68.271253628193264,-11.014521172736821],[-66.646908331962806,-9.931331475466863],[-65.338435228116424,-9.761987806846392],[-65.402281460213032,-11.566270440317155],[-64.316352912031604,-12.461978041232193],[-63.196498786050569,-12.627032565972435],[-61.713204311760776,-13.489202162330052],[-60.503304002511136,-13.775954685117659],[-60.251148851142936,-15.07721892665932],[-60.542965664295153,-15.093910414289596],[-60.158389655179036,-16.258283786690086],[-58.24121985536668,-16.299573256091293],[-58.280804002502251,-17.271710300366017],[-57.734558274961003,-17.552468357007768],[-57.498371141170992,-18.174187513911292],[-57.949997321185826,-19.400004164306822],[-57.853801642474508,-19.969995212486189],[-58.166392381408045,-20.176700941653678],[-58.183471442280506,-19.868399346600363],[-59.115042487206111,-19.356906019775401],[-61.786326463453769,-19.633736667562964],[-62.685057135657885,-22.249029229422387],[-62.846468471921561,-22.034985446869449]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BR","name":"Brazil","type":"Sovereign country","postal":"BR","admin":"Brazil","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.625133429582959,-30.216294854454262],[-55.162286342984572,-27.881915378533463],[-53.648735317587892,-26.92347258881609],[-53.628348965048744,-26.124865004177472],[-54.13004960795439,-25.547639255477254],[-54.625290696823576,-25.739255466415514],[-54.292959560754518,-24.021014092710729],[-55.400747239795422,-23.956935316668805],[-55.797958136606908,-22.356929620047822],[-57.937155727761294,-22.090175876557172],[-57.8706739976178,-20.732687676681952],[-58.166392381408045,-20.176700941653678],[-57.853801642474508,-19.969995212486189],[-57.949997321185826,-19.400004164306822],[-57.498371141170992,-18.174187513911292],[-57.734558274961003,-17.552468357007768],[-58.280804002502251,-17.271710300366017],[-58.24121985536668,-16.299573256091293],[-60.158389655179036,-16.258283786690086],[-60.542965664295153,-15.093910414289596],[-60.251148851142936,-15.07721892665932],[-60.503304002511136,-13.775954685117659],[-61.713204311760776,-13.489202162330052],[-63.196498786050569,-12.627032565972435],[-64.316352912031604,-12.461978041232193],[-65.402281460213032,-11.566270440317155],[-65.338435228116424,-9.761987806846392],[-66.646908331962806,-9.931331475466863],[-68.271253628193264,-11.014521172736821],[-70.548685675728407,-11.009146823778465],[-70.481893886991173,-9.490118096558845],[-71.302412278921537,-10.079436130415374],[-72.18489071316985,-10.053597914269432],[-72.563033006465645,-9.520193780152717],[-73.226713426390162,-9.462212823121234],[-73.015382656532552,-9.032833347208062],[-73.987235480429661,-7.523829847853065],[-73.724486660441642,-6.91859547285064],[-73.120027431923603,-6.629930922068239],[-72.891927659787257,-5.274561455916981],[-70.794768846302304,-4.251264743673303],[-69.893635219996625,-4.298186944194328],[-69.420485805932231,-1.122618503426409],[-70.020655890570055,-0.185156345219539],[-70.015565761989308,0.541414292804205],[-69.252434048119056,0.602650865070075],[-69.21863766140018,0.985676581217433],[-69.80459672715773,1.089081122233466],[-69.816973232691623,1.714805202639624],[-67.868565029558837,1.692455145673392],[-67.537810024674698,2.03716278727633],[-67.065048183852497,1.130112209473225],[-66.325765143484958,0.724452215982012],[-65.548267381437569,0.78925446207603],[-63.368788011311665,2.200899562993129],[-64.269999152265797,2.497005520025567],[-64.368494432214106,3.797210394705246],[-64.816064012294021,4.056445217297423],[-63.093197597899106,3.770571193858785],[-60.966893276601539,4.536467596856639],[-60.601179165271944,4.91809804933213],[-60.733574184803722,5.200277207861901],[-60.213683437731333,5.244486395687602],[-60.11100236676738,4.574966538914083],[-59.538039923731233,3.958802598481938],[-59.974524909084558,2.755232652188056],[-59.646043667221257,1.786893825686789],[-59.030861579002647,1.317697658692723],[-58.540012986878295,1.268088283692521],[-57.335822923396904,1.948537705895759],[-55.995698004771754,1.817667141116601],[-55.973322109589375,2.510363877773017],[-52.939657151894956,2.124857692875636],[-51.657797410678889,4.156232408053029],[-51.317146369010857,4.203490505383954],[-50.508875291533656,1.901563828942457],[-49.974075893745059,1.736483465986069],[-49.947100796088712,1.046189683431223],[-50.699251268096916,0.222984117021682],[-50.388210822132137,-0.078444512536819],[-48.62056677915632,-0.235489190271821],[-48.584496629416591,-1.237805271005001],[-47.824956427590635,-0.5816179337628],[-44.905703090990414,-1.551739597178134],[-44.417619187993665,-2.137750339367976],[-44.581588507655781,-2.691308282078524],[-43.418791266440195,-2.383110039889793],[-41.472656826328247,-2.912018324397117],[-39.978665330554037,-2.873054294449041],[-37.2232521225352,-4.820945733258917],[-35.597795783010469,-5.149504489770649],[-35.23538896334756,-5.464937432480247],[-34.729993455533034,-7.343220716992967],[-35.128212042774223,-8.996401462442286],[-38.673887091616521,-13.057652276260619],[-39.267339240056401,-17.867746270420483],[-39.760823330227637,-19.599113457927409],[-40.774740770010339,-20.904511814052423],[-40.944756232250612,-21.937316989837811],[-41.754164191238225,-22.370675551037458],[-41.98828426773656,-22.970070489190896],[-44.647811855637812,-23.351959323827842],[-47.648972337420659,-24.885199069927722],[-48.495458136577703,-25.877024834905654],[-48.474735887228654,-27.175911960561891],[-48.8884574041574,-28.674115085567884],[-53.373661668498244,-33.768377780900764],[-53.650543992718099,-33.20200408298183],[-53.209588995971544,-32.727666110974724],[-53.787951626182192,-32.047242526987624],[-56.976025763564735,-30.109686374636127],[-57.625133429582959,-30.216294854454262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BN","name":"Brunei","type":"Sovereign country","postal":"BN","admin":"Brunei","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[114.20401655482837,4.525873928236806],[114.59996137904872,4.900011298029966],[115.45071048386981,5.447729803891534],[115.34746097215066,4.316636053887009],[114.8695573263154,4.348313706881925],[114.65959598191353,4.007636826997754],[114.20401655482837,4.525873928236806]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BT","name":"Bhutan","type":"Sovereign country","postal":"BT","admin":"Bhutan","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[91.696656528696678,27.771741848251665],[92.103711785859744,27.452614040633208],[92.033483514375092,26.838310451763562],[89.744527622438852,26.719402981059957],[88.83564253128938,27.098966376243762],[89.475810174521115,28.042758897406397],[90.015828891971182,28.296438503527217],[91.696656528696678,27.771741848251665]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"BW","name":"Botswana","type":"Sovereign country","postal":"BW","admin":"Botswana","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[25.649163445750162,-18.536025892818991],[27.296504754350508,-20.391519870690999],[27.724747348753255,-20.499058526290391],[28.021370070108617,-21.485975030200585],[29.43218834810904,-22.091312758067588],[27.119409620886245,-23.574323011979775],[26.485753208123299,-24.616326592713104],[25.941652052522159,-24.696373386333221],[25.664666375437719,-25.486816094669713],[24.211266717228796,-25.670215752873574],[23.312096795350186,-25.26868987396572],[21.605896030369394,-26.726533705351756],[20.889609002371738,-26.828542982695915],[20.758609246511838,-25.86813648855145],[19.895767856534434,-24.767790215760591],[19.895457797940679,-21.849156996347869],[20.88113406747587,-21.814327080983148],[20.910641310314535,-18.252218926672022],[23.196858351339301,-17.869038181227786],[23.579005568137717,-18.281261081620059],[25.084443393664571,-17.661815687737374],[25.649163445750162,-18.536025892818991]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CF","name":"Central African Rep.","type":"Sovereign country","postal":"CF","admin":"Central African Republic","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[15.279460483469109,7.421924546737969],[17.964929640380888,7.890914008002866],[18.911021762780507,8.630894680206353],[18.812009718509273,8.982914536978598],[20.059685499764271,9.012706000194854],[21.000868361096167,9.475985215691509],[21.723821648859456,10.567055568885976],[22.864165480244225,11.142395127807546],[23.554304233502194,10.089255275915308],[23.459012892355986,8.954285793488893],[25.114932488716789,7.825104071479174],[26.465909458123235,5.946717434101871],[27.37422610851749,5.233944403500061],[25.650455356557472,5.256087754737123],[24.805028924262416,4.89724660890235],[24.410531040146253,5.10878408448913],[23.297213982850138,4.609693101414223],[22.841479526468106,4.710126247573484],[22.405123732195538,4.029160061047321],[19.467783644293149,5.03152781821278],[18.542982211997781,4.201785183118318],[18.453065219809929,3.504385891123349],[17.133042433346304,3.728196519379452],[16.012852410555354,2.267639675298085],[15.862732374747482,3.013537298998983],[14.478372430080469,4.732605495620447],[14.536560092841114,6.226958726420691],[15.279460483469109,7.421924546737969]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CH","name":"Switzerland","type":"Sovereign country","postal":"CH","admin":"Switzerland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.59422610844635,47.52505809182027],[9.479969516649021,47.102809963563374],[10.442701450246631,46.893546250997431],[10.363378126678612,46.483571275409858],[9.182881707403055,46.440214748716983],[8.966305779667806,46.036931871111193],[8.316629672894379,46.163642483090861],[7.273850945676657,45.776947740250776],[6.500099724970426,46.429672756529442],[6.022609490593538,46.272989813820473],[6.037388950229001,46.725778713561866],[6.736571079138059,47.541801255882845],[8.522611932009767,47.830827541691292],[9.59422610844635,47.52505809182027]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CL","name":"Chile","type":"Sovereign country","postal":"CL","admin":"Chile","sales_rgn":2},"geometry":{"type":"MultiPolygon","coordinates":[[[[-68.634010227583161,-52.636370458874367],[-68.633349999999893,-54.8695],[-66.95992,-54.89681],[-68.148629999999855,-55.61183],[-71.00568,-55.05383],[-73.2852,-53.957519999999889],[-74.66253,-52.83749],[-71.10773,-54.07433],[-70.26748,-52.93123],[-69.345649999999893,-52.5183],[-68.634010227583161,-52.636370458874367]]],[[[-68.219913092711238,-21.494346612231837],[-67.828179897722663,-22.872918796482182],[-67.106673550063618,-22.7359245744764],[-66.985233934177643,-22.986348565362832],[-67.328442959244143,-24.025303236590915],[-68.417652960876126,-24.518554782816878],[-68.594799770772681,-26.506908868111267],[-68.295541551370405,-26.89933969493579],[-69.656130337183157,-28.459141127233693],[-70.013550381129875,-29.367922865518551],[-69.919008348251936,-30.336339206668313],[-70.535068935819453,-31.365010267870289],[-69.814776984319224,-33.273886000299854],[-69.817309129501467,-34.193571465798286],[-70.388049485949097,-35.169687595359449],[-70.364769253201672,-36.005088799789945],[-71.121880662709799,-36.658123874662337],[-70.814664272734717,-38.552995293940739],[-71.413516608349056,-38.916022230791114],[-71.915734015577556,-40.832339369470731],[-71.746803758415467,-42.051386407235995],[-72.148898078078531,-42.254888197601389],[-71.915423956983915,-43.408564548517418],[-71.464056159130507,-43.787611179378331],[-71.793622606071949,-44.207172133156106],[-71.222778896759735,-44.784242852559416],[-71.65931555854533,-44.973688653341441],[-71.552009446891248,-45.560732924177131],[-72.447355312780275,-47.738532810253531],[-72.331160854771952,-48.244238376661826],[-72.648247443314943,-48.878618259476788],[-73.415435757120036,-49.318436374712959],[-73.328050910114484,-50.378785088909872],[-72.975746832964631,-50.741450290734313],[-72.30997351753237,-50.677009779666356],[-72.329403856074038,-51.425956312872408],[-71.914803839796349,-52.009022305865926],[-68.571545376241346,-52.299443855346262],[-69.461284349226645,-52.291950772663931],[-70.845101691354529,-52.899200528525725],[-71.006332160105245,-53.833252042201352],[-71.429794684520942,-53.856454760300387],[-74.946763475225168,-52.262753588419031],[-75.608015102831956,-48.673772881871798],[-75.182769741502142,-47.71191944762316],[-74.126580980104706,-46.939253431995098],[-75.644395311165454,-46.64764332457203],[-74.692153693323064,-45.763976332380977],[-74.351709357384266,-44.103044122087894],[-73.240356004515206,-44.454960625995625],[-72.71780392117978,-42.383355808278992],[-73.388899909138246,-42.117532240569574],[-73.701335618774863,-43.365776462579745],[-74.331943122032584,-43.224958184584409],[-73.677099372029971,-39.942212823243125],[-73.217592536090677,-39.258688653318515],[-73.58806087919109,-37.156284681956024],[-73.166717088499297,-37.123780206044358],[-71.438450486929923,-32.418899428030826],[-71.668720669222438,-30.920644626592519],[-71.370082567007728,-30.095682061485007],[-71.489894375276464,-28.861442152625912],[-70.905123867461583,-27.640379734001201],[-70.091245897080682,-21.393319187101227],[-70.372572394477743,-18.347975355708883],[-69.590423753523993,-17.58001189541929],[-68.966818406841838,-18.981683444904093],[-68.442225104430946,-19.405068454671422],[-68.757167121033717,-20.372657972904477],[-68.219913092711238,-21.494346612231837]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CN","name":"China","type":"Country","postal":"CN","admin":"China","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[110.33918786015155,18.678395087147607],[109.47520958866372,18.197700913968617],[108.65520796105616,18.507681993071401],[108.62621748254045,19.367887885001977],[109.11905561730802,19.821038519769388],[110.78655073450224,20.077534491450081],[111.01005130416465,19.695929877190736],[110.33918786015155,18.678395087147607]]],[[[127.65740726126242,49.760270494172943],[129.39781782442046,49.440600084015443],[130.58229332898239,48.729687404976119],[130.98728152885386,47.790132351261406],[132.50667199109952,47.788969631534883],[135.02631147678673,48.478229885443909],[133.09712690646646,45.144066473972174],[131.88345421765959,45.321161607436437],[131.0252120301561,44.967953192721581],[131.28855512911557,44.111519680348266],[131.14468794161488,42.929989732426947],[130.63386640840983,42.903014634770557],[130.64001590385246,42.395009467125277],[129.99426720593326,42.9853868678438],[129.59666873587949,42.424981797854599],[128.05221520397234,41.994284572917991],[128.20843305879075,41.466771552082548],[126.8690832866499,41.816569322266162],[124.26562462778534,39.928493353834142],[121.05455447803288,38.897471014962917],[121.58599490772249,39.360853583324143],[121.37675703337268,39.750261338859531],[122.16859500538104,40.422442531896053],[121.64035851449356,40.946389878903318],[119.63960208544907,39.898055935214217],[119.02346398323303,39.252333075511103],[118.04274865119791,39.204273993479688],[117.53270226447708,38.737635809884097],[118.05969852098971,38.061475531561058],[118.87814985562838,37.897325344385905],[118.91163618375353,37.448463853498737],[119.70280236214208,37.15638865818508],[120.82345747282366,37.870427761377982],[122.35793745329849,37.454484157860691],[122.51999474496583,36.930614325501836],[121.10416385303304,36.65132904718044],[119.15120812385859,34.909859117160465],[120.22752485563373,34.36033193616862],[121.90814578663006,31.69217438407469],[121.89191938689035,30.949351508095106],[121.26425744027333,30.676267401648715],[121.50351932178475,30.142914943964257],[122.0921138855891,29.832520453403163],[121.68443851123848,28.225512600206685],[121.12566124886646,28.135673122667185],[118.65687137255455,24.547390855400238],[115.89073530483515,22.782873236578098],[114.76382734584624,22.66807404224167],[114.15254682826568,22.223760077396207],[113.80677981980077,22.54833974862143],[113.24107791550162,22.051367499270469],[110.78546552942416,21.397143866455338],[110.44403934127169,20.341032619706397],[109.88986128137358,20.282457383703445],[109.62765506392466,21.008227037026728],[109.86448815311834,21.395050970947523],[107.04342003787266,21.811898912029903],[106.56727339073538,22.218204860924743],[106.72540327354849,22.794267889898379],[105.32920942588666,23.352063300056983],[104.4768583516645,22.819150092046925],[102.70699222210018,22.708795070887703],[101.65201785686159,22.318198757409561],[101.80311974488293,21.174366766845054],[101.27002566936002,21.20165192309517],[101.15003299357826,21.849984442629022],[100.41653771362738,21.558839423096657],[99.240898878987224,22.118314317304566],[99.531992222087439,22.949038804612599],[98.898749220782832,23.142722072842588],[98.660262485755794,24.063286037690006],[97.604719679762042,23.897404690033056],[97.724609002679159,25.083637193293043],[98.67183800658924,25.918702500913497],[98.682690057370536,27.508812160750665],[97.911987746169444,28.335945136014374],[96.248833449287844,28.411030992134471],[96.58659061074755,28.830979519154369],[96.117678664131034,29.45280202892252],[95.404802280664654,29.03171662039216],[94.565990431702943,29.277438055939967],[92.503118931043645,27.896876329046449],[91.696656528696707,27.771741848251622],[90.015828891971211,28.296438503527185],[88.814248488320601,27.299315904239393],[88.730325962278556,28.086864732367559],[88.120440708369955,27.876541652939579],[85.82331994013154,28.203575954698749],[84.234579705750178,28.839893703724698],[83.898992954446754,29.32022614187764],[82.327512648450892,30.115268052688208],[81.5258044778748,30.422716986608663],[81.11125613802929,30.183480943313413],[79.721366815107132,30.882714748654735],[78.738894484374015,31.515906073527049],[78.458446486326039,32.618164374312727],[79.176128777995558,32.483779812137755],[79.208891636068557,32.994394639613745],[78.811086460285736,33.506198025032404],[78.912268914713223,34.321936346975775],[77.837450799474624,35.494009507787808],[76.192848341785719,35.898403428687857],[75.896897414050187,36.666806138651879],[74.980002475895418,37.419990139305895],[74.864815708316797,38.378846340481601],[73.928852166646408,38.505815334622724],[73.675379266254851,39.431236884105573],[73.960013055318456,39.660008449861721],[73.82224368682833,39.893973497063143],[74.776862420556057,40.366425279291633],[76.526368035797447,40.427946071935139],[76.904484490877138,41.066485907549662],[78.187196893226059,41.185315863604814],[78.543660923175281,41.58224254003872],[80.119430373051415,42.123940741538235],[80.180150180994389,42.920067857426858],[80.866206496101228,43.180362046881015],[79.96610639844144,44.917516994804629],[82.458925815769049,45.539649563166506],[83.180483839860557,47.330031236350749],[85.164290399113241,47.000955715516113],[85.720483839870695,47.452969468773091],[85.768232863308384,48.455750637396903],[86.598776483103364,48.549181626980612],[87.751264276076682,49.297197984405472],[88.013832228551706,48.599462795600601],[90.280825636763922,47.693549099307916],[90.970809360724985,46.888146063822944],[90.585768263718336,45.719716091487498],[90.94553958533433,45.28607330991025],[93.48073367714133,44.975472113620015],[95.306875441471533,44.241330878265472],[96.349395786527822,42.725635280928657],[100.84586551310829,42.663804429691425],[104.96499393109346,41.597409572916348],[106.12931562706169,42.134327704428898],[110.41210330611531,42.871233628911028],[111.8295878438814,43.743118394539493],[111.34837690637946,44.457441718110061],[111.87330610560028,45.102079372735119],[113.46390669154422,44.808893134127118],[115.98509647020015,45.727235012386018],[117.42170128791426,46.672732855814218],[119.66326989143877,46.692679958678951],[119.77282392789758,47.048058783550147],[118.06414269416675,48.066730455103738],[117.29550744025747,47.697709052107399],[115.74283735561576,47.726544501326288],[115.48528201707305,48.135382595403456],[116.67880089728621,49.888531399121405],[117.87924441942639,49.510983384796958],[119.28846072802585,50.142882798862047],[119.27936567594239,50.582907619827296],[120.73819135954201,51.964115302124554],[120.725789015792,52.516226304730822],[120.17708865771689,52.753886216841209],[121.00308475147025,53.251401068731241],[123.57150678924089,53.458804429734641],[125.9463489116462,52.79279857035695],[127.65740726126242,49.760270494172943]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CI","name":"C�te d\'Ivoire","type":"Sovereign country","postal":"CI","admin":"Ivory Coast","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-2.856125047202397,4.994475816259509],[-4.649917364917911,5.168263658057086],[-7.712159389669751,4.364565944837722],[-7.570152553731688,5.707352199725904],[-8.60288021486862,6.467564195171661],[-8.299048631208564,8.316443589710303],[-7.832100389019188,8.575704250518626],[-8.229337124046822,10.129020290563901],[-6.850506557635057,10.138993841996239],[-6.205222947606431,10.524060777219134],[-6.050452032892267,10.096360785355444],[-5.404341599946974,10.370736802609146],[-4.330246954760384,9.610834865757141],[-3.511898972986273,9.90032623945622],[-2.827496303712707,9.642460842319778],[-2.562189500326241,8.219627793811483],[-3.244370083011262,6.250471503113502],[-2.856125047202397,4.994475816259509]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CM","name":"Cameroon","type":"Sovereign country","postal":"CM","admin":"Cameroon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[13.075822381246752,2.267097072759015],[9.649158155972629,2.283866075037736],[9.795195753629457,3.073404445809117],[8.500287713259695,4.771982937026849],[9.233162876023044,6.444490668153335],[10.118276808318257,7.03876963950988],[11.058787876030351,6.644426784690594],[11.745774366918511,6.981382961449754],[13.572949659894562,10.798565985553566],[14.415378859116684,11.572368882692075],[14.577177768622533,12.085360826053503],[14.181336297266794,12.483656927943116],[14.495787387762846,12.859396267137329],[14.893385857816526,12.219047756392584],[14.923564894274961,10.891325181517473],[15.467872755605271,9.982336737503431],[14.171466098699028,10.021378282099931],[13.954218377344006,9.549494940626687],[14.97999555833769,8.796104234243472],[15.436091749745771,7.692812404811973],[14.536560092841114,6.226958726420691],[14.478372430080469,4.732605495620447],[15.862732374747482,3.013537298998983],[15.940918816805066,1.727672634280296],[13.075822381246752,2.267097072759015]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CD","name":"Dem. Rep. Congo","type":"Sovereign country","postal":"DRC","admin":"Democratic Republic of the Congo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[30.833859897593811,3.509165961110341],[30.773346795380039,2.339883327642127],[31.174149204235817,2.204465236821264],[29.875778842902491,0.597379868976304],[29.024926385216787,-2.839257907730158],[29.419992710088167,-5.939998874539434],[30.740015496551791,-8.340007419470915],[29.00291222506047,-8.407031752153472],[28.449871046672826,-9.164918308146085],[28.673681674928929,-9.605924981324932],[28.372253045370428,-11.793646742401393],[29.34154788586909,-12.360743910372413],[29.61600141777123,-12.178894545137311],[29.699613885219492,-13.257226657771831],[28.934285922976837,-13.248958428605135],[28.155108676879987,-12.272480564017897],[27.388798862423783,-12.132747491100666],[27.164419793412463,-11.608748467661075],[26.553087599399618,-11.924439792532127],[25.752309604604733,-11.784965101776358],[25.418118116973204,-11.330935967659961],[24.314516228947952,-11.26282642989927],[24.257155389103989,-10.951992689663657],[22.155268182064308,-11.084801120653772],[21.728110792739699,-7.290872491081302],[20.514748162526502,-7.29960580813863],[20.601822950938299,-6.939317722199682],[20.091621534920648,-6.943090101756994],[19.41750247567316,-7.155428562044299],[19.016751743249671,-7.988245944860132],[17.472970004962235,-8.0685511206417],[16.326528354567046,-5.877470391466268],[12.322431674863511,-6.10009246177966],[12.182336866920252,-5.789930515163839],[12.63161176926579,-4.991271254092936],[13.600234816144678,-4.50013844159097],[14.144956088933299,-4.510008640158716],[14.582603794013181,-4.97023894615014],[16.006289503654301,-3.535132744972529],[15.972803175529151,-2.712392266453612],[16.407091912510054,-1.740927015798683],[17.638644646889986,-0.424831638189247],[18.542982211997781,4.201785183118318],[19.467783644293149,5.03152781821278],[22.405123732195538,4.029160061047321],[22.841479526468106,4.710126247573484],[23.297213982850138,4.609693101414223],[24.410531040146253,5.10878408448913],[24.805028924262416,4.89724660890235],[25.650455356557472,5.256087754737123],[27.37422610851749,5.233944403500061],[27.979977247842811,4.408413397637375],[29.71599531425602,4.600804755060025],[30.833859897593811,3.509165961110341]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CG","name":"Congo","type":"Sovereign country","postal":"CG","admin":"Republic of Congo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[12.995517205465177,-4.781103203961884],[12.620759718484493,-4.438023369976136],[11.91496300624209,-5.037986748884791],[11.093772820691925,-3.978826592630547],[11.855121697648116,-3.426870619321051],[11.478038771214303,-2.765618991714241],[12.495702752338161,-2.391688327650243],[12.575284458067642,-1.948511244315135],[13.109618767965628,-2.428740329603514],[13.99240726080771,-2.4708049454891],[14.299210239324566,-1.998275648612214],[14.316418491277744,-0.552627455247048],[13.843320753645656,0.038757635901149],[14.276265903386957,1.196929836426619],[13.282631463278818,1.314183661296881],[13.075822381246752,2.267097072759015],[15.940918816805066,1.727672634280296],[16.537058139724138,3.198254706226279],[17.133042433346304,3.728196519379452],[18.453065219809929,3.504385891123349],[17.638644646889986,-0.424831638189247],[16.407091912510054,-1.740927015798683],[15.972803175529151,-2.712392266453612],[16.006289503654301,-3.535132744972529],[14.582603794013181,-4.97023894615014],[14.144956088933299,-4.510008640158716],[12.995517205465177,-4.781103203961884]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CO","name":"Colombia","type":"Sovereign country","postal":"CO","admin":"Colombia","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-75.373223232713855,-0.15203175212045],[-76.292314419240967,0.416047268064119],[-77.424984300430395,0.395686753741117],[-78.99093522817104,1.691369940595251],[-78.617831387023713,1.766404120283056],[-78.427610439757331,2.629555568854215],[-77.931542527971487,2.696605739752926],[-77.12768978545526,3.849636135265357],[-77.496271938777028,4.087606105969428],[-77.318815070286746,5.84535411216136],[-77.881571417945253,7.223771267114785],[-77.753413865861404,7.709839789252143],[-77.242566494440084,7.935278225125444],[-77.353360765273862,8.67050466555807],[-76.836673957003569,8.638749497914716],[-75.674600185840063,9.443248195834599],[-75.480425991503353,10.618990383339309],[-74.906895107711989,11.083044745320322],[-73.414763963500292,11.22701528568548],[-71.754090135368642,12.437303168177309],[-71.399822353791706,12.376040757695293],[-71.13746110704588,12.112981879113505],[-71.331583624950298,11.776284084515808],[-71.973921678338286,11.60867157637712],[-72.905286017534706,10.450344346554772],[-73.304951544880055,9.151999823437606],[-72.788729824500393,9.085027167187334],[-72.439862230097958,8.405275376820029],[-72.444487270788073,7.423784898300482],[-71.960175747348643,6.991614895043539],[-70.093312954372422,6.96037649172311],[-69.389479946557117,6.099860541198837],[-67.341439581965574,6.095468044454023],[-67.823012254493548,4.503937282728899],[-67.303173183853445,3.31845408773718],[-67.809938117123707,2.820655015469569],[-67.18129431829307,2.250638129074062],[-66.87632585312258,1.253360500489336],[-67.065048183852497,1.130112209473225],[-67.537810024674698,2.03716278727633],[-67.868565029558837,1.692455145673392],[-69.816973232691623,1.714805202639624],[-69.80459672715773,1.089081122233466],[-69.21863766140018,0.985676581217433],[-69.252434048119056,0.602650865070075],[-70.015565761989308,0.541414292804205],[-70.020655890570055,-0.185156345219539],[-69.420485805932231,-1.122618503426409],[-69.893635219996625,-4.298186944194328],[-70.692682054309714,-3.742872002785859],[-70.047708502874855,-2.725156345229699],[-70.813475714791963,-2.256864515800743],[-73.070392218707241,-2.308954359550953],[-73.6595035468346,-1.260491224781134],[-75.106624518520078,-0.05720549886486],[-75.373223232713855,-0.15203175212045]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CR","name":"Costa Rica","type":"Sovereign country","postal":"CR","admin":"Costa Rica","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-82.965783047197363,8.225027980985985],[-83.508437262694315,8.446926581247283],[-83.632641567707836,9.051385809765321],[-84.975660366541334,10.086723130733006],[-85.11092342806532,9.55703969974131],[-85.66078650586698,9.933347479690724],[-85.659313727546674,10.754330959511719],[-85.941725430021762,10.895278428587801],[-85.561851976244199,11.217119248901597],[-83.895054490885954,10.726839097532446],[-83.655611741861577,10.938764146361422],[-82.546196255203483,9.566134751824677],[-82.932890998043575,9.476812038608173],[-82.719183112300527,8.925708726431495],[-82.965783047197363,8.225027980985985]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CU","name":"Cuba","type":"Sovereign country","postal":"CU","admin":"Cuba","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-82.268151211257063,23.188610744717707],[-80.618768683581195,23.105980129483001],[-79.281485968732085,22.399201565027056],[-78.347434455056487,22.512166246017088],[-76.523824835908556,21.206819566324373],[-75.59822241891267,21.016624457274133],[-75.671060350228061,20.735091254148003],[-74.17802486845126,20.284627793859741],[-74.961594611292938,19.923435370355691],[-77.755480923153073,19.855480861891877],[-77.085108405246743,20.413353786698792],[-78.137292243141587,20.739948838783434],[-78.719866502584011,21.598113511638434],[-82.16999182811864,22.387109279870753],[-81.795001797192668,22.636964830001958],[-82.775897996740852,22.688150336187064],[-84.052150845053262,21.910575059491254],[-84.974911058273108,21.89602814380109],[-83.778239915690193,22.788118394455694],[-82.268151211257063,23.188610744717707]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"N. Cyprus","type":"Sovereign country","postal":"CN","admin":"Northern Cyprus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.731780226377452,35.140025946588437],[32.946960890440806,35.386703396133697],[34.576473829900465,35.671595567358793],[33.973616570783463,35.058506374648005],[32.731780226377452,35.140025946588437]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CY","name":"Cyprus","type":"Sovereign country","postal":"CY","admin":"Cyprus","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.973616570783463,35.058506374648005],[32.979827101378447,34.571869411755443],[32.25666710788596,35.103232326796629],[33.190977003723049,35.17312470147138],[33.973616570783463,35.058506374648005]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"CZ","name":"Czech Rep.","type":"Sovereign country","postal":"CZ","admin":"Czech Republic","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.960288120194576,48.5969823268506],[15.253415561593982,49.039074205107582],[14.338897739324722,48.555305284207208],[12.521024204161193,49.547415269562734],[12.240111118222558,50.266337795607285],[14.307013380600637,51.117267767941414],[15.016995883858669,51.10667409932158],[16.238626743238569,50.697732652379841],[16.176253289462267,50.422607326857907],[16.719475945714436,50.215746568393541],[16.868769158605659,50.47397370055603],[17.554567091551121,50.362145901076417],[17.649445021238989,50.049038397819956],[18.392913852622172,49.988628648470751],[18.853144158613617,49.496229763377642],[16.960288120194576,48.5969823268506]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DE","name":"Germany","type":"Sovereign country","postal":"D","admin":"Germany","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.921906365609232,54.983104153048032],[9.9395797054529,54.596641954153256],[10.950112338920519,54.363607082733154],[10.93946699386845,54.00869334575259],[12.518440382546714,54.470370591847995],[13.647467075259499,54.075510972705899],[14.353315463934166,53.248171291713106],[14.074521111719434,52.981262518925348],[15.016995883858783,51.106674099321708],[14.307013380600665,51.117267767941371],[12.240111118222671,50.266337795607228],[12.521024204161336,49.547415269562748],[13.595945672264577,48.877171942737164],[12.884102817443875,48.28914581968786],[12.932626987366064,47.467645575543997],[12.141357456112871,47.703083401065783],[10.544504021861599,47.566399237653798],[10.402083774465325,47.302487697939171],[8.522611932009795,47.830827541691349],[7.466759067422288,47.620581976911922],[8.099278598674857,49.01778351500343],[6.186320428094177,49.463802802114515],[5.988658074577813,51.851615709025054],[6.589396599970826,51.852029120483394],[6.842869500362383,52.228440253297549],[7.092053256873896,53.144043280644894],[6.905139601274129,53.482162177130647],[7.936239454793963,53.748295803433791],[8.121706170289485,53.527792466844289],[8.800734490604668,54.020785630908904],[8.526229282270208,54.962743638725158],[9.921906365609232,54.983104153048032]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DJ","name":"Djibouti","type":"Sovereign country","postal":"DJ","admin":"Djibouti","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[43.081226027200159,12.699638576707116],[43.286381463398925,11.974928290245884],[42.715873650896526,11.735640570518342],[43.145304803242141,11.462039699748857],[42.776851841000962,10.92687856693442],[41.755570000000205,11.050910000000101],[41.661760000000129,11.6312],[42.35156000000012,12.542230000000131],[43.081226027200159,12.699638576707116]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DK","name":"Denmark","type":"Country","postal":"DK","admin":"Denmark","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[12.690006137755631,55.609990953180784],[12.089991082414741,54.800014553437933],[11.043543328504228,55.364863796604254],[10.903913608451631,55.779954738988749],[12.370904168353292,56.111407375708836],[12.690006137755631,55.609990953180784]]],[[[10.912181837618363,56.458621324277914],[9.649984978889307,55.469999498102055],[9.921906365609175,54.98310415304806],[8.526229282270236,54.962743638724987],[8.12031090661759,55.517722683323626],[8.089976840862249,56.540011705137601],[8.543437534223386,57.110002753316905],[10.580005730846153,57.73001658795485],[10.250000034230226,56.89001618105047],[10.912181837618363,56.458621324277914]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DO","name":"Dominican Rep.","type":"Sovereign country","postal":"DO","admin":"Dominican Republic","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-71.712361416292964,19.714455878167357],[-69.950815192327582,19.647999986240009],[-69.769250047470081,19.293267116772441],[-69.222125820579876,19.313214219637103],[-69.254346076113848,19.015196234609874],[-68.317943284768972,18.612197577381693],[-68.689315965434517,18.205142320218613],[-69.952933926051543,18.428306993071061],[-70.517137213814223,18.184290879788833],[-70.669298468697633,18.426885891183034],[-71.400209927033899,17.598564357976599],[-71.945112067335558,18.616900132720261],[-71.701302659782499,18.785416978424053],[-71.712361416292964,19.714455878167357]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"DZ","name":"Algeria","type":"Sovereign country","postal":"DZ","admin":"Algeria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[11.999505649471613,23.47166840259645],[5.677565952180686,19.601206976799716],[3.158133172222705,19.057364203360038],[3.1466610042539,19.693578599521445],[2.06099083823392,20.142233384679486],[1.823227573259032,20.610809434486043],[-8.684399786809053,27.395744126896005],[-8.674116176782974,28.841288967396579],[-5.242129278982787,30.000443020135592],[-4.859646165374471,30.501187649043846],[-3.690441046554696,30.896951605751156],[-3.647497931320146,31.637294012980675],[-1.30789913573787,32.262888902306102],[-1.124551153966308,32.651521511357132],[-2.169913702798624,35.16839630791668],[-1.208602871089056,35.714848741187097],[1.466918572606545,36.605647081034405],[5.320120070017794,36.716518866516623],[6.261819695672613,37.110655015606739],[8.420964389691676,36.946427313783161],[8.140981479534304,34.65514598239379],[7.524481642292244,34.09737641045146],[7.612641635782182,33.344114895148962],[9.055602654668149,32.102691962201291],[9.805634392952413,29.42463837332339],[9.716285841519749,26.512206325785698],[9.319410841518163,26.094324856057455],[10.303846876678362,24.379313259370917],[10.771363559622927,24.562532050061751],[11.999505649471613,23.47166840259645]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EC","name":"Ecuador","type":"Sovereign country","postal":"EC","admin":"Ecuador","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-80.302560594387216,-3.404856459164713],[-79.770293341780928,-2.65751189535964],[-79.986559210922422,-2.220794366061014],[-80.368783942369248,-2.685158786635788],[-80.967765469064361,-2.246942640800704],[-80.933659023751716,-1.057454522306358],[-80.583370327461267,-0.906662692878683],[-80.090609707342111,0.768428859862397],[-78.855258755188714,1.380923773601822],[-77.668612840470445,0.825893052570962],[-77.424984300430395,0.395686753741117],[-76.292314419240967,0.416047268064119],[-75.373223232713855,-0.15203175212045],[-75.233722703741947,-0.911416924649529],[-75.544995693652041,-1.56160979574588],[-76.635394253226721,-2.608677666843818],[-77.837904832658609,-3.003020521663103],[-78.639897223612337,-4.547784112164074],[-79.205289069317729,-4.959128513207389],[-79.624979214176179,-4.454198093283495],[-80.442241990872162,-4.425724379090674],[-80.302560594387216,-3.404856459164713]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EG","name":"Egypt","type":"Sovereign country","postal":"EG","admin":"Egypt","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.9226,29.50133],[33.92136,27.6487],[32.32046,29.76043],[34.10455,26.14227],[35.69241,23.92671],[35.52598,23.10244],[36.86623,22.0],[25.0,22.0],[25.0,29.238654529533459],[24.70007,30.04419],[24.80287,31.08929],[25.16482,31.56915],[26.49533,31.58568],[28.91353,30.87005],[30.97693,31.55586],[31.68796,31.4296],[31.96041,30.9336],[32.19247,31.26034],[33.7734,30.96746],[34.26544,31.21936],[34.9226,29.50133]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ER","name":"Eritrea","type":"Sovereign country","postal":"ER","admin":"Eritrea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[42.35156000000012,12.542230000000131],[40.8966,14.118640000000141],[40.026218702969175,14.519579169162284],[39.0994,14.74064],[38.51295,14.50547],[37.906070000000113,14.959430000000168],[37.59377,14.2131],[36.42951,14.42211],[36.852530000000115,16.95655],[38.410089959473225,17.998307399970315],[39.26611006038803,15.922723496967251],[43.081226027200159,12.699638576707116],[42.35156000000012,12.542230000000131]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ES","name":"Spain","type":"Sovereign country","postal":"E","admin":"Spain","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-9.034817674180246,41.880570583659676],[-8.984433152695672,42.592775173506269],[-9.392883673530648,43.026624660812701],[-7.97818966310831,43.748337714200993],[-1.901351284177764,43.422802028978339],[-1.502770961910528,43.034014390630432],[0.338046909190581,42.57954600683955],[0.701590610363894,42.795734361332606],[1.826793247087153,42.343384711265692],[2.985998976258458,42.473015041669861],[3.039484083680549,41.892120266276905],[2.091841668312185,41.226088568683096],[0.810524529635188,41.014731960609339],[-0.278711310212941,39.30997813573272],[0.111290724293838,38.73851430923304],[-0.467123582349103,38.292365831041153],[-0.683389451490598,37.642353827457825],[-1.438382127274849,37.443063666324221],[-2.146452602538119,36.674144192037289],[-4.368900926114719,36.677839056946155],[-5.377159796561458,35.946850083961465],[-5.866432257500904,36.029816596006057],[-6.520190802425404,36.942913316387319],[-7.453725551778092,37.097787583966067],[-7.537105475281024,37.428904323876239],[-7.029281175148796,38.075764065089771],[-7.374092169616318,38.373058580064921],[-7.098036668313128,39.030072740223787],[-7.498632371439726,39.629571031241809],[-7.066591559263529,39.711891587882775],[-6.851126674822552,41.111082668617527],[-6.389087693700915,41.381815497394655],[-6.668605515967657,41.883386949219584],[-8.013174607769912,41.790886135417125],[-8.263856980817792,42.28046865495034],[-9.034817674180246,41.880570583659676]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EE","name":"Estonia","type":"Sovereign country","postal":"EST","admin":"Estonia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[24.312862583114622,57.793423570376973],[24.428927850042161,58.383413397853289],[24.061198357853186,58.257374579493408],[23.426560092876684,58.612753404364625],[23.339795363058645,59.187240302153384],[25.864189080516638,59.611090399811332],[28.13169925305175,59.300825100330925],[27.420166456824944,58.724581203844238],[27.716685825315722,57.791899115624361],[27.288184848751513,57.474528306703832],[25.164593540149269,57.970156968815189],[24.312862583114622,57.793423570376973]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ET","name":"Ethiopia","type":"Sovereign country","postal":"ET","admin":"Ethiopia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[37.906070000000113,14.959430000000168],[38.51295,14.50547],[39.0994,14.74064],[40.026250000000118,14.51959],[41.59856,13.452090000000112],[42.35156000000012,12.542230000000131],[41.661760000000129,11.6312],[41.755570000000205,11.050910000000101],[42.776851841000962,10.92687856693442],[42.55876,10.57258000000013],[43.67875,9.18358000000012],[46.94834,7.99688],[47.78942,8.003],[44.9636,5.001620000000116],[43.66087,4.95755],[41.855083092644122,3.918911920483765],[41.171800000000133,3.91909],[40.768480000000125,4.257020000000125],[39.559384258765931,3.422060000000215],[38.120915000000139,3.598605],[36.855093238008237,4.447864127672858],[36.159078632855653,4.447864127672858],[35.817447662353629,4.776965663462022],[35.817447662353629,5.338232082790853],[35.298007118233102,5.506],[34.70702,6.594220000000121],[33.568290000000104,7.71334],[32.954180000000235,7.784970000000101],[33.294800000000123,8.35458],[33.825500000000147,8.37916],[34.25745,10.63009],[35.863630000000171,12.57828],[36.42951,14.42211],[37.59377,14.2131],[37.906070000000113,14.959430000000168]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FI","name":"Finland","type":"Country","postal":"FIN","admin":"Finland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[28.591929559043194,69.064776923286658],[28.445943637818658,68.364612942164044],[29.97742638522061,67.698297024192655],[29.054588657352326,66.944286200621931],[30.21765,65.80598],[29.544429559046989,64.948671576590485],[30.444684686003711,64.20445343693909],[30.035872430142717,63.552813625738551],[31.516092156711125,62.867687486412891],[31.139991082490894,62.357692776124409],[28.069997592895277,60.503516547275837],[22.869694858499457,59.846373196036225],[21.322244093519316,60.720169989659524],[21.544866163832694,61.705329494871791],[21.059211053153689,62.60739329695874],[21.536029493910803,63.18973501245587],[25.398067661243942,65.111426500093742],[25.294043003040404,65.534346421970454],[23.565879754335583,66.396050930437426],[23.539473097434438,67.93600861273525],[20.645592889089528,69.106247260200874],[21.244936150810673,69.370443020293081],[22.356237827247412,68.841741441514912],[24.735679152126725,68.64955678982146],[25.689212680776365,69.092113755969038],[26.179622023226244,69.825298977326142],[27.732292107867863,70.164193020296253],[29.015572950971972,69.766491197377988],[28.591929559043194,69.064776923286658]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FJ","name":"Fiji","type":"Sovereign country","postal":"FJ","admin":"Fiji","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[178.3736,-17.33992],[178.71806,-17.62846],[178.55271,-18.15059],[177.38146,-18.16432],[177.28504,-17.72465],[177.67087000000012,-17.38114],[178.3736,-17.33992]]],[[[179.36414266196428,-16.801354076946851],[178.72505936299709,-17.012041674368021],[178.59683859511708,-16.63915],[180.00000000000014,-16.06713266364244],[180.00000000000014,-16.55521656663916],[179.36414266196428,-16.801354076946851]]],[[[-179.91736938476527,-16.501783135649362],[-180.0,-16.06713266364244],[-179.79332010904861,-16.020882256741231],[-179.91736938476527,-16.501783135649362]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FK","name":"Falkland Is.","type":"Dependency","postal":"FK","admin":"Falkland Islands","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-61.2,-51.85],[-60.0,-51.25],[-59.15,-51.5],[-58.55,-51.1],[-57.75,-51.55],[-58.05,-51.9],[-59.4,-52.2],[-59.85,-51.85],[-60.7,-52.3],[-61.2,-51.85]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"FR","name":"France","type":"Country","postal":"F","admin":"France","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[-52.556424730018392,2.504705308437053],[-53.418465135295264,2.053389187016038],[-53.554839240113495,2.334896551925965],[-54.088062506717279,2.105556545414629],[-54.524754197799751,2.311848863123785],[-54.011503872276819,3.622569891774859],[-54.478632981979217,4.896755682795643],[-53.958044603070931,5.756548163267809],[-52.882141282754077,5.409850979021599],[-51.82334286152593,4.565768133966145],[-51.657797410678882,4.156232408053029],[-52.556424730018392,2.504705308437053]]],[[[9.560016310269134,42.152491970379572],[9.229752231491773,41.380006822264448],[8.775723097375362,41.583611965494441],[8.54421268070783,42.256516628583086],[9.390000848028905,43.009984849614739],[9.560016310269134,42.152491970379572]]],[[[3.588184441755715,50.378992418003577],[4.286022983425141,49.907496649772554],[8.099278598674772,49.017783515003373],[7.466759067422231,47.620581976911865],[6.736571079138088,47.541801255882888],[6.037388950228973,46.725778713561908],[6.022609490593567,46.272989813820516],[6.500099724970454,46.429672756529442],[6.843592970414562,45.991146552100673],[7.096652459347837,45.333098863295874],[6.749955275101712,45.028517971367592],[7.007562290076663,44.254766750661389],[7.549596388386163,44.127901109384823],[7.435184767291844,43.693844916349178],[6.529245232783069,43.128892320318357],[4.556962517931396,43.399650987311588],[3.10041059735272,43.075200507167125],[2.985998976258486,42.473015041669896],[1.826793247087181,42.343384711265657],[0.701590610363922,42.795734361332649],[0.338046909190581,42.579546006839564],[-1.502770961910471,43.034014390630489],[-1.901351284177736,43.422802028978339],[-1.384225226232957,44.022610378590173],[-1.193797573237362,46.014917710954876],[-2.963276129559574,47.570326646507965],[-4.491554938159482,47.954954332056417],[-4.592349819344747,48.684160468126947],[-3.295813971357745,48.901692409859635],[-1.616510789384932,48.644421291694584],[-1.933494025063254,49.776341864615773],[-0.98946895995536,49.347375800160876],[1.338761020522753,50.127173163445264],[1.6390010921385,50.946606350297515],[2.513573032246171,51.148506171261857],[2.658422071960331,50.79684804951566],[3.588184441755715,50.378992418003577]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GA","name":"Gabon","type":"Sovereign country","postal":"GA","admin":"Gabon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[11.093772820691925,-3.978826592630547],[9.405245395554971,-2.144313246269043],[8.830086704146424,-0.779073581550037],[9.492888624721985,1.010119533691494],[11.285078973036462,1.057661851400013],[11.276449008843713,2.261050930180872],[12.951333855855609,2.32161570882694],[13.282631463278818,1.314183661296881],[14.276265903386957,1.196929836426619],[13.843320753645656,0.038757635901149],[14.316418491277744,-0.552627455247048],[14.299210239324566,-1.998275648612214],[13.99240726080771,-2.4708049454891],[13.109618767965628,-2.428740329603514],[12.575284458067642,-1.948511244315135],[12.495702752338161,-2.391688327650243],[11.478038771214303,-2.765618991714241],[11.855121697648116,-3.426870619321051],[11.093772820691925,-3.978826592630547]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GB","name":"United Kingdom","type":"Country","postal":"GB","admin":"United Kingdom","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[-5.661948614921897,54.554603176483852],[-6.197884894220977,53.867565009163343],[-7.572167934591079,54.059956366585993],[-7.366030646178785,54.595840969452695],[-7.572167934591079,55.131622219454897],[-6.733847011736145,55.172860012423797],[-5.661948614921897,54.554603176483852]]],[[[-3.005004848635281,58.635000108466329],[-4.073828497728016,57.553024807355257],[-1.959280564776918,57.684799709699519],[-2.219988165689301,56.870017401753529],[-3.119003058271119,55.973793036515474],[-2.085009324543023,55.909998480851272],[-1.11499101399221,54.624986477265395],[-0.4304849918542,54.464376125702159],[0.469976840831777,52.929999498091973],[1.681530795914739,52.739520168664001],[1.559987827164377,52.099998480836007],[1.050561557630914,51.806760565795685],[1.449865349950301,51.289427802121963],[0.550333693045502,50.765738837275876],[-2.489997524414378,50.500018622431242],[-2.956273972984036,50.696879991247016],[-3.617448085942328,50.228355617872722],[-4.542507900399244,50.341837063185665],[-5.245023159191135,49.959999904981089],[-5.776566941745301,50.159677639356829],[-4.309989793301838,51.210001125689161],[-3.414850633142123,51.42600861266925],[-4.984367234710874,51.593466091510976],[-5.267295701508886,51.991400458374585],[-4.222346564134853,52.301355699261364],[-4.770013393564113,52.840004991255626],[-4.579999152026915,53.495003770555172],[-3.092079637047107,53.404440822963551],[-2.945008510744344,53.984999701546684],[-3.630005458989331,54.615012925833014],[-4.844169073903004,54.790971177786844],[-5.082526617849226,55.061600653699372],[-4.719112107756644,55.508472601943481],[-5.047980922862109,55.78398550070753],[-5.58639767091114,55.311146145236819],[-5.644998745130181,56.275014960344805],[-6.149980841486354,56.785009670633542],[-5.786824713555291,57.818848375064647],[-5.009998745127575,58.630013332750053],[-3.005004848635281,58.635000108466329]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GE","name":"Georgia","type":"Sovereign country","postal":"GE","admin":"Georgia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[41.554084100110657,41.535656236327569],[41.453470086438386,42.64512339941794],[40.32139448422032,43.128633938156845],[40.076964959479767,43.553104153002316],[42.39439456560882,43.220307929042633],[43.931199985536836,42.554973863284772],[45.470279168485717,42.502780666669977],[46.404950799348825,41.860675157227305],[46.145431756379018,41.72280243587258],[46.637908156120581,41.181672675128226],[45.217426385281584,41.411451931314048],[43.582745802592733,41.092143256182567],[42.619548781104491,41.583172715819941],[41.554084100110657,41.535656236327569]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GH","name":"Ghana","type":"Sovereign country","postal":"GH","admin":"Ghana","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[1.060121697604927,5.928837388528876],[-1.964706590167594,4.710462144383371],[-2.856125047202397,4.994475816259509],[-3.244370083011262,6.250471503113502],[-2.562189500326241,8.219627793811483],[-2.940409308270461,10.962690334512558],[0.023802524423701,11.018681748900804],[0.712029249686879,8.312464504423829],[0.570384148774849,6.914358628767189],[1.060121697604927,5.928837388528876]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GN","name":"Guinea","type":"Sovereign country","postal":"GN","admin":"Guinea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-8.439298468448698,7.686042792181738],[-9.208786383490846,7.313920803247953],[-9.755342169625834,8.541055202666925],[-10.505477260774668,8.348896389189605],[-10.622395188835041,9.267910061068278],[-11.11748124840733,10.045872911006285],[-12.425928514037565,9.835834051955956],[-13.246550258832515,8.903048610871508],[-15.130311245168173,11.040411688679526],[-14.685687221728898,11.527823798056488],[-13.743160773157413,11.811269029177412],[-13.700476040084325,12.586182969610194],[-11.513942836950591,12.442987575729418],[-11.456168585648271,12.076834214725338],[-11.03655595543826,12.211244615116515],[-10.165213792348837,11.844083563682744],[-9.127473517279583,12.308060411015333],[-8.376304897484914,11.393645941610629],[-8.620321010767128,10.810890814655183],[-8.282357143578281,10.792597357623846],[-8.029943610048619,10.206534939001713],[-8.309616461612251,9.789531968622441],[-7.832100389019188,8.575704250518626],[-8.299048631208564,8.316443589710303],[-8.439298468448698,7.686042792181738]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GM","name":"Gambia","type":"Sovereign country","postal":"GM","admin":"Gambia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-16.841524624081273,13.151393947802561],[-16.713728807023472,13.594958604379855],[-15.39877031092446,13.860368760630919],[-14.046992356817482,13.794067898000449],[-13.844963344772408,13.505041612192002],[-16.841524624081273,13.151393947802561]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GW","name":"Guinea-Bissau","type":"Sovereign country","postal":"GW","admin":"Guinea Bissau","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-15.130311245168173,11.040411688679526],[-16.085214199273565,11.52459402103824],[-16.677451951554573,12.384851589401052],[-13.700476040084325,12.586182969610194],[-13.743160773157413,11.811269029177412],[-14.685687221728898,11.527823798056488],[-15.130311245168173,11.040411688679526]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GQ","name":"Eq. Guinea","type":"Sovereign country","postal":"GQ","admin":"Equatorial Guinea","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.492888624721985,1.010119533691494],[9.305613234096256,1.160911363119183],[9.649158155972629,2.283866075037736],[11.276449008843713,2.261050930180872],[11.285078973036462,1.057661851400013],[9.492888624721985,1.010119533691494]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GR","name":"Greece","type":"Sovereign country","postal":"GR","admin":"Greece","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[23.699980096133004,35.705004380835533],[24.24666507334868,35.368022365860156],[26.290002882601726,35.299990342747918],[26.164997592887659,35.004995429009796],[24.724982130642303,34.91998769788961],[23.514978468528113,35.279991563450977],[23.699980096133004,35.705004380835533]]],[[[26.604195590936285,41.562114569661105],[26.056942172965506,40.824123440100834],[23.714811232200816,40.687129218095123],[24.407998894964066,40.124992987624097],[23.899967889102584,39.96200552017558],[23.3429993018608,39.960997829745793],[22.813987664488963,40.476005153966554],[22.849747755634809,39.659310818025773],[23.350027296652598,39.190011298167263],[22.973099399515547,38.970903225249657],[24.025024855248944,38.21999298761645],[24.040011020613605,37.655014553369426],[23.115002882589152,37.920011298162223],[23.409971958111072,37.409990749657396],[22.774971958108637,37.305010077456558],[23.15422529469862,36.422505804992056],[21.670026482843696,36.844986477194198],[21.120034213961333,38.310323391262727],[20.15001590341052,39.624997666984029],[21.020040317476429,40.84272695572588],[24.492644891058035,41.58389618587205],[25.197201368925533,41.234485988930658],[26.106138136507184,41.328898830727837],[26.117041863720914,41.826904608724732],[26.604195590936285,41.562114569661105]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GL","name":"Greenland","type":"Country","postal":"GL","admin":"Greenland","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[-46.76379,82.62796],[-43.40644,83.22516],[-39.89753,83.18018],[-38.62214,83.54905],[-27.10046,83.51966],[-20.84539,82.72669],[-22.69182,82.34165],[-31.9,82.2],[-24.84448,81.78697],[-22.90328,82.09317],[-22.07175,81.73449],[-23.16961,81.15271],[-15.76818,81.91245],[-12.77018,81.71885],[-12.20855,81.29154],[-16.85,80.35],[-20.04624,80.17708],[-17.73035,80.12912],[-19.70499,78.75128],[-19.67353,77.63859],[-18.47285,76.98565],[-21.67944,76.62795],[-19.83407,76.09808],[-19.59896,75.24838],[-20.66818,75.15585],[-19.37281,74.29561],[-21.59422,74.22382],[-20.43454,73.81713],[-20.76234,73.46436],[-23.56593,73.30663],[-22.31311,72.62928],[-22.29954,72.18409],[-24.27834,72.59788],[-24.79296,72.3302],[-22.13281,71.46898],[-21.75356,70.66369],[-23.53603,70.471],[-25.54341,71.43094],[-25.20135,70.75226],[-26.36276,70.22646],[-22.34902,70.12946],[-27.74737,68.47046],[-31.77665,68.12078],[-34.20196,66.67974],[-36.35284,65.9789],[-39.81222,65.45848],[-40.66899,64.83997],[-40.68281,64.13902],[-41.1887,63.48246],[-42.81938,62.68233],[-42.41666,61.90093],[-43.3784,60.09772],[-44.7875,60.03676],[-46.26364,60.85328],[-48.26294,60.85843],[-51.63325,63.62691],[-52.14014,64.27842],[-52.27659,65.1767],[-53.66166,66.09957],[-53.30161,66.8365],[-53.96911,67.18899],[-52.9804,68.35759],[-51.47536,68.72958],[-50.87122,69.9291],[-53.45629,69.283625],[-54.68336,69.61003],[-54.75001,70.28932],[-54.35884,70.821315],[-51.39014,70.56978],[-54.00422,71.54719],[-55.83468,71.65444],[-54.71819,72.58625],[-57.32363,74.71026],[-58.59679,75.09861],[-58.58516,75.51727],[-61.26861,76.10238],[-68.50438,76.06141],[-71.40257,77.00857],[-66.76397,77.37595],[-73.297,78.04419],[-73.15938,78.43271],[-65.7107,79.39436],[-65.3239,79.75814],[-68.02298,80.11721],[-67.15129,80.51582],[-62.23444,81.3211],[-62.65116,81.77042],[-57.20744,82.19074],[-54.13442,82.19962],[-53.04328,81.88833],[-50.39061,82.43883],[-44.523,81.6607],[-46.9007,82.19979],[-46.76379,82.62796]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GT","name":"Guatemala","type":"Sovereign country","postal":"GT","admin":"Guatemala","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-90.095554572290979,13.735337632700734],[-91.689746670279135,14.126218166556455],[-92.227750006869826,14.538828640190928],[-92.229248623406278,15.25144664149586],[-91.747960171255926,16.066564846251723],[-90.464472622422662,16.069562079324655],[-90.438866950222035,16.410109768128095],[-91.453921271515156,17.252177232324172],[-91.002269253284211,17.25465770107418],[-91.001519945015957,17.81759491624571],[-89.143080410503316,17.808318996649319],[-89.229121670269279,15.886937567605171],[-88.225022752622024,15.727722479713904],[-89.154810960633569,15.06641917567481],[-89.145535041037178,14.678019110569082],[-90.095554572290979,13.735337632700734]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"GY","name":"Guyana","type":"Sovereign country","postal":"GY","admin":"Guyana","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-59.758284878159195,8.367034816924047],[-58.482962205628063,7.347691351750697],[-58.454876064677421,6.832787380394464],[-57.147436489476888,5.973149929219161],[-57.307245856339506,5.073566595882227],[-57.914288906472137,4.812626451024414],[-58.044694383360678,4.060863552258383],[-57.60156897645787,3.334654649260685],[-57.28143347840971,3.333491929534119],[-56.539385748914555,1.899522609866921],[-57.335822923396904,1.948537705895759],[-58.540012986878295,1.268088283692521],[-59.646043667221257,1.786893825686789],[-59.974524909084558,2.755232652188056],[-59.538039923731233,3.958802598481938],[-60.11100236676738,4.574966538914083],[-59.980958624904886,5.014061184098139],[-60.733574184803722,5.200277207861901],[-61.410302903881956,5.959068101419618],[-61.159336310456482,6.696077378766319],[-60.295668097562398,7.043911444522919],[-60.637972785063766,7.414999904810856],[-60.5505879380582,7.779602972846178],[-59.758284878159195,8.367034816924047]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HN","name":"Honduras","type":"Sovereign country","postal":"HN","admin":"Honduras","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-87.316654425795491,12.984685777229004],[-87.79311113152653,13.384480495655168],[-87.859515347021613,13.893312486217098],[-88.503997972349623,13.845485948130943],[-89.353325975282814,14.424132798719086],[-89.15481096063354,15.066419175674866],[-88.225022752621953,15.727722479714032],[-84.983721889978824,15.995923163308703],[-83.147219000974133,14.99582916916421],[-84.449335903648603,14.621614284722511],[-84.924500698572331,14.790492865452336],[-85.801294725268519,13.836054999237604],[-86.096263800790609,14.038187364147234],[-86.755086636079625,13.754845485890939],[-86.733821784191491,13.2630925562014],[-87.316654425795491,12.984685777229004]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HR","name":"Croatia","type":"Sovereign country","postal":"HR","admin":"Croatia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[18.829838087650046,45.908877671891844],[19.390475701584592,45.236515611342384],[19.005486281010121,44.860233669609158],[15.959367303133376,45.233776760430942],[15.750026075918981,44.818711656262565],[17.674921502358984,43.02856252702361],[18.56,42.65],[18.450016310304818,42.479991360029317],[16.015384555737683,43.507215481127218],[15.174453973052096,44.243191229827914],[15.376250441151797,44.317915350922078],[14.901602410550879,45.076060289076111],[14.258747592839995,45.233776760430942],[13.952254672917036,44.802123521496867],[13.656975538801191,45.136935126315961],[13.715059848697251,45.500323798192426],[15.327674594797429,45.452316392593332],[15.768732944408612,46.238108222023527],[16.564808383864943,46.503750922219808],[17.630066359129557,45.951769110694102],[18.829838087650046,45.908877671891844]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HT","name":"Haiti","type":"Sovereign country","postal":"HT","admin":"Haiti","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-73.189790615517623,19.915683905511912],[-71.712361416292964,19.714455878167357],[-71.701302659782499,18.785416978424053],[-71.945112067335558,18.616900132720261],[-71.708304816358051,18.044997056546094],[-73.922433234335656,18.030992743395004],[-74.458033616824778,18.342549953682706],[-74.369925299767132,18.664907538319412],[-72.694937099890637,18.445799465401862],[-72.334881557897006,18.668421535715254],[-72.784104783810278,19.483591416903408],[-73.415022345661754,19.639550889560283],[-73.189790615517623,19.915683905511912]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"HU","name":"Hungary","type":"Sovereign country","postal":"HU","admin":"Hungary","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.202298211337364,46.852385972676963],[16.534267612380376,47.496170966169117],[16.340584344150415,47.71290192320123],[16.903754103267261,47.714865627628328],[16.979666782304037,48.123497015976305],[17.857132602620027,47.758428860050373],[20.801293979584926,48.623854071642384],[22.085608351334855,48.422264309271789],[22.710531447040495,47.882193915389408],[22.099767693782837,47.672439276716702],[21.021952345471249,46.316087958351901],[18.456062452882861,45.759481106136136],[16.202298211337364,46.852385972676963]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ID","name":"Indonesia","type":"Sovereign country","postal":"INDO","admin":"Indonesia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[120.71560875863045,-10.239581394087864],[120.2950142762069,-10.258649997603527],[118.96780846565471,-9.557969252158031],[119.90030968636162,-9.361340427287516],[120.77550174365675,-9.969675388227458],[120.71560875863045,-10.239581394087864]]],[[[124.43595014861941,-10.140000909061442],[123.45998904835503,-10.239994805546175],[123.98000898650812,-9.290026950724695],[124.96868248911622,-8.892790215697048],[125.0885201356011,-9.393173109579323],[124.43595014861941,-10.140000909061442]]],[[[117.90001834520777,-8.095681247594925],[118.87845991422213,-8.28068287519983],[119.1265067892231,-8.705824883665073],[116.74014082241663,-9.032936700072639],[117.08373742072533,-8.457157891476541],[117.63202436734215,-8.449303073768192],[117.90001834520777,-8.095681247594925]]],[[[122.90353722543611,-8.094234307490737],[122.75698286345633,-8.649807631060639],[119.92439090380961,-8.810417982623875],[119.92092858284613,-8.444858900591072],[120.71509199430758,-8.236964613480865],[121.34166873584658,-8.536739597206022],[122.90353722543611,-8.094234307490737]]],[[[108.62347863162896,-6.777673841990676],[110.53922732955331,-6.877357679881683],[110.75957563684594,-6.465186455921753],[112.61481123255638,-6.946035658397591],[112.97876834518812,-7.59421314863458],[114.47893517462117,-7.776527601760279],[115.70552697150109,-8.370806573116866],[114.56451134649652,-8.751816908404834],[113.4647335144609,-8.348947442257426],[108.27776329959633,-7.766657403192582],[106.45410200401616,-7.354899590690948],[106.28062422081231,-6.924899997590202],[105.36548628135554,-6.85141611087117],[106.05164594932708,-5.8959188777945],[107.26500857954019,-5.954985039904059],[108.48684614464926,-6.421984958525769],[108.62347863162896,-6.777673841990676]]],[[[134.72462446506668,-6.214400730009288],[134.21013390516893,-6.895237725454706],[134.11277550673103,-6.142467136259015],[134.49962527886791,-5.445042006047899],[134.72462446506668,-6.214400730009288]]],[[[127.24921512258894,-3.45906503663889],[126.87492272349888,-3.79098276124958],[126.18380211802733,-3.607376397316557],[125.98903364471929,-3.177273451351326],[127.00065148326499,-3.12931772218441],[127.24921512258894,-3.45906503663889]]],[[[130.4713440288518,-3.09376433676762],[130.8348360535928,-3.858472181822762],[129.99054650280814,-3.446300957862817],[127.89889122936236,-3.393435967628193],[128.13587934785281,-2.843650404474914],[130.4713440288518,-3.09376433676762]]],[[[134.1433679546478,-1.151867364103595],[134.42262739475305,-2.769184665542383],[135.4576029806947,-3.367752780779114],[136.29331424371881,-2.30704233155609],[137.44073774632753,-1.703513278819372],[138.32972741104479,-1.702686455902651],[141.00021040259188,-2.600151055515624],[141.0338517600139,-9.117892754760419],[140.14341515519257,-8.297167657100957],[139.12776655492812,-8.096042982620944],[138.88147667862498,-8.380935153846096],[137.61447391169284,-8.411682631059762],[138.0390991558352,-7.597882175327356],[138.66862145401481,-7.320224704623072],[137.92783979711086,-5.393365573756],[135.16459760959972,-4.462931410340772],[133.6628804871979,-3.538853448097527],[132.98395551974735,-4.112978610860282],[132.75378869031923,-3.311787204607072],[131.98980431531621,-2.820551039240456],[133.78003095920351,-2.47984832114021],[133.69621178602617,-2.214541517753688],[132.23237348849423,-2.212526136894326],[131.83622195854471,-1.617161960459598],[130.94283979708283,-1.432522067880797],[130.51955814018007,-0.937720228686075],[132.3801164084168,-0.369537855636978],[133.98554813042844,-0.780210463060442],[134.1433679546478,-1.151867364103595]]],[[[125.24050052297159,1.419836127117605],[124.43703535369738,0.427881171058971],[123.68550499887672,0.235593166500877],[120.18308312386276,0.23724681233422],[120.04086958219548,-0.519657891444851],[120.93590538949073,-1.408905938323372],[121.47582075407618,-0.955962009285116],[123.34056481332848,-0.615672702643081],[123.2583992859845,-1.076213067228338],[122.82271528533161,-0.930950616055881],[122.38852990121538,-1.516858005381124],[121.50827355355548,-1.904482924002423],[122.4545723816843,-3.186058444840882],[122.27189619353257,-3.529500013852697],[123.17096276254657,-4.683693129091708],[123.16233279835379,-5.340603936385961],[122.62851525277873,-5.634591159694494],[122.23639448454807,-5.282933037948283],[122.71956912647707,-4.46417164471579],[121.73823367725439,-4.8513314754465],[121.48946333220127,-4.574552504091216],[121.61917117725389,-4.188477878438675],[120.89818159391771,-3.602105401222829],[120.97238895068878,-2.62764291749491],[120.30545291552991,-2.931603692235726],[120.43071658740539,-5.528241062037779],[119.79654341031952,-5.673400160345651],[119.36690555224496,-5.379878024927805],[119.65360639860015,-4.459417412944958],[119.49883548388598,-3.494411716326511],[119.07834435432702,-3.487021986508765],[118.7677689962529,-2.801999200047689],[120.03570193896635,0.566477362465804],[120.8857792501677,1.309222723796836],[122.92756676645186,0.875192368977466],[124.07752241424285,0.917101955566139],[125.06598921112183,1.643259182131558],[125.24050052297159,1.419836127117605]]],[[[128.68824873262074,1.132385972494106],[128.63595218314137,0.258485826006179],[128.12016971243619,0.356412665199286],[127.96803429576889,-0.252077325037533],[128.37999881399972,-0.780003757331286],[128.10001590384232,-0.899996433112975],[127.39949018769377,1.011721503092574],[127.93237755748751,2.174596258956555],[128.00415612194084,1.628531398928331],[128.59455936087548,1.540810655112864],[128.68824873262074,1.132385972494106]]],[[[117.87562706916603,1.827640692548911],[118.99674726773819,0.902219143066048],[117.8118583517178,0.784241848143722],[117.47833865770608,0.102474676917026],[117.52164350796662,-0.803723239753211],[116.56004845587952,-1.487660821136231],[116.14808393764864,-4.012726332214015],[116.00085778204911,-3.657037448749009],[114.86480309454456,-4.106984144714417],[114.46865156459509,-3.495703627133821],[113.25699425664757,-3.118775729996855],[112.06812625534067,-3.478392022316072],[111.70329064336002,-2.994442233902632],[110.223846063276,-2.934032484553484],[110.07093550012436,-1.592874037282414],[109.09187381392255,-0.459506524257051],[109.06913618371405,1.341933905437642],[109.66326012577375,2.006466986494985],[109.83022667850886,1.338135687664192],[110.51406090702713,0.773131415200993],[111.79754845586044,0.904441229654651],[112.8598091980522,1.497790025229946],[113.80584964401956,1.217548732911041],[114.6213554220175,1.430688177898887],[115.86551720587678,4.306559149590157],[117.88203494677018,4.137551377779488],[117.31323245653354,3.234428208830579],[118.04832970588538,2.287690131027361],[117.87562706916603,1.827640692548911]]],[[[105.81765506390937,-5.852355645372413],[104.71038414919153,-5.873284600450646],[102.58426069540693,-4.220258884298204],[99.263739862060248,0.183141587724663],[98.601351352943112,1.823506577965617],[95.380876092513489,4.970782172053674],[95.293026157617334,5.479820868344817],[97.484882033277103,5.246320909034012],[100.64143354696168,2.099381211755798],[101.65801232300734,2.083697414555189],[103.83839603069836,0.104541734208667],[103.43764529827499,-0.711945896002845],[104.36999148968491,-1.084843031421016],[104.88789269411402,-2.340425306816655],[105.622111444117,-2.42884368246807],[106.10859337771271,-3.06177662517895],[105.81765506390937,-5.852355645372413]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IN","name":"India","type":"Sovereign country","postal":"IND","admin":"India","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[77.837450799474567,35.494009507787766],[78.912268914713223,34.321936346975789],[78.811086460285736,33.506198025032418],[79.208891636068586,32.994394639613716],[79.17612877799553,32.483779812137712],[78.458446486326011,32.618164374312727],[78.738894484374015,31.515906073527063],[81.111256138029319,30.183480943313402],[80.476721225917402,29.729865220655341],[80.088424513676273,28.79447011974014],[83.304248895199549,27.364505723575562],[84.675017938173795,27.234901231387536],[85.251778598983378,26.726198431906344],[88.06023766474982,26.414615383402491],[88.12044070836987,27.876541652939594],[88.730325962278556,28.086864732367516],[88.83564253128938,27.098966376243762],[89.744527622438852,26.719402981059957],[92.033483514375092,26.838310451763562],[92.103711785859744,27.452614040633208],[91.696656528696678,27.771741848251665],[92.503118931043645,27.896876329046449],[94.565990431702943,29.277438055939985],[95.40480228066464,29.031716620392132],[96.117678664131034,29.452802028922466],[96.586590610747493,28.83097951915434],[96.248833449287787,28.411030992134442],[97.327113885490036,28.261582749946339],[97.402561476636137,27.882536119085444],[97.051988559968095,27.699058946233151],[97.133999058015306,27.083773505149964],[96.419365675850969,27.264589341739224],[95.124767694074961,26.573572089132298],[95.155153436262594,26.001307277932085],[94.106741977925068,23.85074087167348],[93.325187615942795,24.078556423432204],[93.166127557348375,22.278459580977103],[92.672720981825563,22.041238918541254],[92.146034783906813,23.627498684172593],[91.869927606171316,23.624346421802784],[91.706475050832111,22.985263983649187],[91.158963250699728,23.503526923104388],[92.376201613334814,24.976692816664965],[89.920692580121852,25.269749864192178],[89.832480910199621,25.965082098895479],[88.563049350949768,26.446525580342723],[88.209789259802506,25.768065700782714],[88.931553989623083,25.238692328384776],[88.084422235062419,24.501657212821925],[88.699940220090923,24.23371491138856],[88.529769728553788,23.631141872649167],[89.031961297566227,22.055708319582976],[88.888765903685425,21.690588487224748],[86.975704380240273,21.495561631755209],[87.033168572948867,20.743307806882413],[86.499351027373791,20.151638495356607],[85.060265740909699,19.4785788029711],[82.192792189465919,17.016636053937816],[82.191241896497189,16.556664130107848],[80.324895867843878,15.89918488205835],[80.025069207686442,15.136414903214147],[80.286293572921863,13.006260687710835],[79.862546828128501,12.056215318240888],[79.857999302086824,10.35727509199711],[79.340511509115998,10.30885427493962],[78.885345493489183,9.546135972527722],[79.189719679688295,9.216543687370148],[78.277940708330505,8.933046779816934],[77.539897902337941,7.965534776232332],[76.592978957021671,8.89927623131419],[75.746467319648502,11.308250637248307],[74.864815708316826,12.741935736537897],[74.443859490867226,14.617221787977698],[73.534199253233396,15.990652167214961],[72.630533481745402,21.356009426351008],[71.175273471973952,20.757441311114235],[70.470458611945105,20.877330634031384],[69.164130080038831,22.0892980005727],[69.644927606082405,22.450774644454338],[69.349596795534353,22.84317963306269],[68.176645135373406,23.691965033456711],[68.842599318318776,24.359133612560939],[71.043240187468228,24.3565239527302],[70.168926629522019,26.491871649678842],[69.514392938113133,26.940965684511372],[70.616496209601934,27.989196275335868],[71.777665643200322,27.913180243434525],[74.421380242820277,30.979814764931177],[74.405928989565012,31.692639471965279],[75.258641798813215,32.271105455040498],[74.451559279278712,32.764899603805503],[73.749948358051967,34.317698879527853],[74.240202671204969,34.748887030571254],[76.871721632804025,34.653544012992739],[77.837450799474567,35.494009507787766]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IE","name":"Ireland","type":"Sovereign country","postal":"IRL","admin":"Ireland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-6.197884894220991,53.867565009163364],[-6.032985398777611,53.153164170944351],[-6.788856573910849,52.260117906292336],[-8.561616583683559,51.669301255899356],[-9.977085740590269,51.820454820353078],[-9.166282517930782,52.864628811242682],[-9.688524542672454,53.881362616585299],[-7.572167934591064,55.131622219454869],[-7.366030646178785,54.595840969452723],[-7.572167934591064,54.059956366586],[-6.197884894220991,53.867565009163364]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IR","name":"Iran","type":"Sovereign country","postal":"IRN","admin":"Iran","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[53.921597934795557,37.198918361961262],[54.800303989486565,37.392420762678185],[55.511578403551908,37.964117133123167],[56.619366082592819,38.121394354803485],[59.234761997316809,37.412987982730343],[60.377637973883878,36.527383124328367],[61.123070509694145,36.491597194966246],[61.210817091725744,35.650072333309225],[60.528429803311582,33.676446031218006],[60.963700392506006,33.528832302376259],[60.536077915290775,32.981268825811568],[60.941944614511129,31.548074652628753],[61.699314406180832,31.379506130492672],[61.781221551363444,30.735850328081238],[60.874248488208792,29.829238999952608],[61.771868117118629,28.699333807890799],[62.727830438085988,28.25964488373539],[62.755425652929858,27.378923448184988],[63.233897739520302,27.217047024030709],[63.316631707619592,26.756532497661667],[61.87418745305655,26.239974880472104],[61.49736290878419,25.078237006118499],[57.397251417882387,25.739902045183641],[56.970765822177555,26.966106268821363],[56.492138706290206,27.143304755150197],[54.715089552637266,26.480657863871514],[53.493096958231348,26.812368882753049],[52.483597853409613,27.580849107365495],[51.520762566947418,27.865689602158298],[50.115008579311585,30.147772528599717],[49.576850213423995,29.985715236932407],[48.941333449098551,30.317090359004037],[48.567971225789755,29.926778265903522],[48.014568312376099,30.452456773392598],[48.004698113808324,30.985137437457244],[47.685286085812272,30.984853217079632],[47.849203729042102,31.70917593029867],[47.334661492711909,32.469155381799112],[46.109361606639318,33.017287299119005],[45.416690708199042,33.967797756479584],[45.648459507028093,34.748137722303014],[46.151787957550937,35.093258775364291],[46.0763403664048,35.677383327775487],[45.420618117053209,35.977545884742824],[44.225755649600529,37.971584377589352],[44.421402622257546,38.281281236314541],[44.109225294782341,39.428136298168099],[44.793989699081948,39.713002631177048],[45.457721795438772,38.874139105783058],[46.143623081248819,38.741201483712217],[48.060095249225242,39.58223541926246],[48.355529412637878,39.288764960276907],[48.010744256386481,38.794014797514521],[48.883249139202491,38.320245266262617],[49.199612257693339,37.582874253889884],[50.842354363819709,36.872814235983398],[52.264024692601424,36.700421657857703],[53.921597934795557,37.198918361961262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IQ","name":"Iraq","type":"Sovereign country","postal":"IRQ","admin":"Iraq","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[45.420618117053209,35.977545884742824],[46.0763403664048,35.677383327775487],[46.151787957550937,35.093258775364291],[45.648459507028093,34.748137722303014],[45.416690708199042,33.967797756479584],[46.109361606639318,33.017287299119005],[47.334661492711909,32.469155381799112],[47.849203729042102,31.70917593029867],[47.685286085812272,30.984853217079632],[48.004698113808324,30.985137437457244],[48.014568312376099,30.452456773392598],[48.567971225789755,29.926778265903522],[47.302622104690961,30.059069932570722],[46.568713413281756,29.09902517345229],[44.709498732284743,29.178891099559383],[41.889980910007836,31.190008653278369],[39.195468377444968,32.161008816042667],[38.792340529136084,33.378686428352225],[41.006158888519934,34.419372260062119],[41.289707472505455,36.358814602192268],[42.349591098811771,37.229872544904097],[44.772699008977696,37.170444647768434],[45.420618117053209,35.977545884742824]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IS","name":"Iceland","type":"Sovereign country","postal":"IS","admin":"Iceland","sales_rgn":5},"geometry":{"type":"Polygon","coordinates":[[[-14.508695441129234,66.455892239031428],[-14.739637417041607,65.808748277440301],[-13.60973222497981,65.126671047619865],[-14.909833746794902,64.364081936288684],[-18.656245896874992,63.49638296167582],[-22.762971971110158,63.960178941495386],[-21.778484259517683,64.402115790455511],[-23.955043911219111,64.891129869233495],[-22.184402635170358,65.084968166760305],[-22.227423265053332,65.378593655042735],[-24.326184047939336,65.611189276788465],[-23.650514695723089,66.262519029395222],[-22.134922451250887,66.41046865504687],[-20.57628373867955,65.732112128351432],[-19.05684160000159,66.276600857194765],[-17.798623826559052,65.993853257909777],[-16.167818976292125,66.526792304135867],[-14.508695441129234,66.455892239031428]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IL","name":"Israel","type":"Sovereign country","postal":"IS","admin":"Israel","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.719918247222751,32.709192409794866],[35.545665317534542,32.393992011030576],[35.183930291491436,32.532510687788943],[34.974640740709333,31.866582343059722],[35.22589155451243,31.754341132121766],[34.927408481594568,31.353435370401414],[35.397560662586045,31.489086005167582],[35.420918409981965,31.100065822874356],[34.92260257339143,29.501326198844524],[34.265433383935687,31.219360866820153],[35.098457472480675,33.080539252244265],[35.821100701650238,33.277426459276299],[35.719918247222751,32.709192409794866]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"IT","name":"Italy","type":"Sovereign country","postal":"I","admin":"Italy","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[15.520376010813834,38.231155096991472],[15.099988234119451,36.619987290995397],[12.431003859108813,37.612949937483819],[12.570943637755136,38.12638113051969],[15.520376010813834,38.231155096991472]]],[[[9.210011834356266,41.209991360024219],[9.809975213264977,40.500008856766101],[9.669518670295673,39.177376410471794],[8.806935662479731,38.906617743478478],[8.428302443077115,39.171847032216618],[8.15999840661766,40.950007229163788],[9.210011834356266,41.209991360024219]]],[[[12.376485223040845,46.767559109069879],[13.806475457421556,46.509306138691187],[13.937630242578336,45.591015936864665],[13.141606479554298,45.736691799495418],[12.328581170306308,45.381778062514854],[12.261453484759159,44.600482082694015],[12.589237094786483,44.091365871754476],[13.526905958722494,43.587727362637906],[14.029820997787027,42.76100779883248],[15.142569614327954,41.955139675456905],[15.926191033601896,41.961315009115737],[16.169897088290412,41.740294908203424],[15.889345737377795,41.541082261718202],[18.480247023195403,40.168866278639825],[18.293385044028099,39.810774441073249],[17.738380161213286,40.277671006830303],[16.869595981522338,40.442234605463852],[16.448743116937322,39.79540070246648],[17.171489698971499,39.424699815420723],[17.052840610429342,38.902871202137305],[16.635088331781844,38.843572496082402],[16.100960727613057,37.985898749334183],[15.684086948314501,37.90884918878703],[16.109332309644316,38.964547024077689],[15.413612501698822,40.04835683853517],[11.191906365614187,42.355425319989678],[10.511947869517797,42.931462510747224],[10.200028924204048,43.920006822274615],[8.888946160526871,44.36633616797954],[7.435184767291844,43.693844916349178],[7.549596388386163,44.127901109384823],[7.007562290076663,44.254766750661389],[6.843592970414562,45.991146552100673],[7.273850945676685,45.776947740250762],[8.316629672894379,46.163642483090854],[8.966305779667835,46.036931871111165],[9.182881707403112,46.440214748716983],[10.363378126678668,46.483571275409844],[10.442701450246602,46.893546250997446],[11.048555942436508,46.751358547546403],[12.153088006243081,47.115393174826437],[12.376485223040845,46.767559109069879]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JM","name":"Jamaica","type":"Sovereign country","postal":"J","admin":"Jamaica","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-77.569600796199211,18.490525417550487],[-76.896618618462128,18.400866807524082],[-76.199658576141644,17.886867173732966],[-77.206341315403478,17.701116237859821],[-78.33771928578561,18.225967922432233],[-77.569600796199211,18.490525417550487]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JO","name":"Jordan","type":"Sovereign country","postal":"J","admin":"Jordan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.545665317534542,32.393992011030576],[35.719918247222751,32.709192409794866],[36.834062127435544,32.312937526980775],[38.792340529136084,33.378686428352225],[39.195468377444968,32.161008816042667],[37.002165561681011,31.508412990844747],[37.998848911294374,30.508499864213135],[36.068940870922063,29.197494615184453],[34.92260257339143,29.501326198844524],[35.545665317534542,32.393992011030576]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"JP","name":"Japan","type":"Sovereign country","postal":"J","admin":"Japan","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[134.63842817600388,34.149233710256425],[134.76637902235851,33.80633474378368],[134.20341596897086,33.201177883429636],[133.79295006727651,33.521985175097598],[133.28026818250888,33.289570420864948],[133.01485802625788,32.70456736910478],[132.3631148621927,32.98938202568138],[132.37117638563021,33.463642483040076],[132.92437259331481,34.060298570282043],[133.49296837782222,33.944620876596701],[133.90410607313638,34.364931138642618],[134.63842817600388,34.149233710256425]]],[[[140.9763875673053,37.142074286440163],[140.59976972876214,36.343983466124541],[140.77407433488267,35.842877102190243],[140.25327925024513,35.13811391859366],[138.97552778539622,34.667600002576108],[137.21759891169123,34.606285915661857],[135.7929830262689,33.464805202766627],[135.12098270074543,33.84907115328906],[135.07943484918272,34.59654490817482],[130.98614464734348,33.885761420216284],[132.00003624891005,33.149992377244615],[131.33279015515737,31.450354519164847],[130.68631798718596,31.029579169228242],[130.20241987520498,31.418237616495418],[130.44767622286216,32.319474595665724],[129.8146916037189,32.610309556604392],[129.40846316947258,33.29605581311759],[130.35393517468466,33.6041507024417],[132.61767296766251,35.43339305270942],[134.6083008159778,35.731617743465819],[135.67753787652893,35.527134100886826],[136.72383060114245,37.304984239240383],[137.3906116070045,36.827390651998826],[139.42640465714291,38.215962225897641],[140.05479007381209,39.438807481436385],[139.88337934789988,40.563312486323696],[140.30578250545372,41.195005194659558],[141.3689734234267,41.378559882160289],[141.9142631369705,39.991616115878685],[141.88460086483499,39.180864569651504],[140.95948937394579,38.17400096287659],[140.9763875673053,37.142074286440163]]],[[[143.9101619813795,44.174099839853739],[144.61342654843966,43.960882880217525],[145.3208252300831,44.384732977875444],[145.54313724180278,43.262088324550604],[144.0596619,42.988358262700558],[143.18384972551732,41.995214748699198],[141.61149092017249,42.678790595056086],[141.06728641170665,41.584593817707997],[139.95510623592108,41.569555975911044],[139.81754357315995,42.563758856774399],[140.31208703019323,43.333272610032651],[141.38054894426003,43.388824774746496],[141.96764489152801,45.551483466161358],[143.9101619813795,44.174099839853739]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KZ","name":"Kazakhstan","type":"Sovereign country","postal":"KZ","admin":"Kazakhstan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[70.962314894499286,42.266154283205537],[69.070027296835235,41.384244289712342],[68.632482944620051,40.668680731766869],[68.259895867795649,40.662324530594901],[67.98585574735182,41.135990708982206],[66.714047072216601,41.168443508461564],[66.510648634715722,41.987644151368556],[66.023391554635623,41.994646307944038],[66.098012322865202,42.997660020513081],[64.900824415959335,43.728080552742654],[62.013300408786279,43.504476630215663],[61.058319940032504,44.405816962250583],[58.50312706892845,45.586804307632974],[55.928917270741181,44.995858466159177],[55.968191359283026,41.308641669269377],[55.455251092353819,41.25985911718584],[54.079417759014973,42.324109402020838],[52.502459751196284,41.78331553808647],[52.501426222550322,42.792297878585202],[51.342427199108215,43.132974758469345],[50.305642938036272,44.609835516938915],[51.278503452363225,44.514854234386462],[51.316899041556042,45.245998236667901],[53.040876499245201,45.259046535821767],[53.042736850807785,46.853006089864493],[51.191945428274266,47.048704738953916],[49.101160000000107,46.399330000000134],[48.593241001180502,46.561034247415478],[48.694733514201744,47.075628160177928],[48.057253045449272,47.743752753279523],[47.315231154170249,47.715847479841955],[46.46644575377627,48.39415233010493],[47.549480421749308,50.454698391311126],[48.57784142435753,49.874759629915673],[48.702381626181023,50.605128485712839],[50.766648390512159,51.692762356159903],[52.328723585830971,51.718652248738124],[55.716940545479815,50.621716620478537],[56.777961053296565,51.043551337277052],[58.36329064314674,51.063653469438577],[59.642282342370606,50.545442206415714],[59.932807244715491,50.842194118851864],[61.337424350840934,50.799070136104262],[61.588003371024172,51.272658799843214],[59.967533807215545,51.960420437215703],[60.92726850774028,52.447548326215042],[60.739993117114579,52.719986477257748],[61.699986199800605,52.979996446334269],[60.978066440683165,53.664993394579142],[61.436591424409073,54.006264553434789],[65.178533563095925,54.354227810272107],[69.068166945272878,55.385250149143531],[70.865266554655136,55.169733588270105],[71.180131056609412,54.133285224008262],[72.224150018202181,54.376655381886735],[73.508516066384402,54.035616766976602],[73.425678745420441,53.489810289109755],[74.384845005190073,53.54686107036008],[76.891100294913429,54.490524400441927],[76.525179477854749,54.177003485727141],[77.800915561844249,53.404414984747575],[80.035559523441691,50.864750881547252],[80.568446893235489,51.38833649352847],[81.945985548839928,50.812195949906368],[83.38300377801238,51.069182847693924],[85.541269972682471,49.692858588248157],[86.829356723989633,49.826674709668168],[87.359970330762678,49.214980780629162],[86.598776483103393,48.549181626980612],[85.768232863308299,48.455750637396989],[85.720483839870724,47.452969468773119],[85.164290399113384,47.000955715516113],[83.180483839860472,47.330031236350862],[82.458925815769135,45.539649563166506],[79.966106398441411,44.917516994804657],[80.86620649610137,43.180362046881044],[80.180150180994303,42.920067857426943],[80.25999026888536,42.349999294599115],[79.142177361979805,42.856092434249604],[75.636964959622105,42.877899888676779],[74.212865838522589,43.298339341803512],[73.645303582660915,43.09127187760987],[73.489757521462366,42.50089447689129],[71.844638299450651,42.845395412765185],[71.186280552052267,42.704292914392227],[70.962314894499286,42.266154283205537]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KE","name":"Kenya","type":"Sovereign country","postal":"KE","admin":"Kenya","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[40.993,-0.85829],[41.58513,-1.68325],[40.26304,-2.57309],[39.60489,-4.34653],[39.20222,-4.67677],[37.7669,-3.67712],[37.69869,-3.09699],[33.903711197104528,-0.95],[33.893568969666944,0.109813537861896],[35.03599,1.90584],[34.005,4.249884947362048],[35.298007118232981,5.506],[35.817447662353516,5.338232082790797],[35.817447662353516,4.77696566346189],[36.159078632855646,4.447864127672769],[36.855093238008124,4.447864127672769],[38.120915,3.598605],[39.559384258765853,3.42206],[40.76848,4.25702],[41.1718,3.91909],[41.855083092643973,3.918911920483727],[40.98105,2.78452],[40.993,-0.85829]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KG","name":"Kyrgyzstan","type":"Sovereign country","postal":"KG","admin":"Kyrgyzstan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[70.962314894499144,42.266154283205495],[71.186280552052125,42.704292914392141],[71.844638299450594,42.8453954127651],[73.489757521462366,42.500894476891318],[73.645303582660915,43.091271877609827],[74.212865838522561,43.29833934180337],[75.63696495962202,42.87789988867668],[79.142177361979776,42.856092434249518],[80.259990268885304,42.349999294599058],[78.187196893225973,41.185315863604806],[76.904484490877081,41.066485907549648],[76.526368035797447,40.427946071935118],[74.776862420556057,40.366425279291633],[73.822243686828301,39.893973497063186],[73.960013055318427,39.660008449861735],[73.675379266254794,39.431236884105601],[69.46488691597753,39.526683254548701],[69.559609816368521,40.103211371412982],[71.77487511585656,40.145844428053778],[73.05541710804917,40.866033026689465],[71.870114780570475,41.392900092121266],[71.157858514291604,41.143587144529121],[70.42002241402821,41.519998277343142],[71.259247674448233,42.167710679689463],[70.962314894499144,42.266154283205495]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KH","name":"Cambodia","type":"Sovereign country","postal":"KH","admin":"Cambodia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[103.49727990113971,10.632555446815928],[102.5849324890267,12.186594956913282],[102.34809939983302,13.394247341358223],[102.98842207236163,14.225721136934467],[104.28141808473661,14.416743068901367],[106.04394616091552,13.881091009979956],[106.49637332563088,14.570583807834282],[107.38272749230109,14.202440904186972],[107.49140302941089,12.337205918827948],[105.81052371625313,11.567614650921229],[106.24967003786946,10.961811835163587],[104.33433475140347,10.48654368737523],[103.49727990113971,10.632555446815928]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KR","name":"Korea","type":"Sovereign country","postal":"KR","admin":"South Korea","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[128.34971642467661,38.61224294692785],[129.46044966035817,36.784189154602828],[129.4683044780665,35.632140611303953],[129.09137658092959,35.082484239231434],[126.48574751190876,34.39004588473648],[126.55923139862779,35.684540513647903],[126.11739790253229,36.725484727519259],[126.86014326386339,36.893924058574626],[126.17475874237624,37.74968577732804],[128.34971642467661,38.61224294692785]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"Kosovo","type":"Sovereign country","postal":"KO","admin":"Kosovo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.76216,42.05186],[20.59023,41.85541],[20.0707,42.58863],[20.81448,43.27205],[21.77505,42.6827],[21.576635989402121,42.245224397061861],[20.76216,42.05186]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KW","name":"Kuwait","type":"Sovereign country","postal":"KW","admin":"Kuwait","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[47.974519077349896,29.975819200148504],[48.416094191283946,28.55200429942667],[47.708850538937384,28.526062730416143],[47.459821811722833,29.002519436147224],[46.568713413281756,29.09902517345229],[47.302622104690961,30.059069932570722],[47.974519077349896,29.975819200148504]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LA","name":"Lao PDR","type":"Sovereign country","postal":"LA","admin":"Laos","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[105.21877689007889,14.273211778210694],[105.58903852745016,15.570316066952858],[104.7793205098688,16.441864935771449],[104.71694705609249,17.428858954330082],[103.9564766784853,18.240954087796879],[103.20019209189374,18.309632066312773],[102.99870568238771,17.961694647691601],[102.11359175009248,18.109101670804165],[101.05954756063517,17.51249725999449],[101.2820146016517,19.462584947176765],[100.60629357300316,19.508344427971224],[100.54888105672688,20.109237982661128],[100.11598758341785,20.417849636308187],[101.18000532430754,21.436572984294028],[101.80311974488293,21.174366766845068],[101.65201785686152,22.318198757409547],[102.17043582561358,22.464753119389304],[103.20386111858645,20.766562201413748],[104.43500044150805,20.758733221921531],[104.8225736836971,19.886641750563882],[103.89653201702671,19.265180975821806],[105.09459842328152,18.66697459561108],[107.3127059265456,15.908538316303179],[107.5645251811039,15.202173163305559],[107.38272749230109,14.202440904186972],[106.49637332563088,14.570583807834282],[106.04394616091552,13.881091009979956],[105.21877689007889,14.273211778210694]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LB","name":"Lebanon","type":"Sovereign country","postal":"LB","admin":"Lebanon","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.821100701650238,33.277426459276299],[35.126052687324545,33.090900376918782],[35.998402540843642,34.644914048800004],[36.448194207512103,34.593935248344067],[36.611750115715893,34.201788641897181],[35.821100701650238,33.277426459276299]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LR","name":"Liberia","type":"Sovereign country","postal":"LR","admin":"Liberia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-7.712159389669751,4.364565944837722],[-9.004793667018674,4.8324185245922],[-11.438779466182055,6.785916856305748],[-10.23009355309128,8.406205552601293],[-9.755342169625834,8.541055202666925],[-9.208786383490846,7.313920803247953],[-8.439298468448698,7.686042792181738],[-8.60288021486862,6.467564195171661],[-7.570152553731688,5.707352199725904],[-7.712159389669751,4.364565944837722]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LY","name":"Libya","type":"Sovereign country","postal":"LY","admin":"Libya","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[14.8513,22.862950000000126],[14.143870883855243,22.491288967371133],[13.581424594790462,23.040506089769281],[11.999505649471701,23.471668402596435],[10.771363559622955,24.562532050061748],[10.303846876678449,24.379313259370974],[9.31941084151822,26.094324856057483],[9.716285841519664,26.512206325785655],[9.859997999723476,28.959989732371071],[9.482139926805417,30.307556057246188],[9.970017124072967,30.539324856075382],[9.950225050505196,31.376069647745283],[11.432253452203781,32.368903103152832],[11.488787469131012,33.136995754523241],[15.24563,32.26508],[15.71394,31.37626],[19.08641,30.26639],[20.05335,30.98576],[19.82033,31.751790000000142],[20.85452,32.7068],[22.89576,32.63858],[23.2368,32.19149],[24.92114,31.89936],[25.16482,31.56915],[24.80287,31.08929],[24.70007,30.04419],[25.000000000000114,29.238654529533562],[25.000000000000114,20.00304],[23.850000000000136,20.0],[23.837660000000142,19.580470000000105],[15.86085,23.40972],[14.8513,22.862950000000126]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LK","name":"Sri Lanka","type":"Sovereign country","postal":"LK","admin":"Sri Lanka","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[81.787959018891399,7.523055324733164],[81.637322218760588,6.481775214051922],[80.348356968104412,5.968369859232155],[79.872468703128533,6.76346344647493],[79.695166863935128,8.200843410673386],[80.147800734379643,9.824077663609558],[80.838817986986555,9.268426825391188],[81.787959018891399,7.523055324733164]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LS","name":"Lesotho","type":"Sovereign country","postal":"LS","admin":"Lesotho","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[28.978262566857243,-28.955596612261711],[29.325166456832591,-29.257386976846256],[28.848399692507741,-30.070050551068256],[28.107204624145425,-30.545732110314951],[27.749397006956485,-30.645105889612225],[26.999261915807637,-29.875953871379984],[28.074338413207784,-28.851468601193588],[28.541700066855498,-28.647501722937569],[28.978262566857243,-28.955596612261711]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LT","name":"Lithuania","type":"Sovereign country","postal":"LT","admin":"Lithuania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.731098667092652,54.327536932993326],[22.757763706155259,54.85657440858138],[21.268448927503467,55.190481675835315],[21.055800408622417,56.031076361711065],[22.201156853939494,56.33780182557949],[24.86068444184076,56.37252838807963],[26.494331495883756,55.615106919977634],[26.588279249790389,55.167175604871673],[25.768432651479799,54.846962592175089],[25.536353794056993,54.282423407602529],[24.450683628037037,53.905702216194754],[23.484127638449849,53.912497667041137],[22.731098667092652,54.327536932993326]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LU","name":"Luxembourg","type":"Sovereign country","postal":"L","admin":"Luxembourg","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[6.043073357781111,50.128051662794235],[6.186320428094177,49.463802802114515],[5.674051954784829,49.529483547557504],[5.782417433300907,50.09032786722122],[6.043073357781111,50.128051662794235]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"LV","name":"Latvia","type":"Sovereign country","postal":"LV","admin":"Latvia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[21.055800408622417,56.031076361711065],[21.090423618257972,56.783872789122938],[21.581866489353672,57.411870632549935],[22.524341261492879,57.753374335350763],[23.318452996522097,57.006236477274868],[24.120729607853431,57.025692654032767],[24.312862583114622,57.793423570376973],[25.164593540149269,57.970156968815189],[27.770015903440932,57.244258124411232],[28.176709425577997,56.169129950578814],[26.494331495883756,55.615106919977634],[24.86068444184076,56.37252838807963],[22.201156853939494,56.33780182557949],[21.055800408622417,56.031076361711065]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MA","name":"Morocco","type":"Sovereign country","postal":"MA","admin":"Morocco","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-5.193863491222032,35.755182196590852],[-4.591006232105144,35.330711981745651],[-2.169913702798624,35.168396307916709],[-1.124551153966195,32.651521511357203],[-1.30789913573787,32.262888902306031],[-3.647497931320146,31.637294012980817],[-3.690441046554668,30.896951605751156],[-4.859646165374443,30.501187649043885],[-5.242129278982787,30.000443020135577],[-8.674116176782832,28.84128896739665],[-8.794883999049034,27.12069631602256],[-11.39255489749695,26.883423977154393],[-12.50096269372537,24.770116278578143],[-13.891110398809047,23.691009019459386],[-14.750954555713406,21.500600083903805],[-17.020428432675772,21.422310288981635],[-15.982610642958065,23.723358466074103],[-15.089331834360735,24.520260728446971],[-14.439939947964831,26.254418443297652],[-13.773804897506466,26.618892320252286],[-12.618836635783111,28.038185533148663],[-11.688919236690765,28.148643907172584],[-9.564811163765626,29.933573716749862],[-9.814718390329176,31.17773550060906],[-9.300692918321829,32.564679266890636],[-8.65747636558504,33.240245266242397],[-6.91254411460136,34.110476386037448],[-5.929994269219833,35.75998810479399],[-5.193863491222032,35.755182196590852]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MD","name":"Moldova","type":"Sovereign country","postal":"MD","admin":"Moldova","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[26.619336785597795,48.220726223333472],[27.522537469195157,48.467119452501116],[28.670891147585166,48.118148505234103],[30.024658644335375,46.42393667254504],[28.862972446414062,46.437889309263831],[28.233553501099042,45.488283189468376],[28.128030226359044,46.810476386088254],[26.619336785597795,48.220726223333472]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MG","name":"Madagascar","type":"Sovereign country","postal":"MG","admin":"Madagascar","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[49.543518914595751,-12.469832858940554],[50.056510857957164,-13.555761407121985],[50.377111443895956,-15.706069431219127],[50.200274692593183,-16.000263360256767],[49.860605503138679,-15.414252618066918],[49.672606642460863,-15.710203545802479],[49.774564243372708,-16.875042006093601],[47.095761346226595,-24.941629733990453],[45.409507684110451,-25.601434421493089],[44.039720493349762,-24.988345228782308],[43.345654331237625,-22.776903985283873],[43.43329756040464,-21.336475111580189],[43.893682895692926,-21.163307386970128],[44.464397413924388,-19.435454196859048],[43.963084344260913,-17.409944756746782],[44.446517368351401,-16.216219170804507],[46.31224327981721,-15.780018405828798],[47.705129835812357,-14.594302666891764],[48.005214878131255,-14.091232598530375],[47.869047479042166,-13.663868503476586],[48.293827752481377,-13.784067884987486],[49.194651320193316,-12.04055673589197],[49.543518914595751,-12.469832858940554]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MX","name":"Mexico","type":"Sovereign country","postal":"MX","admin":"Mexico","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-97.140008307670712,25.869997463478398],[-97.702945522842242,24.272343044526735],[-97.699043952204192,21.898689480064263],[-95.900884975959968,18.82802419684873],[-94.839063483442715,18.562717393462208],[-94.425729539756219,18.144370835843347],[-91.407903408559264,18.87608327888023],[-90.771869879910867,19.284120388256781],[-90.278618333684904,20.999855454995554],[-88.543866339862859,21.49367544197662],[-86.811982388032959,21.331514797444754],[-87.62105445021075,19.646553046135921],[-87.436750454441778,19.472403469312269],[-87.837191128271513,18.25981598558343],[-88.490122850279306,18.48683055264172],[-88.848343878926585,17.883198147040332],[-91.001519945015957,17.817594916245696],[-91.002269253284169,17.254657701074279],[-91.453921271515128,17.252177232324186],[-90.438866950222007,16.410109768128109],[-90.464472622422647,16.069562079324726],[-91.747960171255954,16.066564846251765],[-92.229248623406306,15.251446641495875],[-92.227750006869826,14.538828640190957],[-93.875168830118525,15.940164292865916],[-94.691656460330137,16.200975246642884],[-96.557434048228288,15.653515122942792],[-100.82949886758132,17.17107107184205],[-101.91852800170022,17.916090196193977],[-103.50098954955808,18.292294623278849],[-104.9920096504755,19.316133938061682],[-105.73139604370766,20.434101874264115],[-105.39777299683135,20.531718654863425],[-105.26581722697404,21.422103583252351],[-106.02871639689897,22.773752346278627],[-108.40190487347098,25.172313951105934],[-109.26019873740665,25.580609442644061],[-109.29164384645628,26.442934068298428],[-110.39173173708571,27.16211497650454],[-110.64101884646163,27.859876003525528],[-111.17891883018785,27.94124054616907],[-112.2282346260904,28.954408677683489],[-113.14866939985717,31.170965887978923],[-114.77645117883503,31.79953217216115],[-114.67389929895177,30.162681179315996],[-111.61648902061921,26.662817287700477],[-110.65504899782889,24.298594672131117],[-110.17285620811344,24.265547593680424],[-109.40910437705571,23.364672349536249],[-110.03139197471444,22.823077500901206],[-110.29507097048366,23.430973212166691],[-112.18203589562148,24.738412787367167],[-112.3007108223797,26.012004299416617],[-115.05514217818501,27.722726752222911],[-114.57036556685495,27.741485297144891],[-114.16201839888464,28.566111965442303],[-115.51865393762699,29.556361599235402],[-117.12776,32.53534],[-114.72139,32.72083],[-114.815,32.52528],[-111.02361,31.33472],[-108.24194,31.34222],[-108.24,31.754853718166373],[-106.50759,31.75452],[-105.03737,30.64402],[-104.45697,29.57196],[-103.94,29.27],[-103.11,28.97],[-102.48,29.76],[-101.6624,29.7793],[-100.9576,29.380710000000136],[-99.52,27.54],[-99.02,26.37],[-97.140008307670712,25.869997463478398]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MK","name":"Macedonia","type":"Sovereign country","postal":"MK","admin":"Macedonia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.59023,41.85541],[22.380525750424681,42.320259507815081],[22.881373732197346,41.999297186850356],[22.952377150166512,41.33799388281119],[21.020040317476401,40.84272695572588],[20.60518,41.08622],[20.59023,41.85541]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ML","name":"Mali","type":"Sovereign country","postal":"ML","admin":"Mali","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-12.170750291380301,14.616834214735505],[-11.666078253617854,15.388208319556298],[-10.650791388379417,15.132745876521426],[-9.550238409859389,15.486496893775438],[-5.537744309908447,15.501689764869257],[-5.315277268891933,16.201853745991841],[-6.453786586930335,24.956590684503425],[-4.923337368174231,24.974574082941],[1.823227573259032,20.610809434486043],[2.06099083823392,20.142233384679486],[3.1466610042539,19.693578599521445],[3.158133172222705,19.057364203360038],[4.267419467800039,19.155265204336999],[4.270209995143802,16.852227484601215],[3.638258904646477,15.568119818580456],[1.385528191746858,15.323561102759172],[1.01578331869851,14.968182277887948],[-1.066363491205664,14.973815009007765],[-3.10370683431276,13.541266791228594],[-4.006390753587226,13.472485459848116],[-5.220941941743121,11.713858954307227],[-5.404341599946974,10.370736802609146],[-6.050452032892267,10.096360785355444],[-6.205222947606431,10.524060777219134],[-6.850506557635057,10.138993841996239],[-8.029943610048619,10.206534939001713],[-8.282357143578281,10.792597357623846],[-8.620321010767128,10.810890814655183],[-8.376304897484914,11.393645941610629],[-9.127473517279583,12.308060411015333],[-10.165213792348837,11.844083563682744],[-11.03655595543826,12.211244615116515],[-11.456168585648271,12.076834214725338],[-12.170750291380301,14.616834214735505]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MM","name":"Myanmar","type":"Sovereign country","postal":"MM","admin":"Myanmar","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[99.543309360759309,20.186597601802063],[98.959675734454876,19.752980658440947],[98.25372399291561,19.708203029860044],[97.797782830804408,18.627080389881755],[97.375896437573545,18.445437730375815],[98.903348423256759,16.177824204976119],[98.192074009191401,15.123702500870351],[99.097755161538757,13.827502549693278],[99.587286004639722,11.892762762901697],[98.553550653073046,9.932959906448545],[98.764545526120784,11.441291612183749],[98.428338657629851,12.032986761925685],[98.509574009192676,13.122377631070677],[98.103603957107694,13.640459703012851],[97.164539829499802,16.92873444260934],[95.369352248112406,15.714389960182601],[94.188804152404543,16.037936102762018],[94.533485955791349,17.277240301985728],[94.324816522196755,18.2135139022499],[93.540988397193644,19.366492621330025],[93.663254835996213,19.726961574781996],[93.078277622452191,19.855144965081976],[92.36855350135562,20.670883287025347],[92.303234490938678,21.475485337809818],[92.65225711463799,21.324047552978485],[92.672720981825563,22.041238918541254],[93.166127557348375,22.278459580977103],[93.325187615942795,24.078556423432204],[94.106741977925068,23.85074087167348],[95.155153436262594,26.001307277932085],[95.124767694074961,26.573572089132298],[96.419365675850969,27.264589341739224],[97.133999058015306,27.083773505149964],[97.327113885490036,28.261582749946339],[97.911987746169444,28.335945136014345],[98.682690057370465,27.508812160750619],[98.671838006589155,25.918702500913525],[97.724609002679145,25.083637193293001],[97.604719679761985,23.897404690033042],[98.660262485755766,24.063286037689966],[98.898749220782776,23.142722072842531],[99.531992222087396,22.949038804612581],[99.240898878987252,22.118314317304581],[100.41653771362738,21.558839423096614],[101.15003299357825,21.849984442629022],[101.18000532430754,21.436572984294028],[99.543309360759309,20.186597601802063]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ME","name":"Montenegro","type":"Sovereign country","postal":"ME","admin":"Montenegro","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[19.801613396898688,42.500093492190842],[19.304490000000101,42.19574],[19.37177000000014,41.87755],[18.45,42.48],[18.70648,43.20011],[19.21852,43.52384],[20.3398,42.89852],[19.801613396898688,42.500093492190842]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MN","name":"Mongolia","type":"Sovereign country","postal":"MN","admin":"Mongolia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[87.751264276076711,49.297197984405486],[92.234711541719676,50.802170722041723],[94.147566359435629,50.48053660745709],[94.815949334698729,50.013433335970852],[97.25972781778141,49.726060695995741],[98.231761509191557,50.422400621128745],[97.825739780674311,51.010995184933179],[98.861490513100335,52.047366034546691],[102.06522260946733,51.259920559283124],[102.25590864462433,50.510560614618683],[103.67654544476022,50.089966132195116],[106.88880415245535,50.274295966180233],[108.47516727095129,49.28254771585074],[110.66201053267878,49.130128078805868],[112.89773969935439,49.543565375356991],[114.36245649623527,50.248302720737414],[115.48569542853141,49.805177313834605],[116.67880089728618,49.888531399121391],[115.48528201707306,48.135382595403442],[115.74283735561579,47.726544501326288],[117.29550744025741,47.697709052107427],[118.06414269416672,48.066730455103688],[119.77282392789751,47.048058783550132],[119.66326989143876,46.692679958678923],[117.42170128791419,46.67273285581426],[115.98509647020009,45.727235012386004],[113.46390669154417,44.808893134127118],[111.87330610560031,45.102079372735062],[111.34837690637946,44.45744171811009],[111.82958784388137,43.743118394539522],[110.41210330611528,42.871233628911028],[106.12931562706169,42.134327704428912],[104.96499393109347,41.597409572916348],[100.84586551310827,42.663804429691453],[96.349395786527808,42.725635280928685],[95.306875441471533,44.241330878265472],[93.480733677141302,44.975472113619965],[90.945539585334302,45.286073309910279],[90.585768263718279,45.719716091487527],[90.970809360725013,46.88814606382293],[90.280825636763922,47.69354909930793],[88.013832228551735,48.599462795600616],[87.751264276076711,49.297197984405486]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MZ","name":"Mozambique","type":"Sovereign country","postal":"MZ","admin":"Mozambique","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.559989047999352,-11.520020033415925],[37.47128421402661,-11.568750909067161],[39.521029900883775,-10.896853936408228],[40.316588576017189,-10.317096042525698],[40.775475294768995,-14.691764418194241],[39.452558628097051,-16.72089120856694],[37.411132846838882,-17.586368096591237],[34.786383497870048,-19.784011732667736],[34.701892531072843,-20.497043145431011],[35.562545536369086,-22.09],[35.458745558419622,-24.122609958596549],[33.013210076639012,-25.357573337507738],[32.574632195777866,-25.727318210556092],[32.915955031065693,-26.215867201443466],[32.830120477028885,-26.742191664336197],[32.071665480281069,-26.733820082304909],[31.752408481581881,-25.484283949487413],[31.930588820124253,-24.369416599222539],[31.191409132621288,-22.251509698172399],[32.65974327976258,-20.304290052982317],[32.847638787575846,-16.713398125884616],[31.17306399915768,-15.860943698797874],[30.338954705534544,-15.880839125230246],[30.17948123548183,-14.796099134991529],[33.214024692525214,-13.971860039936153],[34.459633416488543,-14.613009535381423],[34.381291945134052,-16.183559665596043],[35.033810255683534,-16.801299737213093],[35.339062941231646,-16.107440280830112],[35.771904738108361,-15.896858819240727],[35.68684533055594,-14.611045830954332],[35.267956170398008,-13.887834161029566],[34.559989047999352,-13.579997653866876],[34.28000613784198,-12.280025323132506],[34.559989047999352,-11.520020033415925]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MR","name":"Mauritania","type":"Sovereign country","postal":"MR","admin":"Mauritania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-12.170750291380301,14.616834214735505],[-13.435737677453062,16.039383042866191],[-14.577347581428981,16.598263658102809],[-16.120690070041931,16.455662543193384],[-16.463098110407884,16.13503611903846],[-16.14634741867485,18.108481553616656],[-16.277838100641517,20.092520656814699],[-17.063423224342571,20.999752102130827],[-16.845193650773993,21.333323472574879],[-12.929101935263532,21.327070624267563],[-13.118754441774712,22.771220201096256],[-12.874221564169575,23.284832261645178],[-11.937224493853321,23.374594224536168],[-11.969418911171161,25.933352769468268],[-8.6872936670174,25.881056219988906],[-8.684399786809053,27.395744126896005],[-4.923337368174231,24.974574082941],[-6.453786586930335,24.956590684503425],[-5.315277268891933,16.201853745991841],[-5.537744309908447,15.501689764869257],[-9.550238409859389,15.486496893775438],[-10.650791388379417,15.132745876521426],[-11.666078253617854,15.388208319556298],[-12.170750291380301,14.616834214735505]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MW","name":"Malawi","type":"Sovereign country","postal":"MW","admin":"Malawi","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[34.559989047999352,-11.520020033415925],[34.28000613784198,-12.280025323132506],[34.559989047999352,-13.579997653866876],[35.267956170398008,-13.887834161029566],[35.68684533055594,-14.611045830954332],[35.771904738108361,-15.896858819240727],[35.339062941231646,-16.107440280830112],[35.033810255683534,-16.801299737213093],[34.381291945134052,-16.183559665596043],[34.459633416488543,-14.613009535381423],[32.688165317523129,-13.712857761289277],[33.306422153463075,-12.435778090060218],[33.114289178201915,-11.607198174692314],[33.485687697083591,-10.525558770391115],[32.759375441221323,-9.23059905358906],[33.73972903823045,-9.417150974162723],[34.28000613784198,-10.159999688358404],[34.559989047999352,-11.520020033415925]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"MY","name":"Malaysia","type":"Sovereign country","postal":"MY","admin":"Malaysia","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[101.07551557821333,6.204867051615892],[101.15421878459384,5.691384182147715],[101.81428185425804,5.810808417174229],[102.14118696493645,6.221636053894656],[102.9617053568667,5.524495144061078],[103.38121463421217,4.855001125503748],[103.50244754436889,2.791018581550205],[104.22881147666354,1.293048000489534],[103.51970747275445,1.226333726400682],[101.39063846232918,2.760813706875624],[100.19670617065773,5.31249258058368],[100.08575687052709,6.464489447450291],[100.25959638875693,6.642824815289572],[101.07551557821333,6.204867051615892]]],[[[118.61832075406485,4.478202419447541],[117.88203494677018,4.137551377779488],[115.86551720587678,4.306559149590157],[114.6213554220175,1.430688177898887],[113.80584964401956,1.217548732911041],[112.8598091980522,1.497790025229946],[111.79754845586044,0.904441229654651],[110.51406090702713,0.773131415200993],[109.83022667850886,1.338135687664192],[109.66326012577375,2.006466986494985],[110.39613528853707,1.663774725751395],[111.16885298059751,1.850636704918784],[111.3700810079421,2.697303371588873],[112.99561486211527,3.102394924324869],[114.20401655482843,4.52587392823682],[114.65959598191355,4.00763682699781],[114.8695573263154,4.348313706881953],[115.34746097215069,4.316636053887009],[115.45071048386981,5.447729803891562],[116.72510298061977,6.924771429873999],[117.12962609260049,6.928052883324568],[117.68907514859237,5.987490139180181],[119.18190392463995,5.407835598162251],[119.11069380094173,5.016128241389865],[118.43972700406411,4.96651886638962],[118.61832075406485,4.478202419447541]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NA","name":"Namibia","type":"Sovereign country","postal":"NA","admin":"Namibia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[16.344976840895242,-28.576705010697701],[15.210472446359461,-27.090955905874047],[14.257714064194175,-22.111208184499958],[11.794918654028066,-18.069129327061916],[11.734198846085121,-17.301889336824473],[13.462362094789967,-16.971211846588773],[14.05850141770901,-17.423380629142663],[18.263309360434164,-17.309950860262006],[18.956186964603603,-17.789094740472258],[21.377176141045567,-17.930636488519696],[24.033861525170778,-17.295843194246324],[25.076950310982259,-17.578823337476621],[23.579005568137717,-18.281261081620059],[23.196858351339301,-17.869038181227786],[20.910641310314535,-18.252218926672022],[20.88113406747587,-21.814327080983148],[19.895457797940679,-21.849156996347869],[19.894734327888614,-28.461104831660776],[18.464899122804752,-29.045461928017279],[17.387497185951503,-28.783514092729781],[16.824017368240902,-28.08216155366447],[16.344976840895242,-28.576705010697701]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NC","name":"New Caledonia","type":"Dependency","postal":"NC","admin":"New Caledonia","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[165.77998986232637,-21.080004978115628],[167.12001142808691,-22.159990736583492],[166.74003462144481,-22.39997608814695],[165.47437544175222,-21.679606621998232],[164.02960574773601,-20.105645847252354],[165.77998986232637,-21.080004978115628]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NE","name":"Niger","type":"Sovereign country","postal":"NE","admin":"Niger","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[2.15447350424995,11.940150051313424],[2.177107781593918,12.625017808477537],[1.024103224297619,12.851825669806601],[0.429927605805517,13.988733018443895],[0.374892205414767,14.928908189346146],[3.638258904646591,15.568119818580442],[4.270209995143887,16.852227484601315],[4.267419467800096,19.155265204337127],[5.677565952180714,19.601206976799801],[11.999505649471701,23.471668402596435],[13.581424594790462,23.040506089769281],[14.143870883855243,22.491288967371133],[14.8513,22.862950000000126],[15.096887648181848,21.308518785074909],[15.903246697664315,20.387618923417506],[15.247731154041844,16.627305813050782],[13.972201775781684,15.684365953021143],[13.540393507550789,14.367133693901224],[13.956698846094127,13.996691189016929],[13.95447675950561,13.353448798063766],[14.595781284247607,13.330426947477861],[14.18133629726691,12.483656927943173],[13.083987257548813,13.596147162322495],[12.302071160540549,13.037189032437539],[10.989593133191534,13.387322699431195],[9.014933302454438,12.826659247280418],[7.804671258178871,13.343526923063735],[6.820441928747812,13.115091254117601],[5.443058302440136,13.865923977102227],[4.107945997747379,13.531215725147945],[3.611180454125588,11.660167141155966],[2.848643019226586,12.235635891158211],[2.15447350424995,11.940150051313424]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NG","name":"Nigeria","type":"Sovereign country","postal":"NG","admin":"Nigeria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[8.500287713259695,4.771982937026849],[5.898172641634687,4.262453314628985],[4.325607130560684,6.270651149923467],[2.691701694356254,6.258817246928629],[2.723792758809509,8.50684540448971],[3.705438266625919,10.063210354040208],[3.680633579125811,12.552903347214226],[4.107945997747322,13.531215725147831],[5.443058302440164,13.865923977102298],[6.820441928747754,13.115091254117518],[7.804671258178786,13.343526923063747],[9.014933302454466,12.82665924728043],[10.989593133191535,13.38732269943111],[12.302071160540523,13.037189032437524],[13.318701613018561,13.556356309457826],[14.577177768622533,12.085360826053503],[14.415378859116684,11.572368882692075],[13.572949659894562,10.798565985553566],[11.745774366918511,6.981382961449754],[11.058787876030351,6.644426784690594],[10.118276808318257,7.03876963950988],[9.233162876023044,6.444490668153335],[8.500287713259695,4.771982937026849]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NI","name":"Nicaragua","type":"Sovereign country","postal":"NI","admin":"Nicaragua","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-85.712540452807303,11.088444932494824],[-87.668493415054712,12.909909979702633],[-86.733821784191605,13.263092556201443],[-86.75508663607971,13.754845485890913],[-86.096263800790595,14.038187364147248],[-85.80129472526859,13.836054999237589],[-84.924500698572402,14.79049286545235],[-84.449335903648603,14.621614284722497],[-83.147219000974133,14.995829169164111],[-83.855470343750397,11.373311265503787],[-83.655611741861577,10.938764146361422],[-83.895054490885954,10.726839097532446],[-85.712540452807303,11.088444932494824]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NL","name":"Netherlands","type":"Country","postal":"NL","admin":"Netherlands","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[6.074182570020923,53.510403347378144],[6.905139601274129,53.482162177130647],[7.092053256873896,53.144043280644894],[6.589396599970826,51.852029120483394],[5.988658074577813,51.851615709025054],[6.15665815595878,50.803721015010581],[4.973991326526914,51.475023708698131],[3.314971144228537,51.34575511331991],[3.830288527043138,51.620544542031951],[4.705997348661185,53.091798407597764],[6.074182570020923,53.510403347378144]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NO","name":"Norway","type":"Sovereign country","postal":"N","admin":"Norway","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[28.165547316202918,71.185474351680512],[31.293418409965483,70.453787746859916],[30.005435011522792,70.186258856884905],[31.101078728975125,69.558080145944871],[28.591929559043194,69.064776923286701],[29.015572950971972,69.766491197377974],[27.732292107867892,70.164193020296295],[26.179622023226301,69.825298977326156],[25.689212680776393,69.092113755969024],[24.735679152126721,68.649556789821446],[22.356237827247412,68.841741441514955],[21.24493615081073,69.370443020293123],[20.025268995857914,69.065138658312719],[19.878559604581255,68.407194322372618],[17.99386844246439,68.567391262477344],[17.729181756265348,68.010551866316234],[16.768878614985539,68.013936672631388],[13.555689731509091,64.787027696381472],[13.919905226302205,64.445420640716122],[13.57191613124877,64.049114081469668],[12.579935336973932,64.066218980558347],[11.930569288794231,63.128317572676991],[11.992064243221535,61.800362453856565],[12.631146681375242,61.2935716823701],[12.300365838274899,60.11793284773006],[11.027368605196926,58.856149400459401],[10.356556837616097,59.469807033925377],[8.382000359743643,58.313288479233279],[7.048748406613299,58.078884182357285],[5.665835402050419,58.588155422593672],[4.992078077829007,61.970998033284275],[5.912900424837886,62.614472968182696],[8.553411085655768,63.454008287196473],[10.527709181366788,64.486038316497485],[14.761145867581604,67.81064158799515],[19.184028354578516,69.817444159617821],[21.378416375420613,70.255169379346057],[23.023742303161583,70.202071845166273],[24.546543409938522,71.030496731237236],[28.165547316202918,71.185474351680512]]],[[[24.72412,77.85385],[22.49032,77.44493],[20.72601,77.67704],[21.41611,77.93504],[20.8119,78.25463],[22.88426,78.45494],[23.28134,78.07954],[24.72412,77.85385]]],[[[18.25183,79.70175],[21.54383,78.95611],[19.02737,78.5626],[18.47172,77.82669],[17.59441,77.63796],[17.1182,76.80941],[15.91315,76.77045],[13.76259,77.38035],[14.66956,77.73565],[11.22231,78.8693],[10.44453,79.65239],[13.17077,80.01046],[13.71852,79.66039],[15.14282,79.67431],[15.52255,80.01608],[16.99085,80.05086],[18.25183,79.70175]]],[[[25.447625359811894,80.407340399894508],[27.407505730913499,80.056405748200461],[25.924650506298178,79.517833970854554],[23.02446577321362,79.400011705229105],[20.075188429451885,79.566823228667261],[19.897266473070914,79.842361965647513],[18.462263624757924,79.859880276194417],[17.368015170977458,80.318896186027018],[20.455992059010697,80.59815562613224],[21.907944777115404,80.357679348462085],[22.919252557067438,80.657144273593502],[25.447625359811894,80.407340399894508]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NP","name":"Nepal","type":"Sovereign country","postal":"NP","admin":"Nepal","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[88.12044070836987,27.876541652939594],[88.06023766474982,26.414615383402491],[87.227471958366294,26.397898057556077],[85.251778598983378,26.726198431906344],[84.675017938173795,27.234901231387536],[83.304248895199549,27.364505723575562],[80.088424513676273,28.79447011974014],[80.476721225917402,29.729865220655341],[81.525804477874743,30.422716986608631],[85.823319940131512,28.203575954698707],[88.12044070836987,27.876541652939594]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"NZ","name":"New Zealand","type":"Country","postal":"NZ","admin":"New Zealand","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[173.02037479074076,-40.919052422856424],[173.24723432850206,-41.331998793300784],[173.9584053897029,-40.926700534835618],[174.24758670480813,-41.34915536882167],[174.24851688058951,-41.770008233406756],[172.71124637277077,-43.372287693048506],[173.08011274647023,-43.853343601253584],[171.45292524646365,-44.242518812843727],[170.61669721911662,-45.908928724959708],[169.33233117093428,-46.641235446967855],[166.67688602118423,-46.21991749449225],[166.50914432196473,-45.852704766626218],[167.04642418850327,-45.110941257508671],[168.30376346259689,-44.123973077166127],[170.52491987536618,-43.03168832781283],[171.94870893787194,-41.514416599291152],[172.09722700427878,-40.956104424809681],[172.798579543344,-40.493962090823473],[173.02037479074076,-40.919052422856424]]],[[[174.61200890533055,-36.156397393540544],[175.3366158389272,-37.20909799575827],[175.35759647043753,-36.526193943021127],[175.8088867536425,-36.798942152657688],[175.95849002512753,-37.55538176854607],[176.76319542877658,-37.881253350578703],[178.51709354076283,-37.695373223624799],[177.97046023997936,-39.166342868812976],[177.20699262929915,-39.145775648760846],[177.03294640534014,-39.879942722331478],[176.01244022044031,-41.289624118821507],[175.23956749908299,-41.688307793953243],[174.65097293527847,-41.281820977545451],[175.22763024322367,-40.459235528323404],[174.90015669178999,-39.90893320084723],[173.82404666574402,-39.508854262043513],[173.85226199777534,-39.146602471677468],[174.57480187408041,-38.797683200842755],[174.69701663645063,-37.381128838857961],[172.63600548735374,-34.529106540669389],[173.00704227120949,-34.450661716450341],[174.3293904971263,-35.265495700828623],[174.61200890533055,-36.156397393540544]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"OM","name":"Oman","type":"Sovereign country","postal":"OM","admin":"Oman","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[58.861141391846587,21.114034532144302],[58.487985874266968,20.428985907467109],[57.826372511634105,20.243002427648634],[57.694390903560674,18.944709580963803],[56.609650913321985,18.574267076079479],[56.283520949128018,17.876066799383949],[55.661491733630697,17.884128322821539],[54.791002231674128,16.950696926333364],[53.108572625547509,16.651051133688981],[52.000009800022241,19.000003363516072],[54.999981723862419,19.999994004796122],[55.666659376859883,22.000001125572311],[55.234489373602884,23.110992743415352],[55.528631626208295,23.933604030853502],[55.981213820220518,24.130542914317857],[55.886232537668064,24.920830593357493],[56.396847365143998,24.924732163995515],[57.40345258975745,23.878594468678841],[58.729211460205448,23.565667832935418],[59.808060337162857,22.533611965418203],[58.861141391846587,21.114034532144302]]],[[[56.391421339753407,25.895990708921261],[56.261041701080927,25.714606431576755],[56.070820753814559,26.055464178973949],[56.362017449779358,26.395934353128951],[56.391421339753407,25.895990708921261]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PK","name":"Pakistan","type":"Sovereign country","postal":"PK","admin":"Pakistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[75.158027785140916,37.133030910789117],[75.89689741405013,36.666806138651836],[76.192848341785691,35.898403428687828],[77.837450799474567,35.494009507787766],[76.871721632804025,34.653544012992739],[74.240202671204969,34.748887030571254],[73.749948358051967,34.317698879527853],[74.451559279278712,32.764899603805503],[75.258641798813215,32.271105455040498],[74.405928989565012,31.692639471965279],[74.421380242820277,30.979814764931177],[71.777665643200322,27.913180243434525],[70.616496209601934,27.989196275335868],[69.514392938113133,26.940965684511372],[70.168926629522019,26.491871649678842],[71.043240187468228,24.3565239527302],[68.842599318318776,24.359133612560939],[68.176645135373406,23.691965033456711],[67.443666619745471,23.944843654876991],[66.372827589793275,25.425140896093851],[61.49736290878419,25.078237006118499],[61.87418745305655,26.239974880472104],[63.316631707619592,26.756532497661667],[63.233897739520302,27.217047024030709],[62.755425652929858,27.378923448184988],[62.727830438085988,28.25964488373539],[61.771868117118629,28.699333807890799],[60.874248488208792,29.829238999952608],[62.549856805272782,29.318572496044311],[65.046862013616106,29.472180691031905],[66.346472609324422,29.887943427036177],[66.381457553986024,30.738899237586452],[66.938891229118468,31.304911200479353],[69.317764113242561,31.901412258424443],[69.262522007122556,32.5019440780883],[69.687147251264861,33.105498969041236],[70.323594191371598,33.358532619758392],[69.930543247359594,34.02012014417511],[70.881803012988399,33.98885590263852],[71.613076206350712,35.153203436822864],[71.26234826038575,36.074387518857804],[71.846291945283923,36.509942328429858],[75.158027785140916,37.133030910789117]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PA","name":"Panama","type":"Sovereign country","postal":"PA","admin":"Panama","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-77.881571417945253,7.223771267114785],[-78.429160732726075,8.052041123888927],[-78.182095709938636,8.319182440621773],[-79.120307176413746,8.996092027213024],[-80.382659064439622,8.298408514840432],[-80.003689948227162,7.547524115423372],[-80.42115800649708,7.271571966984765],[-80.886400926420805,7.220541490096537],[-81.059542812814726,7.817921047390597],[-81.51951473664468,7.706610012233909],[-81.721311204744467,8.108962714058436],[-82.82008134635042,8.290863755725823],[-82.850958014644817,8.073822740099956],[-82.932890998043575,9.476812038608173],[-82.546196255203483,9.566134751824677],[-82.207586432610967,8.9955752628901],[-81.439287075511544,8.786234035675719],[-79.573302781884308,9.611610012241528],[-78.055927700498017,9.247730414258299],[-77.353360765273862,8.67050466555807],[-77.242566494440084,7.935278225125444],[-77.753413865861404,7.709839789252143],[-77.881571417945253,7.223771267114785]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PE","name":"Peru","type":"Sovereign country","postal":"PE","admin":"Peru","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-69.59042375352405,-17.580011895419332],[-70.372572394477714,-18.347975355708869],[-71.375250210236928,-17.773798516513857],[-71.462040778271131,-17.363487644116383],[-76.009205084929945,-14.649286390850321],[-76.423469204397747,-13.823186944232432],[-76.25924150257417,-13.535039157772943],[-79.760578172510051,-7.194340915560084],[-81.249996304026425,-6.136834405139183],[-80.926346808582437,-5.690556735866565],[-81.410942552399462,-4.73676482505546],[-81.099669562489368,-4.036394138203697],[-80.302560594387216,-3.404856459164713],[-80.442241990872162,-4.425724379090674],[-79.624979214176179,-4.454198093283495],[-79.205289069317729,-4.959128513207389],[-78.639897223612337,-4.547784112164074],[-77.837904832658609,-3.003020521663103],[-76.635394253226721,-2.608677666843818],[-75.544995693652041,-1.56160979574588],[-75.233722703741947,-0.911416924649529],[-75.373223232713855,-0.15203175212045],[-75.106624518520078,-0.05720549886486],[-73.6595035468346,-1.260491224781134],[-73.070392218707241,-2.308954359550953],[-70.813475714791963,-2.256864515800743],[-70.047708502874855,-2.725156345229699],[-70.692682054309714,-3.742872002785859],[-69.893635219996625,-4.298186944194328],[-70.794768846302304,-4.251264743673303],[-72.891927659787257,-5.274561455916981],[-73.120027431923603,-6.629930922068239],[-73.724486660441642,-6.91859547285064],[-73.987235480429661,-7.523829847853065],[-73.015382656532552,-9.032833347208062],[-73.226713426390162,-9.462212823121234],[-72.563033006465645,-9.520193780152717],[-72.18489071316985,-10.053597914269432],[-71.302412278921537,-10.079436130415374],[-70.481893886991173,-9.490118096558845],[-70.548685675728407,-11.009146823778465],[-69.529678107364958,-10.951734307502194],[-68.665079718689626,-12.561300144097173],[-68.948886684836594,-14.453639418193283],[-69.339534674747014,-14.953195489158832],[-69.160346645774951,-15.323973890853019],[-69.389764166934711,-15.660129082911652],[-68.959635382753305,-16.50069793057127],[-69.59042375352405,-17.580011895419332]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PH","name":"Philippines","type":"Sovereign country","postal":"PH","admin":"Philippines","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[126.37681359263749,8.414706325713354],[126.53742394420064,7.189380601424574],[126.19677290253256,6.27429433840004],[125.8314205262291,7.293715318221857],[125.3638521668523,6.786485297060992],[125.68316084198372,6.049656887227258],[125.39651167206065,5.58100332277229],[124.21978763234236,6.161355495626182],[123.93871951710693,6.885135606306122],[124.24366214406135,7.360610459823661],[123.61021243702757,7.833527329942754],[122.08549930225578,6.899424139834849],[121.91992801319262,7.192119452336073],[122.31235884001714,8.034962063016508],[123.48768761606354,8.693009751821194],[123.84115441293986,8.240324204944386],[124.60146976125023,8.514157619659017],[124.76461225799565,8.96040945071546],[125.47139082245158,8.986996975129642],[125.4121179546128,9.760334784377548],[126.22271447154318,9.286074327018852],[126.37681359263749,8.414706325713354]]],[[[123.98243777882581,10.278778591345812],[122.99588300994165,9.0221886255204],[122.38005496631948,9.713360907424203],[122.94741051645192,10.881868394408031],[123.49884972543848,10.940624497923949],[123.33777428598475,10.267383938025446],[124.07793582570125,11.23272553145371],[123.98243777882581,10.278778591345812]]],[[[118.50458092659036,9.316382554558089],[117.17427453010069,8.367499904814665],[119.51149620979757,11.369668077027214],[119.68967654833992,10.554291490109875],[118.50458092659036,9.316382554558089]]],[[[121.88354780485915,11.89175507247198],[123.12021650603597,11.58366018314787],[123.10083784392648,11.16593374271649],[122.00261030485959,10.441016750526089],[121.88354780485915,11.89175507247198]]],[[[125.50255171112352,12.162694606978349],[125.78346479706218,11.046121934447768],[125.01188398651229,11.31145457605038],[125.27744917206027,10.358722032101312],[124.80181928924574,10.134678859899893],[124.7601680848185,10.837995103392302],[124.45910119028608,10.889929917845635],[124.30252160044174,11.495370998577229],[124.89101281138161,11.415582587118593],[124.87799035044398,11.794189968304991],[124.26676150929572,12.557760931849685],[125.22711632700785,12.535720933477194],[125.50255171112352,12.162694606978349]]],[[[121.52739383350351,13.069590155484519],[121.26219038298157,12.205560207564403],[120.32343631396751,13.46641347905387],[121.18012820850217,13.429697373910443],[121.52739383350351,13.069590155484519]]],[[[121.32130822152359,18.504064642811016],[121.9376013530364,18.218552354398383],[122.24600630095429,18.478949896717097],[122.51565392465338,17.093504746971973],[122.25231082569391,16.262444362854126],[121.6627860861083,15.931017564350128],[121.72882856657728,14.328376369682246],[122.70127566944566,14.336541245984421],[123.95029503794026,13.78213064214107],[124.07741906137827,12.536676947474575],[122.92865197152994,13.552919826710408],[122.67135501514869,13.185836289925135],[122.03464969288055,13.784481919810347],[120.62863732308332,13.857655747935652],[120.99181928923056,14.525392767795083],[120.6933362163127,14.756670640517285],[120.564145135583,14.396279201713824],[120.07042850146641,14.970869452367097],[119.88377322802828,16.363704331929966],[120.28648766487882,16.034628811095331],[120.71586714079191,18.505227362537539],[121.32130822152359,18.504064642811016]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PG","name":"Papua New Guinea","type":"Sovereign country","postal":"PG","admin":"Papua New Guinea","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[155.88002566957843,-6.81999684003776],[155.16699425681512,-6.535931491729301],[154.51411421123967,-5.139117526880014],[156.01996544822478,-6.540013929880388],[155.88002566957843,-6.81999684003776]]],[[[151.98279585185449,-5.478063246282346],[150.24119673075384,-6.317753594592986],[148.31893680236075,-5.74714242922613],[148.40182579975689,-5.437755629094724],[149.84556196512725,-5.505503431829339],[150.13975589416495,-5.001348158389789],[150.23690758687351,-5.532220147324281],[150.80746707580809,-5.455842380396888],[151.64788089417087,-4.757073662946169],[151.53786176982155,-4.16780730552189],[152.33874311748102,-4.312966403829762],[151.98279585185449,-5.478063246282346]]],[[[147.19187381407497,-7.38802418378998],[148.0846358583494,-8.044108168167611],[148.7341052593936,-9.104663588093757],[149.30683515848446,-9.071435642130069],[149.26663089416135,-9.514406019736029],[150.80162763895916,-10.293686618697421],[150.69057498596388,-10.582712904505868],[147.91301842670802,-10.130440769087471],[146.56788089415065,-8.942554619994155],[146.04848107318494,-8.06741423913131],[144.74416792213802,-7.630128269077474],[143.2863757671843,-8.245491224809058],[143.41391320208069,-8.983068942910947],[142.62843143124425,-9.326820570516503],[141.0338517600139,-9.117892754760419],[141.00021040259188,-2.600151055515624],[144.58397098203326,-3.861417738463402],[145.82978641172568,-4.876497897972683],[145.98192182839298,-5.465609226100014],[147.6480733583476,-6.083659356310804],[147.8911076194162,-6.614014580922316],[146.97090538959489,-6.721656589386257],[147.19187381407497,-7.38802418378998]]],[[[153.14003787659877,-4.499983412294114],[152.82729210836831,-4.766427097190999],[152.40602583232496,-3.789742526874562],[150.66204959533886,-2.741486097833956],[150.93996544820456,-2.500002129734028],[152.2399894553711,-3.240008640153661],[153.01999352438466,-3.980015150573294],[153.14003787659877,-4.499983412294114]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PL","name":"Poland","type":"Sovereign country","postal":"PL","admin":"Poland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[15.016995883858669,51.10667409932158],[14.074521111719491,52.981262518925433],[14.353315463934138,53.248171291712971],[14.119686313542587,53.75702912049104],[17.622831658608675,54.851535956432912],[18.620858595461641,54.682605699270781],[18.696254510175464,54.43871877706929],[23.243987257589509,54.220566718149144],[23.799198846133379,52.691099351606567],[23.199493849386187,52.486977444053672],[24.029985792748903,50.705406602575181],[22.518450148211603,49.476773586619743],[22.776418898212626,49.027395331409622],[21.607808058364213,49.470107326854091],[19.825022820726872,49.217125352569226],[19.320712517990472,49.571574001659194],[18.909574822676319,49.435845852244576],[18.392913852622172,49.988628648470751],[17.649445021238989,50.049038397819956],[17.554567091551121,50.362145901076417],[16.868769158605659,50.47397370055603],[16.719475945714436,50.215746568393541],[16.176253289462267,50.422607326857907],[16.238626743238569,50.697732652379841],[15.016995883858669,51.10667409932158]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PR","name":"Puerto Rico","type":"Dependency","postal":"PR","admin":"Puerto Rico","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-66.282434455008215,18.514761664295364],[-65.591003790942949,18.228034979723915],[-65.847163865813769,17.975905666571862],[-67.184162360285271,17.946553453030077],[-67.10067908391774,18.520601101144351],[-66.282434455008215,18.514761664295364]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"KP","name":"Dem. Rep. Korea","type":"Sovereign country","postal":"KP","admin":"North Korea","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[130.64001590385243,42.395009467125277],[130.78000735893113,42.22000722916885],[130.40003055228902,42.280003567059708],[129.66736209525482,41.601104437825228],[129.70518924369247,40.882827867184332],[127.53343550019417,39.756850083976701],[127.38543419811027,39.213472398427655],[128.34971642467661,38.61224294692785],[128.20574588431145,38.370397243801889],[125.2753304383362,37.669070542952724],[124.71216067921938,38.10834605564979],[125.38658979706059,39.387957872061165],[124.26562462778531,39.928493353834156],[125.07994184784064,40.569823716792449],[126.86908328664987,41.81656932226619],[128.20843305879066,41.466771552082491],[128.05221520397231,41.994284572917948],[129.59666873587952,42.424981797854556],[129.99426720593323,42.985386867843786],[130.64001590385243,42.395009467125277]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PT","name":"Portugal","type":"Sovereign country","postal":"P","admin":"Portugal","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-9.034817674180246,41.880570583659676],[-8.263856980817792,42.28046865495034],[-8.013174607769912,41.790886135417125],[-6.668605515967657,41.883386949219584],[-6.389087693700915,41.381815497394655],[-6.851126674822552,41.111082668617527],[-7.066591559263529,39.711891587882775],[-7.498632371439726,39.629571031241809],[-7.098036668313128,39.030072740223787],[-7.374092169616318,38.373058580064921],[-7.029281175148796,38.075764065089771],[-7.855613165711986,36.838268540996268],[-8.898856980820327,36.868809312480778],[-8.83999752443988,38.266243394517616],[-9.526570603869715,38.737429104154913],[-8.768684047877102,40.760638943030187],[-9.034817674180246,41.880570583659676]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PY","name":"Paraguay","type":"Sovereign country","postal":"PY","admin":"Paraguay","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-62.685057135657885,-22.249029229422387],[-61.786326463453769,-19.633736667562964],[-59.115042487206111,-19.356906019775401],[-58.183471442280506,-19.868399346600363],[-57.8706739976178,-20.732687676681952],[-57.937155727761294,-22.090175876557172],[-55.797958136606908,-22.356929620047822],[-55.400747239795422,-23.956935316668805],[-54.292959560754518,-24.021014092710729],[-54.788794928595053,-26.621785577096134],[-55.695845506398157,-27.387837009390864],[-56.486701626192996,-27.548499037386293],[-58.618173590719749,-27.123718763947096],[-57.633660040911131,-25.603656508081642],[-57.777217169817938,-25.16233977630904],[-60.846564704009914,-23.880712579038292],[-62.685057135657885,-22.249029229422387]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"PS","name":"Palestine","type":"Disputed","postal":"PAL","admin":"Palestine","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[35.545665317534542,32.393992011030576],[35.397560662586045,31.489086005167582],[34.927408481594568,31.353435370401414],[35.22589155451243,31.754341132121766],[34.974640740709333,31.866582343059722],[35.183930291491436,32.532510687788943],[35.545665317534542,32.393992011030576]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"QA","name":"Qatar","type":"Sovereign country","postal":"QA","admin":"Qatar","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[50.810108270069577,24.754742539971378],[50.743910760303692,25.482424221289396],[51.286461622936059,26.114582017515868],[51.606700473848811,25.215670477798739],[51.38960778179063,24.627385972588058],[50.810108270069577,24.754742539971378]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RO","name":"Romania","type":"Sovereign country","postal":"RO","admin":"Romania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.710531447040495,47.882193915389408],[23.142236362406805,48.096341050806949],[24.866317172960578,47.737525743188314],[26.197450392366932,48.220881252630349],[26.924176059687568,48.123264472030996],[28.128030226359044,46.810476386088254],[28.233553501099042,45.488283189468376],[29.149724969201653,45.464925442072456],[29.626543409958771,45.035390936862399],[28.8378577003202,44.913873806328056],[28.558081495891997,43.707461656258133],[27.242399529740908,44.175986029632405],[25.569271681426926,43.688444729174719],[22.944832391051847,43.82378530534713],[22.474008416440601,44.409227606781769],[22.705725538837356,44.578002834647023],[21.562022739353608,44.7689472519655],[21.483526238702236,45.18117015235778],[20.220192498462836,46.127468980486555],[21.021952345471249,46.316087958351901],[22.099767693782837,47.672439276716702],[22.710531447040495,47.882193915389408]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RU","name":"Russia","type":"Sovereign country","postal":"RUS","admin":"Russia","sales_rgn":5},"geometry":{"type":"MultiPolygon","coordinates":[[[[143.64800744036287,50.747600409541519],[144.65414757708564,48.976390692737596],[143.17392785051723,49.306551418650372],[142.5586682476501,47.861575018904915],[143.53349246640406,46.836728013692493],[143.50527713437262,46.137907619809482],[142.74770063697392,46.740764878926569],[142.09203006405451,45.966755276058791],[141.90444461483506,48.85918854429957],[142.17998335181531,50.952342434281917],[141.59407596249005,51.935434882202543],[141.68254601457366,53.301966457728781],[142.60693403541077,53.762145087287905],[142.2097489768154,54.225475979216867],[142.65478641171299,54.365880845753878],[143.64800744036287,50.747600409541519]]],[[[22.731098667092652,54.327536932993326],[20.892244500418656,54.312524929412575],[19.660640089606403,54.426083889373984],[19.888481479581344,54.866160386771497],[21.268448927503499,55.190481675835287],[22.757763706155288,54.856574408581423],[22.731098667092652,54.327536932993326]]],[[[-175.01425,66.58435],[-174.33983,66.33556],[-174.57182,67.06219],[-171.85731,66.91308],[-169.89958,65.97724],[-170.89107,65.54139],[-172.53025,65.43791],[-172.555,64.46079],[-172.95533,64.25269],[-175.98353,64.92288],[-176.20716,65.35667],[-178.35993,65.39052],[-178.90332,65.74044],[-178.68611,66.11211],[-179.88377,65.87456],[-179.43268,65.40411],[-180.0,64.979708702198366],[-180.0,68.963636363636368],[-174.92825,67.20589],[-175.01425,66.58435]]],[[[180.00000000000014,70.832199208546683],[178.90342500000011,70.78114],[178.7253,71.0988],[180.00000000000014,71.51571433642826],[180.00000000000014,70.832199208546683]]],[[[-178.69378,70.89302],[-180.0,70.832199208546683],[-180.0,71.51571433642826],[-177.577945,71.26948],[-178.69378,70.89302]]],[[[143.60385,73.21244],[142.08763,73.20544],[139.86312,73.36983],[142.06207,73.85758],[143.60385,73.21244]]],[[[150.73167,75.08406],[149.575925,74.68892],[146.11919,75.17298],[146.358485,75.49682],[150.73167,75.08406]]],[[[145.086285,75.56262],[144.3,74.82],[138.95544,74.61148],[136.97439,75.26167],[137.51176,75.94917],[138.831075,76.13676],[145.086285,75.56262]]],[[[57.5356925799924,70.72046397570216],[53.677375115784201,70.76265778266847],[53.412016635965387,71.206661688920207],[51.601894565645722,71.474759019650492],[51.455753615124223,72.014881089965144],[52.478275180883571,72.22944163684096],[52.444168735570855,72.774731350384855],[54.427613559797663,73.627547512497586],[53.50828982932515,73.749813951300155],[55.902458937407658,74.627486477345343],[55.631932814359715,75.081412258597169],[61.170044386647504,76.251883450008137],[68.157059767534832,76.939696763812918],[68.852211134725138,76.544811306454619],[61.583507521414759,75.260884507946798],[58.47708214705338,74.309056301562833],[55.419335971910954,72.371267605265984],[55.622837762276305,71.54059479439033],[57.5356925799924,70.72046397570216]]],[[[106.97013000000013,76.97419],[107.24000000000015,76.48],[111.07726000000017,76.71],[114.13417,75.84764],[113.88539,75.327790000000135],[109.4,74.18],[112.11919,73.787740000000127],[113.01954000000026,73.976930000000152],[113.52958000000032,73.335050000000109],[115.56782,73.75285],[118.77633000000023,73.58772],[119.02,73.12],[123.20066000000011,72.97122],[123.25777000000019,73.735030000000108],[126.97644,73.56549],[128.59126,73.03871],[129.05157,72.39872],[128.46000000000012,71.98],[129.71599000000023,71.19304],[131.28858000000028,70.786990000000117],[132.25350000000017,71.836300000000108],[133.85766000000032,71.386420000000157],[135.56193,71.655250000000137],[137.49755,71.34763],[138.23409000000018,71.62803],[139.86983000000012,71.487830000000145],[139.14791,72.416190000000114],[140.46817,72.849410000000148],[149.5,72.2],[150.3511800000002,71.60643],[152.96890000000022,70.84222],[158.99779,70.86672],[159.83031000000025,70.45324],[159.70866,69.72198],[160.94053000000034,69.437280000000101],[167.83567,69.58269],[169.5776300000002,68.6938],[170.81688000000028,69.01363],[170.00820000000019,69.65276],[170.45345000000029,70.09703],[175.72403000000023,69.877250000000231],[180.00000000000014,68.963636363636567],[180.00000000000014,64.979708702198479],[178.70720000000026,64.53493],[177.41128000000018,64.60821],[179.37034,62.982620000000111],[179.22825000000014,62.304100000000147],[177.3643,62.5219],[173.68013,61.65261],[170.69850000000011,60.33618],[170.33085000000031,59.88177],[168.90046,60.57355],[166.29498000000032,59.788550000000214],[165.84000000000023,60.16],[164.87674,59.7316],[163.53929000000014,59.86871],[163.21711000000025,59.21101],[162.0173300000001,58.24328],[162.05297,57.83912],[163.19191,57.615030000000104],[163.05794000000017,56.159240000000125],[162.12958000000023,56.12219],[161.70146,55.285680000000156],[162.11749000000017,54.85514],[160.36877000000035,54.34433],[160.02173000000025,53.20257],[158.53094000000019,52.958680000000243],[158.23118,51.94269],[156.78979000000029,51.01105],[155.43366000000012,55.381030000000123],[155.91442000000032,56.767920000000146],[156.75815,57.3647],[156.81035000000011,57.83204],[158.36433000000019,58.05575],[161.87204,60.343000000000131],[163.66969,61.140900000000101],[164.47355000000013,62.55061],[163.2584200000002,62.46627],[162.65791,61.6425],[160.1214800000001,60.54423],[159.30232,61.773960000000102],[156.7206800000001,61.43442],[154.21806000000035,59.758180000000124],[155.04375,59.14495],[151.26573000000027,58.78089],[151.33815000000013,59.50396],[149.78371,59.655730000000148],[148.54481,59.16448],[145.48722,59.33637],[142.19782000000018,59.03998],[135.12619,54.72959],[136.70171,54.603550000000126],[137.19342,53.97732],[138.1647,53.755010000000254],[138.80463,54.254550000000108],[139.90151,54.18968000000018],[141.34531,53.089570000000123],[141.37923,52.23877],[140.5974200000002,51.239670000000103],[140.06193000000022,48.446710000000166],[138.21971,46.30795],[134.86939000000027,43.39821],[133.53687000000028,42.81147],[132.90627000000015,42.798490000000101],[132.27807000000027,43.284560000000113],[130.78,42.220000000000198],[130.63386640840983,42.903014634770557],[131.14468794161499,42.929989732426947],[131.28855512911562,44.111519680348266],[131.02519000000026,44.96796],[131.88345421765959,45.321161607436522],[133.09712000000022,45.14409],[135.02631147678679,48.478229885443909],[132.50669000000013,47.78896],[130.98726000000013,47.79013],[130.58229332898267,48.729687404976204],[129.39781782442051,49.440600084015614],[127.65740000000037,49.76027],[125.94634891164648,52.79279857035695],[125.06821129771046,53.161044826868931],[123.57147,53.4588],[121.00308475147037,53.251401068731241],[120.17708865771689,52.753886216841209],[120.725789015792,52.516226304730907],[120.7382,51.96411],[119.27939,50.58292],[119.28846072802585,50.142882798861962],[117.8792444194265,49.510983384797044],[116.67880089728621,49.888531399121405],[115.48569542853144,49.805177313834747],[114.36245649623535,50.248302720737485],[112.89773969935439,49.543565375356991],[110.66201053267886,49.130128078805853],[108.47516727095129,49.282547715850711],[106.88880415245532,50.27429596618029],[103.67654544476036,50.089966132195144],[102.25589000000011,50.510560000000112],[102.06521,51.259910000000104],[98.861490513100506,52.047366034546712],[97.825739780674525,51.01099518493325],[98.231761509191728,50.42240062112873],[97.259760000000227,49.72605],[94.815949334698786,50.013433335970888],[94.147566359435615,50.480536607457168],[92.23471154171969,50.802170722041751],[88.805566847695587,49.470520738312473],[87.359970330762707,49.214980780629162],[86.829356723989662,49.82667470966814],[85.5412699726825,49.692858588248157],[83.383003778012466,51.069182847693895],[81.945985548839957,50.812195949906339],[80.56844689323546,51.388336493528442],[80.035559523441719,50.864750881547224],[77.800915561844334,53.404414984747547],[76.525179477854778,54.177003485727141],[76.891100294913457,54.490524400441927],[74.384820000000133,53.54685000000012],[73.425678745420527,53.489810289109755],[73.508516066384374,54.035616766976602],[72.224150018202209,54.376655381886792],[71.180131056609497,54.133285224008262],[70.865266554655165,55.169733588270105],[69.068166945272907,55.385250149143502],[65.178533563095954,54.354227810272079],[61.436600000000141,54.00625],[60.97806644068325,53.664993394579142],[61.699986199800634,52.979996446334269],[60.739993117114551,52.719986477257748],[60.927268507740251,52.447548326215014],[59.967533807215574,51.960420437215674],[61.588003371024143,51.272658799843185],[61.337424350841019,50.799070136104262],[59.932807244715576,50.842194118851836],[59.642282342370578,50.545442206415714],[58.36332000000013,51.06364],[56.77798,51.04355],[55.716940000000108,50.621710000000149],[52.328723585831057,51.718652248738096],[50.766648390512188,51.692762356159875],[48.702381626181051,50.605128485712839],[48.577841424357615,49.874759629915644],[47.549480421749394,50.454698391311126],[46.466445753776298,48.39415233010493],[47.315240000000159,47.71585],[48.05725,47.74377],[48.694733514201886,47.075628160177899],[48.593250000000154,46.561040000000105],[49.101160000000135,46.399330000000106],[48.645410000000112,45.80629],[47.67591,45.641490000000118],[46.68201,44.609200000000101],[47.59094,43.660160000000133],[47.49252,42.98658],[48.584370000000177,41.80888],[47.81566572448466,41.151416124021353],[45.7764,42.092440000000238],[45.470279168485916,42.502780666670049],[43.931210000000107,42.554960000000108],[42.394400000000161,43.2203],[39.955008579271095,43.434997666999294],[36.675460000000129,45.24469],[37.40317,45.404510000000101],[38.23295,46.24087],[37.67372,46.63657],[39.14767,47.044750000000136],[39.12120000000013,47.26336],[38.223538038899477,47.102189846375978],[38.255112339029807,47.54640045835697],[39.738277622238996,47.898937079452082],[39.67465,48.783820000000134],[40.069040000000115,49.60105],[38.010631137857075,49.915661526074729],[37.393459506995242,50.383953355503678],[36.626167840325394,50.225590928745135],[35.356116163888117,50.577197374059153],[35.022183058417937,51.207572333371502],[34.224815708154409,51.255993150428935],[34.391730584457235,51.768881740925906],[33.752699822735877,52.33507457133166],[31.78597,52.10168],[31.305200636527985,53.073995876673308],[32.693643019346126,53.351420803432148],[31.731272820774592,53.794029446012019],[30.757533807098781,54.811770941784403],[30.873909132620071,55.550976467503517],[29.37157189303079,55.670090643936277],[28.17670942557794,56.169129950578792],[27.770015903440992,57.244258124411203],[27.288184848751655,57.474528306703917],[27.716685825315778,57.79189911562446],[27.420150000000206,58.724570000000142],[28.131699253051863,59.300825100330997],[27.98112,59.47537],[29.1177,60.028050000000121],[28.07,60.503520000000151],[31.139991082491036,62.357692776124452],[31.516092156711267,62.867687486412905],[30.035872430142803,63.552813625738565],[30.44468468600374,64.204453436939076],[29.544429559047018,64.948671576590556],[30.21765,65.80598],[29.054588657352383,66.944286200622031],[29.977426385220696,67.698297024192755],[28.445943637818772,68.364612942164001],[28.591929559043365,69.064776923286701],[32.132720000000262,69.905950000000246],[33.77547,69.301420000000121],[36.51396,69.06342],[41.059870000000132,67.45713000000012],[41.125950000000188,66.791580000000124],[38.38295,65.999530000000107],[33.918710000000175,66.75961],[33.18444,66.63253],[34.81477,65.900150000000139],[34.943910000000159,64.414370000000162],[37.012730000000118,63.849830000000111],[37.141970000000157,64.33471],[36.539579035089815,64.76446],[37.176040000000143,65.143220000000127],[39.59345,64.520790000000176],[40.435600000000107,64.76446],[39.762600000000162,65.49682],[42.093090000000103,66.47623],[43.949750000000137,66.06908],[44.53226,66.756340000000137],[43.69839,67.35245],[44.187950000000143,67.95051],[43.45282,68.57079],[46.250000000000142,68.25],[46.821340000000163,67.68997],[45.55517,67.56652],[45.562020000000103,67.010050000000206],[46.349150000000151,66.667670000000101],[47.894160000000255,66.884550000000161],[48.13876,67.52238],[53.717430000000178,68.85738000000012],[54.47171,68.80815],[53.485820000000132,68.20131],[54.72628,68.09702],[55.442680000000138,68.43866],[57.317020000000156,68.46628],[58.80200000000022,68.88082],[59.941420000000193,68.278440000000103],[61.07784000000018,68.94069],[60.03,69.52],[60.55,69.85],[63.504000000000161,69.54739],[68.512160000000137,68.092330000000175],[69.18068,68.615630000000124],[68.13522,69.35649],[66.930080000000117,69.454610000000116],[67.25976,69.92873],[66.69466,71.028970000000243],[68.540060000000125,71.934500000000241],[69.196360000000112,72.84336000000016],[69.94,73.040000000000134],[72.58754,72.776290000000103],[72.79603,72.22006],[71.848110000000105,71.40898],[72.47011,71.09019],[72.79188,70.39114],[72.564700000000215,69.02085],[73.66787,68.4079],[73.2387,67.7404],[71.280000000000115,66.320000000000164],[72.423010000000176,66.172670000000181],[73.92099000000016,66.789460000000133],[74.186510000000197,67.28429],[75.052,67.760470000000169],[74.469260000000162,68.32899],[74.935840000000127,68.98918],[73.84236,69.07146],[73.601870000000218,69.62763],[74.3998,70.63175],[73.1011,71.447170000000256],[74.890820000000218,72.12119],[74.65926,72.83227],[75.158010000000189,72.854970000000122],[75.68351,72.300560000000132],[75.288980000000123,71.33556],[76.35911,71.152870000000149],[75.903130000000175,71.87401],[77.576650000000114,72.26717],[79.652020000000135,72.32011],[81.5,71.75],[80.610710000000125,72.582850000000121],[80.51109,73.6482],[86.82230000000024,73.93688],[86.00956,74.459670000000159],[87.166820000000172,75.11643],[92.90058,75.77333],[93.234210000000161,76.0472],[96.67821,75.91548],[98.922540000000225,76.44689],[100.75967000000023,76.43028],[101.99084000000013,77.287540000000206],[104.3516000000001,77.69792],[106.06664000000015,77.37389],[104.70500000000024,77.1274],[106.97013000000013,76.97419]]],[[[105.07547,78.30689],[99.43814,77.921],[101.2649,79.23399],[102.08635,79.34641],[105.37243,78.71334],[105.07547,78.30689]]],[[[51.13618655783128,80.547280178540944],[47.586119012244154,80.010181179515342],[46.502825962109654,80.247246812654367],[47.072455275262911,80.559424140129465],[44.846958042181114,80.589809882317184],[48.318477410684665,80.784009914869955],[48.522806023966695,80.514568996900152],[50.039767693894618,80.918885403151819],[51.522932977103693,80.69972565380192],[51.13618655783128,80.547280178540944]]],[[[99.93976,78.88094],[94.97259,79.044745],[93.31288,79.4265],[92.5454,80.14379],[91.18107,80.34146],[95.940895,81.2504],[100.186655,79.780135],[99.93976,78.88094]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RW","name":"Rwanda","type":"Sovereign country","postal":"RW","admin":"Rwanda","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[30.419104852019245,-1.134659112150416],[30.816134881317712,-1.698914076345389],[30.758308953583111,-2.287250257988369],[29.938359002407939,-2.348486830254238],[29.632176141078588,-2.917857761246097],[29.024926385216787,-2.839257907730158],[29.291886834436614,-1.620055840667987],[30.419104852019245,-1.134659112150416]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"EH","name":"W. Sahara","type":"Indeterminate","postal":"WS","admin":"Western Sahara","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-8.794883999049077,27.120696316022507],[-8.665589565454809,27.656425889592356],[-8.6872936670174,25.881056219988906],[-11.969418911171161,25.933352769468268],[-11.937224493853321,23.374594224536168],[-12.874221564169575,23.284832261645178],[-13.118754441774712,22.771220201096256],[-12.929101935263532,21.327070624267563],[-16.845193650773993,21.333323472574879],[-17.063423224342571,20.999752102130827],[-17.020428432675743,21.422310288981478],[-14.750954555713534,21.500600083903663],[-13.891110398809047,23.691009019459305],[-12.50096269372537,24.7701162785782],[-12.030758836301615,26.030866197203043],[-11.718219773800357,26.104091701760623],[-11.392554897496979,26.883423977154365],[-8.794883999049077,27.120696316022507]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SA","name":"Saudi Arabia","type":"Sovereign country","postal":"SA","admin":"Saudi Arabia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[42.77933230975097,16.347891343648683],[40.93934126156654,19.486485297111756],[39.801684604660949,20.338862209550058],[39.139399448408284,21.291904812092934],[39.066328973147591,22.57965566659027],[38.492772251140082,23.688451036060854],[37.483634881344386,24.285494696545015],[36.93162723160259,25.602959499610179],[35.130186801907882,28.063351955674719],[34.632336053207979,28.058546047471566],[34.956037225084259,29.356554673778845],[36.068940870922063,29.197494615184453],[37.998848911294374,30.508499864213135],[37.002165561681011,31.508412990844747],[39.195468377444968,32.161008816042667],[40.399994337736246,31.889991766887935],[41.889980910007836,31.190008653278369],[44.709498732284743,29.178891099559383],[47.459821811722833,29.002519436147224],[47.708850538937384,28.526062730416143],[48.416094191283946,28.55200429942667],[48.807594842327177,27.689627997339883],[50.152422316290881,26.689663194275997],[50.239858839728754,25.608049628190926],[50.810108270069577,24.754742539971378],[51.38960778179063,24.627385972588058],[52.000733270074335,23.00115448657894],[55.006803012924905,22.496947536707136],[55.208341098863194,22.708329982997046],[55.666659376859826,22.000001125572339],[54.999981723862362,19.999994004796108],[52.000009800022241,19.000003363516058],[49.116671583864871,18.616667588774945],[48.183343540241339,18.166669216377315],[47.466694777217633,17.116681626854884],[47.000004917189756,16.949999294497445],[46.749994337761649,17.283338120996177],[43.791518589051918,17.319976711491108],[43.380794305196105,17.579986680567671],[43.218375278502748,16.66688996018641],[42.77933230975097,16.347891343648683]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SD","name":"Sudan","type":"Sovereign country","postal":"SD","admin":"Sudan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.963392794971185,9.464285229420625],[33.721959248183111,10.325262079630193],[33.206938084561784,10.720111638406593],[33.206938084561784,12.179338268667095],[32.743419037302544,12.248007757149992],[32.073891524594785,11.973329803218519],[32.400071594888345,11.080626452941488],[31.352861895524882,9.810240916008695],[30.837840731903384,9.707236683284521],[29.996639497988554,10.290927335388687],[28.966597170745786,9.398223985111656],[26.752006167173818,9.466893473594496],[25.790633328413946,10.411098940233728],[25.069603699343986,10.273759963267992],[24.53741516360202,8.91753756573172],[23.886979580860668,8.619729712933065],[23.459012892355986,8.954285793489021],[23.554304233502194,10.08925527591532],[22.977543572692753,10.71446259199854],[22.28801,12.64605],[21.93681,12.588180000000136],[22.51202,14.09318],[22.30351,14.32682],[23.024590000000103,15.68072],[23.886890000000108,15.61084],[23.850000000000136,20.0],[25.000000000000114,20.00304],[25.000000000000114,22.0],[36.86623,22.0],[37.481790000000103,18.61409],[38.410089959473225,17.998307399970315],[36.852530000000115,16.95655],[36.27022,13.563330000000121],[34.731150000000127,10.910170000000107],[34.25745,10.63009],[33.963392794971185,9.464285229420625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SS","name":"S. Sudan","type":"Sovereign country","postal":"SS","admin":"South Sudan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.963392794971185,9.464285229420625],[33.825500000000147,8.37916],[33.294800000000123,8.35458],[32.95418,7.784970000000101],[33.568290000000104,7.71334],[34.0751,7.22595],[35.298007118233102,5.506],[33.3900000000001,3.79],[31.881450000000143,3.55827],[31.24556,3.7819],[30.83385,3.50917],[29.71599531425602,4.600804755060153],[27.979977247842953,4.408413397637389],[27.213409051225256,5.550953477394614],[26.465909458123292,5.946717434101856],[26.21341840994512,6.546603298362129],[25.124130893664812,7.500085150579423],[25.114932488716875,7.825104071479245],[23.886979580860668,8.619729712933065],[24.53741516360202,8.91753756573172],[25.069603699343986,10.273759963267992],[25.790633328413946,10.411098940233728],[26.752006167173818,9.466893473594496],[28.966597170745786,9.398223985111656],[29.996639497988554,10.290927335388687],[30.837840731903384,9.707236683284521],[31.352861895524882,9.810240916008695],[32.400071594888345,11.080626452941488],[32.073891524594785,11.973329803218519],[32.743419037302544,12.248007757149992],[33.206938084561784,12.179338268667095],[33.206938084561784,10.720111638406593],[33.721959248183111,10.325262079630193],[33.963392794971185,9.464285229420625]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SN","name":"Senegal","type":"Sovereign country","postal":"SN","admin":"Senegal","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-16.713728807023472,13.594958604379855],[-17.625042690490659,14.729540513564073],[-17.185172898822231,14.919477240452862],[-16.120690070041931,16.455662543193384],[-14.577347581428981,16.598263658102809],[-13.435737677453062,16.039383042866191],[-12.170750291380301,14.616834214735505],[-11.513942836950591,12.442987575729418],[-15.54847693527401,12.628170070847347],[-16.677451951554573,12.384851589401052],[-16.841524624081273,13.151393947802561],[-13.844963344772408,13.505041612192002],[-14.046992356817482,13.794067898000449],[-14.687030808968487,13.630356960499784],[-15.081735398813819,13.876491807505985],[-16.713728807023472,13.594958604379855]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SB","name":"Solomon Is.","type":"Sovereign country","postal":"SB","admin":"Solomon Islands","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[162.11902469304087,-10.482719008021135],[162.39864586817222,-10.826367282762121],[161.70003218001838,-10.820011081590224],[161.31979699121476,-10.204751478723125],[162.11902469304087,-10.482719008021135]]],[[[160.85222863183796,-9.872937106977005],[159.8494474632142,-9.794027194867368],[159.70294477766666,-9.242949720906779],[160.36295617089846,-9.400304457235535],[160.85222863183796,-9.872937106977005]]],[[[161.67998172428915,-9.599982191611375],[161.52939660059056,-9.784312025596435],[160.57999718652437,-8.320008640173967],[160.92002811100494,-8.320008640173967],[161.67998172428915,-9.599982191611375]]],[[[159.87502729719861,-8.337320244991716],[159.917401971678,-8.538289890174866],[158.21114953026486,-7.421872246941149],[158.82000125552773,-7.560003350457393],[159.87502729719861,-8.337320244991716]]],[[[157.5384257346893,-7.347819919466929],[156.9020304710148,-7.176874281445393],[156.54282759015396,-6.59933847415148],[157.14000044171891,-7.021638278840655],[157.5384257346893,-7.347819919466929]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SL","name":"Sierra Leone","type":"Sovereign country","postal":"SL","admin":"Sierra Leone","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[-11.438779466182055,6.785916856305748],[-12.949049038128194,7.798645738145738],[-13.246550258832515,8.903048610871508],[-11.917277390988659,10.046983954300558],[-11.11748124840733,10.045872911006285],[-10.622395188835041,9.267910061068278],[-10.505477260774668,8.348896389189605],[-10.23009355309128,8.406205552601293],[-11.438779466182055,6.785916856305748]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SV","name":"El Salvador","type":"Sovereign country","postal":"SV","admin":"El Salvador","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-87.793111131526572,13.384480495655055],[-88.48330156121682,13.163951320849492],[-90.095554572290979,13.735337632700734],[-89.3533259752828,14.424132798719114],[-88.503997972349708,13.845485948130857],[-87.859515347021599,13.893312486216983],[-87.793111131526572,13.384480495655055]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"-99","name":"Somaliland","type":"Indeterminate","postal":"SL","admin":"Somaliland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[48.938129510296505,9.451748968946674],[47.78942,8.003],[46.948328484897957,7.996876532417389],[43.67875,9.18358000000012],[42.55876,10.57258000000013],[43.145304803242141,11.462039699748857],[44.11780358254282,10.445538438351605],[48.948206414593471,11.41062164961852],[48.938129510296505,9.451748968946674]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SO","name":"Somalia","type":"Sovereign country","postal":"SO","admin":"Somalia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[49.72862,11.5789],[51.1112,12.02464],[51.04531,10.6409],[48.59455,5.33911],[46.56476,2.85529],[43.13597,0.2922],[41.58513,-1.68325],[40.993,-0.85829],[40.98105,2.78452],[42.12861,4.23413],[42.76967,4.25259],[43.66087,4.95755],[44.9636,5.00162],[48.938129510296449,9.451748968946617],[48.942005242718352,11.394266058798138],[49.72862,11.5789]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"RS","name":"Serbia","type":"Sovereign country","postal":"RS","admin":"Republic of Serbia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[20.874312778413412,45.41637543393432],[22.145087924902896,44.478422349620587],[22.705725538837441,44.578002834647009],[22.410446404721597,44.008063462900054],[22.986018507588483,43.211161200527101],[22.380525750424681,42.320259507815081],[21.576635989402121,42.245224397061861],[21.77505,42.6827],[20.81448,43.27205],[20.25758,42.812750000000108],[19.21852,43.52384],[19.59976,44.03847],[19.11761,44.423070000000109],[19.36803,44.863],[19.00548,44.86023],[19.390475701584592,45.236515611342384],[18.82982,45.90888],[20.220192498462893,46.127468980486583],[20.874312778413412,45.41637543393432]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SR","name":"Suriname","type":"Sovereign country","postal":"SR","admin":"Suriname","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.147436489476888,5.973149929219161],[-53.958044603070903,5.756548163267765],[-54.478632981979231,4.896755682795586],[-54.006930508019011,3.620037746592558],[-54.524754197799716,2.311848863123785],[-55.973322109589375,2.510363877773017],[-55.995698004771754,1.817667141116601],[-56.539385748914555,1.899522609866921],[-57.28143347840971,3.333491929534119],[-57.60156897645787,3.334654649260685],[-58.044694383360678,4.060863552258383],[-57.914288906472137,4.812626451024414],[-57.307245856339506,5.073566595882227],[-57.147436489476888,5.973149929219161]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SK","name":"Slovakia","type":"Sovereign country","postal":"SK","admin":"Slovakia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[18.853144158613617,49.496229763377642],[19.320712517990472,49.571574001659194],[19.825022820726872,49.217125352569226],[21.607808058364213,49.470107326854091],[22.558137648211755,49.085738023467144],[21.872236362401736,48.319970811550021],[20.801293979584926,48.623854071642384],[17.857132602620027,47.758428860050373],[16.979666782304037,48.123497015976305],[17.101984897538898,48.816968899117114],[17.886484816161811,48.903475246773709],[18.853144158613617,49.496229763377642]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SI","name":"Slovenia","type":"Sovereign country","postal":"SLO","admin":"Slovenia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[13.806475457421527,46.509306138691215],[16.202298211337364,46.852385972676963],[16.564808383864857,46.50375092221983],[15.768732944408553,46.238108222023449],[15.327674594797429,45.452316392593232],[13.715059848697223,45.500323798192376],[13.937630242578308,45.591015936864622],[13.806475457421527,46.509306138691215]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SE","name":"Sweden","type":"Sovereign country","postal":"S","admin":"Sweden","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[22.18317345550193,65.723740546320172],[21.21351687997722,65.026005357515274],[21.369631381930958,64.413587958424287],[17.847779168375212,62.74940013289681],[17.119554884518124,61.341165676510968],[18.787721795332089,60.081914374422595],[17.86922488777634,58.953766181058697],[16.829185011470088,58.719826972073392],[16.447709588291474,57.041118069071885],[15.879785597403783,56.104301866268663],[14.666681349352075,56.200885118222175],[14.100721062891465,55.407781073622651],[12.942910597392057,55.361737372450577],[11.027368605196868,58.856149400459358],[12.300365838274899,60.117932847730032],[12.631146681375185,61.293571682370136],[11.992064243221563,61.80036245385655],[11.930569288794231,63.128317572676977],[12.579935336973934,64.066218980558332],[13.571916131248713,64.04911408146971],[13.919905226302204,64.44542064071608],[13.555689731509091,64.787027696381514],[16.768878614985482,68.013936672631402],[17.729181756265348,68.010551866316277],[17.993868442464333,68.567391262477358],[19.878559604581255,68.407194322372575],[20.025268995857886,69.065138658312705],[20.645592889089528,69.106247260200874],[23.539473097434438,67.93600861273525],[23.565879754335583,66.396050930437426],[23.903378533633802,66.006927395279618],[22.18317345550193,65.723740546320172]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SZ","name":"Swaziland","type":"Sovereign country","postal":"SW","admin":"Swaziland","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.071665480281069,-26.733820082304909],[31.86806033705108,-27.177927341421277],[31.282773064913329,-27.285879408478998],[30.68596194837448,-26.743845310169533],[31.044079624157149,-25.731452325139443],[31.83777794772806,-25.843331801051349],[32.071665480281069,-26.733820082304909]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"SY","name":"Syria","type":"Sovereign country","postal":"SYR","admin":"Syria","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[38.792340529136084,33.378686428352225],[36.834062127435544,32.312937526980775],[35.700797967274752,32.716013698857381],[36.066460402172055,33.82491242119255],[36.611750115715893,34.201788641897181],[36.448194207512103,34.593935248344067],[35.998402540843642,34.644914048800004],[35.905023227692226,35.410009467097325],[36.685389031731802,36.259699205056464],[36.739494256341402,36.817520453431086],[39.522580193852548,36.716053778625991],[42.349591098811771,37.229872544904097],[41.289707472505455,36.358814602192268],[41.006158888519934,34.419372260062119],[38.792340529136084,33.378686428352225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TD","name":"Chad","type":"Sovereign country","postal":"TD","admin":"Chad","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[14.495787387762903,12.859396267137356],[14.595781284247607,13.330426947477861],[13.95447675950561,13.353448798063766],[13.956698846094127,13.996691189016929],[13.540393507550789,14.367133693901224],[13.97217,15.68437],[15.247731154041844,16.627305813050782],[15.903246697664315,20.387618923417506],[15.096887648181848,21.308518785074909],[14.8513,22.862950000000126],[15.86085,23.40972],[23.837660000000142,19.580470000000105],[23.886890000000108,15.61084],[23.024590000000103,15.68072],[22.30351,14.32682],[22.51202,14.09318],[21.93681,12.588180000000136],[22.28801,12.64605],[22.864165480244253,11.142395127807617],[21.723821648859541,10.567055568885962],[21.000868361096309,9.47598521569148],[20.059685499764271,9.012706000194839],[18.812009718509273,8.982914536978626],[18.911021762780592,8.630894680206438],[17.964929640380888,7.890914008002994],[15.279460483469165,7.421924546738012],[15.436091749745742,7.692812404811889],[14.979995558337691,8.796104234243444],[13.954218377344091,9.549494940626687],[14.171466098699113,10.021378282100045],[15.467872755605242,9.982336737503545],[14.923564894275046,10.891325181517516],[14.89336,12.21905],[14.495787387762903,12.859396267137356]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TG","name":"Togo","type":"Sovereign country","postal":"TG","admin":"Togo","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[1.865240512712319,6.142157701029731],[1.060121697604927,5.928837388528876],[0.570384148774849,6.914358628767189],[0.712029249686879,8.312464504423829],[0.023802524423701,11.018681748900804],[0.899563022474069,10.99733938236426],[0.772335646171484,10.470808213742359],[1.425060662450136,9.825395412633],[1.865240512712319,6.142157701029731]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TH","name":"Thailand","type":"Sovereign country","postal":"TH","admin":"Thailand","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[102.5849324890267,12.186594956913282],[101.68715783081996,12.645740057826572],[100.83180952352487,12.627084865769206],[100.97846723836921,13.412721665902566],[100.09779747925111,13.406856390837433],[100.01873253784456,12.307001044153354],[99.153772414143162,9.963061428258556],[99.222398716226763,9.239255479362427],[99.873831821698133,9.20786204674512],[100.45927412313276,7.429572658717177],[102.14118696493638,6.221636053894628],[101.81428185425798,5.810808417174243],[101.15421878459387,5.691384182147715],[101.07551557821336,6.204867051615921],[100.25959638875696,6.642824815289544],[100.08575687052711,6.464489447450291],[98.503786248775995,8.382305202666288],[98.339661899817003,7.794511623562386],[98.150009393305822,8.350007432483878],[98.553550653073046,9.932959906448545],[99.587286004639722,11.892762762901697],[99.097755161538757,13.827502549693278],[98.192074009191401,15.123702500870351],[98.903348423256759,16.177824204976119],[97.375896437573545,18.445437730375815],[97.797782830804408,18.627080389881755],[98.25372399291561,19.708203029860044],[98.959675734454876,19.752980658440947],[100.11598758341785,20.417849636308187],[100.54888105672688,20.109237982661128],[100.60629357300316,19.508344427971224],[101.2820146016517,19.462584947176765],[101.05954756063517,17.51249725999449],[102.11359175009248,18.109101670804165],[102.99870568238771,17.961694647691601],[103.20019209189374,18.309632066312773],[103.9564766784853,18.240954087796879],[104.71694705609249,17.428858954330082],[104.7793205098688,16.441864935771449],[105.58903852745016,15.570316066952858],[105.54433841351769,14.723933620660418],[105.21877689007889,14.273211778210694],[102.98842207236163,14.225721136934467],[102.34809939983302,13.394247341358223],[102.5849324890267,12.186594956913282]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TJ","name":"Tajikistan","type":"Sovereign country","postal":"TJ","admin":"Tajikistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[71.01419803252017,40.244365546218233],[70.648018833299972,39.935753892571171],[69.559609816368521,40.103211371412982],[69.46488691597753,39.526683254548701],[73.675379266254794,39.431236884105601],[73.928852166646436,38.505815334622739],[74.864815708316826,38.378846340481601],[74.980002475895418,37.419990139305895],[73.260055779925011,37.495256862939002],[71.844638299450594,36.738171291646921],[71.448693475230243,37.06564484308052],[71.348131137990265,38.258905341132163],[70.806820509732887,38.486281643216415],[70.116578403610333,37.588222764632093],[69.518785434857961,37.60899669041342],[69.196272820924378,37.151143500307427],[67.829999627559516,37.144994004864685],[68.392032505165957,38.157025254868742],[68.176025018185925,38.901553453113905],[67.442219679641312,39.140143541005486],[67.701428664017357,39.580478420564532],[68.536416456989429,39.533452867178937],[69.329494663372827,40.727824408524853],[70.666622348925046,40.960213324541414],[70.458159621059622,40.496494859370287],[71.01419803252017,40.244365546218233]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TM","name":"Turkmenistan","type":"Sovereign country","postal":"TM","admin":"Turkmenistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[61.210817091725744,35.650072333309225],[61.123070509694145,36.491597194966246],[60.377637973883878,36.527383124328367],[59.234761997316809,37.412987982730343],[57.330433790928986,38.02922943781094],[55.511578403551908,37.964117133123167],[54.800303989486565,37.392420762678185],[53.921597934795557,37.198918361961262],[53.880928582581845,38.952093003895357],[53.101027866432901,39.290573635407128],[53.35780805849123,39.975286363274449],[52.693972609269821,40.033629055331971],[52.915251092343624,40.876523342444727],[53.858139275941134,40.631034450842179],[54.73684533063215,40.951014919593462],[53.72171349469059,42.12319143327003],[52.916749708880076,41.868116563477329],[52.814688755103617,41.135370591794711],[52.502459751196149,41.78331553808637],[54.079417759014952,42.324109402020831],[55.45525109235377,41.25985911718584],[57.096391229079103,41.322310085610567],[56.932215203687804,41.826026109375604],[58.62901085799146,42.751551011723052],[59.976422153569786,42.223081976890207],[60.083340691981675,41.425146185871405],[60.465952996670694,41.220326646482548],[61.882714064384693,41.084856879229406],[62.374260288345006,40.053886216790389],[64.170223016216767,38.892406724598246],[66.546150343700219,37.974684963526869],[66.51860680528867,37.362784328758792],[65.745630731066825,37.661164048812068],[65.588947788357842,37.305216783185642],[64.746105177677407,37.111817735333304],[64.546479119733903,36.312073269184268],[63.193538445900352,35.857165635718914],[62.98466230657661,35.404040839167621],[62.230651483005886,35.270663967422294],[61.210817091725744,35.650072333309225]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TL","name":"Timor-Leste","type":"Sovereign country","postal":"TL","admin":"East Timor","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[124.96868248911623,-8.892790215697083],[125.94707238169826,-8.432094821815035],[127.33592817597463,-8.397316582882603],[125.08852013560109,-9.393173109579294],[124.96868248911623,-8.892790215697083]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TT","name":"Trinidad and Tobago","type":"Sovereign country","postal":"TT","admin":"Trinidad and Tobago","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-61.68,10.76],[-60.895,10.855],[-60.935,10.11],[-61.95,10.09],[-61.68,10.76]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TN","name":"Tunisia","type":"Sovereign country","postal":"TN","admin":"Tunisia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[9.482139926805274,30.307556057246188],[9.055602654668149,32.102691962201291],[7.612641635782182,33.344114895148962],[7.524481642292244,34.09737641045146],[8.140981479534304,34.65514598239379],[8.420964389691676,36.946427313783161],[9.509993523810607,37.349994411766545],[10.210002475636317,37.230001735984814],[10.180650262094531,36.724037787415085],[11.02886722173335,37.092103176413957],[10.600004510143094,36.410000108377375],[10.593286573945138,35.947444362932814],[10.939518670300687,35.698984076473494],[10.807847120821009,34.83350718844919],[10.149592726287125,34.330773016897709],[10.339658644256616,33.785741685515319],[10.856836378633687,33.768740139291282],[11.488787469131012,33.136995754523141],[11.432253452203696,32.368903103152874],[9.950225050505082,31.376069647745258],[9.970017124072854,30.53932485607524],[9.482139926805274,30.307556057246188]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TR","name":"Turkey","type":"Sovereign country","postal":"TR","admin":"Turkey","sales_rgn":3},"geometry":{"type":"MultiPolygon","coordinates":[[[[36.913127068842158,41.335358384764305],[38.347664829264517,40.948586127275718],[40.373432651538252,41.013672593747344],[41.554084100110714,41.535656236327611],[42.619548781104555,41.583172715819927],[43.582745802592711,41.092143256182567],[43.65643639504097,40.253563951166171],[44.793989699082005,39.713002631177034],[44.109225294782362,39.428136298168056],[44.421402622257602,38.281281236314527],[44.225755649600529,37.971584377589352],[44.772699008977753,37.170444647768448],[44.293451775902867,37.00151439060636],[42.779125604021857,37.385263576805812],[39.522580193852519,36.716053778626019],[36.739494256341374,36.817520453431115],[36.68538903173183,36.259699205056506],[36.149762811026591,35.821534735653671],[35.782084995269855,36.274995429014922],[36.160821567537056,36.650605577128374],[34.714553256984374,36.795532131490916],[34.02689497247647,36.219960028623973],[32.509158156064103,36.1075637883892],[31.699595167779563,36.644275214172609],[30.621624790171069,36.677864895162315],[30.391096225717121,36.26298065850699],[29.699975620245567,36.144357408181008],[28.732902866335394,36.676831366516438],[27.64118655773737,36.658822129862756],[26.318218214633049,38.208133246405396],[26.804700148228733,38.985760199533559],[26.170785353304382,39.463612168936464],[27.280019972449395,40.420013739578309],[28.81997765474722,40.460011298172219],[29.240003696415584,41.219990749672689],[31.145933872204438,41.087621568357065],[33.513282911927519,42.018960069337311],[35.16770389175187,42.040224921225445],[36.913127068842158,41.335358384764305]]],[[[27.192376743282409,40.690565700842455],[26.35800906749779,40.151993923496491],[26.056942172965336,40.824123440100749],[26.604195590936285,41.56211456966102],[26.117041863720829,41.826904608724561],[27.135739373490509,42.141484890301314],[27.996720411905414,42.007358710287775],[28.115524529744448,41.622886054036286],[28.98844282401879,41.299934190428189],[27.192376743282409,40.690565700842455]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TW","name":"Taiwan","type":"Sovereign country","postal":"TW","admin":"Taiwan","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[121.77781782438993,24.3942735865194],[121.17563235889274,22.790857245367167],[120.74707970589623,21.970571397382113],[120.1061885926124,23.556262722258236],[121.49504438688878,25.295458889257386],[121.95124393116146,24.997595933527037],[121.77781782438993,24.3942735865194]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"TZ","name":"Tanzania","type":"Sovereign country","postal":"TZ","admin":"United Republic of Tanzania","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[33.903711197104599,-0.95],[37.69869,-3.09699],[37.7669,-3.67712],[39.20222,-4.67677],[38.74054,-5.90895],[38.79977,-6.47566],[39.44,-6.839999999999861],[39.18652,-8.48551],[40.31659,-10.317099999999868],[39.521,-10.89688],[36.514081658684404,-11.720938002166747],[34.559989047999466,-11.520020033415847],[34.28,-10.16],[33.73972,-9.41715],[30.74,-8.34],[30.2,-7.08],[29.62,-6.52],[29.339997592900374,-4.499983412294114],[29.753512404099865,-4.452389418153302],[30.75224,-3.35931],[30.46967,-2.41383],[30.758308953583139,-2.287250257988376],[30.816134881317851,-1.698914076345375],[30.419104852019302,-1.134659112150416],[33.903711197104599,-0.95]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UG","name":"Uganda","type":"Sovereign country","postal":"UG","admin":"Uganda","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.86617,-1.02736],[29.579466180141026,-1.341313164885605],[29.875778842902434,0.597379868976361],[31.17414920423596,2.204465236821307],[30.77332,2.339890000000139],[30.83385,3.50917],[31.24556,3.7819],[31.88145,3.55827],[33.3900000000001,3.79],[34.005,4.249884947362148],[35.03599,1.90584],[33.893568969667001,0.109813537861839],[33.903711197104599,-0.95],[31.86617,-1.02736]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UA","name":"Ukraine","type":"Sovereign country","postal":"UA","admin":"Ukraine","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.785998162571587,52.101677964885454],[33.752699822735707,52.335074571331695],[34.391730584457008,51.768881740925792],[34.224815708154267,51.255993150428957],[35.02218305841788,51.207572333371459],[35.356116163887947,50.577197374059061],[36.626167840325337,50.225590928745135],[37.393459506995072,50.383953355503593],[38.010631137856905,49.915661526074629],[40.069058465339111,49.601055406281702],[39.674663934087533,48.783818467801879],[39.738277622238826,47.89893707945199],[38.7705847511412,47.825608222029814],[38.255112339029751,47.546400458356814],[38.22353803889942,47.102189846375886],[34.962341749823878,46.273196519549643],[35.020787794745985,45.651218980484657],[36.529997999830158,45.469989732437057],[36.33471276219916,45.113215643893966],[33.882511020652885,44.361478583344073],[33.326420932760044,44.564877020844889],[33.546924269349461,45.03477081967489],[32.454174432105503,45.327466132176077],[33.588162062318389,45.851568508480241],[31.744140252415178,46.333347886737386],[31.675307244602408,46.706245022155542],[30.748748813609101,46.583100084004002],[29.603289015427436,45.293308010431126],[28.233553501099042,45.488283189468376],[28.862972446414062,46.437889309263831],[30.024658644335375,46.42393667254504],[28.670891147585166,48.118148505234103],[27.522537469195157,48.467119452501116],[24.866317172960578,47.737525743188314],[23.142236362406805,48.096341050806949],[22.710531447040495,47.882193915389408],[22.085608351334855,48.422264309271789],[22.776418898212626,49.027395331409622],[22.518450148211603,49.476773586619743],[23.922757195743262,50.424881089878753],[23.527070753684374,51.57845408793024],[25.327787713327009,51.910656032918553],[30.555117221811457,51.319503485715657],[30.927549269338982,52.04235342061439],[31.785998162571587,52.101677964885454]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UY","name":"Uruguay","type":"Sovereign country","postal":"UY","admin":"Uruguay","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-57.625133429582959,-30.216294854454262],[-56.976025763564735,-30.109686374636127],[-53.787951626182192,-32.047242526987624],[-53.209588995971544,-32.727666110974724],[-53.650543992718099,-33.20200408298183],[-53.373661668498244,-33.768377780900764],[-53.806425950726535,-34.396814874002231],[-54.93586605489773,-34.952646579733624],[-56.215297003796067,-34.859835707337417],[-57.81786068381551,-34.462547295877499],[-58.427074144104388,-33.909454441057576],[-57.625133429582959,-30.216294854454262]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"UZ","name":"Uzbekistan","type":"Sovereign country","postal":"UZ","admin":"Uzbekistan","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[66.51860680528867,37.362784328758792],[66.546150343700219,37.974684963526869],[64.170223016216767,38.892406724598246],[62.374260288345006,40.053886216790389],[61.882714064384693,41.084856879229406],[60.465952996670694,41.220326646482548],[60.083340691981675,41.425146185871405],[59.976422153569786,42.223081976890207],[58.62901085799146,42.751551011723052],[56.932215203687804,41.826026109375604],[57.096391229079103,41.322310085610567],[55.968191359282912,41.308641669269363],[55.928917270741096,44.995858466159113],[58.503127068928471,45.586804307632832],[61.058319940032447,44.405816962250512],[62.01330040878625,43.504476630215649],[64.900824415959278,43.728080552742583],[66.098012322865088,42.997660020513095],[66.023391554635623,41.994646307943981],[66.510648634715722,41.987644151368443],[66.714047072216516,41.1684435084615],[67.98585574735182,41.13599070898222],[68.25989586779562,40.662324530594901],[68.632482944620023,40.668680731766813],[69.07002729683532,41.38424428971237],[70.962314894499144,42.266154283205495],[71.259247674448233,42.167710679689463],[70.42002241402821,41.519998277343142],[71.157858514291604,41.143587144529121],[71.870114780570475,41.392900092121266],[73.05541710804917,40.866033026689465],[71.77487511585656,40.145844428053778],[70.601406691372688,40.218527330072291],[70.666622348925046,40.960213324541414],[69.329494663372827,40.727824408524853],[68.536416456989429,39.533452867178937],[67.701428664017357,39.580478420564532],[67.442219679641312,39.140143541005486],[68.176025018185925,38.901553453113905],[68.392032505165957,38.157025254868742],[67.829999627559516,37.144994004864685],[66.51860680528867,37.362784328758792]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VE","name":"Venezuela","type":"Sovereign country","postal":"VE","admin":"Venezuela","sales_rgn":2},"geometry":{"type":"Polygon","coordinates":[[[-71.331583624950298,11.776284084515808],[-71.947049933546509,11.423282375530022],[-71.633063930941091,10.446494452349029],[-72.074173956984509,9.865651353388373],[-71.695644090446535,9.072263088411248],[-71.264559292267734,9.137194525585983],[-71.03999935574339,9.859992784052409],[-71.400623338492238,10.968969021036015],[-70.155298834906517,11.375481675660041],[-70.29384334988103,11.846822414594214],[-69.943244594996827,12.162307033736099],[-69.584300096297468,11.459610907431212],[-68.882999233664449,11.443384507691563],[-68.194126552997631,10.554653225135922],[-66.227864142507997,10.648626817258688],[-64.89045223657817,10.077214667191299],[-64.318006557864948,10.64141795495398],[-61.880946010980196,10.715625311725104],[-62.730118984616411,10.420268662960906],[-62.388511928950976,9.94820445397464],[-61.58876746280194,9.873066921422264],[-60.830596686431718,9.381339829948942],[-60.671252407459733,8.580174261911878],[-59.758284878159195,8.367034816924047],[-60.5505879380582,7.779602972846178],[-60.637972785063766,7.414999904810856],[-60.295668097562398,7.043911444522919],[-61.159336310456482,6.696077378766319],[-61.410302903881956,5.959068101419618],[-60.601179165271944,4.91809804933213],[-63.093197597899106,3.770571193858785],[-64.816064012294021,4.056445217297423],[-64.368494432214106,3.797210394705246],[-64.269999152265797,2.497005520025567],[-63.368788011311665,2.200899562993129],[-65.548267381437569,0.78925446207603],[-66.325765143484958,0.724452215982012],[-67.809938117123707,2.820655015469569],[-67.303173183853445,3.31845408773718],[-67.823012254493548,4.503937282728899],[-67.341439581965574,6.095468044454023],[-69.389479946557117,6.099860541198837],[-70.093312954372422,6.96037649172311],[-71.960175747348643,6.991614895043539],[-72.444487270788073,7.423784898300482],[-72.439862230097958,8.405275376820029],[-72.788729824500393,9.085027167187334],[-73.304951544880055,9.151999823437606],[-72.905286017534706,10.450344346554772],[-71.973921678338286,11.60867157637712],[-71.331583624950298,11.776284084515808]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VN","name":"Vietnam","type":"Sovereign country","postal":"VN","admin":"Vietnam","sales_rgn":4},"geometry":{"type":"Polygon","coordinates":[[[108.05018029178294,21.552379869060118],[106.71506798709009,20.696850694252021],[105.66200564984631,19.05816518806057],[107.36195356651974,16.697456569887052],[108.87710656131748,15.27669057867044],[109.33526981001722,13.426028347217724],[109.20013593957398,11.666859239137764],[105.15826378786511,8.599759629750494],[104.79518517458239,9.241038316276502],[105.07620161338562,9.918490505406808],[104.33433475140347,10.48654368737523],[106.24967003786946,10.961811835163587],[105.81052371625313,11.567614650921229],[107.49140302941089,12.337205918827948],[107.5645251811039,15.202173163305559],[107.3127059265456,15.908538316303179],[105.09459842328152,18.66697459561108],[103.89653201702671,19.265180975821806],[104.8225736836971,19.886641750563882],[104.43500044150805,20.758733221921531],[103.20386111858645,20.766562201413748],[102.17043582561358,22.464753119389304],[104.47685835166448,22.819150092046968],[105.32920942588663,23.352063300056912],[106.72540327354847,22.794267889898421],[106.56727339073532,22.218204860924772],[107.04342003787264,21.811898912029914],[108.05018029178294,21.552379869060118]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"VU","name":"Vanuatu","type":"Sovereign country","postal":"VU","admin":"Vanuatu","sales_rgn":4},"geometry":{"type":"MultiPolygon","coordinates":[[[[167.84487674384511,-16.466333103097156],[167.5151811058229,-16.59784962327997],[167.21680138576963,-15.891846205308454],[167.84487674384511,-16.466333103097156]]],[[[167.10771243720151,-14.933920179913954],[167.27002811103026,-15.740020847234874],[166.79315799384088,-15.668810723536723],[166.62913699774649,-14.626497084209603],[167.10771243720151,-14.933920179913954]]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"YE","name":"Yemen","type":"Sovereign country","postal":"YE","admin":"Yemen","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[53.108572625547509,16.651051133688952],[52.385205926325881,16.382411200419654],[52.1681649107,15.597420355689948],[49.57457645040315,14.708766587782748],[48.679230584514158,14.00320241948566],[45.625050083199881,13.290946153206763],[44.989533318874415,12.69958690027471],[44.175112745954493,12.585950425664876],[43.482958611837127,12.636800035040084],[42.60487267433362,15.213335272680595],[43.380794305196105,17.579986680567671],[43.791518589051918,17.319976711491108],[46.749994337761649,17.283338120996177],[47.000004917189756,16.949999294497445],[47.466694777217633,17.116681626854884],[48.183343540241339,18.166669216377315],[49.116671583864871,18.616667588774945],[52.000009800022241,19.000003363516058],[53.108572625547509,16.651051133688952]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZA","name":"South Africa","type":"Sovereign country","postal":"ZA","admin":"South Africa","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.521001417778876,-29.257386976846256],[30.055716180142781,-31.140269463832958],[27.464608188595975,-33.226963799778801],[25.909664340933489,-33.667040297176399],[25.780628289500697,-33.944646091448341],[22.574157342222236,-33.864082533505311],[19.616405063564571,-34.819166355123713],[18.377410922934615,-34.136520684548067],[17.925190463948439,-32.611290785453427],[18.247909783611192,-32.42913136162457],[18.221761508871481,-31.661632989225669],[16.344976840895242,-28.576705010697701],[16.824017368240902,-28.08216155366447],[17.387497185951503,-28.783514092729781],[18.464899122804752,-29.045461928017279],[19.894734327888614,-28.461104831660776],[19.895767856534434,-24.767790215760591],[20.758609246511838,-25.86813648855145],[20.889609002371738,-26.828542982695915],[21.605896030369394,-26.726533705351756],[23.312096795350186,-25.26868987396572],[24.211266717228796,-25.670215752873574],[25.664666375437719,-25.486816094669713],[25.941652052522159,-24.696373386333221],[26.485753208123299,-24.616326592713104],[28.017235955525251,-22.827753594659079],[29.839036899542972,-22.102216485281176],[31.191409132621288,-22.251509698172399],[31.930588820124253,-24.369416599222539],[31.83777794772806,-25.843331801051349],[31.044079624157149,-25.731452325139443],[30.68596194837448,-26.743845310169533],[31.282773064913329,-27.285879408478998],[31.86806033705108,-27.177927341421277],[32.071665480281069,-26.733820082304909],[32.830120477028885,-26.742191664336197],[32.462132602678452,-28.301011244420557],[31.521001417778876,-29.257386976846256]],[[28.978262566857243,-28.955596612261711],[28.541700066855498,-28.647501722937569],[28.074338413207784,-28.851468601193588],[26.999261915807637,-29.875953871379984],[27.749397006956485,-30.645105889612225],[28.107204624145425,-30.545732110314951],[28.848399692507741,-30.070050551068256],[29.325166456832591,-29.257386976846256],[28.978262566857243,-28.955596612261711]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZM","name":"Zambia","type":"Sovereign country","postal":"ZM","admin":"Zambia","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[32.759375441221323,-9.23059905358906],[33.485687697083591,-10.525558770391115],[33.114289178201915,-11.607198174692314],[33.306422153463075,-12.435778090060218],[32.688165317523129,-13.712857761289277],[33.214024692525214,-13.971860039936153],[30.17948123548183,-14.796099134991529],[30.27425581230511,-15.507786960515213],[28.947463413211267,-16.04305144619444],[27.044427117630732,-17.938026218337434],[25.264225701608012,-17.736539808831417],[24.682349074001507,-17.353410739819473],[23.215048455506064,-17.523116143465984],[21.887842644953874,-16.08031015387688],[21.933886346125917,-12.898437188369359],[24.016136508894675,-12.911046237848574],[23.912215203555718,-10.926826267137514],[24.257155389103989,-10.951992689663657],[24.314516228947952,-11.26282642989927],[25.418118116973204,-11.330935967659961],[25.752309604604733,-11.784965101776358],[26.553087599399618,-11.924439792532127],[27.164419793412463,-11.608748467661075],[27.388798862423783,-12.132747491100666],[28.155108676879987,-12.272480564017897],[28.934285922976837,-13.248958428605135],[29.699613885219492,-13.257226657771831],[29.61600141777123,-12.178894545137311],[29.34154788586909,-12.360743910372413],[28.372253045370428,-11.793646742401393],[28.673681674928929,-9.605924981324932],[28.449871046672826,-9.164918308146085],[28.734866570762502,-8.526559340044578],[30.346086053190817,-8.238256524288218],[32.759375441221323,-9.23059905358906]]]}},{"type":"Feature","properties":{"featurecla":"Admin-0 country","iso_a2":"ZW","name":"Zimbabwe","type":"Sovereign country","postal":"ZW","admin":"Zimbabwe","sales_rgn":3},"geometry":{"type":"Polygon","coordinates":[[[31.191409132621288,-22.251509698172399],[29.43218834810904,-22.091312758067588],[28.021370070108617,-21.485975030200585],[27.724747348753255,-20.499058526290391],[26.164790887158485,-19.293085625894939],[25.264225701608012,-17.736539808831417],[27.044427117630732,-17.938026218337434],[28.947463413211267,-16.04305144619444],[30.27425581230511,-15.507786960515213],[30.338954705534544,-15.880839125230246],[31.17306399915768,-15.860943698797874],[32.847638787575846,-16.713398125884616],[32.65974327976258,-20.304290052982317],[31.191409132621288,-22.251509698172399]]]}}]});\n// CONCATENATED MODULE: ./src/map2/global.js\nvar global_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function global_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}//import \'./TrackballControls\';\nvar global_Gobal=function(){function Gobal(props){global_classCallCheck(this,Gobal);this.Geo=geo;this.radius=100;this.interpolatePos=0.0;this.countries=[];Object.assign(this,props);this.wrap=document.getElementById(this.el);this.el=document.createElement("div");this.el.style="user-select: none;width: 100%;height: 100%;";this.wrap.appendChild(this.el);this.containt=document.createElement("div");this.containt.style="user-select: none;";this.wrap.appendChild(this.containt);if(!this.point){this.point=new three_module["u" /* Mesh */](new three_module["h" /* CubeGeometry */](0.5,0.5,1,1,1,1));}this.renderer=new three_module["W" /* WebGLRenderer */]({preserveDrawingBuffer:this.mode==1?true:false,antialias:false,alpha:true});var w=this.el.offsetWidth||window.innerWidth,h=this.el.offsetHeight||window.innerHeight;this.renderer.setSize(w,h);this.renderer.autoClear=false;this.renderer.sortObjects=false;this.renderer.generateMipmaps=false;this.el.appendChild(this.renderer.domElement);this.scene=new three_module["H" /* Scene */]();this.scene.matrixAutoUpdate=false;this.camera=new three_module["A" /* PerspectiveCamera */](45,w/h,1,2000);this.camera.position.x=0;this.camera.position.y=0;this.camera.position.z=300;this.scene.add(this.camera);this.rotating=new three_module["x" /* Object3D */]();//this.camera.position.x = 80;\nthis.scene.add(this.rotating);this.visualizationMesh=new three_module["x" /* Object3D */]();this.rotating.add(this.visualizationMesh);this.createLight();// var geometry = new THREE.SphereGeometry(this.radius, 32, 32);\n// //geometry.applyMatrix( new THREE.Matrix4().makeScale(1.0, 1.0, 1.5));\n// //For ellipsoid testing: geometry.applyMatrix( new THREE.Matrix4().makeScale( 1.0, 1.0, 1.5 ) ); Try 6378137.0, 6356752.314140\n// var material = new THREE.MeshPhongMaterial({\n//   wireframe: true,\n//   transparent: true\n// });\n// var sphere = new THREE.Mesh(geometry, material);\n// this.scene.add(sphere);\n//this.test();\n//this.createGlobal();\n//this.createBox();\nthis.createMap();this.controls=new three_module["TrackballControls"](this.camera,this.renderer.domElement,this);// this.controls.rotateSpeed = 0.5;\n// this.controls.zoomSpeed = 1.0;\n// this.controls.panSpeed = 0.25;\n// this.controls.noRotate = false;\n// this.controls.noZoom = false;\n// this.controls.noPan = true;\n// this.controls.staticMoving = false;\n// this.controls.dynamicDampingFactor = 0.2;\n}global_createClass(Gobal,[{key:\'flight\',value:function flight(data){if(this.fls!==undefined&&this.fls.length){for(var i=0;i<this.fls.length;i++){this.rotating.remove(this.fls[i]);var o,ol,zobject;if(this.fls[i]instanceof three_module["u" /* Mesh */]||this.fls[i]instanceof three_module["z" /* ParticleSystem */]){for(o=this.scene.__webglObjects.length-1;o>=0;o--){zobject=this.scene.__webglObjects[o].object;if(this.fls[i]==zobject){this.scene.__webglObjects.splice(o,1);}}}this.fls[i]=null;}}this.fls=[];if(!data||!data.length){return;}for(var i=0;i<data.length;i++){var s_lat=parseInt(data[i].start.lat,10);var s_lon=parseInt(data[i].start.lon,10);var e_lat=parseInt(data[i].end.lat,10);var e_lon=parseInt(data[i].end.lon,10);var sv={lat:s_lat,lon:s_lon,name:data[i].start.name,value:data[i].start.value||0,center:new three_module["T" /* Vector3 */](-this.radius*Math.sin((90-s_lat)*Math.PI/180)*Math.cos((s_lon-180)*Math.PI/180),this.radius*Math.cos((90-s_lat)*Math.PI/180),this.radius*Math.sin((90-s_lat)*Math.PI/180)*Math.sin((s_lon-180)*Math.PI/180))};var ev={lat:e_lat,lon:e_lon,name:data[i].end.name,value:data[i].end.value||0,center:new three_module["T" /* Vector3 */](-this.radius*Math.sin((90-e_lat)*Math.PI/180)*Math.cos((e_lon-180)*Math.PI/180),this.radius*Math.cos((90-e_lat)*Math.PI/180),this.radius*Math.sin((90-e_lat)*Math.PI/180)*Math.sin((e_lon-180)*Math.PI/180))};var attributes={pos:{type:\'f\',value:[]},max:{type:\'f\',value:[]}},number,linesGeo=new three_module["n" /* Geometry */](),start_lat=sv.lat,start_lon=sv.lon,end_lat=ev.lat,end_lon=ev.lon,max_height=data[i].style!=undefined&&data[i].style.height!=undefined?data[i].style.height:this.flightHeight,points=[],G=Math.random().toFixed(2)*300+300;//var points = [];\nnumber=G;for(var j=0;j<G;j++){var arc_angle=j*180.0/G;var arc_radius=this.radius+Math.sin(arc_angle*Math.PI/180.0)*max_height;var s_lat=start_lat*Math.PI/180.0;var s_lon=start_lon*Math.PI/180.0;var e_lat=end_lat*Math.PI/180.0;var e_lon=end_lon*Math.PI/180.0;var d=2*Math.asin(Math.sqrt(Math.pow(Math.sin((s_lat-e_lat)/2),2)+Math.cos(s_lat)*Math.cos(e_lat)*Math.pow(Math.sin((s_lon-e_lon)/2),2)));var A=Math.sin((1-j/G)*d)/Math.sin(d);var B=Math.sin(j/G*d)/Math.sin(d);var x=A*Math.cos(s_lat)*Math.cos(s_lon)+B*Math.cos(e_lat)*Math.cos(e_lon);var y=A*Math.cos(s_lat)*Math.sin(s_lon)+B*Math.cos(e_lat)*Math.sin(e_lon);var z=A*Math.sin(s_lat)+B*Math.sin(e_lat);var lat=Math.atan2(z,Math.sqrt(Math.pow(x,2)+Math.pow(y,2)))*180/Math.PI;var lon=Math.atan2(y,x)*180/Math.PI;linesGeo.vertices.push(new three_module["T" /* Vector3 */](-arc_radius*Math.sin((90-lat)*Math.PI/180)*Math.cos((lon-180)*Math.PI/180),arc_radius*Math.cos((90-lat)*Math.PI/180),arc_radius*Math.sin((90-lat)*Math.PI/180)*Math.sin((lon-180)*Math.PI/180)));attributes.pos.value.push(j);attributes.max.value.push(G);}var uniforms={size:{type:"f",value:parseFloat(data[i].style!=undefined&&data[i].style.weight!=undefined?data[i].style.weight:this.flightWeight,10)},c:{type:"f",value:1.0},p:{type:"f",value:1.4},glowColor:{type:"c",value:new three_module["g" /* Color */](0xffffff)},viewVector:{type:"v3",value:this.camera.position},time:{type:"f",value:0.0},leng:{type:"f",value:80.0},color:{type:"c",value:new three_module["g" /* Color */](data[i].style!=undefined&&data[i].style.color!=undefined?data[i].style.color:this.flightColor)},pColor:{type:"c",value:new three_module["g" /* Color */](0xffffff)},/*sColor: {\r\n          type: "c",\r\n          value: new THREE.Color(0xC91224)\r\n        },*/texture:{type:"t",value:three_module["p" /* ImageUtils */].loadTexture(\'images/earth/particle.png\')}};var shaderMaterial=new three_module["I" /* ShaderMaterial */]({attributes:attributes,uniforms:uniforms,vertexShader:\'\\n          uniform vec3 viewVector;\\n          uniform float c;\\n          uniform float p;\\n          uniform float size;\\n          varying float intensity;\\n          attribute float pos;\\n          attribute float max;\\n          varying float vMax;\\n          varying float vPos;\\n          varying vec3 vNormal;\\n          uniform float leng;\\n          uniform float time;\\n          void main() {\\n            vPos = pos;\\n            vMax = max;\\n            if(vPos >= time && vPos <= time + leng) {\\n              //if(vPos >= time + leng - 30.0 && vPos <= time + leng) {\\n                gl_PointSize = size;\\n              //} else {\\n                //gl_PointSize = 4.0;\\n              //}\\n            } else {\\n              gl_PointSize = 4.0;\\n            }\\n            if(vPos == 15.0 || vPos == vMax - 15.0) {\\n              gl_PointSize = 30.0;\\n            }\\n            vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n            gl_Position = projectionMatrix * mvPosition;\\n          }\\n        \',fragmentShader:\'\\n          uniform float time;\\n          uniform float leng;\\n          uniform vec3 color;\\n          varying float vPos;\\n          varying float vMax;\\n          varying vec3 vNormal;\\n          uniform sampler2D texture;\\n          uniform vec3 pColor;\\n          uniform vec3 glowColor;\\n          //uniform vec3 sColor;\\n          varying float intensity;\\n          void main() {\\n            if(vPos >= time && vPos <= time + leng) {\\n              //if(vPos >= time + leng - 30.0 && vPos <= time + leng) {\\n                gl_FragColor = vec4(color * glowColor, 1.0);\\n                gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\\n              //}\\n            } else {\\n              gl_FragColor = vec4(color * glowColor, 0.22);\\n              gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\\n            }\\n            if(vPos == 15.0 || vPos == vMax - 15.0) {\\n              gl_FragColor = vec4(color * glowColor, 1.0);\\n              gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\\n            }\\n          }\\n        \',blending:three_module["a" /* AdditiveBlending */],depthTest:true,depthWrite:false,transparent:true});var points=new three_module["z" /* ParticleSystem */](linesGeo,shaderMaterial);this.rotating.add(points);this.fls.push(points);var self=this;var speed=data[i].style!=undefined&&data[i].style.speed!=undefined?data[i].style.speed:this.flightSpeed;points.update=function(){if(this.material.uniforms.time.value>=this.geometry.vertices.length){this.material.uniforms.time.value=0;}else{this.material.uniforms.time.value+=parseInt(speed,10);}this.geometry.verticesNeedUpdate=true;};}}},{key:\'createMap\',value:function createMap(){var base=new three_module["n" /* Geometry */]();var count=0;for(var i=0;i<this.Geo.features.length;i++){var gm=this.Geo.features[i].geometry;var coordinates=gm.coordinates;if(gm.type==\'Polygon\'){var path=[];for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){var v=this.createVector3(\'plane\',coordinates[a][b][0],coordinates[a][b][1]);path.push(v);count++;}}var shape=new three_module["J" /* Shape */](path);var geometry=new three_module["K" /* ShapeGeometry */](shape);//this.countries[i].geometry = geometry;\n//base.merge(geometry);\n//colors.push(new THREE.MeshBasicMaterial({color: 0x6b7e00}));\n//var mbt = i % 2 == 0 ? new THREE.MeshBasicMaterial({color: 0xb3c400}) : new THREE.MeshBasicMaterial({color: 0x6b7e00});\n//var mesh = new THREE.Mesh(geometry, mbt);\n//this.scene.add(mesh);\nthis.countries.push({properties:this.Geo.features[i].properties,geometry:geometry,geometry2D:geometry.clone(),geometry3D:geometry.clone(),color:0x33C9FB});// var mesh = new THREE.Line(geometry, new THREE.MeshBasicMaterial({color: 0xb3c400}));\n// this.scene.add(mesh);\n}else if(gm.type==\'MultiPolygon\'){for(var a=0;a<coordinates.length;a++){var path=[];for(var b=0;b<coordinates[a].length;b++){for(var c=0;c<coordinates[a][b].length;c++){var v=this.createVector3(\'plane\',coordinates[a][b][c][0],coordinates[a][b][c][1]);path.push(v);count++;}}var shape=new three_module["J" /* Shape */](path);var geometry=new three_module["K" /* ShapeGeometry */](shape);//this.countries[i].geometry = geometry;\n//base.merge(geometry);\n//colors.push(new THREE.MeshBasicMaterial({color: 0xb3c400}));\n//var mbt = i % 2 == 0 ? new THREE.MeshBasicMaterial({color: 0xb3c400}) : new THREE.MeshBasicMaterial({color: 0x6b7e00});\n//var mesh = new THREE.Mesh(geometry, mbt);\n//this.scene.add(mesh);\nthis.countries.push({properties:this.Geo.features[i].properties,geometry:geometry,geometry2D:geometry.clone(),geometry3D:geometry.clone(),color:0x237DB9});// var mesh = new THREE.Line(geometry, new THREE.MeshBasicMaterial({color: 0xb3c400}));\n// this.scene.add(mesh);\n}}}//var mesh = new THREE.Mesh(base, new THREE.MeshBasicMaterial({color: 0xb3c400}));\n//this.scene.add(mesh);\n//return false;\nfor(var i=0;i<this.countries.length;i++){for(var k=0;k<this.countries[i].geometry.vertices.length;k++){var lon=this.countries[i].geometry.vertices[k].x*90/this.radius;var lat=this.countries[i].geometry.vertices[k].y*90/this.radius;this.countries[i].geometry3D.vertices[k].x=-this.radius*Math.sin((90-lat)*Math.PI/180)*Math.cos((lon-180)*Math.PI/180);this.countries[i].geometry3D.vertices[k].y=this.radius*Math.cos((90-lat)*Math.PI/180);this.countries[i].geometry3D.vertices[k].z=this.radius*Math.sin((90-lat)*Math.PI/180)*Math.sin((lon-180)*Math.PI/180);}}this.bufferGeometry=new three_module["d" /* BufferGeometry */]();var positions=new Float32Array(count*3*3);var normals=new Float32Array(count*3*3);var colors=new Float32Array(count*3*3);var color=new three_module["g" /* Color */](0x237DB9);var index=0;for(var i=0;i<this.countries.length;i++){var vertices=this.countries[i].geometry.vertices;for(var f=0;f<this.countries[i].geometry.faces.length;f++){var face=this.countries[i].geometry.faces[f];positions[index]=vertices[face.a].x;positions[index+1]=vertices[face.a].y;positions[index+2]=vertices[face.a].z;positions[index+3]=vertices[face.b].x;positions[index+4]=vertices[face.b].y;positions[index+5]=vertices[face.b].z;positions[index+6]=vertices[face.c].x;positions[index+7]=vertices[face.c].y;positions[index+8]=vertices[face.c].z;normals[index]=face.normal.x;normals[index+1]=face.normal.y;normals[index+2]=face.normal.z;normals[index+3]=face.normal.x;normals[index+4]=face.normal.y;normals[index+5]=face.normal.z;normals[index+6]=face.normal.x;normals[index+7]=face.normal.y;normals[index+8]=face.normal.z;colors[index]=color.r;colors[index+1]=color.g;colors[index+2]=color.b;colors[index+3]=color.r;colors[index+4]=color.g;colors[index+5]=color.b;colors[index+6]=color.r;colors[index+7]=color.g;colors[index+8]=color.b;index+=9;}}this.bufferGeometry.addAttribute(\'position\',new three_module["c" /* BufferAttribute */](positions,3));this.bufferGeometry.addAttribute(\'normal\',new three_module["c" /* BufferAttribute */](normals,3));this.bufferGeometry.addAttribute(\'color\',new three_module["c" /* BufferAttribute */](colors,3));this.bufferGeometry.verticesNeedUpdate=true;//this.bufferGeometry.computeBoundingSphere();\n//this.bufferGeometry.computeVertexNormals();\nvar mesh=new three_module["u" /* Mesh */](this.bufferGeometry,new three_module["w" /* MeshPhongMaterial */]({//color: 0xFFFFFF,\n//specular: 0xFFFFFF,\nshininess:5,//transparent: true,\n//opacity: 0.9,\nside:three_module["j" /* DoubleSide */],vertexColors:three_module["U" /* VertexColors */]}));this.scene.add(mesh);}},{key:\'updateMap\',value:function updateMap(){// for(var i = 0; i < this.countries.length; i++) {\n//   for(var k = 0; k < this.countries[i].geometry.vertices.length; k++) {\n//     this.countries[i].geometry.vertices[k].copy(this.countries[i].geometry2D.vertices[k]);\n//     this.mix(this.countries[i].geometry.vertices[k], this.countries[i].geometry3D.vertices[k], this.interpolatePos);\n//   }\n//   //this.countries[i].geometry.computeBoundingSphere();\n//   //if(computeFaceNormals) this.countries[i].geometry.computeFaceNormals();\n// }\nvar positions=this.bufferGeometry.getAttribute(\'position\').array;var normals=this.bufferGeometry.getAttribute(\'normal\').array;var colors=this.bufferGeometry.getAttribute(\'color\').array;// var m = new THREE.Matrix4();\n// var m1 = new THREE.Matrix4();\n// var m2 = new THREE.Matrix4();\n// m1.makeRotationY(worldMap.countriesObject3D.rotation.y);\n// m2.makeScale(worldMap.countriesObject3D.scale.x, worldMap.countriesObject3D.scale.y, worldMap.countriesObject3D.scale.z);\n// m.multiplyMatrices(m1, m2);\nvar color=new three_module["g" /* Color */]();var v=new three_module["T" /* Vector3 */]();var index=0;var i,f;for(i=0;i<this.countries.length;i++){var vertices=this.countries[i].geometry.vertices;for(var k=0;k<vertices.length;k++){vertices[k].copy(this.countries[i].geometry2D.vertices[k]);this.mix(vertices[k],this.countries[i].geometry3D.vertices[k],this.interpolatePos);}color.set(this.countries[i].color);for(f=0;f<this.countries[i].geometry.faces.length;f++){var face=this.countries[i].geometry.faces[f];v.copy(vertices[face.a]);positions[index]=v.x;positions[index+1]=v.y;positions[index+2]=v.z;v.copy(vertices[face.b]);positions[index+3]=v.x;positions[index+4]=v.y;positions[index+5]=v.z;v.copy(vertices[face.c]);//v.applyMatrix4(m);\npositions[index+6]=v.x;positions[index+7]=v.y;positions[index+8]=v.z;// normals\nnormals[index]=face.normal.x;normals[index+1]=face.normal.y;normals[index+2]=face.normal.z;normals[index+3]=face.normal.x;normals[index+4]=face.normal.y;normals[index+5]=face.normal.z;normals[index+6]=face.normal.x;normals[index+7]=face.normal.y;normals[index+8]=face.normal.z;// colors\ncolors[index]=color.r;colors[index+1]=color.g;colors[index+2]=color.b;colors[index+3]=color.r;colors[index+4]=color.g;colors[index+5]=color.b;colors[index+6]=color.r;colors[index+7]=color.g;colors[index+8]=color.b;index+=9;}}this.bufferGeometry.attributes.position.needsUpdate=true;this.bufferGeometry.attributes.normal.needsUpdate=true;this.bufferGeometry.attributes.color.needsUpdate=true;// worldMap.bufferGeometry.colorsNeedUpdate = true;\nthis.bufferGeometry.computeBoundingSphere();// worldMap.bufferGeometry.computeVertexNormals();\n// var positions = this.bufferGeometry.getAttribute(\'position\').array;\n// for(var i = 0; i < this.countries.length; i++) {\n//   var vertices = this.countries[i].geometry.vertices;\n//   var index = 0;\n//   for(var k = 0; k < this.countries[i].geometry.vertices.length; k++) {\n//     this.countries[i].geometry.vertices[k].copy(this.countries[i].geometry2D.vertices[k]);\n//     this.mix(this.countries[i].geometry.vertices[k], this.countries[i].geometry3D.vertices[k], this.interpolatePos);\n//     positions[3 * index] = this.countries[i].geometry.vertices[k].x;\n//     positions[3 * index + 1] = this.countries[i].geometry.vertices[k].y;\n//     positions[3 * index + 2] = this.countries[i].geometry.vertices[k].z;\n//     index++;\n//   }\n// }\n// this.bufferGeometry.attributes.position.needsUpdate = true;\n}},{key:\'createBox\',value:function createBox(){var base=new three_module["n" /* Geometry */]();for(var i=0;i<this.Geo.features.length;i++){var gm=this.Geo.features[i].geometry;var coordinates=gm.coordinates;if(gm.type==\'Polygon\'){var path=[];for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){var v=this.createVector3(\'plane\',coordinates[a][b][0],coordinates[a][b][1]);path.push(v);}}var shape=new three_module["J" /* Shape */](path);var geometry=new three_module["l" /* ExtrudeGeometry */](shape,{bevelEnabled:false,amount:5});base.merge(geometry);}else if(gm.type==\'MultiPolygon\'){for(var a=0;a<coordinates.length;a++){var path=[];for(var b=0;b<coordinates[a].length;b++){for(var c=0;c<coordinates[a][b].length;c++){var v=this.createVector3(\'plane\',coordinates[a][b][c][0],coordinates[a][b][c][1]);path.push(v);}}var shape=new three_module["J" /* Shape */](path);var geometry=new three_module["l" /* ExtrudeGeometry */](shape,{bevelEnabled:false,steps:1,amount:5});base.merge(geometry);}}}var mesh=new three_module["u" /* Mesh */](base,new three_module["v" /* MeshBasicMaterial */]({color:0xff0000}));this.scene.add(mesh);console.log(this.scene);}},{key:\'createGlobal\',value:function createGlobal(){this.countrys={geometry:new three_module["n" /* Geometry */](),geometry2D:new three_module["n" /* Geometry */](),geometry3D:new three_module["n" /* Geometry */]()};var count=0;for(var i=0;i<this.Geo.features.length;i++){var gm=this.Geo.features[i].geometry;var coordinates=gm.coordinates;if(gm.type==\'Polygon\'){for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){this.countrys.geometry.vertices.push(this.createVector3(\'plane\',coordinates[a][b][0],coordinates[a][b][1]));this.countrys.geometry2D.vertices.push(this.createVector3(\'plane\',coordinates[a][b][0],coordinates[a][b][1]));this.countrys.geometry3D.vertices.push(this.createVector3(\'sphere\',coordinates[a][b][0],coordinates[a][b][1]));count++;}}}else if(gm.type==\'MultiPolygon\'){for(var a=0;a<coordinates.length;a++){for(var b=0;b<coordinates[a].length;b++){for(var c=0;c<coordinates[a][b].length;c++){this.countrys.geometry.vertices.push(this.createVector3(\'plane\',coordinates[a][b][c][0],coordinates[a][b][c][1]));this.countrys.geometry2D.vertices.push(this.createVector3(\'plane\',coordinates[a][b][c][0],coordinates[a][b][c][1]));this.countrys.geometry3D.vertices.push(this.createVector3(\'sphere\',coordinates[a][b][c][0],coordinates[a][b][c][1]));count++;}}}}}this.bufferGeometry=new three_module["d" /* BufferGeometry */]();var positions=new Float32Array(count*3);this.bufferGeometry.addAttribute(\'position\',new three_module["c" /* BufferAttribute */](positions,3));var mesh=new three_module["q" /* Line */](this.bufferGeometry,new three_module["v" /* MeshBasicMaterial */]({color:\'blue\',side:three_module["j" /* DoubleSide */]}));this.scene.add(mesh);}},{key:\'updateGlobal\',value:function updateGlobal(){var positions=this.bufferGeometry.getAttribute(\'position\').array;var index=0;for(var k=0;k<this.countrys.geometry.vertices.length;k++){this.countrys.geometry.vertices[k].copy(this.countrys.geometry2D.vertices[k]);this.mix(this.countrys.geometry.vertices[k],this.countrys.geometry3D.vertices[k],this.interpolatePos);positions[3*index]=this.countrys.geometry.vertices[k].x;positions[3*index+1]=this.countrys.geometry.vertices[k].y;positions[3*index+2]=this.countrys.geometry.vertices[k].z;index++;}this.bufferGeometry.attributes.position.needsUpdate=true;}},{key:\'createLight\',value:function createLight(){this.scene.add(new three_module["b" /* AmbientLight */](0xffffff));}},{key:\'mix\',value:function mix(v1,v2,factor){v1.x=v1.x+(v2.x-v1.x)*factor;v1.y=v1.y+(v2.y-v1.y)*factor;v1.z=v1.z+(v2.z-v1.z)*factor;}},{key:\'createVector3\',value:function createVector3(type,lon,lat){if(type==\'sphere\'){return new three_module["T" /* Vector3 */](-this.radius*Math.sin((90-lat)*Math.PI/180)*Math.cos((lon-180)*Math.PI/180),this.radius*Math.cos((90-lat)*Math.PI/180),this.radius*Math.sin((90-lat)*Math.PI/180)*Math.sin((lon-180)*Math.PI/180));}else if(type==\'plane\'){return new three_module["T" /* Vector3 */](lon/180*this.radius*2,lat/180*this.radius*2);}}},{key:\'render\',value:function render(){requestAnimationFrame(this.animate);this.controls.update();this.renderer.clear();this.renderer.render(this.scene,this.camera);if(this.geometryNeedsUpdate){//this.updateGlobal();\nthis.updateMap();}}},{key:\'load\',value:function load(data,type){if(!this.isAnimate){this.animate();this.isAnimate=true;}}}]);return Gobal;}();/* harmony default export */ var global = (global_Gobal);;var gl,timeout;var global_main=function main(){//console.log(TWEEN);\ngl=new global_Gobal({el:\'id-map1\',isMove:true});if(!gl.animate){gl.animate=function(){tween["update"]();gl.render();};gl.load();}document.getElementById(\'id0\').onclick=function(){new tween["Tween"](gl).to({interpolatePos:0.0},800).onUpdate(function(){gl.geometryNeedsUpdate=true;}).onComplete(function(){gl.geometryNeedsUpdate=false;gl.isMode=\'id0\';}).easing(tween["Easing"].Cubic.Out).start();};document.getElementById(\'id1\').onclick=function(){new tween["Tween"](gl).to({interpolatePos:1.0},800).onUpdate(function(){gl.geometryNeedsUpdate=true;}).onComplete(function(){gl.geometryNeedsUpdate=false;gl.isMode=\'id1\';}).easing(tween["Easing"].Cubic.Out).start();};document.getElementById(\'id1\').onclick();gl.isMode=\'id1\';// gl.flight([{\n//   start: {\n//     lat: -27,\n//     lon: 43\n//   },\n//   end: {\n//     lat: 53,\n//     lon: -98\n//   }\n// }, {\n//   start: {\n//     lat: -13,\n//     lon: -92\n//   },\n//   end: {\n//     lat: 53,\n//     lon: -98\n//   }\n// }]);\nhandle();};var handle=function handle(){clearTimeout(timeout);if(gl.isMove){if(gl.isMode==\'id1\'){document.getElementById(\'id0\').onclick();}else if(gl.isMode==\'id0\'){document.getElementById(\'id1\').onclick();}}timeout=setTimeout(handle,3000);};global_main();\n// EXTERNAL MODULE: ./src/city.js + 11 modules\nvar city = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/index.js\ndocument.getElementById("id-img").src=\'assets/images/12.png\';\n\n//# sourceURL=webpack:///./src/index.js_+_5_modules?')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?')},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(4);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + " " + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, "html{font-size:10px;-webkit-tap-highlight-color:transparent}body,html{font-family:Microsoft YaHei,Helvetica Neue,Arial,sans-serif;font-weight:400;line-height:1.6;color:#333;font-size:12px}body,html{height:100%;width:100%}body{background:#1f2129;min-width:1000px}*,body{margin:0;padding:0}*{border:0;font-size:100%;vertical-align:baseline}a{text-decoration:none}ul{list-style:none;padding:0;margin:0}.clearfix{*zoom:1}.clearfix:after{content:\\".\\";display:block;height:0;font-size:0;clear:both;visibility:hidden}.box .box-item{overflow:hidden;box-sizing:border-box}", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/index.less?./node_modules/css-loader??ref--6-1!./node_modules/less-loader/dist/cjs.js??ref--6-2')},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(7);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(5)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/index.less?")}])});