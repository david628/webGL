"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,i,o){return i&&t(e.prototype,i),o&&t(e,o),e}}(),Earth=function(){function t(e){_classCallCheck(this,t),this.bgColor="0x00FFA7",this.sphereColor="0x0B654B",this.ringColor="0x00FFA7",this.earthColor="0x0B553E",this.linghtColor="0xffffff",this.spin=.1,this.moveAnim=!0,this.flightLines=[],this.hotspots=[],this.city=[],this.markers=[],this.currentCity=0,this.isAnimate=!1,this.flightLineColor={0:new THREE.Color(888382),1:new THREE.Color(888382),2:new THREE.Color(888382),3:new THREE.Color(888382),4:new THREE.Color(888382),5:new THREE.Color(888382)},this.HotspotColor={0:new THREE.Color(10813478),1:new THREE.Color(15820608),2:new THREE.Color(16697722),3:new THREE.Color(13564416),4:new THREE.Color(14612992),5:new THREE.Color(12188160)},this.radius=100,this.segments=60,this.rotateX=0,this.rotateY=0,this.rotateVX=0,this.rotateVY=0,this.rotateXMax=90*Math.PI/180,this.rotateTargetX=0,this.rotateTargetY=0,this.dragging=!1,this.apply(this,e),this.wrap=this.el.get?this.el.get(0):"string"==typeof this.el?document.getElementById(this.el):this.el,this.el=document.createElement("div"),this.el.style="user-select: none;",this.wrap.appendChild(this.el),this.containt=document.createElement("div"),this.containt.style="user-select: none;",this.wrap.appendChild(this.containt),this._baseGeometry||(this._baseGeometry=new THREE.Geometry),this.point||(this.point=new THREE.Mesh(new THREE.CubeGeometry(.5,.5,1,1,1,1))),this.initScene()}return _createClass(t,[{key:"apply",value:function(t,e){if(t&&e&&"object"==(void 0===e?"undefined":_typeof(e)))for(var i in e)t[i]=e[i];return t}},{key:"initScene",value:function(){if(!this.renderer){this.renderer=new THREE.WebGLRenderer({antialias:!1,alpha:!0});var t=this.el.offsetWidth||window.innerWidth,e=this.el.offsetHeight||window.innerHeight;this.renderer.setSize(t,e),this.renderer.autoClear=!1,this.renderer.sortObjects=!1,this.renderer.generateMipmaps=!1,this.el.appendChild(this.renderer.domElement)}this.scene||(this.scene=new THREE.Scene,this.scene.matrixAutoUpdate=!1),this.camera||(this.camera=new THREE.PerspectiveCamera(12,t/e,1,2e4),this.camera.position.z=2800,this.camera.position.y=0,this.scene.add(this.camera)),this.rotating||(this.rotating=new THREE.Object3D,this.scene.add(this.rotating)),this.visualizationMesh||(this.visualizationMesh=new THREE.Object3D,this.rotating.add(this.visualizationMesh)),this.addSkyBox(),this.addRing(),this.addGlow(),this.addSphere(),this.addMap(),this.addLinght(),THREEx.WindowResize(this.renderer,this.camera),this.initTrackballControls()}},{key:"addOutRing",value:function(){}},{key:"addSphere",value:function(){this.sphere=new THREE.Mesh(new THREE.SphereGeometry(this.radius,this.segments,this.segments),new THREE.MeshLambertMaterial({map:new THREE.ImageUtils.loadTexture("js/webGL/images/map.png"),color:this.sphereColor,transparent:!0,opacity:1,depthWrite:!0,depthTest:!0})),this.rotating.add(this.sphere),this.addOutRing(),this.sphere.add(new THREE.Mesh(new THREE.SphereGeometry(this.radius+1,50,50),new THREE.MeshLambertMaterial({transparent:!0,color:16745280,blending:THREE.AdditiveBlending,opacity:.8,map:new THREE.ImageUtils.loadTexture("js/webGL/images/fire4.png")})))}},{key:"addSkyBox",value:function(){var t=new THREE.Mesh(new THREE.CubeGeometry(1920,974,1),new THREE.MeshBasicMaterial({color:this.bgColor,map:THREE.ImageUtils.loadTexture("js/webGL/images/universe.jpg"),side:THREE.BackSide,opacity:1,transparent:!0,blending:THREE.AdditiveBlending}));t.position.z=-1800,this.scene.add(t)}},{key:"addRing",value:function(){var t=new THREE.CubeGeometry(580,580,1),e=new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture("js/webGL/images/radial_layers_medium.jpg"),color:this.ringColor,opacity:.4,transparent:!0,depthWrite:!1,depthTest:!1,blending:THREE.AdditiveBlending}),i=new THREE.Mesh(t,e);this.scene.add(i)}},{key:"addGlow",value:function(){var t=new THREE.Mesh(new THREE.SphereGeometry(this.radius+20,this.segments,this.segments),new THREE.ShaderMaterial({uniforms:{c:{type:"f",value:.4},p:{type:"f",value:9},glowColor:{type:"c",value:new THREE.Color(this.ringColor)},viewVector:{type:"v3",value:new THREE.Vector3(0,0,100)}},vertexShader:"\n\t        uniform vec3 viewVector;\n\t        uniform float c;\n\t        uniform float p;\n\t        varying float intensity;\n\t        void main() {\n\t          vec3 vNormal = -normalize(normalMatrix * normal);\n\t          vec3 vNormel = normalize(normalMatrix * viewVector);\n\t          intensity = pow(c - dot(vNormal, vNormel), p);\n\t          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t        }",fragmentShader:"\n\t        uniform vec3 glowColor;\n\t        varying float intensity;\n\t        void main() {\n\t          vec3 glow = glowColor * intensity;\n\t          gl_FragColor = vec4(glow, 0.6);\n\t        }",opacity:1,side:THREE.DoubleSide,blending:THREE.AdditiveBlending,transparent:!0}));t.position.z=-this.radius,t.scale.multiplyScalar(1.01),this.scene.add(t)}},{key:"addMap",value:function(){var t=this,e=new Image;e.src="js/webGL/images/map_inverted.png",e.onload=function(){t.rotating.add(t.showEarth(e))}}},{key:"showEarth",value:function(t){var e,i=document.createElement("canvas");i.width=t.width,i.height=t.height;var o=i.getContext("2d");o.drawImage(t,0,0,t.width,t.height);for(var a=o.getImageData(0,0,i.width,i.height),r=new THREE.Geometry,s=0;s<a.data.length;s+=20){var n=s/4%i.width,h=(s/4-n)/i.width;if(s/20%2==1&&h%4==1){if(0===a.data[s]){var l=n,c=h,u=(c/(i.height/180)-90)/-1,d=l/(i.width/360)-180;r.vertices.push(this.getVector3(u,d,this.radius))}}}var v={color:{type:"c",value:new THREE.Color(this.earthColor)},glowColor:{type:"c",value:new THREE.Color(16777215)}},g=new THREE.ShaderMaterial({uniforms:v,vertexShader:"\n        void main() {\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\t\t    gl_PointSize = 3.0;\n\t\t\t    gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform vec3 color;\n        uniform vec3 glowColor;\n        uniform sampler2D texture;\n        void main() {\n          gl_FragColor = vec4(color, 0.8);\n          //gl_FragColor = vec4(color * glowColor, 1.0);\n\t\t\t\t  //gl_FragColor = texture2D(texture, gl_PointCoord);\n        }\n      ",blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),e=new THREE.ParticleSystem(r,g);return e.sortParticles=!0,e}},{key:"addLinght",value:function(){var t=new THREE.PointLight(this.linghtColor,2.2);t.position.x=-50,t.position.y=0,t.position.z=350,this.scene.add(t);var e=new THREE.PointLight(this.linghtColor,2.2);e.position.x=50,e.position.y=0,e.position.z=350,this.scene.add(e);var i=new THREE.PointLight(this.linghtColor,2.5);i.position.x=0,i.position.y=0,i.position.z=350,this.scene.add(i)}},{key:"wrapFn",value:function(t,e,i){for(i-=e;t<e;)t+=i;return t%i}},{key:"screenXY",value:function(t){this.projector||(this.projector=new THREE.Projector);var e=t.clone(),i=this.projector.projectVector(e,this.camera),o=window.innerWidth;return o<1280&&(o=1280),e=null,{x:Math.round(i.x*(o/2))+o/2,y:Math.round((0-i.y)*(window.innerHeight/2))+window.innerHeight/2}}},{key:"addMarker",value:function(t){var e=document.createElement("div");e.className="earth-marker",e.innerHTML='<div class="earth-detailText"></div>',this.containt.appendChild(e),e.center=t.center,e.setPosition=function(t,e,i){this.style.left=t+"px",this.style.top=e+"px",this.style.zIndex=i},e.setVisible=function(t){this.style.display=t?"inline":"none"};var i=e.querySelector(".earth-detailText");i.innerHTML=t.name,e.detailLayer=i,e.setSize=function(t){Math.floor(2+.5*t)};var o=this;e.update=function(){var t=o.rotating.matrixWorld,e=this.center.clone(),i=t.multiplyVector3(e),a=o.screenXY(i),r=.3+1*o.camera.scale.z,s=this.importance/5e6;s=o.constrain(s,0,18),r+=s,this.tiny&&(r*=.75),this.selected&&(r=30),this.hover&&(r=15),this.setSize(r),this.setVisible(i.z>.6);var n=Math.floor(1e3-i.z+r);(this.selected||this.hover)&&(n=1e4),this.setPosition(a.x,a.y,n),e=null},this.markers.push(e)}},{key:"rotateToLatLng",value:function(t,e){if(t){this.rotateTargetX=t.lat*Math.PI/180;for(var i=-(t.lon-9-270)*Math.PI/180,o=0;;){var a=i-2*Math.PI*o,r=i+2*Math.PI*o;if(Math.abs(a-this.rotating.rotation.y)<Math.PI){this.rotateTargetY=a;break}if(Math.abs(r-this.rotating.rotation.y)<Math.PI){this.rotateTargetY=r;break}o++,this.rotateTargetY=this.wrapFn(i,-Math.PI,Math.PI)}this.rotateVX*=.6,this.rotateVY*=.6}}},{key:"rotateCallback",value:function(t,e){}},{key:"autoRotateToCities",value:function(){var t=this;this.isRotate?(this.preCity=this.currentCity,this.currentCity>=this.city.length?this.currentCity=0:this.currentCity+=.003,Math.floor(this.currentCity)!=Math.floor(this.preCity)&&(this.rotateToLatLng(this.city[Math.floor(this.currentCity)]),this.rotateCallback(this.city[Math.floor(this.currentCity)]))):this.city[0]&&(this.ou=setTimeout(function(){t.rotateToLatLng(t.city[0]),t.rotateCallback(t.city[0]),clearTimeout(t.ou)},3500),this.isRotate=!0)}},{key:"interpolation",value:function(t,e,i){return(e-t)*i+t}},{key:"render",value:function(){this.moveAnim?(void 0!==this.rotateTargetX&&void 0!==this.rotateTargetY&&(this.rotateVX+=.012*(this.rotateTargetX-this.rotateX),this.rotateVY+=.012*(this.rotateTargetY-this.rotateY),Math.abs(this.rotateTargetX-this.rotateX)<.1&&Math.abs(this.rotateTargetY-this.rotateY)<.1&&(this.rotateTargetX=void 0,this.rotateTargetY=void 0)),this.rotateX+=this.rotateVX,this.rotateY+=this.rotateVY,this.rotateVX*=.98,this.rotateVY*=.98,(this.dragging||void 0!==this.rotateTargetX)&&(this.rotateVX*=.6,this.rotateVY*=.6),this.rotateY+=.01*this.spin,this.rotateX<-this.rotateXMax&&(this.rotateX=-this.rotateXMax,this.rotateVX*=-.95),this.rotateX>this.rotateXMax&&(this.rotateX=this.rotateXMax,this.rotateVX*=-.95),this.rotating.rotation.x=this.rotateX,this.rotating.rotation.y=this.rotateY):(void 0!==this.rotateTargetX&&void 0!==this.rotateTargetY&&(this.rotateVX+=.08*(this.rotateTargetX-this.rotateX),this.rotateVY+=.08*(this.rotateTargetY-this.rotateY),Math.abs(this.rotateTargetX-this.rotateX)<.1&&Math.abs(this.rotateTargetY-this.rotateY)<.1&&(this.rotateTargetX=void 0,this.rotateTargetY=void 0)),this.rotateX+=this.rotateVX,this.rotateY+=this.rotateVY,this.rotateVX*=.01,this.rotateVY*=.01,(this.dragging||void 0!==this.rotateTargetX)&&(this.rotateVX*=.6,this.rotateVY*=.6),this.rotateX<-this.rotateXMax&&(this.rotateX=-this.rotateXMax),this.rotateX>this.rotateXMax&&(this.rotateX=this.rotateXMax),this.rotating.rotation.x=this.rotateX,this.rotating.rotation.y=this.rotateY),this.renderer.clear(),this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.animate);for(var t=0;t<this.flightLines.length;t++)this.flightLines[t]&&void 0!==this.flightLines[t].update&&this.flightLines[t].update();this.camera.position.z=this.interpolation(this.camera.position.z,1200,.05),this.autoRotateToCities()}},{key:"drawLine_type",value:function(t,e,i,o){i=2;var a,r={pos:{type:"f",value:[]},max:{type:"f",value:[]}},s=new THREE.Geometry;if(0==i){var n=t.center.clone()[this.isVersion49()?"subSelf":"sub"](e.center).length(),h=(this.radius,t.center.clone()[this.isVersion49()?"lerpSelf":"lerp"](e.center,.5)),l=h.length();h.normalize(),h.multiplyScalar(l+.5*n);var c=(new THREE.Vector3).sub(t.center,e.center);c.normalize();var u=.5*n,d=t.center,v=h.clone()[this.isVersion49()?"addSelf":"add"](c.clone().multiplyScalar(u)),g=h.clone()[this.isVersion49()?"addSelf":"add"](c.clone().multiplyScalar(-u)),p=e.center,m=new THREE.CubicBezierCurve3(t.center,d,v,h),f=new THREE.CubicBezierCurve3(h,g,p,e.center),E=2*Math.floor(4.5*n),y=m.getPoints(E);y=y.splice(0,y.length-1),y=y.concat(f.getPoints(E)),a=y.length;for(var M=0;M<y.length;M++)s.vertices.push(y[M]),r.pos.value.push(M),r.max.value.push(a)}else if(1==i){if(Math.abs(t.lon-e.lon)>180){a=Math.ceil(Math.abs(-180-t.lon-(180-e.lon))/.15),a=Math.ceil(Math.abs(-180-t.lon-(180-e.lon))/.15);var T,w,H;w=-180-t.lon,H=180-e.lon,T=Math.ceil(a*Math.abs(w)/(H-w));for(var R=Math.abs(t.lon-e.lon)/a,C=Math.abs(t.lat-e.lat)/a,M=1;M<a;M++){var x,b;x=M<=T?t.lon+M*w/T:180-(M-T)*H/(a-T),t.lat>e.lat?b=t.lat-M*C:t.lat<e.lat&&(b=t.lat+M*C);var P,_=this.radius/10;if(M<=a/2)P=this.radius+4*_/(a+2)*M-M*(M-1)/2*8*_/(Math.pow(a,2)+2*a);else{var X=a-M;P=this.radius+4*_/(a+2)*X-X*(X-1)/2*8*_/(Math.pow(a,2)+2*a)}s.vertices.push(this.getVector3(b,x,P+1)),r.pos.value.push(M),r.max.value.push(a)}}else{a=Math.abs(t.lon-e.lon)>Math.abs(t.lat-e.lat)?Math.ceil(Math.abs(t.lon-e.lon)/.15):Math.ceil(Math.abs(t.lat-e.lat)/.15);for(var R=Math.abs(t.lon-e.lon)/a,C=Math.abs(t.lat-e.lat)/a,M=1;M<a;M++){var x,b;t.lon>e.lon?x=t.lon-M*R:t.lon<e.lon&&(x=t.lon+M*R),t.lat>e.lat?b=t.lat-M*C:t.lat<e.lat&&(b=t.lat+M*C);var P,_=this.radius/10;if(M<=a/2)P=this.radius+4*_/(a+2)*M-M*(M-1)/2*8*_/(Math.pow(a,2)+2*a);else{var X=a-M;P=this.radius+4*_/(a+2)*X-X*(X-1)/2*8*_/(Math.pow(a,2)+2*a)}s.vertices.push(this.getVector3(b,x,P+1)),r.pos.value.push(M),r.max.value.push(a)}}}else if(2==i){var V=t.lat,k=t.lon,L=e.lat,S=e.lon,z=35.1*Math.random()+.05,y=[],Y=300*Math.random().toFixed(2)+400;a=Y;for(var M=0;M<Y;M++){var G=180*M/Y,N=this.radius+Math.sin(G*Math.PI/180)*z,F=this.lat_lon_inter_point(V,k,L,S,M/Y);s.vertices.push(this.getVector3(F.lat,F.lon,N)),r.pos.value.push(M),r.max.value.push(a)}}var I={c:{type:"f",value:1},p:{type:"f",value:1.4},glowColor:{type:"c",value:new THREE.Color(16777215)},viewVector:{type:"v3",value:this.camera.position},time:{type:"f",value:0},leng:{type:"f",value:200},color:{type:"c",value:this.flightLineColor[o]},pColor:{type:"c",value:new THREE.Color(16777215)},texture:{type:"t",value:0,texture:THREE.ImageUtils.loadTexture("js/webGL/images/particleA.png")}},D=new THREE.ShaderMaterial({attributes:r,uniforms:I,vertexShader:"\n        uniform vec3 viewVector;\n        uniform float c;\n        uniform float p;\n        varying float intensity;\n        attribute float pos;\n      \tattribute float max;\n      \tvarying float vMax;\n        varying float vPos;\n        varying vec3 vNormal;\n      \tuniform float leng;\n        uniform float time;\n        void main() {\n          vPos = pos;\n      \t  vMax = max;\n          //if(vPos >= time && vPos <= time + leng) {\n            //vNormal = normalize(normal);\n            //gl_PointSize = 10.0;\n          //} else {\n            //gl_PointSize = 3.0;\n          //}\n          if(vPos >= time && vPos <= time + leng) {\n            //vNormal = normalize(normal);\n            gl_PointSize = 6.0;\n          } else {\n            gl_PointSize = 1.0;\n          }\n          if(vPos == 5.0 || vPos == vMax - 5.0) {\n            gl_PointSize = 13.0;\n          }\n          //vec3 vNormal = normalize(normalMatrix * normal);\n        \t//vec3 vNormel = normalize(normalMatrix * viewVector);\n        \t//intensity = pow(c - dot(vNormal, vNormel), p);\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform float time;\n      \tuniform float leng;\n        uniform vec3 color;\n        varying float vPos;\n        varying float vMax;\n        varying vec3 vNormal;\n        uniform sampler2D texture;\n      \tuniform vec3 pColor;\n        uniform vec3 glowColor;\n        varying float intensity;\n        void main() {\n          //float light = 1.0 - fract((1.0) + fract(time * 0.6));\n          //vec3 glow = glowColor * intensity;\n          if(vPos >= time && vPos <= time + leng) {\n            //gl_FragColor = vec4(vec3(light, 0.0, 0.0) * (1.0 - 0.5), 1.0);\n            //gl_FragColor = 2.0 * vec4(1.0, 0.0, 0.0, 1.0);\n            //gl_FragColor = vec4(color, 1.0);\n            //gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n            \n            gl_FragColor = vec4(color * glowColor, 1.0);\n\t          gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n\t          \n\t          //gl_FragColor = vec4(color * vColor, 1.0);\n\t\t\t\t    //gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n\t        } else {\n\t          //gl_FragColor = vec4(color, 0.5);\n\t          \n\t          gl_FragColor = vec4(color * glowColor, 0.5);\n\t\t\t\t    gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n\t        }\n          if(vPos == 5.0 || vPos == vMax - 5.0) {\n            gl_FragColor = vec4(color * glowColor, 1.0);\n  \t\t\t\t  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n          }\n        }\n      ",blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0}),y=new THREE.ParticleSystem(s,D);this.rotating.add(y),this.flightLines.push(y),y.update=function(){this.material.uniforms.time.value>=this.geometry.vertices.length?this.material.uniforms.time.value=0:this.material.uniforms.time.value+=9.5,this.geometry.verticesNeedUpdate=!0}}},{key:"addFlightLine",value:function(t,e,i,o){var a=parseInt(t.lat,10),r=parseInt(t.lon,10),s=parseInt(e.lat,10),n=parseInt(e.lon,10),h={lat:a,lon:r,name:t.name,type:t.type,value:t.value,center:this.getVector3(a,r,this.radius)},l={lat:s,lon:n,name:e.name,type:e.type,value:e.value,center:this.getVector3(s,n,this.radius)};this.drawLine_type(h,l,i,o)}},{key:"lat_lon_inter_point",value:function(t,e,i,o,a){t=t*Math.PI/180,e=e*Math.PI/180,i=i*Math.PI/180,o=o*Math.PI/180;var r=2*Math.asin(Math.sqrt(Math.pow(Math.sin((t-i)/2),2)+Math.cos(t)*Math.cos(i)*Math.pow(Math.sin((e-o)/2),2))),s=Math.sin((1-a)*r)/Math.sin(r),n=Math.sin(a*r)/Math.sin(r),h=s*Math.cos(t)*Math.cos(e)+n*Math.cos(i)*Math.cos(o),l=s*Math.cos(t)*Math.sin(e)+n*Math.cos(i)*Math.sin(o),c=s*Math.sin(t)+n*Math.sin(i);return{lat:180*Math.atan2(c,Math.sqrt(Math.pow(h,2)+Math.pow(l,2)))/Math.PI,lon:180*Math.atan2(l,h)/Math.PI}}},{key:"indexOf",value:function(t,e,i){if(!t)return-1;for(var o=0,a=t.length;o<a;o++)if(t[o][i]==e[i])return o;return-1}},{key:"loadFlightLine",value:function(t,e){this.removeAllFlightLine();for(var i=0;i<t.length;i++)t[i].type=this.getTestNumber(0,3),this.addFlightLine(t[i].start,t[i].end,void 0!==t[i].lineType?t[i].lineType:e,t[i].type||1)}},{key:"removeAllFlightLine",value:function(){if(void 0!==this.flightLines&&this.flightLines.length)for(var t=0;t<this.flightLines.length;t++)this.rotating.remove(this.flightLines[t]),this.removeObject(this.scene,this.flightLines[t]),this.flightLines[t]=null;this.flightLines=[]}},{key:"removeObject",value:function(t,e){var i,o;if(console.log(e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem),e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem)for(i=t.__webglObjects.length-1;i>=0;i--)o=t.__webglObjects[i].object,e==o&&t.__webglObjects.splice(i,1)}},{key:"getTestNumber",value:function(t,e){return Math.floor(Math.random()*(e-t))+t}},{key:"removeAllHotspot",value:function(){if(void 0!==this.hotspots&&this.hotspots.length)for(var t=0;t<this.hotspots.length;t++)this.rotating.remove(this.hotspots[t]),this.removeObject(this.scene,this.hotspots[t]),this.hotspots[t]=null;this.hotspots=[]}},{key:"loadHotspot",value:function(t){this.removeAllHotspot();for(var e=0;e<t.length;e++)this.addHotspot({lat:t[e].lat,lon:t[e].lon,value:t[e].value,type:this.getTestNumber(0,3)});this.points=new THREE.Mesh(this._baseGeometry,new THREE.MeshBasicMaterial({color:16777215,vertexColors:THREE.FaceColors,morphTargets:!1})),this.rotating.add(this.points)}},{key:"addHotspot",value:function(t){var e=(90-t.lat)*Math.PI/180,i=(180-t.lon)*Math.PI/180;this.point.position.x=this.radius*Math.sin(e)*Math.cos(i),this.point.position.y=this.radius*Math.cos(e),this.point.position.z=this.radius*Math.sin(e)*Math.sin(i),this.point.lookAt(this.rotating.position),this.point.scale.z=-t.value,this.point.updateMatrix();for(var o=0;o<this.point.geometry.faces.length;o++)this.point.geometry.faces[o].color=this.HotspotColor[t.type];THREE.GeometryUtils.merge(this._baseGeometry,this.point)}},{key:"_addHotspot",value:function(t){if(!this.hotspot){var e=new THREE.CubeGeometry(.55,.55,1);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,-.5)),this.hotspot=new THREE.Mesh(e),this.hotspotColor||(this.hotspotColor=new THREE.Color(3329330)),this.hotspotMat||(this.hotspotMat=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,morphTargets:!1}))}var i=new THREE.Geometry,o=this.getPos(t.lat,t.lon,this.radius);this.hotspot.position.x=o.x,this.hotspot.position.y=o.y,this.hotspot.position.z=o.z,this.hotspot.lookAt(this.rotating.position),this.hotspot.scale.z=Math.max(t.value,.1),this.hotspotColor=this.HotspotColor[t.type],this.hotspot.updateMatrix();for(var a=0;a<this.hotspot.geometry.faces.length;a++)this.hotspot.geometry.faces[a].color=this.hotspotColor;THREE.GeometryUtils.merge(i,this.hotspot);var r=new THREE.Mesh(i,this.hotspotMat);this.hotspots.push(r),this.rotating.add(r)}},{key:"_addCityPoint",value:function(t,e){var i=e||0;if(0==i)for(var o=0;o<t.length;o++){this.city.push(t[o]);for(var a=new THREE.Geometry,r=0;r<60;r++)a.vertices.push(this.getVector3(t[o].lat,t[o].lon,this.radius+r));var s=new THREE.ParticleSystem(a,new THREE.ShaderMaterial({uniforms:{color:{type:"c",value:new THREE.Color(3329330)},texture:{type:"t",value:THREE.ImageUtils.loadTexture("js/webGL/images/particleA.jpg")}},vertexShader:"\n  \t      \t//attribute float size;\n  \t      \t//attribute vec3 customColor;\n  \t      \t//varying vec3 vColor;\n  \t      \tvoid main() {\n  \t      \t  gl_PointSize = 7.0;\n  \t      \t  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  \t      \t  gl_Position = projectionMatrix * mvPosition;\n  \t        }\n  \t      ",fragmentShader:"\n  \t        uniform vec3 color;\n  \t      \tuniform sampler2D texture;\n  \t      \t//varying vec3 vColor;\n  \t      \tvoid main() {\n  \t      \t  gl_FragColor = vec4(color, 1.0);\n  \t      \t  gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n  \t        }\n  \t      ",blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0}));this.rotating.add(s)}else if(1==i)for(var o=0;o<t.length;o++){this.city.push(t[o]);var n=new THREE.CubeGeometry(1,100,1),h=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:65447,opacity:1,transparent:!0})),l=this.getVector3(t[o].lat,t[o].lon,this.radius);h.position.x=l.x,h.position.y=l.y,h.position.z=l.z,this.rotating.add(h)}else if(2==i)for(var o=0;o<t.length;o++){this.city.push(t[o]);var n=new THREE.Geometry,c=new THREE.LineBasicMaterial({linewidth:1.5,color:7329264,transparent:!0,opacity:1});n.vertices.push(this.getVector3(t[o].lat,t[o].lon,this.radius+10)),n.vertices.push(this.getVector3(t[o].lat,t[o].lon,this.radius));var h=new THREE.Line(n,c);this.rotating.add(h)}}},{key:"initMap",value:function(){THREE.EdgesGeometry||(THREE.Geometry.prototype.clone=function(){return(new THREE.Geometry).copy(this)},THREE.Geometry.prototype.copy=function(t){var e,i,o,a,r,s;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var n=t.vertices;for(e=0,i=n.length;e<i;e++)this.vertices.push(n[e].clone());var h=t.colors;for(e=0,i=h.length;e<i;e++)this.colors.push(h[e].clone());var l=t.faces;for(e=0,i=l.length;e<i;e++)this.faces.push(l[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var c=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),o=0,a=c.length;o<a;o++){var u=c[o],d=[];for(r=0,s=u.length;r<s;r++){var v=u[r];d.push(v.clone())}this.faceVertexUvs[e].push(d)}}var g=t.morphTargets;for(e=0,i=g.length;e<i;e++){var p={};if(p.name=g[e].name,void 0!==g[e].vertices)for(p.vertices=[],o=0,a=g[e].vertices.length;o<a;o++)p.vertices.push(g[e].vertices[o].clone());if(void 0!==g[e].normals)for(p.normals=[],o=0,a=g[e].normals.length;o<a;o++)p.normals.push(g[e].normals[o].clone());this.morphTargets.push(p)}var m=t.morphNormals;for(e=0,i=m.length;e<i;e++){var f={};if(void 0!==m[e].vertexNormals)for(f.vertexNormals=[],o=0,a=m[e].vertexNormals.length;o<a;o++){var E=m[e].vertexNormals[o],y={};y.a=E.a.clone(),y.b=E.b.clone(),y.c=E.c.clone(),f.vertexNormals.push(y)}if(void 0!==m[e].faceNormals)for(f.faceNormals=[],o=0,a=m[e].faceNormals.length;o<a;o++)f.faceNormals.push(m[e].faceNormals[o].clone());this.morphNormals.push(f)}return this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},THREE.EdgesGeometry=function(t,e){THREE.BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var i,o,a,r,s=[],n=Math.cos(THREE.Math.DEG2RAD*e),h=[0,0],l={},c=["a","b","c"];t.isBufferGeometry?(r=new THREE.Geometry,r.fromBufferGeometry(t)):r=t.clone(),r.mergeVertices(),r.computeFaceNormals();for(var u=r.vertices,d=r.faces,v=0,g=d.length;v<g;v++)for(var p=d[v],m=0;m<3;m++)i=p[c[m]],o=p[c[(m+1)%3]],h[0]=Math.min(i,o),h[1]=Math.max(i,o),a=h[0]+","+h[1],void 0===l[a]?l[a]={index1:h[0],index2:h[1],face1:v,face2:void 0}:l[a].face2=v;for(a in l){var f=l[a];if(void 0===f.face2||d[f.face1].normal.dot(d[f.face2].normal)<=n){var E=u[f.index1];s.push(E.x,E.y,E.z),E=u[f.index2],s.push(E.x,E.y,E.z)}}},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry),THREE.LineSegments||(THREE.LineSegments=function(t,e){THREE.Line.call(this,t,e),this.type="LineSegments"}),THREE.EdgesHelper||(THREE.EdgesHelper=function(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new THREE.LineSegments(new THREE.EdgesGeometry(t.geometry),new THREE.LineBasicMaterial({color:void 0!==e?e:16777215}))});var t;for(var e in country_data){t=new Tessalator3D(country_data[e],0);country_data[e].data.cont,new THREE.Color(1063999);var i=country_data[e].mesh=new THREE.Mesh(t,new THREE.MeshLambertMaterial({emissive:1063999}));this.rotating.add(i)}}},{key:"initTrackballControls",value:function(){var t=this;this.mouseX=0,this.mouseY=0,this.pmouseX=0,this.pmouseY=0,this.pressX=0,this.pressY=0,this.keyboard=new THREEx.KeyboardState,this.onDocumentResize=function(t){},this.onDocumentMouseDown=function(t){this.dragging=!0,this.pressX=this.mouseX,this.pressY=this.mouseY,this.rotateTargetX=void 0,this.rotateTargetX=void 0},this.onDocumentMouseMove=function(t){this.pmouseX=this.mouseX,this.pmouseY=this.mouseY,this.mouseX=t.clientX-.5*window.innerWidth,this.mouseY=t.clientY-.5*window.innerHeight,this.dragging&&(0==this.keyboard.pressed("shift")?(this.rotateVY+=(this.mouseX-this.pmouseX)/2*Math.PI/180*.3,this.rotateVX+=(this.mouseY-this.pmouseY)/2*Math.PI/180*.3):(this.camera.position.x-=.5*(this.mouseX-this.pmouseX),this.camera.position.y+=.5*(this.mouseY-this.pmouseY)))},this.onDocumentMouseUp=function(t){this.dragging=!1},this.onMouseWheel=function(t){var e=0;t.wheelDelta?e=t.wheelDelta/120:t.detail&&(e=-t.detail/3),e&&(this.camera.scale.z+=.1*e,this.camera.scale.z=this.constrain(this.camera.scale.z,.7,5)),t.returnValue=!1},this.renderer.domElement.addEventListener("windowResize",function(e){t.onDocumentResize(e)},!1),this.renderer.domElement.addEventListener("mousedown",function(e){t.onDocumentMouseDown(e)},!0),this.renderer.domElement.addEventListener("mousemove",function(e){t.onDocumentMouseMove(e)},!0),this.renderer.domElement.addEventListener("mouseup",function(e){t.onDocumentMouseUp(e)},!1),this.renderer.domElement.addEventListener("mousewheel",function(e){t.onMouseWheel(e)},!1),this.renderer.domElement.addEventListener("DOMMouseScroll",function(e){t.onMouseWheel(window.event||e)},!1)}},{key:"getPos",value:function(t,e,i){i=i||this.radius;var o=(90-t)*Math.PI/180,a=(e-180)*Math.PI/180;return{x:-i*Math.sin(o)*Math.cos(a),y:i*Math.cos(o),z:i*Math.sin(o)*Math.sin(a)}}},{key:"getVector3",value:function(t,e,i){var o=this.getPos(t,e,i),a=new THREE.Vector3;return a.x=o.x,a.y=o.y,a.z=o.z,a}},{key:"isVersion49",value:function(){return 49==THREE.REVISION}},{key:"load",value:function(t,e){this.isAnimate||(this.animate(),this.isAnimate=!0)}},{key:"constrain",value:function(t,e,i){return t<e?t=e:t>i&&(t=i),t}}]),t}();window.Earth=Earth;