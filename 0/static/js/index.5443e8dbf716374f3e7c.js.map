{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/three/build/three.module.js","webpack:///./node_modules/tween/tween.js","webpack:///./node_modules/three-trackballcontrols/index.js","webpack:///./src/components/geo.js","webpack:///./src/index.js","webpack:///./src/components/global.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/assets/css/index.less?03a6"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EventDispatcher","__webpack_exports__","WebGLMultisampleRenderTarget","WebGLRenderTargetCube","WebGLRenderTarget","WebGLRenderer","ShaderLib","UniformsLib","UniformsUtils","ShaderChunk","FogExp2","Fog","Scene","Sprite","LOD","SkinnedMesh","Skeleton","Bone","Mesh","LineSegments","LineLoop","Line","Points","Group","VideoTexture","DataTexture","DataTexture2DArray","DataTexture3D","CompressedTexture","CubeTexture","CanvasTexture","DepthTexture","Texture","AnimationLoader","CompressedTextureLoader","DataTextureLoader","CubeTextureLoader","TextureLoader","ObjectLoader","MaterialLoader","BufferGeometryLoader","DefaultLoadingManager","LoadingManager","ImageLoader","ImageBitmapLoader","FontLoader","FileLoader","Loader","LoaderUtils","Cache","AudioLoader","SpotLightShadow","SpotLight","PointLight","RectAreaLight","HemisphereLight","DirectionalLightShadow","DirectionalLight","AmbientLight","LightShadow","Light","StereoCamera","PerspectiveCamera","OrthographicCamera","CubeCamera","ArrayCamera","Camera","AudioListener","PositionalAudio","AudioContext","AudioAnalyser","Audio","VectorKeyframeTrack","StringKeyframeTrack","QuaternionKeyframeTrack","NumberKeyframeTrack","ColorKeyframeTrack","BooleanKeyframeTrack","PropertyMixer","PropertyBinding","KeyframeTrack","AnimationUtils","AnimationObjectGroup","AnimationMixer","AnimationClip","Uniform","InstancedBufferGeometry","BufferGeometry","Geometry","InterleavedBufferAttribute","InstancedInterleavedBuffer","InterleavedBuffer","InstancedBufferAttribute","Face3","Object3D","Raycaster","Layers","Clock","QuaternionLinearInterpolant","LinearInterpolant","DiscreteInterpolant","CubicInterpolant","Interpolant","Triangle","_Math","Spherical","Cylindrical","Plane","Frustum","Sphere","Ray","Matrix4","Matrix3","Box3","Box2","Line3","Euler","Vector4","Vector3","Vector2","Quaternion","Color","ImmediateRenderObject","VertexNormalsHelper","SpotLightHelper","SkeletonHelper","PointLightHelper","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","PositionalAudioHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","AxesHelper","Shape","Path","ShapePath","Font","CurvePath","Curve","ImageUtils","ShapeUtils","WebGLUtils","WireframeGeometry","ParametricGeometry","ParametricBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","PolyhedronGeometry","PolyhedronBufferGeometry","TubeGeometry","TubeBufferGeometry","TorusKnotGeometry","TorusKnotBufferGeometry","TorusGeometry","TorusBufferGeometry","TextGeometry","TextBufferGeometry","SphereGeometry","SphereBufferGeometry","RingGeometry","RingBufferGeometry","PlaneGeometry","PlaneBufferGeometry","LatheGeometry","LatheBufferGeometry","ShapeGeometry","ShapeBufferGeometry","ExtrudeGeometry","ExtrudeBufferGeometry","EdgesGeometry","ConeGeometry","ConeBufferGeometry","CylinderGeometry","CylinderBufferGeometry","CircleGeometry","CircleBufferGeometry","BoxGeometry","BoxBufferGeometry","ShadowMaterial","SpriteMaterial","RawShaderMaterial","ShaderMaterial","PointsMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshPhongMaterial","MeshToonMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshDepthMaterial","MeshDistanceMaterial","MeshBasicMaterial","MeshMatcapMaterial","LineDashedMaterial","LineBasicMaterial","Material","Float64BufferAttribute","Float32BufferAttribute","Uint32BufferAttribute","Int32BufferAttribute","Uint16BufferAttribute","Int16BufferAttribute","Uint8ClampedBufferAttribute","Uint8BufferAttribute","Int8BufferAttribute","BufferAttribute","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","REVISION","MOUSE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","GeometryUtils","Projector","CanvasRenderer","JSONLoader","SceneUtils","LensFlare","undefined","Number","EPSILON","Math","pow","isInteger","isFinite","floor","sign","x","Function","this","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","_canvas","LEFT","MIDDLE","RIGHT","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","min","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","z","w","_x","_y","_z","_w","elements","console","error","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","warn","addVectors","addScalar","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","q","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToBufferAttribute","count","setXYZ","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","g","h","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","rotate","translate","getDataURL","image","canvas","HTMLCanvasElement","src","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","data","Infinity","constant","p0","p1","p2","p3","p4","p5","planes","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","setSize","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","position","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","compose","lookAt","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","cloneUniforms","u","isColor","mergeUniforms","uniforms","merged","merge","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","lerpHSL","hslA","hslB","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","Float32Array","Float64Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Int8Array","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","materialIndex","vertexNormals","vertexColors","_order","DefaultOrder","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","object3DId","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","element","JSON","stringify","isMesh","drawMode","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","child","geometryId","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","itemSize","normalized","Uint8ClampedArray","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","morphAttributes","drawRange","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","tangent","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","isNaN","boxMorphTargets","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","attributeData","hasMorphAttributes","attributeArray","materialId","blending","side","flatShading","vertexTangents","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","combine","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","default_vertex","default_fragment","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","origin","updateMorphTargets","absNumericalSort","wrapR","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","barycoord","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","result","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","isMeshBasicMaterial","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","influence","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isCubeTexture","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","lines","split","join","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","renderer","code","capabilities","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","isWebGL2","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","logarithmicDepthBuffer","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","getTexelEncodingFunction","depthPacking","isGLSL3ShaderMaterial","versionRegex","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","prefix","deleteShader","getUniforms","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","init","unshift","WebGLLights","light","halfWidth","halfHeight","state","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","render","scene","faceCount","_state","setBlending","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","activeTexture","bindTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","maxCubemapSize","convert","glInternalFormat","setTextureParameters","mipmap","getCompressedTextureFormats","compressedTexImage2D","texImage2D","setTextureCubeDynamic","textureType","extension","texParameteri","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","createTexture","textureNeedsPowerOfTwo","isDepthTexture","texImage3D","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","maxSamples","warnedTexture2D","warnedTextureCube","textureUnit","maxTextures","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","webglTexture","updateMultisampleRenderTarget","blitFramebuffer","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","fov","aspect","zoom","focus","view","filmGauge","filmOffset","cameras","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","frameOfReferenceType","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","bounds","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","renderStates","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","maxAnisotropy","WebGL2RenderingContext","maxPrecision","maxVertexTextures","maxAttributes","maxVaryings","maxFragmentUniforms","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","clearColor","reset","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","boundTexture","apply","calls","triangles","autoReset","mode","instanceCount","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","lists","onSceneDispose","list","renderState","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","vr","session","getSession","environmentBlendMode","setMode","drawArrays","renderInstances","maxInstancedCount","drawElements","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","then","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","activeCubeFace","activeMipMapLevel","readRenderTargetPixels","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","interleavedBuffer","levels","bindMode","bindMatrix","bindMatrixInverse","boneInverses","calculateInverses","linecap","linejoin","video","ol","edge","edges","func","slices","stacks","pu","pv","sliceCount","detail","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","tubularSegments","radialSegments","closed","taper","bufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","tube","heightScale","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","arc","isScene","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","matrixPosition","bind","normalizeSkinWeights","skinWeight","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","text","font","isFont","generateShapes","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","grid","verticesRow","uOffset","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","segments","base","inverseSegments","n1","n2","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","thresholdAngle","thresholdDot","sourceVertices","face1","face2","radiusTop","radiusBottom","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","Geometries","freeze","STANDARD","PHYSICAL","TOON","MATCAP","Materials","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","_weightPrev","_offsetPrev","_weightNext","_offsetNext","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","duration","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","toLowerCase","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","files","file","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","loading","manager","_parser","arcLengthDivisions","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","v3","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","curves","autoClose","currentPoint","power","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","resourcePath","setResourcePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","THREE","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","createImageBitmap","fetch","subPaths","currentPath","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","substring","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","webkitAudioContext","eyeSep","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","autoStart","oldTime","elapsedTime","running","gain","createGain","connect","destination","timeDelta","getInput","autoplay","detune","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","panner","createPanner","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","performance","Date","now","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","root","_root","_initMemoryManager","_accuIndex","ascSort","intersectObject","nNormals","objGeometry","cone","getBoneList","boneList","sphereSize","radials","circles","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","lightPlane","targetLine","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","headLength","headWidth","setDirection","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","geometry1","projectVector","unprojectVector","pickingRay","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","createMultiMaterialObject","detach","attach","valueOf","TWEEN","_tweens","getAll","removeAll","tween","numTweens","Tween","_object","_valuesStart","_valuesEnd","_duration","_delayTime","_easingFunction","Easing","Linear","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onCompleteCallback","delay","easing","chain","onComplete","elapsed","numChainedTweens","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","Bounce","fn","Utils","Bezier","pw","bn","Bernstein","fc","Factorial","TrackballControls","STATE","NONE","ROTATE","ZOOM","PAN","TOUCH_ROTATE","TOUCH_ZOOM_PAN","screen","rotateSpeed","zoomSpeed","panSpeed","noRotate","noZoom","noPan","staticMoving","dynamicDampingFactor","minDistance","lastPosition","_prevState","_eye","_movePrev","_moveCurr","_lastAxis","_lastAngle","_zoomStart","_zoomEnd","_touchZoomDistanceStart","_touchZoomDistanceEnd","_panStart","_panEnd","target0","position0","up0","changeEvent","startEvent","endEvent","handleResize","innerWidth","innerHeight","getBoundingClientRect","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","handleEvent","getMouseOnScreen","pageX","pageY","getMouseOnCircle","containsKey","keydown","keyCode","keyup","mousedown","isMove","stopPropagation","button","mousemove","mouseup","mousewheel","deltaMode","deltaY","touchstart","touches","touchmove","touchend","contextmenu","rotateCamera","eyeDirection","objectUpDirection","objectSidewaysDirection","moveDirection","zoomCamera","panCamera","mouseChange","objectUp","pan","checkDistances","geo","crs","features","featurecla","iso_a2","postal","admin","sales_rgn","coordinates","timeout","Gobal","props","_classCallCheck","Geo","interpolatePos","countries","getElementById","el","createElement","appendChild","containt","offsetWidth","offsetHeight","rotating","visualizationMesh","createLight","createMap","controls","fls","zobject","__webglObjects","s_lat","lat","s_lon","lon","e_lat","e_lon","sv","ev","pos","linesGeo","start_lat","start_lon","end_lat","end_lon","max_height","flightHeight","G","toFixed","arc_angle","arc_radius","A","flightWeight","glowColor","viewVector","leng","flightColor","pColor","shaderMaterial","speed","flightSpeed","gm","createVector3","geometry2D","geometry3D","countrys","geometryNeedsUpdate","updateMap","isAnimate","handle","clearTimeout","isMode","onclick","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","stylesInDom","isOldIE","memo","memoize","all","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","addStyle","listToStyles","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","attrs","addAttrs","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","childNodes","content","hmr","locals"],"mappings":"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oBAAyB,kBAAmB,qBAAyB,kBAAmB,oBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,mBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAuB,kBAAmB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAyB,kBAAoB,oBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAwB,iBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAmB,qBAAyB,kBAAoB,qBAAwB,iBAAkB,qBAAyB,kBAAmB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAyB,kBAAmB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,qBAAwB,kBAAmB,qBAAyB,kBAAoB,qBAAyB,kBAAmB,qBAAyB,kBAAoB,qBAAyB,kBAAoB,oBAAyB,kBAAoB,qBAAyB,iBAAoB,qBAAyB,kBA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mBAAoB,oBAAwB,mBAAoB,oBAAwB,mBAAoB,mBAAwB,mBAAoB,oBAAwB,mBAAoB,mBAAwB,mBAAoB,oBAAwB,mBAAoB,qBAAwB,mBAAoB,oBAAwB,mBAAoB,oBAAuB,mBAAoB,oBAAwB,mBAAoB,oBAAwB,mBAAoB,qBAAwB,mBAAoB,oBAAuB,kBAAoB,qBAAwB,mBAAoB,oBAAuB,mBAAoB,oBAAuB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,kBAAmB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,oBAAuB,mBAAoB,qBAAwB,mBAAoB,oBAAuB,mBAAoB,oBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,kBAAoB,oBAAwB,mBAAoB,qBAAwB,kBAAmB,qBAAwB,mBAAoB,qBAAwB,mBAAoB,oBAAwB,mBAAoB,qBAAwB,mBAAoB,oBAAuB,mBAAoB,qBAAwB,mBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,mBAAwB,kBAAoB,qBAAwB,iBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAmB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,oBAAwB,kBAAmB,oBAAwB,kBAAoB,oBAAuB,kBAAoB,oBAAuB,kBAAoB,qBAAwB,kBAAoB,oBAAwB,iBAAoB,qBAAwB,kBAAoB,qBAAwB,iBAAoB,qBAAwB,kBAAoB,oBAAwB,kBAAoB,oBAAwB,kBAAmB,oBAAwB,kBAAoB,qBAAwB,kBAAoB,oBAAuB,kBAAoB,qBAAwB,iBAAkB,qBAAwB,kBAAmB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,oBAAwB,kBAAoB,oBAAwB,kBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,qBAAwB,kBAAoB,oBAAwB,kBAAoB,oBAAwB,kBAAoB,oBAAwB,kBAAoB,qBAAwB,iBAAoB,mBAAwB,kBAAoB,qBAAwB,kBAAoB,oBAAwB,kBAAoB,oBAAwB,kBAAmB,oBA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","file":"static/js/index.5443e8dbf716374f3e7c.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '103';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotNV );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor;\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar boxMorphTargets = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, i );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar morphA = new Vector3();\n\t\tvar morphB = new Vector3();\n\t\tvar morphC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t\tmorphA.set( 0, 0, 0 );\n\t\t\t\tmorphB.set( 0, 0, 0 );\n\t\t\t\tmorphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\n\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\n\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t\tvA.add( morphA );\n\t\t\t\tvB.add( morphB );\n\t\t\t\tvC.add( morphC );\n\n\t\t\t}\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, textures ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete lists[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete renderStates[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tvar extension;\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( isPresenting() === false ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = ( iy == 0 ) ? 0.5 / widthSegments : ( ( iy == heightSegments ) ? - 0.5 / widthSegments : 0 );\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearCoat: <float>\n *  clearCoatRoughness: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLMultisampleRenderTarget, WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture2DArray, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, AnimationLoader, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, PositionalAudioHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxGeometry as CubeGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, ACESFilmicToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, JSONLoader, SceneUtils, LensFlare };\n","/**\n * @author sole / http://soledadpenades.com\n * @author mrdoob / http://mrdoob.com\n * @author Robert Eisele / http://www.xarg.org\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n * @author Paul Lewis / http://www.aerotwist.com/\n * @author lechecacharro\n * @author Josh Faul / http://jocafa.com/\n * @author egraether / http://egraether.com/\n */\n\nif ( Date.now === undefined ) {\n\n  Date.now = function () {\n\n    return new Date().valueOf();\n\n  }\n\n}\n\nvar TWEEN = TWEEN || ( function () {\n\n  var _tweens = [];\n\n  return {\n\n    REVISION: '8',\n\n    getAll: function () {\n\n      return _tweens;\n\n    },\n\n    removeAll: function () {\n\n      _tweens = [];\n\n    },\n\n    add: function ( tween ) {\n\n      _tweens.push( tween );\n\n    },\n\n    remove: function ( tween ) {\n\n      var i = _tweens.indexOf( tween );\n\n      if ( i !== -1 ) {\n\n        _tweens.splice( i, 1 );\n\n      }\n\n    },\n\n    update: function ( time ) {\n\n      if ( _tweens.length === 0 ) return false;\n\n      var i = 0, numTweens = _tweens.length;\n\n      time = time !== undefined ? time : Date.now();\n\n      while ( i < numTweens ) {\n\n        if ( _tweens[ i ].update( time ) ) {\n\n          i ++;\n\n        } else {\n\n          _tweens.splice( i, 1 );\n\n          numTweens --;\n\n        }\n\n      }\n\n      return true;\n\n    }\n\n  };\n\n} )();\n\nTWEEN.Tween = function ( object ) {\n\n  var _object = object;\n  var _valuesStart = {};\n  var _valuesEnd = {};\n  var _duration = 1000;\n  var _delayTime = 0;\n  var _startTime = null;\n  var _easingFunction = TWEEN.Easing.Linear.None;\n  var _interpolationFunction = TWEEN.Interpolation.Linear;\n  var _chainedTweens = [];\n  var _onStartCallback = null;\n  var _onStartCallbackFired = false;\n  var _onUpdateCallback = null;\n  var _onCompleteCallback = null;\n\n  this.to = function ( properties, duration ) {\n\n    if ( duration !== undefined ) {\n\n      _duration = duration;\n\n    }\n\n    _valuesEnd = properties;\n\n    return this;\n\n  };\n\n  this.start = function ( time ) {\n\n    TWEEN.add( this );\n\n    _onStartCallbackFired = false;\n\n    _startTime = time !== undefined ? time : Date.now();\n    _startTime += _delayTime;\n\n    for ( var property in _valuesEnd ) {\n\n      // This prevents the interpolation of null values or of non-existing properties\n      if( _object[ property ] === null || !(property in _object) ) {\n\n        continue;\n\n      }\n\n      // check if an Array was provided as property value\n      if ( _valuesEnd[ property ] instanceof Array ) {\n\n        if ( _valuesEnd[ property ].length === 0 ) {\n\n          continue;\n\n        }\n\n        // create a local copy of the Array with the start value at the front\n        _valuesEnd[ property ] = [ _object[ property ] ].concat( _valuesEnd[ property ] );\n\n      }\n\n      _valuesStart[ property ] = _object[ property ];\n\n    }\n\n    return this;\n\n  };\n\n  this.stop = function () {\n\n    TWEEN.remove( this );\n    return this;\n\n  };\n\n  this.delay = function ( amount ) {\n\n    _delayTime = amount;\n    return this;\n\n  };\n\n  this.easing = function ( easing ) {\n\n    _easingFunction = easing;\n    return this;\n\n  };\n\n  this.interpolation = function ( interpolation ) {\n\n    _interpolationFunction = interpolation;\n    return this;\n\n  };\n\n  this.chain = function () {\n\n    _chainedTweens = arguments;\n    return this;\n\n  };\n\n  this.onStart = function ( callback ) {\n\n    _onStartCallback = callback;\n    return this;\n\n  };\n\n  this.onUpdate = function ( callback ) {\n\n    _onUpdateCallback = callback;\n    return this;\n\n  };\n\n  this.onComplete = function ( callback ) {\n\n    _onCompleteCallback = callback;\n    return this;\n\n  };\n\n  this.update = function ( time ) {\n\n    if ( time < _startTime ) {\n\n      return true;\n\n    }\n\n    if ( _onStartCallbackFired === false ) {\n\n      if ( _onStartCallback !== null ) {\n\n        _onStartCallback.call( _object );\n\n      }\n\n      _onStartCallbackFired = true;\n\n    }\n\n    var elapsed = ( time - _startTime ) / _duration;\n    elapsed = elapsed > 1 ? 1 : elapsed;\n\n    var value = _easingFunction( elapsed );\n\n    for ( var property in _valuesStart ) {\n\n      var start = _valuesStart[ property ];\n      var end = _valuesEnd[ property ];\n\n      if ( end instanceof Array ) {\n\n        _object[ property ] = _interpolationFunction( end, value );\n\n      } else {\n\n        _object[ property ] = start + ( end - start ) * value;\n\n      }\n\n    }\n\n    if ( _onUpdateCallback !== null ) {\n\n      _onUpdateCallback.call( _object, value );\n\n    }\n\n    if ( elapsed == 1 ) {\n\n      if ( _onCompleteCallback !== null ) {\n\n        _onCompleteCallback.call( _object );\n\n      }\n\n      for ( var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i ++ ) {\n\n        _chainedTweens[ i ].start( time );\n\n      }\n\n      return false;\n\n    }\n\n    return true;\n\n  };\n\n};\n\nTWEEN.Easing = {\n\n  Linear: {\n\n    None: function ( k ) {\n\n      return k;\n\n    }\n\n  },\n\n  Quadratic: {\n\n    In: function ( k ) {\n\n      return k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return k * ( 2 - k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k;\n      return - 0.5 * ( --k * ( k - 2 ) - 1 );\n\n    }\n\n  },\n\n  Cubic: {\n\n    In: function ( k ) {\n\n      return k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return --k * k * k + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k;\n      return 0.5 * ( ( k -= 2 ) * k * k + 2 );\n\n    }\n\n  },\n\n  Quartic: {\n\n    In: function ( k ) {\n\n      return k * k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return 1 - ( --k * k * k * k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1) return 0.5 * k * k * k * k;\n      return - 0.5 * ( ( k -= 2 ) * k * k * k - 2 );\n\n    }\n\n  },\n\n  Quintic: {\n\n    In: function ( k ) {\n\n      return k * k * k * k * k;\n\n    },\n\n    Out: function ( k ) {\n\n      return --k * k * k * k * k + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1 ) return 0.5 * k * k * k * k * k;\n      return 0.5 * ( ( k -= 2 ) * k * k * k * k + 2 );\n\n    }\n\n  },\n\n  Sinusoidal: {\n\n    In: function ( k ) {\n\n      return 1 - Math.cos( k * Math.PI / 2 );\n\n    },\n\n    Out: function ( k ) {\n\n      return Math.sin( k * Math.PI / 2 );\n\n    },\n\n    InOut: function ( k ) {\n\n      return 0.5 * ( 1 - Math.cos( Math.PI * k ) );\n\n    }\n\n  },\n\n  Exponential: {\n\n    In: function ( k ) {\n\n      return k === 0 ? 0 : Math.pow( 1024, k - 1 );\n\n    },\n\n    Out: function ( k ) {\n\n      return k === 1 ? 1 : 1 - Math.pow( 2, - 10 * k );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( ( k *= 2 ) < 1 ) return 0.5 * Math.pow( 1024, k - 1 );\n      return 0.5 * ( - Math.pow( 2, - 10 * ( k - 1 ) ) + 2 );\n\n    }\n\n  },\n\n  Circular: {\n\n    In: function ( k ) {\n\n      return 1 - Math.sqrt( 1 - k * k );\n\n    },\n\n    Out: function ( k ) {\n\n      return Math.sqrt( 1 - ( --k * k ) );\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( ( k *= 2 ) < 1) return - 0.5 * ( Math.sqrt( 1 - k * k) - 1);\n      return 0.5 * ( Math.sqrt( 1 - ( k -= 2) * k) + 1);\n\n    }\n\n  },\n\n  Elastic: {\n\n    In: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      return - ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n\n    },\n\n    Out: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      return ( a * Math.pow( 2, - 10 * k) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) + 1 );\n\n    },\n\n    InOut: function ( k ) {\n\n      var s, a = 0.1, p = 0.4;\n      if ( k === 0 ) return 0;\n      if ( k === 1 ) return 1;\n      if ( !a || a < 1 ) { a = 1; s = p / 4; }\n      else s = p * Math.asin( 1 / a ) / ( 2 * Math.PI );\n      if ( ( k *= 2 ) < 1 ) return - 0.5 * ( a * Math.pow( 2, 10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) );\n      return a * Math.pow( 2, -10 * ( k -= 1 ) ) * Math.sin( ( k - s ) * ( 2 * Math.PI ) / p ) * 0.5 + 1;\n\n    }\n\n  },\n\n  Back: {\n\n    In: function ( k ) {\n\n      var s = 1.70158;\n      return k * k * ( ( s + 1 ) * k - s );\n\n    },\n\n    Out: function ( k ) {\n\n      var s = 1.70158;\n      return --k * k * ( ( s + 1 ) * k + s ) + 1;\n\n    },\n\n    InOut: function ( k ) {\n\n      var s = 1.70158 * 1.525;\n      if ( ( k *= 2 ) < 1 ) return 0.5 * ( k * k * ( ( s + 1 ) * k - s ) );\n      return 0.5 * ( ( k -= 2 ) * k * ( ( s + 1 ) * k + s ) + 2 );\n\n    }\n\n  },\n\n  Bounce: {\n\n    In: function ( k ) {\n\n      return 1 - TWEEN.Easing.Bounce.Out( 1 - k );\n\n    },\n\n    Out: function ( k ) {\n\n      if ( k < ( 1 / 2.75 ) ) {\n\n        return 7.5625 * k * k;\n\n      } else if ( k < ( 2 / 2.75 ) ) {\n\n        return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;\n\n      } else if ( k < ( 2.5 / 2.75 ) ) {\n\n        return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;\n\n      } else {\n\n        return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;\n\n      }\n\n    },\n\n    InOut: function ( k ) {\n\n      if ( k < 0.5 ) return TWEEN.Easing.Bounce.In( k * 2 ) * 0.5;\n      return TWEEN.Easing.Bounce.Out( k * 2 - 1 ) * 0.5 + 0.5;\n\n    }\n\n  }\n\n};\n\nTWEEN.Interpolation = {\n\n  Linear: function ( v, k ) {\n\n    var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = TWEEN.Interpolation.Utils.Linear;\n\n    if ( k < 0 ) return fn( v[ 0 ], v[ 1 ], f );\n    if ( k > 1 ) return fn( v[ m ], v[ m - 1 ], m - f );\n\n    return fn( v[ i ], v[ i + 1 > m ? m : i + 1 ], f - i );\n\n  },\n\n  Bezier: function ( v, k ) {\n\n    var b = 0, n = v.length - 1, pw = Math.pow, bn = TWEEN.Interpolation.Utils.Bernstein, i;\n\n    for ( i = 0; i <= n; i++ ) {\n      b += pw( 1 - k, n - i ) * pw( k, i ) * v[ i ] * bn( n, i );\n    }\n\n    return b;\n\n  },\n\n  CatmullRom: function ( v, k ) {\n\n    var m = v.length - 1, f = m * k, i = Math.floor( f ), fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n    if ( v[ 0 ] === v[ m ] ) {\n\n      if ( k < 0 ) i = Math.floor( f = m * ( 1 + k ) );\n\n      return fn( v[ ( i - 1 + m ) % m ], v[ i ], v[ ( i + 1 ) % m ], v[ ( i + 2 ) % m ], f - i );\n\n    } else {\n\n      if ( k < 0 ) return v[ 0 ] - ( fn( v[ 0 ], v[ 0 ], v[ 1 ], v[ 1 ], -f ) - v[ 0 ] );\n      if ( k > 1 ) return v[ m ] - ( fn( v[ m ], v[ m ], v[ m - 1 ], v[ m - 1 ], f - m ) - v[ m ] );\n\n      return fn( v[ i ? i - 1 : 0 ], v[ i ], v[ m < i + 1 ? m : i + 1 ], v[ m < i + 2 ? m : i + 2 ], f - i );\n\n    }\n\n  },\n\n  Utils: {\n\n    Linear: function ( p0, p1, t ) {\n\n      return ( p1 - p0 ) * t + p0;\n\n    },\n\n    Bernstein: function ( n , i ) {\n\n      var fc = TWEEN.Interpolation.Utils.Factorial;\n      return fc( n ) / fc( i ) / fc( n - i );\n\n    },\n\n    Factorial: ( function () {\n\n      var a = [ 1 ];\n\n      return function ( n ) {\n\n        var s = 1, i;\n        if ( a[ n ] ) return a[ n ];\n        for ( i = n; i > 1; i-- ) s *= i;\n        return a[ n ] = s;\n\n      };\n\n    } )(),\n\n    CatmullRom: function ( p0, p1, p2, p3, t ) {\n\n      var v0 = ( p2 - p0 ) * 0.5, v1 = ( p3 - p1 ) * 0.5, t2 = t * t, t3 = t * t2;\n      return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n    }\n\n  }\n\n};\n\nmodule.exports = TWEEN;","/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin \t/ http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga \t/ http://lantiga.github.io\n\n ** three-trackballcontrols module\n ** @author Jon Lim / http://jonlim.ca\n */\n\nvar THREE = window.THREE || require('three');\n\nvar TrackballControls;\nmodule.exports = TrackballControls = function ( object, domElement, obj ) {\n\n\tvar _this = this;\n\tthis.obj = obj;\n\tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t/**\n\t * `KeyboardEvent.keyCode` values which should trigger the different \n\t * interaction states. Each element can be a single code or an array\n\t * of codes. All elements are required.\n\t */\n\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar EPS = 0.000001;\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t_prevState = STATE.NONE,\n\n\t_eye = new THREE.Vector3(),\n\n\t_movePrev = new THREE.Vector2(),\n\t_moveCurr = new THREE.Vector2(),\n\n\t_lastAxis = new THREE.Vector3(),\n\t_lastAngle = 0,\n\n\t_zoomStart = new THREE.Vector2(),\n\t_zoomEnd = new THREE.Vector2(),\n\n\t_touchZoomDistanceStart = 0,\n\t_touchZoomDistanceEnd = 0,\n\n\t_panStart = new THREE.Vector2(),\n\t_panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\n\t\t} else {\n\n\t\t\tvar box = this.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tvar d = this.domElement.ownerDocument.documentElement;\n\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tthis.screen.width = box.width;\n\t\t\tthis.screen.height = box.height;\n\n\t\t}\n\n\t};\n\n\tthis.handleEvent = function ( event ) {\n\n\t\tif ( typeof this[ event.type ] == 'function' ) {\n\n\t\t\tthis[ event.type ]( event );\n\n\t\t}\n\n\t};\n\n\tvar getMouseOnScreen = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnScreen( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( pageX - _this.screen.left ) / _this.screen.width,\n\t\t\t\t( pageY - _this.screen.top ) / _this.screen.height\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tvar getMouseOnCircle = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnCircle( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( ( pageX - _this.screen.width * 0.5 - _this.screen.left ) / ( _this.screen.width * 0.5 ) ),\n\t\t\t\t( ( _this.screen.height + 2 * ( _this.screen.top - pageY ) ) / _this.screen.width ) // screen.width intentional\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tthis.rotateCamera = ( function() {\n\n\t\tvar axis = new THREE.Vector3(),\n\t\t\tquaternion = new THREE.Quaternion(),\n\t\t\teyeDirection = new THREE.Vector3(),\n\t\t\tobjectUpDirection = new THREE.Vector3(),\n\t\t\tobjectSidewaysDirection = new THREE.Vector3(),\n\t\t\tmoveDirection = new THREE.Vector3(),\n\t\t\tangle;\n\n\t\treturn function rotateCamera() {\n\n\t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n\t\t\tangle = moveDirection.length();\n\n\t\t\tif ( angle ) {\n\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\n\t\t\t\teyeDirection.copy( _eye ).normalize();\n\t\t\t\tobjectUpDirection.copy( _this.object.up ).normalize();\n\t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n\t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n\t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n\t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n\t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n\t\t\t\tangle *= _this.rotateSpeed;\n\t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t_lastAxis.copy( axis );\n\t\t\t\t_lastAngle = angle;\n\n\t\t\t} else if ( ! _this.staticMoving && _lastAngle ) {\n\n\t\t\t\t_lastAngle *= Math.sqrt( 1.0 - _this.dynamicDampingFactor );\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t}\n\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t};\n\n\t}() );\n\n\n\tthis.zoomCamera = function () {\n\n\t\tvar factor;\n\n\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar( factor );\n\n\t\t} else {\n\n\t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;\n\n\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t}\n\n\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t} else {\n\n\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.panCamera = ( function() {\n\n\t\tvar mouseChange = new THREE.Vector2(),\n\t\t\tobjectUp = new THREE.Vector3(),\n\t\t\tpan = new THREE.Vector3();\n\n\t\treturn function panCamera() {\n\n\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n\t\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );\n\n\t\t\t\tpan.copy( _eye ).cross( _this.object.up ).setLength( mouseChange.x );\n\t\t\t\tpan.add( objectUp.copy( _this.object.up ).setLength( mouseChange.y ) );\n\n\t\t\t\t_this.object.position.add( pan );\n\t\t\t\t_this.target.add( pan );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_panStart.copy( _panEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.checkDistances = function () {\n\n\t\tif ( ! _this.noZoom || ! _this.noPan ) {\n\n\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\tif ( ! _this.noRotate ) {\n\n\t\t\t_this.rotateCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noZoom ) {\n\n\t\t\t_this.zoomCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noPan ) {\n\n\t\t\t_this.panCamera();\n\n\t\t}\n\n\t\t_this.object.position.addVectors( _this.target, _eye );\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > EPS ) {\n\n\t\t\t_this.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( _this.object.position );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy( _this.target0 );\n\t\t_this.object.position.copy( _this.position0 );\n\t\t_this.object.up.copy( _this.up0 );\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\t_this.dispatchEvent( changeEvent );\n\n\t\tlastPosition.copy( _this.object.position );\n\n\t};\n\n\t// helpers\n\n\t/**\n\t * Checks if the pressed key is any of the configured modifier keys for\n\t * a specified behavior.\n\t * \n\t * @param {number | number[]} keys \n\t * @param {number} key \n\t * \n\t * @returns {boolean} `true` if `keys` contains or equals `key`\n\t */\n\tfunction containsKey(keys, key) {\n\t\tif (Array.isArray(keys)) {\n\t\t\treturn keys.indexOf(key) !== -1;\n\t\t} else {\n\t\t\treturn keys === key;\n\t\t}\n\t}\n\n\t// listeners\n\n\tfunction keydown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t_prevState = _state;\n\n\t\tif ( _state !== STATE.NONE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( containsKey( _this.keys[ STATE.ROTATE ], event.keyCode ) && ! _this.noRotate ) {\n\n\t\t\t_state = STATE.ROTATE;\n\n\t\t} else if ( containsKey( _this.keys[ STATE.ZOOM ], event.keyCode ) && ! _this.noZoom ) {\n\n\t\t\t_state = STATE.ZOOM;\n\n\t\t} else if ( containsKey( _this.keys[ STATE.PAN ], event.keyCode ) && ! _this.noPan ) {\n\n\t\t\t_state = STATE.PAN;\n\n\t\t}\n\n\t}\n\n\tfunction keyup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener( 'keydown', keydown, false );\n\n\t}\n\n\tfunction mousedown( event ) {\n\t\t_this.obj.isMove = false;\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t_state = event.button;\n\n\t\t}\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_zoomEnd.copy( _zoomStart );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_panEnd.copy( _panStart );\n\n\t\t}\n\n\t\tdocument.addEventListener( 'mousemove', mousemove, false );\n\t\tdocument.addEventListener( 'mouseup', mouseup, false );\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction mousemove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t}\n\n\t}\n\n\tfunction mouseup( event ) {\n\t\t_this.obj.isMove = true;\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove );\n\t\tdocument.removeEventListener( 'mouseup', mouseup );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction mousewheel( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.deltaMode ) {\n\n\t\t\tcase 2:\n\t\t\t\t// Zoom in pages\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t// Zoom in lines\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// undefined, 0, assume pixels\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t_panEnd.copy( _panStart );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 0:\n\t\t\t\t_state = STATE.NONE;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction contextmenu( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\tthis.dispose = function() {\n\n\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\tthis.domElement.removeEventListener( 'mousedown', mousedown, false );\n\t\tthis.domElement.removeEventListener( 'wheel', mousewheel, false );\n\n\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove, false );\n\t\tdocument.removeEventListener( 'mouseup', mouseup, false );\n\n\t\twindow.removeEventListener( 'keydown', keydown, false );\n\t\twindow.removeEventListener( 'keyup', keyup, false );\n\n\t};\n\n\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\tthis.domElement.addEventListener( 'mousedown', mousedown, false );\n\tthis.domElement.addEventListener( 'wheel', mousewheel, false );\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', keydown, false );\n\twindow.addEventListener( 'keyup', keyup, false );\n\n\tthis.handleResize();\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nfunction preventEvent( event ) { event.preventDefault(); }\n\nTrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n","export default {\r\n\"type\": \"FeatureCollection\",\r\n\"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                                                                                \r\n\"features\": [\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Alberta\", \"type\": \"Province\", \"postal\": \"AB\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -109.99966285694285, 53.465628031282392 ], [ -109.99943214404341, 48.993082694652713 ], [ -114.06251701583469, 48.993082694652713 ], [ -114.73402338910687, 49.587201369660278 ], [ -114.99279537163449, 50.545033437448694 ], [ -116.67403322873736, 51.790685340435289 ], [ -118.22102364419568, 52.386100402211071 ], [ -118.80367259220323, 53.153396574059229 ], [ -119.89384048046952, 53.515549908186784 ], [ -120.00000686635538, 60.001087264965378 ], [ -110.0000254057848, 60.001087264965378 ], [ -109.99966285694285, 53.465628031282392 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"British Columbia\", \"type\": \"Province\", \"postal\": \"BC\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -130.02508110132067, 55.888212352212292 ], [ -131.82427367483723, 56.58998606062346 ], [ -133.40110295862132, 58.410882126178876 ], [ -135.47593702214496, 59.793280860553836 ], [ -137.43857869857629, 58.903124576597065 ], [ -139.05651882377236, 60.00158164974988 ], [ -120.00000686635538, 60.001087264965378 ], [ -119.89384048046952, 53.515549908186784 ], [ -118.80367259220323, 53.153396574059229 ], [ -118.22102364419568, 52.386100402211071 ], [ -116.67403322873736, 51.790685340435289 ], [ -114.99279537163449, 50.545033437448694 ], [ -114.73402338910687, 49.587201369660278 ], [ -114.05060234252861, 49.014626884927679 ], [ -123.08643459639794, 48.993027763009991 ], [ -123.22942166239935, 49.26051190407307 ], [ -122.94763332157184, 49.293273135791566 ], [ -122.87911159044232, 49.398950630057215 ], [ -123.27676175209584, 49.343964055694016 ], [ -123.18748684634653, 49.68033247672858 ], [ -123.53056791412153, 49.397291694447063 ], [ -124.02860015968245, 49.602867874164161 ], [ -123.99260894737199, 49.736164998389683 ], [ -123.81719023950843, 49.586586135261825 ], [ -123.58247831649238, 49.681255328326301 ], [ -123.87439605223753, 49.736813191773791 ], [ -123.82545745173786, 50.144230199502999 ], [ -124.28126923670382, 49.772101279057409 ], [ -124.78237765425709, 50.020095673283265 ], [ -125.05670078483888, 50.418624741220327 ], [ -124.8626547569288, 50.637296624561998 ], [ -124.8598642294786, 50.872404055405639 ], [ -125.05877170776944, 50.513865223369095 ], [ -126.09433754317158, 50.497594470795292 ], [ -126.44747110156443, 50.587770255485225 ], [ -125.90412025075912, 50.704917476750893 ], [ -126.51433939024807, 50.67938524921442 ], [ -126.5173386579406, 51.056831552675362 ], [ -127.05758587093221, 50.867537111860599 ], [ -127.70811934301372, 51.151193128540598 ], [ -127.41965680759569, 51.60805960104679 ], [ -126.69143351321461, 51.703409946481003 ], [ -127.33873151153989, 51.707386997413948 ], [ -127.71405745359181, 51.490187282097196 ], [ -127.79534529848956, 52.191027152582109 ], [ -127.24225506742991, 52.39509820528869 ], [ -126.71399393887991, 52.060696337063519 ], [ -127.19398663297143, 52.457676332675845 ], [ -126.95131511492519, 52.72122736812014 ], [ -127.01934795443449, 52.842461503604227 ], [ -127.8343083126712, 52.251001520104325 ], [ -128.10225387953312, 51.788411170426656 ], [ -128.35761460704782, 52.158881155262094 ], [ -127.94022201300055, 52.545160466872488 ], [ -128.27154221606909, 52.363007139611369 ], [ -128.05326584055501, 52.910675617534537 ], [ -128.3650248856508, 52.825773270545767 ], [ -128.52468370521785, 53.140685391933687 ], [ -129.17156971622273, 53.533578473327623 ], [ -128.85458667190423, 53.70454771813084 ], [ -128.9056126748273, 53.559319441106453 ], [ -127.92784591389562, 53.274707613843105 ], [ -128.67555346194965, 53.554617292489581 ], [ -128.5321214496422, 53.858103632191671 ], [ -128.959357794065, 53.841470330775905 ], [ -129.56371572727568, 53.251482515300893 ], [ -130.3352416356133, 53.723905629025523 ], [ -129.62603567594203, 54.230254525294328 ], [ -130.43025140486264, 54.421021134134008 ], [ -129.56066702110468, 55.462536066442766 ], [ -129.7951702038784, 55.559556333815692 ], [ -130.04846550162677, 55.057261392779651 ], [ -129.98513481073434, 55.358847097643604 ], [ -130.09469047897608, 55.694787051864949 ], [ -130.02508110132067, 55.888212352212292 ] ] ], [ [ [ -130.21408989759328, 55.025895424786256 ], [ -130.03655082832071, 55.297916919538039 ], [ -130.14651848388283, 55.654489198765191 ], [ -130.1119774669402, 55.779799262139164 ], [ -130.02508110132067, 55.888212352212292 ], [ -130.12251884917825, 55.691018741174332 ], [ -130.01787406979577, 55.284942065527474 ], [ -130.21408989759328, 55.025895424786256 ] ] ], [ [ [ -130.21408989759328, 55.025895424786256 ], [ -130.34943047892801, 54.814562408912053 ], [ -130.57533136645168, 54.769683256809401 ], [ -130.31253289451266, 54.945947911970876 ], [ -130.21408989759328, 55.025895424786256 ] ] ], [ [ [ -130.92716853807633, 54.479050921503926 ], [ -130.90681087128411, 54.631804833581015 ], [ -130.75800654431862, 54.613776268440148 ], [ -130.7633568863196, 54.576719382260933 ], [ -130.92716853807633, 54.479050921503926 ] ] ], [ [ [ -132.6555157719763, 54.127466435435792 ], [ -132.1660858216654, 53.955211790192919 ], [ -132.53464418533417, 53.651714464162296 ], [ -131.66764158878408, 54.141342168386984 ], [ -132.01131591830045, 53.265171480666851 ], [ -132.74752627353308, 53.310490085911226 ], [ -132.42501161279264, 53.336956151373954 ], [ -133.09794071561129, 54.005595092896129 ], [ -132.6555157719763, 54.127466435435792 ] ] ], [ [ [ -130.23628228125236, 53.958562620398851 ], [ -130.38422967459141, 53.843953241026867 ], [ -130.70726069277345, 53.921494747891074 ], [ -130.44799981862562, 54.089003299202915 ], [ -130.23628228125236, 53.958562620398851 ] ] ], [ [ [ -129.84860770591689, 53.167920500394501 ], [ -129.93438895918916, 53.17665463158707 ], [ -130.51755975780256, 53.544224225686861 ], [ -129.94474906700626, 53.436371438369463 ], [ -129.84860770591689, 53.167920500394501 ] ] ], [ [ [ -129.16774098072511, 53.117899746533254 ], [ -129.32388417515807, 53.14213558730151 ], [ -129.23820179884268, 53.330078709705361 ], [ -129.1770189351806, 53.259150972624667 ], [ -129.16774098072511, 53.117899746533254 ] ] ], [ [ [ -128.55242967795598, 52.939767415519299 ], [ -128.50992906598316, 52.51860651078141 ], [ -128.67893725114124, 52.289651423922464 ], [ -128.74632189726645, 52.763392897072379 ], [ -129.18430287100534, 52.990667075664078 ], [ -129.0332298671955, 53.279948092558641 ], [ -128.55242967795598, 52.939767415519299 ] ] ], [ [ [ -131.75373595241987, 53.195562103011468 ], [ -131.63467161682325, 52.922167317191651 ], [ -131.97178161503453, 52.879826006982711 ], [ -131.45522641954827, 52.701693675968755 ], [ -131.22154721141536, 52.153640676546559 ], [ -132.54678957153965, 53.137477383998828 ], [ -131.75373595241987, 53.195562103011468 ] ] ], [ [ [ -129.31370534176196, 52.992194175331718 ], [ -129.40972036007309, 53.023735924581814 ], [ -129.51472219513329, 53.179390227394549 ], [ -129.450748804021, 53.174688078777677 ], [ -129.31370534176196, 52.992194175331718 ] ] ], [ [ [ -128.93687976586378, 52.510026188188448 ], [ -129.15102528184528, 52.605321601979938 ], [ -129.26352528613683, 52.800779373107929 ], [ -128.99400867429307, 52.661692453739704 ], [ -128.93687976586378, 52.510026188188448 ] ] ], [ [ [ -128.36877671684863, 52.400888000431422 ], [ -128.43980333088621, 52.69636530662487 ], [ -128.24728440264374, 52.784376784591615 ], [ -128.32376572880347, 52.458972719444063 ], [ -128.36877671684863, 52.400888000431422 ] ] ], [ [ [ -131.02930843455079, 51.961632612581411 ], [ -131.10343868640206, 52.01388359113713 ], [ -131.09811581022245, 52.150619436196934 ], [ -131.0106536486829, 52.095270312991772 ], [ -131.02930843455079, 51.961632612581411 ] ] ], [ [ [ -127.92464339912502, 51.473861597880671 ], [ -128.09178940159489, 51.511116237973681 ], [ -128.14240341719753, 51.646588655250923 ], [ -127.99869125351222, 51.703816440637127 ], [ -127.92464339912502, 51.473861597880671 ] ] ], [ [ [ -127.19732098368456, 50.640372796554345 ], [ -125.48207494657343, 50.316770489288018 ], [ -124.83061862289422, 49.530105420216643 ], [ -123.9958114621426, 49.224026306978146 ], [ -123.2837875091998, 48.455181062805281 ], [ -125.01722141321568, 48.711492107739019 ], [ -125.13568699390666, 48.822399094391642 ], [ -124.84965793026115, 49.028271904979448 ], [ -124.81263400306753, 49.212655456935011 ], [ -125.54313146745724, 48.952828786867144 ], [ -125.9354093144527, 49.401477485622365 ], [ -126.54855081733439, 49.418945748007474 ], [ -126.13408058667986, 49.672312456891405 ], [ -127.24979718197542, 50.138000951218515 ], [ -127.86389449544045, 50.127739720358306 ], [ -127.90588424313597, 50.445189683639938 ], [ -127.46593671658769, 50.583112052182514 ], [ -128.34988572491704, 50.69660082604301 ], [ -127.19732098368456, 50.640372796554345 ] ] ], [ [ [ -125.18413670278611, 50.097120822705932 ], [ -125.35846776412382, 50.311508037915388 ], [ -125.30115758127354, 50.414076401203062 ], [ -125.07401523862438, 50.220651100855719 ], [ -125.18413670278611, 50.097120822705932 ] ] ], [ [ [ -124.97774204159248, 50.029609833802454 ], [ -125.02595554440823, 50.134100804585358 ], [ -124.99081577255994, 50.217146462050152 ], [ -124.90746249789589, 50.083970187438638 ], [ -124.97774204159248, 50.029609833802454 ] ] ], [ [ [ -126.64123148493238, 49.605812210213998 ], [ -126.93854900115694, 49.718466023105151 ], [ -126.92583781903143, 49.837733605779846 ], [ -126.73812540952702, 49.843677209522184 ], [ -126.64123148493238, 49.605812210213998 ] ] ], [ [ [ -124.15368500332124, 49.531160107756875 ], [ -124.36232636870216, 49.588190139229255 ], [ -124.64985506619395, 49.758357382048757 ], [ -124.42149324107639, 49.727771443381982 ], [ -124.15368500332124, 49.531160107756875 ] ] ], [ [ [ -126.09206337316296, 49.353994573654774 ], [ -126.0640317558827, 49.263610048722512 ], [ -126.22962868602784, 49.295646182757082 ], [ -126.20854592155172, 49.379779486747765 ], [ -126.09206337316296, 49.353994573654774 ] ] ], [ [ [ -123.37235928992229, 48.886108813618847 ], [ -123.54103239205978, 48.945951345198552 ], [ -123.68923796411963, 49.095090755184629 ], [ -123.3779183721656, 48.908224292978133 ], [ -123.37235928992229, 48.886108813618847 ] ] ], [ [ [ -123.4353823636155, 48.754437666017878 ], [ -123.51752164897542, 48.750152997885692 ], [ -123.58234648054986, 48.925802418648686 ], [ -123.46785795079184, 48.867410082436805 ], [ -123.4353823636155, 48.754437666017878 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Manitoba\", \"type\": \"Province\", \"postal\": \"MB\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -94.713384197645709, 58.903333316839394 ], [ -94.287054225327822, 58.716005428834023 ], [ -94.332219021972605, 58.297371379661286 ], [ -94.123187641928382, 58.736703671811114 ], [ -93.178753401799511, 58.725618466310124 ], [ -92.432803666312537, 57.320324223249258 ], [ -92.798154022046418, 56.921948963911831 ], [ -90.897447772782414, 57.256922121221294 ], [ -88.948495061717026, 56.851306871373311 ], [ -95.153826108978492, 52.822356522368551 ], [ -95.162043882729478, 48.99176433522743 ], [ -101.36727055986977, 48.993137626295436 ], [ -102.00110481256425, 55.817526314359583 ], [ -102.00164863582719, 60.001087264965378 ], [ -94.771886397143021, 60.001768417335114 ], [ -94.957352102460163, 59.068853342684747 ], [ -94.713384197645709, 58.903333316839394 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"New Brunswick\", \"type\": \"Province\", \"postal\": \"NB\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -66.359614805488377, 48.06066200478682 ], [ -65.60726004046019, 47.670010134415861 ], [ -64.703228023552228, 47.724842900179453 ], [ -65.31890187516332, 47.10120396037388 ], [ -64.831416505004739, 47.060796243988705 ], [ -64.541509267383148, 46.240326241987134 ], [ -63.831913293048586, 46.107160953704152 ], [ -65.884478068613348, 45.222904328175559 ], [ -67.36694028336791, 45.17378445325491 ], [ -67.43264951439015, 45.603108200101076 ], [ -67.802240592942056, 45.727517384534394 ], [ -67.806788932959307, 47.082812846391079 ], [ -69.053660318414302, 47.294585315407062 ], [ -68.429636857109699, 47.528187619240157 ], [ -68.377913222324096, 47.929375378684881 ], [ -66.359614805488377, 48.06066200478682 ] ] ], [ [ [ -64.476085680903068, 47.9588846571543 ], [ -64.591299308344986, 47.907204967682901 ], [ -64.519569569280591, 48.005082168682236 ], [ -64.476085680903068, 47.9588846571543 ] ] ], [ [ [ -64.508561268079404, 47.886737437605234 ], [ -64.533906728030644, 47.813777229743891 ], [ -64.684573237684361, 47.753594121979347 ], [ -64.663281732965899, 47.863017954278547 ], [ -64.508561268079404, 47.886737437605234 ] ] ], [ [ [ -66.762483473200348, 44.681772715736173 ], [ -66.897044025208416, 44.628906502781973 ], [ -66.802166091901611, 44.805379898185777 ], [ -66.762483473200348, 44.681772715736173 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Newfoundland and Labrador\", \"type\": \"Province\", \"postal\": \"NL\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -64.768442869789979, 60.012095566166579 ], [ -64.283517314182163, 60.064082872837218 ], [ -63.750185995009062, 59.51259115258074 ], [ -63.945446012223272, 59.380194907295845 ], [ -63.415146919728343, 59.194372146301021 ], [ -63.941029508148546, 59.027401925087872 ], [ -63.248407411414604, 59.06833698524315 ], [ -62.926079518259399, 58.765048399454884 ], [ -63.53705122125362, 58.329923871137424 ], [ -62.607882484636761, 58.496377734909032 ], [ -63.261503115039162, 58.014671173564636 ], [ -62.486252841325083, 58.154076696460663 ], [ -61.899055553300286, 57.861323999746133 ], [ -62.495558261601943, 57.489206065629105 ], [ -61.333743031735324, 57.010575676277057 ], [ -61.371623892555377, 56.680832011354568 ], [ -62.49726114252627, 56.80170359799672 ], [ -61.425292107493277, 56.360646452265456 ], [ -61.713078983705842, 56.230930871145347 ], [ -61.364702505572595, 56.216022423310989 ], [ -61.449527948261547, 55.995702590687699 ], [ -60.341018384490894, 55.784655219355642 ], [ -60.192362372960744, 55.480905207768501 ], [ -60.617126793461097, 55.060205728829459 ], [ -59.758797903296568, 55.309595386780416 ], [ -59.437865273866464, 55.175913741055865 ], [ -59.837789605528613, 54.813936188185039 ], [ -59.259579134252874, 55.199940841581821 ], [ -57.404504600596781, 54.59088075975427 ], [ -60.395400710784159, 53.653318468129726 ], [ -60.100307926089769, 53.48696348131503 ], [ -60.329460766862496, 53.266105318593077 ], [ -57.92826682760797, 54.103571170852376 ], [ -58.309975826544019, 54.201657112094068 ], [ -57.416073204553712, 54.162765509047972 ], [ -57.134977002424492, 53.791856071070754 ], [ -57.524079800470716, 53.611405624734005 ], [ -57.331764119306328, 53.469088724773798 ], [ -56.524290943972417, 53.766433706819726 ], [ -55.966086576975485, 53.471132181883007 ], [ -55.802818748481684, 52.643169503814363 ], [ -56.324900067225627, 52.544523259816913 ], [ -55.746458883050479, 52.474573305976662 ], [ -56.011712799419115, 52.394471984561676 ], [ -55.695229633049365, 52.137798390785974 ], [ -57.09558002826536, 51.442550561529998 ], [ -57.101029247223238, 52.001117477368894 ], [ -63.756898641749501, 52.010521774602637 ], [ -64.059418184539709, 52.485120181378988 ], [ -63.409686714441918, 52.688718821958162 ], [ -63.722544392392123, 53.109187587997781 ], [ -64.178477026972075, 52.815325272100324 ], [ -64.13067551147671, 52.1866875528072 ], [ -64.598011955085425, 51.600369171065921 ], [ -65.137133069401273, 52.154695364086791 ], [ -66.407438293640823, 52.18368828511467 ], [ -66.428037659661001, 53.010816002213943 ], [ -67.029473229478938, 52.720370434493702 ], [ -66.944439046547643, 53.355138525114427 ], [ -67.757251577553987, 54.033654175997754 ], [ -67.601421493484537, 54.552791158691889 ], [ -67.150180021192924, 54.616665672847262 ], [ -67.408150001736814, 55.071785319114952 ], [ -66.724448803780689, 54.747974271606267 ], [ -66.773986159186009, 55.328250172648296 ], [ -65.675803744246807, 54.744931058599576 ], [ -63.698824909065422, 54.615193504822344 ], [ -63.534018994575447, 55.140350995558634 ], [ -63.111825374954407, 55.339829762933761 ], [ -64.121479954485309, 56.299408656960679 ], [ -63.601255325265313, 57.723061055018718 ], [ -64.400378890905699, 58.121414341699051 ], [ -63.848008264365689, 58.459738329214474 ], [ -64.070811007239939, 58.641693902561769 ], [ -63.4967094228397, 58.753446836512296 ], [ -64.848313478305556, 58.949223211168089 ], [ -64.324364483709104, 59.019964180663521 ], [ -64.887270999322908, 60.035408555337142 ], [ -64.436348130559068, 60.228108758000559 ], [ -64.768442869789979, 60.012095566166579 ] ] ], [ [ [ -61.743620977058427, 57.554574720466462 ], [ -61.637471070665384, 57.416081062839595 ], [ -62.011225967735498, 57.54847730812449 ], [ -61.848342660740741, 57.579326918676315 ], [ -61.743620977058427, 57.554574720466462 ] ] ], [ [ [ -60.994485206293675, 56.039318315007762 ], [ -60.982729834751495, 56.015137405882228 ], [ -61.195842635849843, 56.063916704618009 ], [ -61.086891215678051, 56.140831990755203 ], [ -60.994485206293675, 56.039318315007762 ] ] ], [ [ [ -55.361245245308865, 51.889650187960484 ], [ -55.399818244827188, 51.938484418338987 ], [ -55.274090700968557, 51.995173873626527 ], [ -55.293569461477247, 51.929959027388776 ], [ -55.361245245308865, 51.889650187960484 ] ] ], [ [ [ -55.458726938480623, 51.536549588553271 ], [ -56.031092682970893, 51.328391621628299 ], [ -55.800028221031482, 51.033320809591004 ], [ -56.822185242445556, 49.613458694880677 ], [ -56.179408118316175, 50.11497360659007 ], [ -55.502913951884977, 49.983148650389495 ], [ -56.140186925413758, 49.619116654080898 ], [ -55.229541138722254, 49.508143749456991 ], [ -55.3531812801575, 49.079435237009307 ], [ -54.502202243788986, 49.527336865423507 ], [ -53.619461731599472, 49.32163983609243 ], [ -54.161285482737156, 48.787693282520848 ], [ -53.706330631397634, 48.655527750135377 ], [ -54.114472736810768, 48.393580718658541 ], [ -53.027584267614898, 48.634708657544337 ], [ -53.869576487234355, 48.019682999317325 ], [ -53.63821539442425, 48.014640274515585 ], [ -53.863654856149083, 47.787036506067579 ], [ -53.672349917210752, 47.648257203898567 ], [ -52.865997347388344, 48.112978901313795 ], [ -53.169824263275288, 47.512092647923055 ], [ -52.782402373496325, 47.769436407739931 ], [ -52.653653589288069, 47.549402219658788 ], [ -53.069782755552765, 46.681229579118764 ], [ -53.589798644530418, 46.638888268909824 ], [ -53.597368224897295, 47.146006208176715 ], [ -54.173743979306167, 46.880389742966116 ], [ -53.849526437641373, 47.440307977215923 ], [ -54.191827476089742, 47.859820932672221 ], [ -54.488139743252532, 47.403877311763722 ], [ -55.788525535045821, 46.867217135041756 ], [ -54.784605819014942, 47.664736696714698 ], [ -59.259732942852494, 47.634194703362112 ], [ -59.340866979150647, 47.933660046817067 ], [ -58.330234616379329, 48.522098789967345 ], [ -59.167700468638614, 48.558485510105385 ], [ -58.716458996346987, 48.598069251849779 ], [ -58.403667236368065, 49.084346125868507 ], [ -57.990515365138819, 48.98794109289409 ], [ -58.213395012312873, 49.386645942087824 ], [ -57.791322242305824, 49.490005321030679 ], [ -57.926146466198958, 49.700843952120408 ], [ -57.035913277942385, 51.010842781389783 ], [ -56.025566559713212, 51.568376982345512 ], [ -55.458726938480623, 51.536549588553271 ] ] ], [ [ [ -55.53613660940232, 50.719694088642711 ], [ -55.633860001802049, 50.740183591377445 ], [ -55.469295786540044, 50.796378661880482 ], [ -55.472734507374341, 50.775922118131376 ], [ -55.53613660940232, 50.719694088642711 ] ] ], [ [ [ -54.093697589533889, 49.744459676440471 ], [ -53.980648268815145, 49.66198530805994 ], [ -54.286134120312255, 49.595375198097088 ], [ -54.277663661004766, 49.711489704479646 ], [ -54.093697589533889, 49.744459676440471 ] ] ], [ [ [ -54.554420263359063, 49.588860305270458 ], [ -54.786495467524531, 49.496157665015375 ], [ -54.863575548589907, 49.576094191502222 ], [ -54.55916635729011, 49.631498246350077 ], [ -54.554420263359063, 49.588860305270458 ] ] ], [ [ [ -54.227126549701921, 47.441340692099089 ], [ -54.325959561284606, 47.408118034581747 ], [ -54.128161702176712, 47.646807008530743 ], [ -54.147541585728504, 47.573121702985503 ], [ -54.227126549701921, 47.441340692099089 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Nova Scotia\", \"type\": \"Province\", \"postal\": \"NS\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -61.105183452703969, 45.94473907250827 ], [ -60.737910489474871, 45.751423635446372 ], [ -60.297940990269495, 46.311253979067828 ], [ -59.828022759452907, 45.965151670943186 ], [ -60.672959315122185, 45.590814498460219 ], [ -61.449780633818065, 45.716223438791076 ], [ -61.408647819748964, 46.17036530181835 ], [ -60.489070147951111, 47.009709816258663 ], [ -60.494541339566069, 46.270274973598333 ], [ -61.105183452703969, 45.94473907250827 ] ] ], [ [ [ -63.87470504272784, 45.959208067200819 ], [ -62.483055819718757, 45.621817917611679 ], [ -61.955514295688403, 45.868153376227383 ], [ -61.031520119815809, 45.291755649161416 ], [ -63.609758743558444, 44.479975833038225 ], [ -64.286066142404394, 44.550332281034599 ], [ -65.344302266757268, 43.549620572938608 ], [ -66.125726857113136, 43.813841774424105 ], [ -66.021697312129092, 44.561703131077735 ], [ -64.44815843374397, 45.337436803247755 ], [ -64.135509496036107, 45.02306301195847 ], [ -63.368015570274167, 45.364781774994015 ], [ -64.912880131159199, 45.374801306626239 ], [ -63.87470504272784, 45.959208067200819 ] ] ], [ [ [ -60.961570165975559, 45.489938029768354 ], [ -61.002889747629908, 45.481720256017354 ], [ -61.081749613919413, 45.557789594856672 ], [ -60.91245029105491, 45.567292769047327 ], [ -60.961570165975559, 45.489938029768354 ] ] ], [ [ [ -66.273778620573353, 44.292307368847986 ], [ -66.324106991633855, 44.257293939777952 ], [ -66.210376518545388, 44.392019286714202 ], [ -66.273778620573353, 44.292307368847986 ] ] ], [ [ [ -59.787582084082089, 43.939591290939802 ], [ -60.03775177135968, 43.906621318978978 ], [ -60.117457584947104, 43.95336814693411 ], [ -59.727124318103947, 44.002839584368161 ], [ -59.787582084082089, 43.939591290939802 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Northwest Territories\", \"type\": \"Territoire\", \"postal\": \"NT\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -110.00436500555972, 78.686722743390817 ], [ -110.00366737369717, 78.321701977513243 ], [ -113.29256215247885, 78.334391186981691 ], [ -110.87756938457295, 78.735040616327751 ], [ -110.00436500555972, 78.686722743390817 ] ] ], [ [ [ -110.00354103091891, 78.089648746004883 ], [ -110.86560527278843, 77.834117730397764 ], [ -110.15275185204054, 77.762959280417647 ], [ -110.1984879377696, 77.524522992025169 ], [ -110.89399943891064, 77.42597562498463 ], [ -112.37267137031749, 77.36411160895284 ], [ -113.16435169836927, 77.530257855525178 ], [ -113.28346547244435, 77.813023979593112 ], [ -110.00354103091891, 78.089648746004883 ] ] ], [ [ [ -113.83245230979279, 77.754631643381231 ], [ -114.60834528372669, 77.769331350973232 ], [ -115.02935787302923, 77.967535704237264 ], [ -114.33038018523254, 78.077563784606355 ], [ -113.61791677914796, 77.83240386314489 ], [ -113.83245230979279, 77.754631643381231 ] ] ], [ [ [ -115.55128538317356, 77.36328763431203 ], [ -116.32919984155959, 77.137046170603469 ], [ -115.81005736570118, 76.939127461881583 ], [ -116.25274598122122, 76.901400409661164 ], [ -115.94630431914078, 76.711260021548526 ], [ -117.23361637996658, 76.281518794217675 ], [ -117.99297492944163, 76.405829101694138 ], [ -117.88081000817068, 76.805083267315098 ], [ -118.79140086321948, 76.512978763984677 ], [ -118.62453501212748, 76.365882811107809 ], [ -118.99394481625841, 76.144859853457689 ], [ -119.58034559546377, 76.326507809605772 ], [ -119.52613355726292, 75.997225570482129 ], [ -119.91287978783643, 75.858830789812174 ], [ -120.84838214285895, 76.182685782635019 ], [ -122.40048120109027, 75.944249494242513 ], [ -122.90280360794766, 76.13473045854002 ], [ -119.09019054746895, 77.305104038342506 ], [ -116.5113092235065, 77.547616254624842 ], [ -115.55128538317356, 77.36328763431203 ] ] ], [ [ [ -113.56071096641887, 76.743274182926001 ], [ -113.71245962943418, 76.710567882850228 ], [ -114.83525691347643, 76.794690200512377 ], [ -113.89164664798837, 76.89486354417744 ], [ -113.56071096641887, 76.743274182926001 ] ] ], [ [ [ -113.92327079470255, 76.229146966047978 ], [ -110.00240394591459, 75.539062711207748 ], [ -110.002815933235, 74.850988954491044 ], [ -113.01692066247178, 74.401922775251165 ], [ -114.37694024560241, 74.670846125353535 ], [ -111.0334763729422, 75.226776322341834 ], [ -113.71178946339299, 75.068617136621043 ], [ -113.85330436136948, 75.259383745460696 ], [ -113.46707448823754, 75.416125694799319 ], [ -114.01652275138483, 75.434264123225603 ], [ -114.45176812931625, 75.087876170558843 ], [ -115.72884642510323, 74.96813617575674 ], [ -117.60010382070479, 75.271688433430086 ], [ -115.14185787732076, 75.678534152075031 ], [ -117.16364445346923, 75.644894014073003 ], [ -114.99152645068764, 75.896349101790264 ], [ -116.6542962895079, 75.929319073751088 ], [ -116.45422975355567, 76.143233876833165 ], [ -114.77859492401026, 76.172611319360072 ], [ -115.82217528608531, 76.270027094560561 ], [ -115.58069029152183, 76.437502686886745 ], [ -113.92327079470255, 76.229146966047978 ] ] ], [ [ [ -110.00340919497638, 76.479668215838984 ], [ -110.00263465881402, 76.244231195139037 ], [ -110.31444863555252, 76.369398436241909 ], [ -110.27000893659167, 76.416991211494917 ], [ -110.00340919497638, 76.479668215838984 ] ] ], [ [ [ -118.32814584066489, 75.579679167835252 ], [ -118.81713633783401, 75.522110806264209 ], [ -119.3945667797831, 75.61731832942732 ], [ -117.51261419334388, 76.099442371256401 ], [ -118.32814584066489, 75.579679167835252 ] ] ], [ [ [ -121.07622211737066, 75.745276097980394 ], [ -121.24091267541093, 75.751856908778308 ], [ -120.88781207600371, 75.92797874166871 ], [ -120.92124347376338, 75.814446022494025 ], [ -121.07622211737066, 75.745276097980394 ] ] ], [ [ [ -119.73630202231146, 74.112630772028041 ], [ -117.51483892487406, 74.23174454610313 ], [ -115.3928240734178, 73.501977672561623 ], [ -118.96156810603895, 72.684144389410619 ], [ -120.17989151677213, 72.212644127283681 ], [ -120.61932268587884, 71.505761776099519 ], [ -122.83993983601835, 71.09746586208675 ], [ -124.00777557392712, 71.677434145929539 ], [ -125.84531043406258, 71.978657301951557 ], [ -123.79727202585798, 73.768154440527951 ], [ -124.6962613179642, 74.348177656013462 ], [ -121.50415609365599, 74.545118581494904 ], [ -119.56264662017922, 74.23283219262899 ], [ -119.73630202231146, 74.112630772028041 ] ] ], [ [ [ -114.52153131557125, 72.592935889837548 ], [ -113.07355518611659, 72.99528820010795 ], [ -111.26974286144724, 72.713730572179855 ], [ -111.89517806596976, 72.356103605412471 ], [ -111.67511641206727, 72.300139247808858 ], [ -110.20512917337452, 72.661303812367436 ], [ -110.66083658821931, 73.008208122475793 ], [ -110.0018326568303, 72.98185192029851 ], [ -110.0000254057848, 70.001151123000056 ], [ -117.05535770617436, 70.002183837883194 ], [ -116.65049501983165, 69.649808336159879 ], [ -116.85603824056312, 69.649676500217367 ], [ -117.16273808136435, 70.092491458515667 ], [ -111.63256086845171, 70.308834240205982 ], [ -113.75728934305836, 70.690719020398717 ], [ -117.58705755555866, 70.629536156736663 ], [ -118.37651315208026, 70.967706335652451 ], [ -115.30342282489023, 71.493720760015179 ], [ -117.93563728077, 71.392075248325227 ], [ -118.22644539733218, 71.467111872281379 ], [ -117.74234381636518, 71.659350649145978 ], [ -118.98772106113819, 71.764248114084978 ], [ -118.21350350230725, 72.262873621387286 ], [ -118.37452462661378, 72.533862401255931 ], [ -116.57323915750956, 73.054921991445298 ], [ -114.20641045394096, 73.297796756569596 ], [ -114.07473930633999, 72.90681529634233 ], [ -114.52153131557125, 72.592935889837548 ] ] ], [ [ [ -126.61216165960469, 69.730338124388112 ], [ -125.38678502594622, 69.349200414536341 ], [ -125.20116551202946, 69.828808587128833 ], [ -124.5550265713656, 70.151224370912388 ], [ -124.12461517799358, 69.690007312302725 ], [ -124.33809052793389, 69.364833960054597 ], [ -123.52839811423408, 69.389355445365027 ], [ -122.95667506996364, 69.818843987139331 ], [ -120.96243121947521, 69.660399156876394 ], [ -120.68185137478756, 69.566938459951785 ], [ -120.6779512281544, 68.002847824114582 ], [ -112.50390306477671, 65.502337474821417 ], [ -110.66946634929069, 65.497140941420071 ], [ -108.97293002969016, 64.779195357391984 ], [ -101.99914375291914, 64.228428734819403 ], [ -102.00164863582719, 60.001087264965378 ], [ -123.81915679231783, 60.001087264965378 ], [ -124.582596762847, 60.952821920411822 ], [ -126.85927714754703, 60.769416151696674 ], [ -127.166597715911, 61.464521158681578 ], [ -129.25471425064444, 62.152770696654983 ], [ -129.61177542149181, 63.058681375743959 ], [ -130.13360405467924, 63.276452380145031 ], [ -129.84493827218316, 63.485785884224214 ], [ -130.30260674667306, 63.703710697224892 ], [ -130.11791557751829, 63.793370124473256 ], [ -132.58810366002973, 64.794081832569248 ], [ -132.35258973502997, 65.057248346514513 ], [ -132.77323428232629, 65.203410461465154 ], [ -132.19468872802994, 65.597654861270001 ], [ -132.55484804352676, 65.85700911921046 ], [ -132.34274598465444, 65.978968352378445 ], [ -133.62163153148694, 65.974628752603536 ], [ -133.63519415407461, 66.565649282961687 ], [ -134.05558052265016, 67.004487190327012 ], [ -136.1693061892199, 67.015242805971695 ], [ -136.44543657084716, 67.746591710823566 ], [ -136.44375566257992, 68.895124469480351 ], [ -135.2312220469895, 68.694283397365751 ], [ -135.91019912367167, 69.11148922382776 ], [ -134.40894479394242, 69.681789538551755 ], [ -133.87980475910891, 69.507722149099095 ], [ -134.17433724104754, 69.252828340547552 ], [ -130.66547968532026, 70.127032475458293 ], [ -129.53844167845998, 70.105180667984087 ], [ -132.68672793137006, 69.259859590815779 ], [ -133.41831304228563, 68.844268754649733 ], [ -133.19682316567241, 68.739832715509579 ], [ -131.78838683264794, 69.431960427459018 ], [ -131.06341549151591, 69.450692117626716 ], [ -130.97065791961813, 69.209058807627883 ], [ -130.1176354261404, 69.720087879856464 ], [ -128.89894946656528, 69.96617065291565 ], [ -129.15789723034962, 69.800079337986034 ], [ -128.85301013375815, 69.751036367365174 ], [ -127.68377913212427, 70.260362558669442 ], [ -128.17010544462147, 70.418444840090416 ], [ -127.99099533036708, 70.5738354710181 ], [ -126.61216165960469, 69.730338124388112 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Nunavut\", \"type\": \"Territoire\", \"postal\": \"NU\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -86.595531104771069, 67.7359129994787 ], [ -86.959804800307637, 68.100241626657976 ], [ -86.70208750532025, 68.305598079804213 ], [ -86.421123139133556, 68.183430106393871 ], [ -86.595531104771069, 67.7359129994787 ] ] ], [ [ [ -109.32316869051164, 67.99088371233006 ], [ -109.36081334526799, 67.987576827438289 ], [ -109.49796117764819, 68.047012864861841 ], [ -109.46912755838422, 68.098011401963532 ], [ -109.32316869051164, 67.99088371233006 ] ] ], [ [ [ -73.621731781734894, 67.78382437825951 ], [ -74.480719851612065, 67.80490714273563 ], [ -74.749280652872471, 68.018437424318648 ], [ -73.435227868370347, 67.970009688096269 ], [ -73.621731781734894, 67.78382437825951 ] ] ], [ [ [ -109.16640476851595, 67.982358321379849 ], [ -108.97050205108191, 67.979721602529253 ], [ -108.886061129892, 67.898543620916939 ], [ -109.09622959494054, 67.92402091681069 ], [ -109.16640476851595, 67.982358321379849 ] ] ], [ [ [ -107.89986785496703, 67.401829734781302 ], [ -108.15225678061051, 67.429427392084079 ], [ -108.12752655505776, 67.628587555931432 ], [ -107.99087310746204, 67.622127594747496 ], [ -107.89986785496703, 67.401829734781302 ] ] ], [ [ [ -62.681567790182015, 67.056320688398046 ], [ -62.871631273994865, 67.062571909339653 ], [ -62.396340728520215, 67.178323866880248 ], [ -62.484604892043478, 67.134246716761339 ], [ -62.681567790182015, 67.056320688398046 ] ] ], [ [ [ -108.09272735939435, 67.005190315353843 ], [ -107.96645599227278, 66.997280158802084 ], [ -107.80553374492315, 66.998598518227396 ], [ -107.94392303242884, 66.857830690591896 ], [ -108.09272735939435, 67.005190315353843 ] ] ], [ [ [ -83.123499722323587, 66.282828227251031 ], [ -82.948157918759819, 66.271918803006741 ], [ -82.931337849758819, 66.257295999714557 ], [ -83.059888880053265, 66.199266212344639 ], [ -83.237856416139067, 66.331530621687023 ], [ -83.123499722323587, 66.282828227251031 ] ] ], [ [ [ -83.725989979681756, 65.796705161831909 ], [ -83.23393429684883, 65.696553790823941 ], [ -84.118245854020131, 65.77179915502245 ], [ -84.467391375151479, 66.088271335063666 ], [ -83.725989979681756, 65.796705161831909 ] ] ], [ [ [ -84.674769312749817, 65.575012038140613 ], [ -85.096347697972391, 65.756198568489822 ], [ -85.149631391411248, 66.015399017830674 ], [ -84.757353544415778, 65.85892074037713 ], [ -84.674769312749817, 65.575012038140613 ] ] ], [ [ [ -84.919621617012069, 65.261077699993109 ], [ -84.501141376438937, 65.458436105959237 ], [ -82.050025560280048, 64.644294229199062 ], [ -81.676116854610314, 64.212641380701541 ], [ -81.887087321642568, 64.01640358024693 ], [ -80.828961060575125, 64.089935077192564 ], [ -80.261319437358821, 63.80195044706619 ], [ -81.046369516134234, 63.461550043455929 ], [ -83.30395016866035, 64.143790059715712 ], [ -85.392616019821006, 63.119666485492246 ], [ -85.768919745113351, 63.700326908033304 ], [ -87.177125365238382, 63.595132812223596 ], [ -86.252098474482651, 64.136857686404397 ], [ -86.374255461564445, 64.565829870737133 ], [ -85.813985664801223, 65.831949303801366 ], [ -85.241092576540836, 65.795518638349165 ], [ -84.919621617012069, 65.261077699993109 ] ] ], [ [ [ -77.642079835489639, 63.991904067593595 ], [ -77.714062260110538, 63.945706556065659 ], [ -77.965989759955193, 63.992936782476733 ], [ -77.563604490699163, 64.022083512104217 ], [ -77.642079835489639, 63.991904067593595 ] ] ], [ [ [ -76.67759005260352, 63.393962150252662 ], [ -76.921860081452934, 63.406365715178964 ], [ -77.364751944051037, 63.588310302197698 ], [ -77.133687482111625, 63.682056643664481 ], [ -76.67759005260352, 63.393962150252662 ] ] ], [ [ [ -77.876692881548792, 63.470547846533549 ], [ -77.532732907490256, 63.233660630465778 ], [ -78.536751500478019, 63.423724114278627 ], [ -78.234913110057548, 63.489565181243393 ], [ -77.876692881548792, 63.470547846533549 ] ] ], [ [ [ -82.000466232217633, 62.954190404961082 ], [ -83.015800743605823, 62.209899605084274 ], [ -83.698864734506387, 62.160263372722056 ], [ -83.91239501608942, 62.425517289090692 ], [ -83.376405005408657, 62.904949680426455 ], [ -82.000466232217633, 62.954190404961082 ] ] ], [ [ [ -70.337072232606957, 62.548739950041238 ], [ -70.766066389596787, 62.596849082735844 ], [ -71.220142334652778, 62.873913302289367 ], [ -70.44261789093008, 62.733793668037976 ], [ -70.337072232606957, 62.548739950041238 ] ] ], [ [ [ -74.000441512978412, 62.618426231996438 ], [ -74.253522577320183, 62.621996788773288 ], [ -74.626442513420955, 62.712765835204578 ], [ -74.108931507351343, 62.680312220685323 ], [ -74.000441512978412, 62.618426231996438 ] ] ], [ [ [ -64.823835938309315, 62.558737509016368 ], [ -64.515306873805486, 62.551794149376519 ], [ -64.418077866190245, 62.487403277779578 ], [ -64.956495855479261, 62.458355425108977 ], [ -64.823835938309315, 62.558737509016368 ] ] ], [ [ [ -79.545318433483047, 62.411696487782194 ], [ -79.272000551963046, 62.185993354172325 ], [ -79.668771807333044, 61.644455247576786 ], [ -80.265175638677803, 61.818193047173111 ], [ -80.021597748526659, 62.342966016410344 ], [ -79.545318433483047, 62.411696487782194 ] ] ], [ [ [ -65.030543709866464, 61.879035334650297 ], [ -64.960571783369119, 61.871674494525763 ], [ -64.847039064194433, 61.761503591885571 ], [ -65.235339860256943, 61.897723079503805 ], [ -65.030543709866464, 61.879035334650297 ] ] ], [ [ [ -93.043951150563458, 61.844076837222985 ], [ -93.08480381325468, 61.841703790257469 ], [ -93.196683089983466, 61.918542172094874 ], [ -92.993024024597304, 61.889714045995163 ], [ -93.043951150563458, 61.844076837222985 ] ] ], [ [ [ -64.832625001144578, 61.366050695940856 ], [ -65.393883567476777, 61.562859785479787 ], [ -65.432126977138765, 61.649519945035593 ], [ -64.789635497551544, 61.662231127161135 ], [ -64.832625001144578, 61.366050695940856 ] ] ], [ [ [ -78.531631871376476, 60.728547009512653 ], [ -78.668884073877862, 60.716912487584466 ], [ -78.241680688440709, 60.818667862559863 ], [ -78.278858424233931, 60.783885146389252 ], [ -78.531631871376476, 60.728547009512653 ] ] ], [ [ [ -68.233816537139745, 60.240918817082985 ], [ -68.141882939882763, 60.561983282455628 ], [ -67.818851921700727, 60.449494264492643 ], [ -67.922310177600465, 60.33988366460818 ], [ -68.233816537139745, 60.240918817082985 ] ] ], [ [ [ -64.407014633346336, 60.367063841426273 ], [ -64.737955808080116, 60.375644164019235 ], [ -64.836426270820837, 60.501009159035902 ], [ -64.646307855365279, 60.514599247444949 ], [ -64.407014633346336, 60.367063841426273 ] ] ], [ [ [ -80.064224703277759, 59.77082480500971 ], [ -80.167089697436111, 59.763848486384205 ], [ -79.898627773132603, 59.853145364790606 ], [ -79.949637296562841, 59.809914161969573 ], [ -80.064224703277759, 59.77082480500971 ] ] ], [ [ [ -80.285247660927865, 59.624113373631843 ], [ -80.298969585279437, 59.674189059135841 ], [ -80.167243506035732, 59.708861912021007 ], [ -80.183063819139235, 59.683494479412673 ], [ -80.285247660927865, 59.624113373631843 ] ] ], [ [ [ -69.160062910363862, 59.040222970498832 ], [ -69.220861252526888, 58.967559393508168 ], [ -69.352818044670016, 58.960747869810831 ], [ -69.303203784964879, 59.144867749881342 ], [ -69.160062910363862, 59.040222970498832 ] ] ], [ [ [ -79.716496418528592, 57.515507336163665 ], [ -79.80845198844267, 57.442437265016878 ], [ -79.838224938797168, 57.482998790001687 ], [ -79.742566976163729, 57.607957290862231 ], [ -79.716496418528592, 57.515507336163665 ] ] ], [ [ [ -79.867009119582704, 56.774567366492789 ], [ -79.943671720163394, 56.776764632201605 ], [ -79.898166347333756, 56.865259508624291 ], [ -79.82664534851169, 56.843089097622311 ], [ -79.867009119582704, 56.774567366492789 ] ] ], [ [ [ -79.518193188307677, 56.656695047543195 ], [ -79.577387526503259, 56.644917703343936 ], [ -79.570125563335623, 56.795705062611631 ], [ -79.49105695680376, 56.742685041057825 ], [ -79.518193188307677, 56.656695047543195 ] ] ], [ [ [ -78.935588185614307, 56.266076136157892 ], [ -79.175474669374623, 55.885059275920128 ], [ -79.182143370800901, 56.212177208320554 ], [ -79.495088939379443, 55.874754099745758 ], [ -79.764737387165724, 55.806770698714899 ], [ -79.544725171741661, 56.128362507857673 ], [ -80.008238373017036, 55.911052929255447 ], [ -79.45886701416957, 56.539723607534228 ], [ -79.536331616733975, 56.180086142643262 ], [ -79.272418032447732, 56.600423072740341 ], [ -78.935588185614307, 56.266076136157892 ] ] ], [ [ [ -79.977597502707567, 56.207013633904836 ], [ -80.057490083880225, 56.28736764087634 ], [ -79.579738600811694, 56.4663459191882 ], [ -79.687942950642494, 56.3267975740211 ], [ -79.977597502707567, 56.207013633904836 ] ] ], [ [ [ -78.82650492949999, 56.145303426472651 ], [ -78.799423629638795, 56.383278289066311 ], [ -78.668730265278242, 56.438627412271444 ], [ -78.672817179496647, 56.260495081257488 ], [ -78.82650492949999, 56.145303426472651 ] ] ], [ [ [ -79.938211514876983, 53.304139988012736 ], [ -80.00410751348447, 53.280079928501181 ], [ -80.074024508339079, 53.34428403251286 ], [ -79.974565276029395, 53.352249120707341 ], [ -79.938211514876983, 53.304139988012736 ] ] ], [ [ [ -80.731677121317162, 52.747275953098182 ], [ -81.096599010237838, 52.779883376217072 ], [ -82.039280930963912, 53.04988338651674 ], [ -81.135611462897913, 53.205801361214554 ], [ -80.731677121317162, 52.747275953098182 ] ] ], [ [ [ -79.384291816012251, 51.95197562979115 ], [ -79.520621166915916, 51.952953413031565 ], [ -79.643766923566687, 52.01006034880379 ], [ -79.271308413264777, 52.086799853684283 ], [ -79.384291816012251, 51.95197562979115 ] ] ], [ [ [ -69.48888372368863, 83.016797371460683 ], [ -66.422577454374576, 82.926874272327268 ], [ -68.469352434796605, 82.653358636893472 ], [ -64.904871097650556, 82.900836673677759 ], [ -61.207213485892979, 82.341050275370463 ], [ -68.688540675579844, 81.293328067434288 ], [ -64.780066405389633, 81.492850780123604 ], [ -69.550681821749166, 80.383264556155609 ], [ -70.712573955915587, 80.539578038681015 ], [ -70.264881067743701, 80.233608788727963 ], [ -72.055982210287539, 80.123218159516881 ], [ -70.559072973497493, 80.071000139946818 ], [ -71.387837653549852, 79.761745977759062 ], [ -74.394466186212384, 79.874092173450975 ], [ -74.660214487365494, 79.835178597747813 ], [ -73.201109207095669, 79.596588500755701 ], [ -76.89884372315305, 79.512301388165383 ], [ -74.53232263678369, 79.052743265165901 ], [ -78.581652625237737, 79.075023539453326 ], [ -74.433127076359057, 78.724131192083462 ], [ -76.416126419582596, 78.511534748426669 ], [ -75.193435943253149, 78.327722485555427 ], [ -75.969620054893483, 77.99312286341646 ], [ -78.012593765639238, 77.946046445604992 ], [ -78.076160662595385, 77.519062786738743 ], [ -78.493212680457773, 77.369385046654003 ], [ -81.659088045366957, 77.525445843622862 ], [ -81.277719622615791, 77.3651992554787 ], [ -82.05679313866321, 77.296523715749544 ], [ -77.998750991673688, 76.851950944884209 ], [ -78.284307643191809, 76.571217291596923 ], [ -80.799715453990743, 76.173567129943422 ], [ -80.974529913784394, 76.470066164691445 ], [ -82.529842473114854, 76.723279064975742 ], [ -82.233167657110116, 76.46582544187342 ], [ -84.223791512343254, 76.675323740880771 ], [ -84.275339365872156, 76.35653344551676 ], [ -86.453708589595351, 76.584884284305787 ], [ -88.395992599234475, 76.405257812609847 ], [ -88.495858325700297, 76.772838393038171 ], [ -88.545780202604675, 76.420913330785169 ], [ -89.570079558084842, 76.491917972165652 ], [ -89.499745082745534, 76.82678126618967 ], [ -88.556217214721556, 77.072193873207681 ], [ -86.812236435303348, 77.184924590398623 ], [ -88.016975250791731, 77.784734183592064 ], [ -86.755063581559881, 77.863725885824095 ], [ -84.487034930588322, 77.367989782928902 ], [ -83.608073715417987, 77.442246377558433 ], [ -82.595288032252029, 77.992134093847483 ], [ -84.860548128430466, 77.499507121930264 ], [ -85.547534238621282, 77.927699276936352 ], [ -84.222703865817394, 78.176001288361448 ], [ -84.910371128377946, 78.239721993917215 ], [ -84.783193389151492, 78.527607747086677 ], [ -85.585931456882903, 78.10954498699823 ], [ -86.217777184110901, 78.081178286697366 ], [ -85.920047680565915, 78.34286164628918 ], [ -87.551726209606386, 78.176627509088462 ], [ -86.807929794514067, 78.774360686187066 ], [ -83.271419649841278, 78.770339689939931 ], [ -81.750098791026247, 78.975773047385957 ], [ -84.411998306632157, 78.996570167319931 ], [ -83.57587278645525, 79.053677103092127 ], [ -86.420738617634512, 79.84520911570857 ], [ -86.4985437963838, 80.258229150995277 ], [ -83.72361693271624, 80.228950585425252 ], [ -81.688366610936967, 79.685808474862284 ], [ -80.475937365467715, 79.606256469874495 ], [ -80.12448471534212, 79.669504763302854 ], [ -82.987027549148834, 80.322587063606591 ], [ -76.863006319442206, 80.864784349914771 ], [ -78.716224163574367, 80.951653249712933 ], [ -76.885121798801478, 81.430272652736448 ], [ -81.007016487289278, 80.654868570422735 ], [ -85.145852094392083, 80.521131993055462 ], [ -86.615405373107336, 80.630039467913093 ], [ -83.288832980583678, 81.147945981810267 ], [ -87.711665180551336, 80.656263834147836 ], [ -89.263253374505354, 80.914288746334449 ], [ -86.476757906880863, 81.035720635732361 ], [ -84.941220738929758, 81.286230899194805 ], [ -89.623055634324459, 81.032468682483284 ], [ -89.980935286648361, 81.124709896939521 ], [ -87.597022842193695, 81.525820752084428 ], [ -91.684068896539628, 81.63568403752538 ], [ -88.063194734976747, 82.096483615650357 ], [ -85.044832803429117, 81.982797087876065 ], [ -86.615636086006759, 82.218552712103815 ], [ -84.896824985283075, 82.449441392786525 ], [ -79.424864327325594, 81.854432825166867 ], [ -82.447543885991038, 82.395026107507618 ], [ -80.809691040308792, 82.586385978088657 ], [ -81.010169563581428, 82.77903124910938 ], [ -78.74877665505052, 82.679374262885887 ], [ -80.154949804394889, 82.911119877195034 ], [ -79.88633407149176, 82.938508794255455 ], [ -76.009357605237469, 82.535167714416076 ], [ -75.565619795341462, 82.608545402762104 ], [ -77.124920391933443, 83.008546638724056 ], [ -72.658714166873693, 82.721638668795009 ], [ -73.440710046313839, 82.945836675394361 ], [ -69.48888372368863, 83.016797371460683 ] ] ], [ [ [ -91.885547175709789, 81.13287273904777 ], [ -90.643015390029717, 80.593685706760681 ], [ -89.235578812902773, 80.510640049295858 ], [ -88.857330507458116, 80.166196676781396 ], [ -87.675003802199683, 80.37210244635483 ], [ -87.92232803038435, 80.097718890966036 ], [ -86.977196158392928, 79.894219127343774 ], [ -87.295184451773224, 79.58015295325373 ], [ -85.647872377214512, 79.611420044290213 ], [ -85.042141152935827, 79.284565783774838 ], [ -87.617380508985903, 78.676329676588097 ], [ -88.040200349333958, 78.995328712194436 ], [ -88.253785562559713, 78.671990076813188 ], [ -87.982840728005229, 78.537066975963143 ], [ -88.741578549917534, 78.584044516817698 ], [ -88.822426941673527, 78.185877997722599 ], [ -90.037086411837237, 78.606830162218159 ], [ -89.489835414398769, 78.171947333128685 ], [ -91.409630409508139, 78.187987372803065 ], [ -92.848229707550402, 78.460118730840293 ], [ -91.866892389841922, 78.542702962506269 ], [ -94.16967079799845, 78.972806738679054 ], [ -91.299898960009713, 79.372731070341217 ], [ -95.103179134390217, 79.289894153118723 ], [ -95.732986897673285, 79.418203484185227 ], [ -94.40188333127071, 79.736323613508034 ], [ -95.857500452227782, 79.67378943143504 ], [ -96.773260374856562, 80.135775533042789 ], [ -94.645895181399339, 80.048708879330832 ], [ -94.262587671660128, 80.194870994281473 ], [ -96.394111190471293, 80.3150174832397 ], [ -95.549070264680864, 80.36662026841131 ], [ -96.151824193924099, 80.553486730617834 ], [ -95.926956021283559, 80.720654705744778 ], [ -93.927905652057092, 80.559188635132216 ], [ -95.514732494816286, 80.838120530538248 ], [ -95.269759340940055, 81.000795097290677 ], [ -93.235646104165099, 81.128851742800634 ], [ -94.179360739774339, 81.339272893405706 ], [ -91.885547175709789, 81.13287273904777 ] ] ], [ [ [ -98.791613723335018, 79.981109999799031 ], [ -98.945197103217197, 79.724073857181367 ], [ -100.12602966779363, 80.001269912677429 ], [ -99.731219472068759, 80.144103170079205 ], [ -98.791613723335018, 79.981109999799031 ] ] ], [ [ [ -103.42600965207632, 79.315624134568992 ], [ -102.57618967336919, 78.879368014411511 ], [ -101.70365546039714, 79.078923686086455 ], [ -100.0147656254633, 78.728635586786538 ], [ -98.999634361153184, 77.996891174107077 ], [ -99.955906370288318, 77.793808890969473 ], [ -101.07413334165622, 78.193832099588519 ], [ -104.51263444938714, 78.29465363663769 ], [ -104.99554950687138, 78.518511067052174 ], [ -103.37156690097605, 78.736326016767407 ], [ -105.58019247350968, 79.114189800713007 ], [ -103.42600965207632, 79.315624134568992 ] ] ], [ [ [ -96.204509132457304, 78.53127718082041 ], [ -94.915389820585986, 78.39050935318491 ], [ -95.329239323677783, 78.225044258982308 ], [ -94.934302785174651, 78.075652163439685 ], [ -96.989630622368253, 77.806025688310513 ], [ -97.65816519376925, 78.090637515573832 ], [ -96.944669072801545, 78.151875310878637 ], [ -98.049487230181384, 78.325920727674173 ], [ -98.340811704185157, 78.751212491944642 ], [ -96.204509132457304, 78.53127718082041 ] ] ], [ [ [ -109.81597693684985, 78.650390954895499 ], [ -109.46726537569599, 78.567191488831071 ], [ -109.35210667989679, 78.368657545710704 ], [ -110.00366737369717, 78.321701977513243 ], [ -109.81597693684985, 78.650390954895499 ] ] ], [ [ [ -103.00337108614924, 78.146448064577839 ], [ -103.11819469892785, 78.126343083342164 ], [ -103.27358532985554, 78.165773016486895 ], [ -102.78826975958441, 78.218166817313687 ], [ -103.00337108614924, 78.146448064577839 ] ] ], [ [ [ -109.77179541660976, 77.957417295648156 ], [ -110.00359046939735, 77.928940732061847 ], [ -110.00354103091891, 78.089648746004883 ], [ -109.62224401930327, 78.074773257156181 ], [ -109.77179541660976, 77.957417295648156 ] ] ], [ [ [ -101.69358099712221, 77.696601856011313 ], [ -102.37782601834128, 77.728121632604342 ], [ -102.47154489398669, 77.873492731899802 ], [ -101.00204654691414, 77.735097951229847 ], [ -101.69358099712221, 77.696601856011313 ] ] ], [ [ [ -95.484371775884682, 77.791996146759715 ], [ -93.582863524636963, 77.770759573683961 ], [ -93.128727154773969, 77.660171190559112 ], [ -93.836180795042438, 77.452221963876468 ], [ -96.276595927199381, 77.630563035132781 ], [ -95.484371775884682, 77.791996146759715 ] ] ], [ [ [ -104.55813432905251, 77.141726346563246 ], [ -105.21507283067521, 77.182057158648632 ], [ -106.06612877134356, 77.725386036796863 ], [ -105.28966450832536, 77.642087693775522 ], [ -104.55813432905251, 77.141726346563246 ] ] ], [ [ [ -89.833246072030093, 77.267607699021482 ], [ -90.99320461237275, 77.329493687710396 ], [ -91.182652861787133, 77.55717436045822 ], [ -90.171932608387465, 77.59469267243631 ], [ -89.719471653627437, 77.442147500601521 ], [ -89.833246072030093, 77.267607699021482 ] ] ], [ [ [ -94.294964381879581, 76.912463642505088 ], [ -93.211877182359956, 76.754699964611859 ], [ -93.534567624357123, 76.447687013447137 ], [ -91.305040561768351, 76.680750987181568 ], [ -90.542611333465231, 76.495774173484619 ], [ -91.415079628466003, 76.455849855555385 ], [ -89.284522906566721, 76.301623775453379 ], [ -91.407334266842412, 76.220050286013475 ], [ -89.277601519583939, 75.795088111599341 ], [ -89.646039033638715, 75.565056364543068 ], [ -88.916678654253317, 75.453951623976621 ], [ -88.64496477670076, 75.658429170839327 ], [ -85.951490552859127, 75.395009971337572 ], [ -82.153659597436487, 75.831035378595601 ], [ -79.66019148474011, 75.449502160916268 ], [ -79.50909650827316, 75.259801225945381 ], [ -80.381982283758617, 75.034174996635301 ], [ -79.401430488541038, 74.91762103711099 ], [ -81.940184247496177, 74.47271867638932 ], [ -83.522083721903357, 74.901471134151166 ], [ -83.531894513293238, 74.585680106479714 ], [ -84.42553346339848, 74.508083667972755 ], [ -88.423040940110042, 74.494163989707403 ], [ -88.534947682660189, 74.8317628795389 ], [ -89.558719694370239, 74.554720632642443 ], [ -91.508364544133912, 74.650686212475108 ], [ -92.389237380470931, 75.26331685107948 ], [ -92.185116889285908, 75.846537088171317 ], [ -93.091730693401729, 76.353995603623076 ], [ -95.273895693636902, 76.264391108017435 ], [ -96.898010135474763, 76.753996839585056 ], [ -95.849518884540501, 77.06622829680822 ], [ -94.294964381879581, 76.912463642505088 ] ] ], [ [ [ -89.726458958581489, 76.507419681741368 ], [ -90.164571768262917, 76.52360254368682 ], [ -90.562474615472951, 76.754282484127202 ], [ -89.948767316671251, 76.836240495066136 ], [ -89.726458958581489, 76.507419681741368 ] ] ], [ [ [ -108.29237641486191, 76.057112047375995 ], [ -106.91352077144242, 75.679621798600891 ], [ -106.67702357003796, 76.023735581259047 ], [ -105.90484946831623, 76.009002914681417 ], [ -105.4814363662268, 75.702253635401718 ], [ -106.09263878212045, 75.089447215540645 ], [ -110.002815933235, 74.850988954491044 ], [ -110.00240394591459, 75.539062711207748 ], [ -108.89949740970142, 75.624063935153401 ], [ -109.79605872319939, 75.863016580987477 ], [ -109.41662389427198, 76.071844713953624 ], [ -110.00340919497638, 76.479668215838984 ], [ -108.49238801917143, 76.75418360717029 ], [ -108.62762972354925, 76.586697028515573 ], [ -108.12321442110421, 76.233431634180192 ], [ -108.29237641486191, 76.057112047375995 ] ] ], [ [ [ -101.22611821073524, 76.579358161048106 ], [ -101.61306768838682, 76.604571785056805 ], [ -100.26914307657329, 76.734122571248776 ], [ -100.74655947662121, 76.649176278945845 ], [ -101.22611821073524, 76.579358161048106 ] ] ], [ [ [ -97.700929477627142, 76.466495607914624 ], [ -97.531042386185533, 76.109406971245903 ], [ -97.890504069819784, 75.760338354414358 ], [ -97.336018575035027, 75.419839073847214 ], [ -97.878232340836021, 75.416125694799319 ], [ -97.659923006336314, 75.151179395629924 ], [ -97.991814498489148, 75.045809518563487 ], [ -100.23439331938832, 75.007719917501106 ], [ -100.48349733279713, 75.188434035722935 ], [ -100.14571716854465, 75.246156205893612 ], [ -100.7311566440024, 75.346516317143937 ], [ -99.194559295346792, 75.698375461425655 ], [ -102.79749278239717, 75.599674285785511 ], [ -102.14471809929267, 75.875057597071788 ], [ -101.26141179118315, 75.758196020348265 ], [ -100.9727954471655, 75.79842795547674 ], [ -102.13774178066717, 76.28484765176654 ], [ -101.78753058566704, 76.451279542881053 ], [ -99.865472406877601, 75.924199444649531 ], [ -100.11285156670499, 76.11721825084075 ], [ -99.54105161813473, 76.146288076168418 ], [ -100.89078799774809, 76.475482424663682 ], [ -98.890342364796524, 76.465561769988369 ], [ -98.710814770057468, 76.693868663463206 ], [ -97.700929477627142, 76.466495607914624 ] ] ], [ [ [ -104.02284195023428, 76.583126471738723 ], [ -103.72276137238087, 76.601056159922706 ], [ -103.03355053065987, 76.431515137830218 ], [ -104.27066056320344, 76.326244137720693 ], [ -104.60304094697649, 76.582719977582599 ], [ -104.02284195023428, 76.583126471738723 ] ] ], [ [ [ -102.22734627627281, 76.014891586781033 ], [ -102.00803169271131, 75.939393537026007 ], [ -103.31474560974598, 75.764216528390421 ], [ -103.04151012569007, 75.918827129991485 ], [ -104.40605058301659, 76.108484119648182 ], [ -102.72801524068431, 76.30701806276852 ], [ -102.22734627627281, 76.014891586781033 ] ] ], [ [ [ -79.063106501025629, 75.925858380259683 ], [ -79.355639471169241, 75.831134255552513 ], [ -79.698742511601338, 75.883275370822787 ], [ -78.845159715367856, 76.106308826596461 ], [ -79.063106501025629, 75.925858380259683 ] ] ], [ [ [ -94.526550694424827, 75.749330053213185 ], [ -94.751446332886729, 75.769665747348284 ], [ -94.901206470435568, 75.930769269118912 ], [ -94.296304713961959, 75.788056861331114 ], [ -94.526550694424827, 75.749330053213185 ] ] ], [ [ [ -96.078572848356345, 75.510124721822592 ], [ -96.857108034305099, 75.369148153944764 ], [ -97.020661507341046, 75.468058069827237 ], [ -96.367809919936732, 75.654660860148709 ], [ -96.078572848356345, 75.510124721822592 ] ] ], [ [ [ -93.542604123687127, 75.027923775693722 ], [ -93.573096678561257, 74.66882464090142 ], [ -94.534510289455028, 74.636733575224099 ], [ -96.599599479560055, 75.031801949669784 ], [ -94.878184618971417, 75.630007538895768 ], [ -93.90906959176823, 75.422530724340533 ], [ -93.542604123687127, 75.027923775693722 ] ] ], [ [ [ -104.11994461507126, 75.036350289687022 ], [ -104.63430803801299, 75.061289255482137 ], [ -104.88738910235476, 75.147762647452709 ], [ -104.3462080514369, 75.429913537122161 ], [ -103.64348951877095, 75.186577346198987 ], [ -104.11994461507126, 75.036350289687022 ] ] ], [ [ [ -95.306656925355398, 74.505424976465093 ], [ -95.77719588373472, 74.550743581709469 ], [ -95.85073287384462, 74.582472098544827 ], [ -95.510211620620396, 74.636788506866822 ], [ -95.306656925355398, 74.505424976465093 ] ] ], [ [ [ -97.355497335543703, 74.526299000698856 ], [ -97.65609976400296, 74.465687426121093 ], [ -97.749994420905082, 74.510544605566622 ], [ -97.416526390606151, 74.626560234992269 ], [ -97.355497335543703, 74.526299000698856 ] ] ], [ [ [ -93.170870711069114, 74.161003576607698 ], [ -90.354613279418672, 73.868646387720787 ], [ -92.117940983403031, 72.753797712380191 ], [ -94.211325462673386, 72.756950788672327 ], [ -93.541620847282431, 72.437028901468295 ], [ -94.143759542127199, 72.000827712953537 ], [ -95.192942931759745, 72.027436600687338 ], [ -95.632917924129387, 73.695446918223126 ], [ -94.697596843527847, 73.663564592788163 ], [ -95.134138608227474, 73.881225733903761 ], [ -94.973523978077068, 74.041428376733762 ], [ -93.170870711069114, 74.161003576607698 ] ] ], [ [ [ -98.270378351888965, 73.868514551778247 ], [ -98.973926352359996, 73.812055809390159 ], [ -99.41699948937908, 73.895409084054194 ], [ -97.659148470173946, 74.071629793901479 ], [ -98.270378351888965, 73.868514551778247 ] ] ], [ [ [ -100.00190063473816, 73.945902250042877 ], [ -99.157947355473596, 73.731569966476115 ], [ -97.111743664135872, 73.790324851529931 ], [ -97.625898346835243, 73.502285289760835 ], [ -97.272506609721617, 73.386840949419479 ], [ -98.430910584575273, 72.958077505329101 ], [ -96.542113515453082, 72.698712261060081 ], [ -96.472866686639648, 72.4343921826177 ], [ -96.801451293900712, 72.32240853576775 ], [ -96.613425774032791, 71.833857491740361 ], [ -97.582282622515194, 71.629687562076896 ], [ -98.322700741580221, 71.852358469008635 ], [ -98.198626640167475, 71.440854547061008 ], [ -99.167120939807916, 71.367169241515768 ], [ -100.5944757305853, 72.152340169905159 ], [ -102.7087397272537, 72.764498396382123 ], [ -102.20398934178806, 73.077301142689606 ], [ -101.27319462854669, 72.721662701388709 ], [ -100.12814453603836, 72.906716419385447 ], [ -100.53639101157268, 73.197854125803957 ], [ -99.825141594792214, 73.213850220164176 ], [ -101.52320501406039, 73.486366099700462 ], [ -100.52166383815931, 73.449320199849751 ], [ -100.9850946419706, 73.76531996776356 ], [ -100.00190063473816, 73.945902250042877 ] ] ], [ [ [ -86.589356788129294, 71.010805702530945 ], [ -84.823710968822112, 71.028636513758016 ], [ -84.699400661345678, 71.631467347301054 ], [ -85.911599193915507, 71.986512526860565 ], [ -85.321864063997026, 72.233133630018415 ], [ -84.28374390720839, 72.044487382587761 ], [ -85.64990484799516, 72.722179058830278 ], [ -85.262131395702781, 72.954001577439243 ], [ -84.256629648361553, 72.79674327065905 ], [ -85.454754694066409, 73.105459102748114 ], [ -83.410352760609911, 73.631682267353199 ], [ -81.605353912457787, 73.696018207307418 ], [ -80.277260600076303, 72.770189314567972 ], [ -81.229346818036134, 72.311707851765789 ], [ -80.611453728059132, 72.45082773011967 ], [ -80.925135380650133, 71.907652660571074 ], [ -79.884367518682367, 72.177202231400429 ], [ -80.108928074123682, 72.332175381843456 ], [ -79.831292565485853, 72.446279390102404 ], [ -78.585091346072048, 71.880626292352588 ], [ -78.862748827366957, 72.100814289033337 ], [ -78.699250285973733, 72.3514014567956 ], [ -77.516506100230629, 72.177795493141815 ], [ -78.422416779319619, 72.571534521833655 ], [ -76.893493381152069, 72.720673931819732 ], [ -75.07145473742807, 72.322847988909501 ], [ -75.922807308967094, 71.717226627916261 ], [ -74.266343622731142, 72.037675858890424 ], [ -75.204806793296299, 71.709107731122174 ], [ -74.700754039693209, 71.675577456405591 ], [ -74.996220359558109, 71.21810673582948 ], [ -73.866595072325694, 71.771048651453782 ], [ -74.197272575174409, 71.40417119605226 ], [ -73.712863377008176, 71.587620910081569 ], [ -73.180619704360936, 71.282882128925451 ], [ -73.278211260818139, 71.538006650376445 ], [ -72.901929508182874, 71.677774722114407 ], [ -71.640688004992199, 71.516253719859122 ], [ -71.186557128293487, 71.278696337750148 ], [ -72.632720513538359, 70.830772736678853 ], [ -70.672627665329259, 71.052202188485097 ], [ -71.890176539900054, 70.431540543714988 ], [ -71.275854006699888, 70.500292987743933 ], [ -71.429431893417799, 70.12775757314219 ], [ -70.08470527962055, 70.829531281553358 ], [ -68.49576356861661, 70.610266136470329 ], [ -70.057733843044787, 70.042624513253998 ], [ -68.778222075485289, 70.203541267439363 ], [ -69.008319740512817, 69.978936766683887 ], [ -68.744065580041706, 69.941418454705797 ], [ -67.855337518795665, 70.28178589933043 ], [ -67.192763030629834, 69.756826162507906 ], [ -68.02038513251361, 69.770053702075018 ], [ -69.250777025152459, 69.511929912931492 ], [ -66.676284739443375, 69.25843136810505 ], [ -66.802891189585523, 69.152753873839401 ], [ -67.93846008056029, 69.24812619193068 ], [ -69.040608560103919, 69.098008998704159 ], [ -67.751703481639211, 69.038682824566052 ], [ -67.883187861654946, 68.78396479727121 ], [ -69.319101002368186, 68.856990923103808 ], [ -66.713901928378348, 68.445717714055604 ], [ -67.032955895627424, 68.326087582538946 ], [ -66.923092610186472, 68.065711596043883 ], [ -66.212387016668956, 68.280428401109674 ], [ -66.526475163416094, 67.85115958590626 ], [ -65.942376020040726, 68.070941088430885 ], [ -65.401277366586953, 67.674839999102062 ], [ -64.976908453914191, 68.043387376442297 ], [ -65.021117439975626, 67.787570716293033 ], [ -63.850183557417424, 67.566086332844066 ], [ -64.589233878578696, 67.315532124067431 ], [ -63.040128594875654, 67.235013322167759 ], [ -63.701527545887259, 66.822377808380082 ], [ -62.123594136084506, 67.046707650921974 ], [ -61.299718372234267, 66.648749872069203 ], [ -62.123330464199455, 66.643058953883383 ], [ -61.576420042945841, 66.412488876728446 ], [ -61.862679819490793, 66.312820904176419 ], [ -62.553126623173, 66.40685289018532 ], [ -61.991615371284297, 66.035295258824021 ], [ -62.624131264553483, 66.016255951457111 ], [ -62.382003569770177, 65.833289635883744 ], [ -62.658913980724094, 65.639919267179124 ], [ -63.458751657719844, 65.853032068277486 ], [ -63.60660566726628, 64.928082081821572 ], [ -64.345732892727369, 65.172407042313694 ], [ -64.269663553888066, 65.40075788110272 ], [ -64.555077383135114, 65.116596493309714 ], [ -65.401606956443274, 65.763998861756136 ], [ -64.445367906293768, 66.317116558637167 ], [ -65.825745156216612, 65.996930999548056 ], [ -65.656346956395211, 66.204748390288159 ], [ -66.986340903614831, 66.627513298993478 ], [ -67.307306492030563, 66.569736197180077 ], [ -67.22537045374871, 66.310272075954174 ], [ -67.883396601897289, 66.467420519448922 ], [ -67.350460790551779, 65.929749600500912 ], [ -68.459893205920139, 66.249286966205915 ], [ -68.748921537258198, 66.200046241671288 ], [ -68.217172249395446, 66.078856051501361 ], [ -67.936757199635949, 65.5649156022086 ], [ -67.117968105901625, 65.440396554489809 ], [ -67.33650815330077, 65.346606267708893 ], [ -66.697422435562217, 64.815164597045367 ], [ -65.431940209553517, 64.726439007723258 ], [ -65.529323025768377, 64.504800815674685 ], [ -65.074631846313906, 64.436685578701287 ], [ -65.580332549198616, 64.293852321299511 ], [ -64.41094773896512, 63.706347416075459 ], [ -64.66465502403392, 63.245339097708154 ], [ -65.191855971879406, 63.764278326488494 ], [ -64.672378413000416, 62.921945530684155 ], [ -65.162786146551738, 62.932591283043394 ], [ -65.108469738229729, 62.626457238162175 ], [ -67.893262324929879, 63.733736333135909 ], [ -67.722578724668821, 63.422746331038184 ], [ -68.911090732897577, 63.703216312440389 ], [ -65.980201949218042, 62.208866890201108 ], [ -66.323744442791906, 61.870279230800662 ], [ -71.347265142236509, 63.066130106496871 ], [ -71.992239532074706, 63.416176506568831 ], [ -71.380828375938719, 63.580301268689055 ], [ -72.498467578729517, 63.823494637341156 ], [ -73.454552820279403, 64.399277130008642 ], [ -73.27127888750681, 64.582518103795593 ], [ -74.064799425589712, 64.424677521602575 ], [ -74.681407115127058, 64.830666306621083 ], [ -74.919447895691974, 64.765506392026055 ], [ -74.694711558993959, 64.496583041923685 ], [ -76.856150850430694, 64.237624291810818 ], [ -78.174554221036288, 64.617740273107984 ], [ -77.326695301974297, 65.453107736615351 ], [ -75.828335869816414, 65.227031067834957 ], [ -75.452109048823871, 64.841619676179533 ], [ -75.79867278274736, 65.29750836544531 ], [ -73.550804044654228, 65.485253733935366 ], [ -74.416383911657846, 66.167076269710464 ], [ -72.220030068107974, 67.254294328762654 ], [ -73.284484454416813, 68.3569701520764 ], [ -73.82049643775467, 68.362957701132927 ], [ -73.851554788548825, 68.701391551933796 ], [ -74.422426392357096, 68.579948676207351 ], [ -74.910406147300179, 68.823142044859452 ], [ -74.854859270181237, 69.06584102872705 ], [ -76.585085166262232, 68.6987548330832 ], [ -76.55723482340295, 69.009481163295845 ], [ -75.64773161488003, 69.212574432761983 ], [ -79.066380426931758, 70.603542503401343 ], [ -79.40522077188875, 70.400712905820257 ], [ -78.809838669098596, 70.178558356330086 ], [ -79.092890437708661, 69.92534545604579 ], [ -81.651935945484752, 70.094611819924665 ], [ -80.921718632472931, 69.730887440815309 ], [ -85.780026923271421, 70.036658936854565 ], [ -86.322015469337273, 70.145434575769656 ], [ -86.396865325708191, 70.465312517659527 ], [ -87.900706935809581, 70.251892099361925 ], [ -89.455909631854595, 71.061705362675724 ], [ -87.14010143804478, 71.01160770451466 ], [ -89.693324191692497, 71.423496147961345 ], [ -90.025177231695437, 71.948785474640147 ], [ -88.705202816108027, 73.40327649692145 ], [ -86.768752546925811, 73.833995507492716 ], [ -85.009324989574608, 73.77862441163046 ], [ -86.667777201277033, 72.762564802558359 ], [ -86.218480309137718, 71.899127269620834 ], [ -85.023409462768143, 71.353238576921854 ], [ -86.589356788129294, 71.010805702530945 ] ] ], [ [ [ -79.53728742731731, 73.65446791275366 ], [ -77.20654881301607, 73.499549693953355 ], [ -76.089997256751133, 72.881184191848973 ], [ -79.500516185680226, 72.755973005431912 ], [ -80.77640246482018, 73.334183476707636 ], [ -80.860722536396111, 73.670540911413667 ], [ -79.53728742731731, 73.65446791275366 ] ] ], [ [ [ -105.28891743798435, 72.91994395895253 ], [ -106.18002403936019, 73.304102909153897 ], [ -106.9496657923525, 73.510371227569294 ], [ -105.51231344259999, 73.76575942090534 ], [ -104.58751177157941, 73.578090956715101 ], [ -105.28891743798435, 72.91994395895253 ] ] ], [ [ [ -107.49627408957114, 73.288392459335853 ], [ -105.62416525350741, 72.92751353931942 ], [ -104.38592362912381, 71.576953185065264 ], [ -104.51480424927459, 71.064265177226503 ], [ -101.09077762940053, 70.135689702351044 ], [ -100.93512332658779, 69.71533079959687 ], [ -103.43476575592595, 69.667683092701139 ], [ -103.04894787011442, 69.471785868431368 ], [ -103.1202106902157, 69.20460934456753 ], [ -102.15140877337602, 69.487694072163208 ], [ -101.78928290506983, 69.18161495892474 ], [ -102.89505687303301, 68.823658402301021 ], [ -105.10587971127546, 68.920393025131773 ], [ -106.65906641603264, 69.439584939468631 ], [ -107.43989774464711, 69.002142295828378 ], [ -109.4720993602554, 68.676683299038103 ], [ -112.86426562735159, 68.477116641034627 ], [ -113.55482229431922, 68.767584181411962 ], [ -113.6941399265869, 69.195029266077057 ], [ -116.10153564830458, 69.33715939845203 ], [ -117.07530338564618, 69.889013667550472 ], [ -110.0000254057848, 70.001151123000056 ], [ -110.0018326568303, 72.98185192029851 ], [ -108.7549832440324, 72.55107797808455 ], [ -107.81284514656925, 71.626171936942796 ], [ -107.30600186551595, 71.89467780656048 ], [ -108.23741730632007, 73.149898801708986 ], [ -107.49627408957114, 73.288392459335853 ] ] ], [ [ [ -96.782329589069718, 72.936632192011018 ], [ -97.092775767904484, 72.996936149389541 ], [ -97.069210093177404, 73.130156369315245 ], [ -96.5984898603771, 73.073829462869668 ], [ -96.782329589069718, 72.936632192011018 ] ] ], [ [ [ -94.308345730046284, 71.764874334811992 ], [ -93.031294900080667, 71.335693410236928 ], [ -92.981449927476106, 70.852261995311096 ], [ -91.564076216181022, 70.178250739130874 ], [ -92.320506909099066, 70.235346688574538 ], [ -92.511866779680119, 70.103840335901708 ], [ -91.976700743640151, 70.038669434978146 ], [ -92.887785983473421, 69.668199450142708 ], [ -90.415565430181317, 69.456998270211017 ], [ -91.237210969337099, 69.285534640623325 ], [ -90.479022463852004, 68.881171832229342 ], [ -90.573636725273758, 68.474688662426388 ], [ -90.247760247998798, 68.267409601784948 ], [ -89.279557086064784, 69.255465059398148 ], [ -88.041331941173993, 68.811716263173594 ], [ -87.827911522876406, 68.299962093261087 ], [ -88.346949628613629, 68.28828362601871 ], [ -88.313836834381732, 67.95032218734525 ], [ -87.359388555784918, 67.177247206682921 ], [ -86.560814306571729, 67.482106837453017 ], [ -85.689774234281685, 68.670948435538094 ], [ -84.867579378698693, 68.773319044911972 ], [ -85.106663860475294, 68.844071000735937 ], [ -84.862207064040632, 69.073970911849671 ], [ -85.386771293035537, 69.231899384671038 ], [ -85.415137993336401, 69.849539789091523 ], [ -82.618359322194635, 69.691040027185863 ], [ -82.374188170302119, 69.641799302651236 ], [ -82.754842481697921, 69.494362773589472 ], [ -82.227564629552617, 69.248895234928767 ], [ -81.377849020966664, 69.185646941500409 ], [ -81.957938154423431, 68.883654742480331 ], [ -81.281542864949131, 68.657204538529442 ], [ -82.552683050158024, 68.446464784396596 ], [ -81.301054584443449, 67.356972555335773 ], [ -83.406452613976754, 66.371246199373928 ], [ -84.538450948174685, 66.972813605134405 ], [ -84.845771516538662, 67.028723031095296 ], [ -85.113717083400601, 66.906928592855451 ], [ -84.223066414659343, 66.682488887028143 ], [ -83.869064936311517, 66.213581398437611 ], [ -86.708162945005128, 66.523066273524762 ], [ -85.958730543369683, 66.119066013972741 ], [ -87.291460086396782, 65.354824041459864 ], [ -89.749398412581556, 65.936022794099586 ], [ -91.411520058017715, 65.959357755927243 ], [ -87.002695426943774, 65.108587459801043 ], [ -88.105623935814037, 64.183318869817356 ], [ -90.041656724511583, 64.140889668980066 ], [ -89.855724100231313, 63.956978529151911 ], [ -90.168186270353928, 63.9787534323263 ], [ -90.245288324076384, 63.641901612835795 ], [ -93.696341312168926, 64.147140889921644 ], [ -93.559814207351451, 63.865297617451432 ], [ -92.156876531763317, 63.691691653797648 ], [ -92.465076006410811, 63.555087644680356 ], [ -90.970045431801793, 63.442796380631165 ], [ -90.698595226134287, 63.063855936488238 ], [ -92.361282667490471, 62.819366181067949 ], [ -91.935831601456115, 62.592410606004023 ], [ -92.551401082946043, 62.546729451917685 ], [ -92.767974577535796, 62.379967970946865 ], [ -92.527961750997207, 62.168426214830305 ], [ -93.205362289533312, 62.364927687169995 ], [ -92.905539890400675, 62.215118111142715 ], [ -93.581775878111088, 61.942063901507765 ], [ -93.312023060203657, 61.767293387028303 ], [ -94.761702070582643, 60.498218631585701 ], [ -94.771886397143021, 60.001768417335114 ], [ -102.00164863582719, 60.001087264965378 ], [ -101.99914375291914, 64.228428734819403 ], [ -109.21511265611619, 64.81304423563634 ], [ -110.66946634929069, 65.497140941420071 ], [ -112.50390306477671, 65.502337474821417 ], [ -120.6779512281544, 68.002847824114582 ], [ -120.68185137478756, 69.566938459951785 ], [ -117.22694767854031, 68.913416706506268 ], [ -115.44230100401613, 68.940904500523601 ], [ -113.96440910193591, 68.399080749385917 ], [ -115.43450071074983, 67.902366863250279 ], [ -115.1332226230851, 67.819167397185851 ], [ -112.50305162431455, 67.681937167341545 ], [ -110.07394691739374, 67.99292716943927 ], [ -107.98872528023166, 67.256414690171653 ], [ -108.49605745290516, 67.092289928051429 ], [ -107.25949124362452, 66.398536239477437 ], [ -107.74600432370697, 66.961497686733964 ], [ -107.15650539985218, 66.88175891416094 ], [ -107.95839202712142, 67.818596108101559 ], [ -105.75020590772955, 68.592297309490931 ], [ -107.73416655470071, 68.173718191960887 ], [ -108.71811312543841, 68.297490169338658 ], [ -108.34573151943631, 68.597801460091517 ], [ -106.16447289130602, 68.919876667690204 ], [ -104.48682207047278, 68.063184740478761 ], [ -103.47414625059227, 68.115018238549794 ], [ -102.32036202689139, 67.735660313922182 ], [ -98.412129455929147, 67.807181312744234 ], [ -98.631542916447543, 68.072534106069782 ], [ -97.607397369566996, 67.631070466182393 ], [ -97.155408826934377, 67.726409825288044 ], [ -98.192529227825503, 67.922988201927552 ], [ -98.65048334685757, 68.363528990217219 ], [ -97.828546669995362, 68.532773381439 ], [ -96.430646226044686, 68.310607845620325 ], [ -96.722075070169623, 68.03879509111087 ], [ -95.970286101061461, 68.249139337416096 ], [ -96.36912278619775, 67.509759426398489 ], [ -95.418898750926147, 67.013243294176675 ], [ -96.422532822414865, 67.051772348380808 ], [ -95.787534018894718, 66.616812614991545 ], [ -96.036874238367233, 66.937492558865131 ], [ -95.399650703316894, 66.949456670649653 ], [ -95.258751039738868, 67.262556047827815 ], [ -95.650485063471393, 67.73744009914634 ], [ -95.460707224200704, 68.021381760368456 ], [ -93.448918207027347, 68.618917183553265 ], [ -93.852457040780507, 69.000340537947153 ], [ -94.60042276755533, 68.803245803866076 ], [ -94.083631366005363, 69.123090786770319 ], [ -94.254732446751106, 69.313758518653117 ], [ -93.430983025679112, 69.375073218257711 ], [ -96.050151216412772, 69.831137688780188 ], [ -96.545623647422914, 70.327236340517345 ], [ -95.886339564656041, 70.694289577175567 ], [ -96.358867048501835, 70.678656031657312 ], [ -96.524749623189138, 71.12703007219892 ], [ -95.564236891235979, 71.336781056762788 ], [ -95.406264473100435, 71.491655330248904 ], [ -95.872331995762309, 71.573151915388991 ], [ -95.201237609810534, 71.903730541280822 ], [ -94.308345730046284, 71.764874334811992 ] ] ], [ [ [ -100.30834229681861, 70.49579957936939 ], [ -100.6206726309987, 70.546907979756526 ], [ -100.67829592421248, 70.646180444480962 ], [ -100.27611939519879, 70.594610618294979 ], [ -100.30834229681861, 70.49579957936939 ] ] ], [ [ [ -86.913035999695424, 70.113244633135452 ], [ -86.515232029442274, 70.017048340403363 ], [ -87.323243534874848, 70.080120852574993 ], [ -87.107263302026482, 70.146676030895122 ], [ -86.913035999695424, 70.113244633135452 ] ] ], [ [ [ -97.439471337770499, 69.642700181591863 ], [ -96.2999583548484, 69.344399388962586 ], [ -95.267770815473568, 68.82608638090926 ], [ -96.598824943397702, 68.460834902132262 ], [ -99.564046003777534, 69.034134484548787 ], [ -98.503541202580294, 69.308276340709597 ], [ -98.54601984189604, 69.572915022679751 ], [ -98.041346360730202, 69.456635721369054 ], [ -98.304512874675467, 69.669287096668569 ], [ -98.080754321217881, 69.833049309946858 ], [ -97.439471337770499, 69.642700181591863 ] ] ], [ [ [ -79.430654122468326, 69.787785636345177 ], [ -79.977850188264071, 69.509688701908487 ], [ -80.794782592474448, 69.689238269304639 ], [ -80.424235703339207, 69.797596427735044 ], [ -79.430654122468326, 69.787785636345177 ] ] ], [ [ [ -78.029084244783931, 69.714891346455119 ], [ -78.039982682699673, 69.608411850205727 ], [ -78.848202928374576, 69.482783183304008 ], [ -78.578554480588309, 69.638800034958706 ], [ -78.029084244783931, 69.714891346455119 ] ] ], [ [ [ -67.914707638247961, 69.540944806616437 ], [ -68.202340705860919, 69.580407698746825 ], [ -68.221412972213457, 69.616728500913609 ], [ -67.754614858703405, 69.631461167491238 ], [ -67.914707638247961, 69.540944806616437 ] ] ], [ [ [ -95.513672314111787, 69.573640120363677 ], [ -95.496231517548026, 69.350079320819873 ], [ -95.985947112401078, 69.391915259915805 ], [ -95.875820155075061, 69.605983871597488 ], [ -95.513672314111787, 69.573640120363677 ] ] ], [ [ [ -101.17172489811342, 69.397078834331523 ], [ -101.2685144525869, 69.390596900490493 ], [ -101.35130193133094, 69.559215070985289 ], [ -101.00062381736768, 69.461909159070217 ], [ -101.17172489811342, 69.397078834331523 ] ] ], [ [ [ -76.995347633084378, 69.143734098104687 ], [ -77.321938221714703, 69.193579070709234 ], [ -77.340911611110357, 69.403879371700327 ], [ -76.668855921410966, 69.36615231947988 ], [ -76.995347633084378, 69.143734098104687 ] ] ], [ [ [ -90.199815910232374, 69.419073464076803 ], [ -90.295462886537265, 69.257783174720942 ], [ -90.492041263176759, 69.369876684856337 ], [ -90.322071774271066, 69.428730446867064 ], [ -90.199815910232374, 69.419073464076803 ] ] ], [ [ [ -79.210663879701372, 68.845466264461038 ], [ -79.405770088315947, 68.923051716639435 ], [ -78.650207315352901, 69.351221898988456 ], [ -78.228969506315195, 69.303991672577411 ], [ -79.210663879701372, 68.845466264461038 ] ] ], [ [ [ -90.492557620618328, 69.221099823712194 ], [ -90.574416754600392, 69.209421356469818 ], [ -90.765699720881628, 69.335972874969258 ], [ -90.5996853102518, 69.367811255090061 ], [ -90.492557620618328, 69.221099823712194 ] ] ], [ [ [ -99.994693603213236, 69.013513145871514 ], [ -100.14130066446992, 68.96989742155148 ], [ -100.24736268023462, 69.052789270416667 ], [ -100.15313294031191, 69.129473843654438 ], [ -99.994693603213236, 69.013513145871514 ] ] ], [ [ [ -100.2172381673667, 68.806706497357482 ], [ -100.59654116035159, 68.76639765792919 ], [ -100.61158144412846, 68.990211143029512 ], [ -100.32994141873631, 68.997550010496951 ], [ -100.2172381673667, 68.806706497357482 ] ] ], [ [ [ -101.84592292187891, 68.586309760434375 ], [ -101.88720954454762, 68.584958442023463 ], [ -102.30816720220744, 68.681978709396361 ], [ -101.82835028937264, 68.798950149405357 ], [ -101.84592292187891, 68.586309760434375 ] ] ], [ [ [ -74.880852923516557, 68.348697446682706 ], [ -75.310154697705627, 68.474479922184031 ], [ -75.396166663877338, 68.588836615999526 ], [ -74.983630027046573, 68.647591501053341 ], [ -74.880852923516557, 68.348697446682706 ] ] ], [ [ [ -104.54069353248875, 68.405903259411787 ], [ -104.85113971132353, 68.45395746046367 ], [ -105.05136005587538, 68.559019720330866 ], [ -104.60200823209335, 68.561502630581828 ], [ -104.54069353248875, 68.405903259411787 ] ] ], [ [ [ -78.982719535068483, 68.192845389956148 ], [ -79.174046446663894, 68.234977959922759 ], [ -79.153458066972263, 68.335261166873266 ], [ -78.828515427623557, 68.268189631111568 ], [ -78.982719535068483, 68.192845389956148 ] ] ], [ [ [ -75.675867602281457, 68.32249505310503 ], [ -75.078145411511429, 68.173146902876596 ], [ -75.201972320531922, 67.459189356110016 ], [ -76.693948695805673, 67.235815324151474 ], [ -77.224192856657879, 67.508177395088154 ], [ -76.740245084290493, 68.231231621889236 ], [ -75.675867602281457, 68.32249505310503 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Ontario\", \"type\": \"Province\", \"postal\": \"ON\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -93.377886099825503, 48.616537270132397 ], [ -94.620884804468702, 48.742605390175896 ], [ -95.155298277003396, 49.369672064487219 ], [ -95.153826108978492, 52.822356522368551 ], [ -88.948495061717026, 56.851306871373311 ], [ -87.482402476493149, 56.02131172252399 ], [ -85.676678530657128, 55.601051696726728 ], [ -85.217999313941149, 55.348970388282453 ], [ -85.365271048074746, 55.079277995182025 ], [ -83.910604244536742, 55.31466008423925 ], [ -82.393260436654671, 55.067797281853444 ], [ -82.291559993321982, 53.030712243207319 ], [ -81.599410308715434, 52.432616517266752 ], [ -81.827892983446986, 52.22420586478529 ], [ -80.657936884129199, 51.758341589201478 ], [ -80.443296983363211, 51.388596702049938 ], [ -80.851230348534017, 51.125023693948549 ], [ -80.26565903713373, 51.316350605543988 ], [ -79.51955549304715, 50.918524662633757 ], [ -79.3649448914461, 47.021959572585331 ], [ -78.780999556670352, 46.393442702906185 ], [ -76.823708222239986, 45.879678034870125 ], [ -76.553125936527465, 45.542079145038628 ], [ -74.577223761543408, 45.632199998085838 ], [ -74.340446408761068, 45.214444855196632 ], [ -76.151158147756107, 44.303941890776173 ], [ -76.81996188420645, 43.628788056427368 ], [ -78.845566209523994, 43.583337615240453 ], [ -79.171849180955078, 43.466574915473785 ], [ -79.036695367205624, 42.802319519040708 ], [ -82.690012156959213, 41.675177142059283 ], [ -83.149669156915621, 42.141920323926598 ], [ -82.54532221003349, 42.624681572811227 ], [ -82.137850270661545, 43.570879118671428 ], [ -82.551079046190594, 45.347357457923096 ], [ -83.977785643583886, 46.084913638402355 ], [ -84.125222172645636, 46.527234211916181 ], [ -84.561752951016715, 46.45737214870428 ], [ -84.875972933706379, 46.899901462460434 ], [ -88.378194746993046, 48.303097316769367 ], [ -89.455645959969544, 47.996216201547156 ], [ -91.518307171466319, 48.05831093047837 ], [ -93.377886099825503, 48.616537270132397 ] ] ], [ [ [ -79.520357495030865, 51.22588917631191 ], [ -79.52046735831631, 50.965985601944226 ], [ -79.737458333390734, 51.186283461910421 ], [ -79.521346264599828, 51.544712430661548 ], [ -79.520357495030865, 51.22588917631191 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Prince Edward Island\", \"type\": \"Province\", \"postal\": \"PE\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -63.811269981714233, 46.468688067104694 ], [ -63.681433550980117, 46.561918051129879 ], [ -62.023728409618684, 46.421556717650532 ], [ -62.804889328089487, 45.973215636094551 ], [ -62.978473319086191, 46.316351635512262 ], [ -63.568878615045861, 46.20922394587879 ], [ -64.403147445698821, 46.691622645921484 ], [ -63.993577117574944, 47.061576273315353 ], [ -63.811269981714233, 46.468688067104694 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Qu�bec\", \"type\": \"Province\", \"postal\": \"QC\", \"admin\": \"Canada\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -77.682674319460062, 46.186669013377781 ], [ -78.780999556670352, 46.393442702906185 ], [ -79.546713697208148, 47.407447868540544 ], [ -79.521346264599828, 51.544712430661548 ], [ -78.90316753008068, 51.200291030804152 ], [ -78.73136332430812, 51.497482204250474 ], [ -78.981631888542609, 51.774568396461092 ], [ -78.448102815455726, 52.261361627921417 ], [ -79.100361141118654, 53.656625353021496 ], [ -78.996023978935384, 54.002496948246687 ], [ -79.713936603977828, 54.654964014151972 ], [ -77.775278082758248, 55.291248218111775 ], [ -76.546380330801384, 56.358778776412976 ], [ -76.89091159394421, 57.758129415731474 ], [ -78.515097446917608, 58.682365290832024 ], [ -77.726158207837599, 59.675869967403088 ], [ -77.34907445321862, 59.578948576987074 ], [ -77.50355321887713, 60.542713262189267 ], [ -77.790801764991045, 60.639865365504704 ], [ -77.589576171377402, 60.808593399284916 ], [ -78.181376731062173, 60.81912928835871 ], [ -77.514363766164522, 61.556289961010407 ], [ -78.021382828474515, 61.832090752781369 ], [ -78.133421406967202, 62.282299510189858 ], [ -77.603968261770163, 62.531381550941575 ], [ -74.632572884748555, 62.115691837818645 ], [ -73.705052097413315, 62.473143023329328 ], [ -72.686949031232018, 62.124557804953724 ], [ -72.771620665321365, 61.840407403489252 ], [ -72.226127480449946, 61.8315743953398 ], [ -72.215866249589766, 61.587271407504772 ], [ -71.638303971698136, 61.617165207473249 ], [ -71.854394067831947, 61.439812905785914 ], [ -71.42271924667736, 61.158958402884679 ], [ -69.992442092507233, 60.856493791737194 ], [ -69.503352718381208, 61.040404931565348 ], [ -69.67375067410012, 60.07587120336504 ], [ -70.654829813087829, 60.026234971002822 ], [ -69.733933781864678, 59.917997662186394 ], [ -69.681891543551302, 59.341731771062967 ], [ -69.34402898183474, 59.303103839901922 ], [ -69.531664487039336, 58.869220766709986 ], [ -70.15434761626156, 58.760598936394501 ], [ -68.381143202916064, 58.743493222851356 ], [ -68.356544813305831, 58.163217321809327 ], [ -69.040795327689167, 57.902511745457957 ], [ -68.41359681743532, 58.051750032400946 ], [ -68.021033325897704, 58.485314502065108 ], [ -68.063847048234052, 58.138981481041071 ], [ -67.755933218128689, 58.404597946251641 ], [ -67.678270861650489, 57.991138457823183 ], [ -66.362427305595659, 58.791162902404182 ], [ -66.002405319205664, 58.431217820314004 ], [ -66.043043748490277, 58.820650208216534 ], [ -65.38354543231678, 59.060218088449062 ], [ -65.700017612357982, 59.213312576711047 ], [ -65.475072535417638, 59.470326746671617 ], [ -65.038245126175866, 59.387896323605247 ], [ -65.433412377578435, 59.776504736866997 ], [ -65.054471933435494, 59.752785253540281 ], [ -64.931227299827839, 60.25198204992688 ], [ -64.614271721330695, 60.30597985472113 ], [ -64.846687501681032, 60.25076256745848 ], [ -64.622302727496432, 60.141316762502214 ], [ -64.887270999322908, 60.035408555337142 ], [ -64.661468988756127, 59.921513287320494 ], [ -64.818024170509489, 59.54024374152624 ], [ -64.385294661814655, 59.514766445632461 ], [ -64.324364483709104, 59.019964180663521 ], [ -64.848313478305556, 58.949223211168089 ], [ -63.4967094228397, 58.753446836512296 ], [ -64.070811007239939, 58.641693902561769 ], [ -63.848008264365689, 58.459738329214474 ], [ -64.394589095762967, 58.144331823042052 ], [ -63.601255325265313, 57.723061055018718 ], [ -64.121479954485309, 56.299408656960679 ], [ -63.111825374954407, 55.339829762933761 ], [ -63.534018994575447, 55.140350995558634 ], [ -63.698824909065422, 54.615193504822344 ], [ -65.675803744246807, 54.744931058599576 ], [ -66.773986159186009, 55.328250172648296 ], [ -66.724448803780689, 54.747974271606267 ], [ -67.426442238762732, 55.05886539674708 ], [ -67.150180021192924, 54.616665672847262 ], [ -67.601421493484537, 54.552791158691889 ], [ -67.757251577553987, 54.033654175997754 ], [ -66.944439046547643, 53.355138525114427 ], [ -67.029473229478938, 52.720370434493702 ], [ -66.300211727050453, 52.896876788883134 ], [ -66.37886285309763, 52.16451714180522 ], [ -65.137133069401273, 52.154695364086791 ], [ -64.506342029713508, 51.608894562016133 ], [ -64.13067551147671, 52.1866875528072 ], [ -64.178477026972075, 52.815325272100324 ], [ -63.722544392392123, 53.109187587997781 ], [ -63.409686714441918, 52.688718821958162 ], [ -64.059418184539709, 52.485120181378988 ], [ -63.756898641749501, 52.010521774602637 ], [ -57.101029247223238, 52.001117477368894 ], [ -57.100128368282626, 51.44334157718518 ], [ -58.510377445516852, 51.295059100825512 ], [ -60.080202944854065, 50.254576883399892 ], [ -66.495526675907371, 50.211873024348989 ], [ -67.372004980826745, 49.348457464068559 ], [ -68.281925669834337, 49.197153747359295 ], [ -69.67388251004266, 48.199177635070754 ], [ -71.018246574997946, 48.455598543289938 ], [ -69.774989691633962, 48.098103412465093 ], [ -70.705861309175148, 47.13980991887783 ], [ -72.981020087371817, 46.209740303320388 ], [ -73.476591395338858, 45.73824004119345 ], [ -74.315100948809842, 45.531070843837455 ], [ -73.973854597901692, 45.345138219557185 ], [ -74.340446408761068, 45.214444855196632 ], [ -74.577223761543408, 45.632199998085838 ], [ -76.41344575541784, 45.496343059309567 ], [ -77.682674319460062, 46.186669013377781 ] ] ], [ [ [ -61.801134406986776, 49.093904231701885 ], [ -63.041523858600755, 49.224949158575839 ], [ -64.485204333594666, 49.886985316643006 ], [ -62.858535570370293, 49.705491169094557 ], [ -61.801134406986776, 49.093904231701885 ] ] ], [ [ [ -64.216226051849574, 48.873661303378384 ], [ -64.513735828823684, 48.841097825573712 ], [ -64.348831037376812, 48.423199860413405 ], [ -65.259421892425593, 48.021254044299155 ], [ -68.377913222324096, 47.929375378684881 ], [ -68.429636857109699, 47.528187619240157 ], [ -69.242877854929262, 47.4629947456595 ], [ -70.689788310515127, 45.428337685621614 ], [ -71.517520275684348, 45.007561302382754 ], [ -74.708872936487296, 45.003869895991954 ], [ -73.558087980478959, 45.425085732372565 ], [ -73.159558912541911, 46.01003082304581 ], [ -72.10928787638349, 46.551217367127947 ], [ -71.261176271764981, 46.756266203074944 ], [ -70.519489231753113, 47.032528420644752 ], [ -68.238211068557376, 48.626435952150615 ], [ -65.523390408354572, 49.266136904287663 ], [ -64.216226051849574, 48.873661303378384 ] ] ], [ [ [ -61.914095837077156, 47.284499865803582 ], [ -61.924686657793671, 47.42516881648217 ], [ -61.395519157138779, 47.637666383182051 ], [ -61.684086062677977, 47.498755245070527 ], [ -61.914095837077156, 47.284499865803582 ] ] ], [ [ [ -71.025739251065019, 46.872951998541765 ], [ -71.116640133438864, 46.864844088076239 ], [ -70.825799057891032, 46.995372657508625 ], [ -70.913469959672909, 46.919512058911636 ], [ -71.025739251065019, 46.872951998541765 ] ] ], [ [ [ -73.566514494472273, 45.469107950848752 ], [ -73.64356161655202, 45.449112832898493 ], [ -73.960539167706258, 45.441411416589091 ], [ -73.687430026428586, 45.561404096947683 ], [ -73.476075037897289, 45.704753711791028 ], [ -73.566514494472273, 45.469107950848752 ] ] ], [ [ [ -73.695340182980345, 45.585486129116333 ], [ -73.85770713253352, 45.573598921631628 ], [ -73.572348234929194, 45.694470508273781 ], [ -73.695340182980345, 45.585486129116333 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Saskatchewan\", \"type\": \"Province\", \"postal\": \"SK\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -109.89491370743917, 48.993082694652713 ], [ -110.0000254057848, 60.001087264965378 ], [ -102.00164863582719, 60.001087264965378 ], [ -102.00110481256425, 55.817526314359583 ], [ -101.36727055986977, 48.993137626295436 ], [ -109.89491370743917, 48.993082694652713 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"CA\", \"name\": \"Yukon\", \"type\": \"Territoire\", \"postal\": \"YT\", \"admin\": \"Canada\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -140.86002627782463, 69.635229478181884 ], [ -136.44375566257992, 68.895124469480351 ], [ -136.1693061892199, 67.015242805971695 ], [ -134.05558052265016, 67.004487190327012 ], [ -133.63519415407461, 66.565649282961687 ], [ -133.62163153148694, 65.974628752603536 ], [ -132.34274598465444, 65.978968352378445 ], [ -132.55484804352676, 65.85700911921046 ], [ -132.19468872802994, 65.597654861270001 ], [ -132.77323428232629, 65.203410461465154 ], [ -132.35258973502997, 65.057248346514513 ], [ -132.58810366002973, 64.794081832569248 ], [ -130.11791557751829, 63.793370124473256 ], [ -130.30260674667306, 63.703710697224892 ], [ -129.84493827218316, 63.485785884224214 ], [ -130.13360405467924, 63.276452380145031 ], [ -129.61177542149181, 63.058681375743959 ], [ -129.25471425064444, 62.152770696654983 ], [ -127.166597715911, 61.464521158681578 ], [ -126.85927714754703, 60.769416151696674 ], [ -124.582596762847, 60.952821920411822 ], [ -123.81915679231783, 60.001087264965378 ], [ -139.05651882377236, 60.00158164974988 ], [ -139.0792577772765, 60.343706906941549 ], [ -141.00213718412465, 60.300244991221092 ], [ -140.86002627782463, 69.635229478181884 ] ] ], [ [ [ -139.04313472902354, 69.576892073612726 ], [ -139.12574093334658, 69.539318829991913 ], [ -139.2913900485523, 69.597875961131962 ], [ -138.87885615830368, 69.589702132695152 ], [ -139.04313472902354, 69.576892073612726 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Alaska\", \"type\": \"State\", \"postal\": \"AK\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -155.97352294810878, 70.841978791793821 ], [ -154.94381831898491, 71.083051799036923 ], [ -154.19523461122949, 70.801109649609799 ], [ -152.30041428748299, 70.846790803696138 ], [ -152.47058427688461, 70.653618188905313 ], [ -151.76902480188005, 70.560135519323609 ], [ -151.94467422264304, 70.452106950749538 ], [ -143.21833233702515, 70.116232914499449 ], [ -141.00213718412465, 69.650786119400323 ], [ -141.00213718412465, 60.300244991221092 ], [ -139.0792577772765, 60.343706906941549 ], [ -139.18516873102374, 60.083572619674442 ], [ -137.43857869857629, 58.903124576597065 ], [ -135.47593702214496, 59.793280860553836 ], [ -133.40110295862132, 58.410882126178876 ], [ -131.82427367483723, 56.58998606062346 ], [ -130.09786552792531, 56.109290241505107 ], [ -130.03655082832071, 55.297916919538039 ], [ -130.84960505855503, 54.807608062943615 ], [ -131.03276912804216, 56.088097613743543 ], [ -131.78420104147264, 55.876533884969916 ], [ -132.11900940385397, 55.569784605690216 ], [ -131.55134580798057, 56.206804893662508 ], [ -133.46585088589595, 57.17217358283213 ], [ -133.64871283134812, 57.642300553891062 ], [ -133.11706242044227, 57.566198256066116 ], [ -133.53520208483053, 57.832957299445297 ], [ -133.19431828276436, 57.877704615605381 ], [ -134.03109199632536, 58.072162630835891 ], [ -133.87673408028081, 58.518185597069049 ], [ -134.20882881951172, 58.232958535407249 ], [ -134.77613535970744, 58.45384965711483 ], [ -135.36366773075284, 59.419427086526809 ], [ -135.09025097227595, 58.245845498789464 ], [ -135.8975373800246, 58.40020341483401 ], [ -136.04311172639814, 58.82162799145695 ], [ -135.82637893004448, 58.897961002181347 ], [ -136.15003067578928, 59.04807819540784 ], [ -136.2258418359078, 58.765454893611007 ], [ -136.98899616189482, 59.034488106998793 ], [ -136.06148636088813, 58.452707078946247 ], [ -136.60741899890132, 58.243988809265517 ], [ -139.799109489307, 59.546264249568395 ], [ -139.51230588949912, 59.953549421355092 ], [ -139.28671261917466, 59.610940765707483 ], [ -138.98807399694266, 59.835006936364294 ], [ -139.4314327785039, 60.012249374766185 ], [ -140.41984803837693, 59.710718601544954 ], [ -141.40872747063091, 60.117674183475316 ], [ -144.14721542909984, 60.016391220627298 ], [ -144.90133075327722, 60.335181515991309 ], [ -144.69113756898946, 60.669110972089101 ], [ -145.89889213166319, 60.478168581992719 ], [ -145.6749275845454, 60.651126352262423 ], [ -146.57047815581734, 60.729162243911105 ], [ -146.59910852800323, 61.053533594175519 ], [ -146.28488854531358, 61.112651028071298 ], [ -147.99075500443018, 60.948273580394556 ], [ -147.75185454365669, 61.218954743063961 ], [ -148.55614717687709, 60.826984513267746 ], [ -148.25673401848272, 60.675318247716518 ], [ -148.64012117910389, 60.48942956875041 ], [ -147.96408843847152, 60.484892215061706 ], [ -148.43070253097846, 59.989134139509417 ], [ -149.3952692181644, 60.105732044347889 ], [ -150.93450328567059, 59.249095048779168 ], [ -151.94950546062032, 59.265069170482263 ], [ -151.0464841859384, 59.771802588250125 ], [ -151.85320479776703, 59.7820857917674 ], [ -151.32179059292488, 60.742906140919786 ], [ -150.44125009302633, 61.023562889907225 ], [ -149.07508091249315, 60.876412005387635 ], [ -150.05326515390948, 61.171098295925901 ], [ -149.43353460048348, 61.500798015534201 ], [ -153.02502033319092, 60.295652705889665 ], [ -152.66010668401665, 59.997220077317877 ], [ -154.17833489134654, 59.155590406540369 ], [ -153.43760640850013, 58.754842100237397 ], [ -156.43587159855846, 57.359962896636375 ], [ -156.62898653512445, 57.009982414535671 ], [ -158.41440774581099, 56.435836884821242 ], [ -158.47610971349675, 56.075496294903473 ], [ -161.17801319791386, 55.388872733554621 ], [ -161.51695791299201, 55.618410095826391 ], [ -162.07397712979724, 55.139318280675496 ], [ -162.63037836562188, 55.246654710551297 ], [ -163.33529553728772, 54.839182771179367 ], [ -163.27881344895147, 55.121828045633293 ], [ -161.69733420161108, 55.907207714265013 ], [ -160.2917076221118, 55.805067817790587 ], [ -160.53905931611783, 56.006293411404215 ], [ -160.30204575727177, 56.314130337209775 ], [ -157.46190954053074, 57.506201915886805 ], [ -157.61086492951372, 58.050827180803253 ], [ -157.19370579494802, 58.194176795646598 ], [ -157.52360876163439, 58.421341110952852 ], [ -156.80889865136254, 59.134276929164827 ], [ -158.19093483689554, 58.614250053858626 ], [ -158.50318826677582, 58.850357240599777 ], [ -158.08052772819167, 58.977436102869319 ], [ -158.80947337367451, 58.973865546092497 ], [ -158.95070537369099, 58.40455400093748 ], [ -160.36312425081269, 59.051176340057282 ], [ -162.14492958611714, 58.64422075812692 ], [ -161.6443910843571, 59.109678539554579 ], [ -161.98103691018741, 59.146153150320998 ], [ -161.8286949854307, 59.588616546105868 ], [ -162.42134698557766, 60.283974238647289 ], [ -161.94659477020167, 60.684821421907145 ], [ -162.68497355203067, 60.268955927527514 ], [ -162.57074320099346, 59.989727401250803 ], [ -163.90688949219776, 59.806794044663064 ], [ -165.35382878689609, 60.541219121507282 ], [ -164.80515505991116, 60.892045550905863 ], [ -163.72999998960034, 60.589976447585968 ], [ -163.42094907449069, 60.757430067255086 ], [ -163.9065269433558, 60.853802141243875 ], [ -163.5869085534778, 60.902976947807247 ], [ -165.1148253292925, 60.932815816133001 ], [ -164.86897464242378, 61.1117501491307 ], [ -165.56588278058101, 61.102367824554022 ], [ -166.16809425985235, 61.65081633180381 ], [ -165.19451054351387, 62.473527544828386 ], [ -164.75787127514843, 62.496730670713504 ], [ -164.79965090931054, 62.918067356708093 ], [ -164.4090553438734, 63.21506077624062 ], [ -163.28785657063432, 63.046431619417291 ], [ -162.28280251618128, 63.529192868301948 ], [ -160.92670917221409, 63.660556398703676 ], [ -160.98753223361632, 64.251269311862586 ], [ -161.49070608093589, 64.433763215308545 ], [ -160.88696887528795, 64.795554000594166 ], [ -161.75937125231746, 64.816252243571228 ], [ -162.71107020219611, 64.377513213162786 ], [ -163.20388256840752, 64.652017618165559 ], [ -163.14435177390027, 64.423820587976138 ], [ -166.14277351914035, 64.582781775680672 ], [ -166.92840999320183, 65.157059141337612 ], [ -166.15703652017274, 65.285829898202934 ], [ -168.08836441367126, 65.657750078406195 ], [ -164.46049882728113, 66.588445914690681 ], [ -163.7276750078222, 66.616450066149582 ], [ -163.63822294752512, 66.574669058696372 ], [ -164.0337541210607, 66.215547951247004 ], [ -163.69537794848472, 66.083821872003284 ], [ -161.03430103422855, 66.188807227570663 ], [ -161.82815253545883, 66.370828718889243 ], [ -162.60743341845753, 66.894393191986637 ], [ -162.36160882411912, 66.94731433658356 ], [ -161.5910359797827, 66.459510362897163 ], [ -160.23171128193249, 66.42028916999476 ], [ -161.85667853752358, 66.700319698255186 ], [ -161.71994269246377, 67.02056018898702 ], [ -163.53182172886662, 67.102573131568704 ], [ -164.12516998758505, 67.606724762128692 ], [ -166.78630046019288, 68.359595884598434 ], [ -166.38053689490954, 68.425129334363959 ], [ -166.20907463861292, 68.885357623404644 ], [ -163.53567106373026, 69.17009030028197 ], [ -161.88096656335244, 70.331751721548954 ], [ -162.07387413296715, 70.16196900022851 ], [ -160.11714584787467, 70.591193870117763 ], [ -159.86568801357527, 70.278841563280594 ], [ -159.38675275360612, 70.524528828512189 ], [ -160.08159408870597, 70.634864526080548 ], [ -159.68089522088147, 70.786794463516827 ], [ -157.90937446238533, 70.860117220220133 ], [ -156.47023683424442, 71.407686821186388 ], [ -155.57943785006779, 71.121086468456554 ], [ -155.97352294810878, 70.841978791793821 ] ] ], [ [ [ -166.10985573224011, 66.227457131388803 ], [ -166.14863884529183, 66.221821144845677 ], [ -165.82219794538793, 66.328091900852712 ], [ -165.82987189587598, 66.317138531294233 ], [ -166.10985573224011, 66.227457131388803 ] ] ], [ [ [ -171.4630431923074, 63.640022950654753 ], [ -170.43041894637292, 63.698854740008386 ], [ -168.7160010037758, 63.310608875588628 ], [ -169.67635580725613, 62.956102026127752 ], [ -170.52710413072523, 63.379284415317755 ], [ -171.79098235276649, 63.424712883847576 ], [ -171.7463847253328, 63.703084476497878 ], [ -171.4630431923074, 63.640022950654753 ] ] ], [ [ [ -147.93070647919029, 60.826160538626937 ], [ -148.05741729945362, 60.817942764875966 ], [ -148.12379669651705, 60.844353898695942 ], [ -148.0377297987026, 60.924136616583183 ], [ -147.93070647919029, 60.826160538626937 ] ] ], [ [ [ -172.74221438368201, 60.45739343471584 ], [ -172.3875084070163, 60.39848474106239 ], [ -172.23206559102803, 60.299135372038137 ], [ -173.07402965818059, 60.493208865769589 ], [ -172.74221438368201, 60.45739343471584 ] ] ], [ [ [ -152.02074081490022, 60.361746458410948 ], [ -151.95973647907701, 60.503744754843382 ], [ -151.89940505587711, 60.490363406676664 ], [ -151.88728713549295, 60.472686404049227 ], [ -152.02074081490022, 60.361746458410948 ] ] ], [ [ [ -147.65826750395382, 60.450472047733058 ], [ -147.73211485784509, 60.222066277301309 ], [ -147.81583068135109, 60.1851631997217 ], [ -147.89143310122728, 60.299421016580283 ], [ -147.65826750395382, 60.450472047733058 ] ] ], [ [ [ -146.39392785611372, 60.449648073092249 ], [ -146.10223808668587, 60.411195923187904 ], [ -146.70287440110224, 60.395595336655305 ], [ -146.56029932242123, 60.480541628958235 ], [ -146.39392785611372, 60.449648073092249 ] ] ], [ [ [ -145.11852772201183, 60.337093137158007 ], [ -145.15046223250738, 60.312648556147394 ], [ -145.28425374151738, 60.336829465272928 ], [ -145.12813801290579, 60.401121459912986 ], [ -145.11852772201183, 60.337093137158007 ] ] ], [ [ [ -166.13543465167291, 60.383554320570966 ], [ -165.72969717891985, 60.314197628472101 ], [ -165.59179952961651, 59.913141704969917 ], [ -166.14871574959164, 59.764134130926351 ], [ -167.43641507849864, 60.206663444682505 ], [ -166.13543465167291, 60.383554320570966 ] ] ], [ [ [ -147.73588591511785, 59.813254005847 ], [ -147.18088131630941, 60.358252805933915 ], [ -146.95787257977494, 60.288874141177956 ], [ -147.4993118094136, 59.890191264641288 ], [ -147.73588591511785, 59.813254005847 ] ] ], [ [ [ -148.02176117016376, 60.065324327962713 ], [ -148.07416046415483, 60.034705430310311 ], [ -148.2718731792165, 60.053261339221308 ], [ -147.91419677397067, 60.0923506961812 ], [ -148.02176117016376, 60.065324327962713 ] ] ], [ [ [ -144.56564073803025, 59.818417580262718 ], [ -144.44492570656988, 59.950703962262168 ], [ -144.23573777134391, 60.015204697144554 ], [ -144.24896805749313, 59.982124861898285 ], [ -144.56564073803025, 59.818417580262718 ] ] ], [ [ [ -160.91898303666545, 58.577094290722499 ], [ -161.13150257602243, 58.668203913338658 ], [ -160.71514544344043, 58.795227843965506 ], [ -160.91898303666545, 58.577094290722499 ] ] ], [ [ [ -152.48608873304246, 58.485006884865896 ], [ -152.63662066017153, 58.541696340153408 ], [ -152.36792802296858, 58.611096977566461 ], [ -152.36227006376836, 58.570843069780892 ], [ -152.48608873304246, 58.485006884865896 ] ] ], [ [ [ -152.41694352776807, 58.36021317893352 ], [ -151.98250015182037, 58.24435135810748 ], [ -153.38132894053302, 58.087202914612732 ], [ -152.84110370019849, 58.416386276779463 ], [ -152.41694352776807, 58.36021317893352 ] ] ], [ [ [ -134.68027414999594, 58.16166824948462 ], [ -134.24009591054823, 58.143991246857183 ], [ -133.82273078232231, 57.628677506496388 ], [ -134.30688729493204, 58.034391633301283 ], [ -133.90882514595813, 57.36871900048601 ], [ -134.43530099611971, 57.056981928047293 ], [ -134.92348949130513, 58.354654096690183 ], [ -134.68027414999594, 58.16166824948462 ] ] ], [ [ [ -134.31272652855324, 58.228904580174486 ], [ -134.45622995199622, 58.206525428930149 ], [ -134.66159739147099, 58.29091141847735 ], [ -134.51997263020905, 58.332538617330925 ], [ -134.31272652855324, 58.228904580174486 ] ] ], [ [ [ -135.73036940489766, 58.244252481150596 ], [ -135.61324415628906, 57.991863555507081 ], [ -134.95467967804183, 58.015319366948717 ], [ -135.33847607940123, 57.768665304805239 ], [ -134.93149852481378, 57.48114210047774 ], [ -135.56422315832529, 57.666426531373901 ], [ -135.91076491959168, 57.446568124549458 ], [ -136.5686097933193, 57.972176054756062 ], [ -135.73036940489766, 58.244252481150596 ] ] ], [ [ [ -152.8980513342068, 57.823915551053489 ], [ -152.21623429159598, 57.57699781702496 ], [ -152.94078815224333, 57.498094005421279 ], [ -152.67904711442668, 57.345131353101834 ], [ -153.27436055266344, 57.22634716888308 ], [ -153.7325755969984, 57.052334711073144 ], [ -153.97271476631525, 56.774204817650855 ], [ -153.79318991815833, 56.989492911800937 ], [ -154.24375847782662, 57.143026853204645 ], [ -154.3389467749148, 56.920916249028693 ], [ -154.70595057309455, 57.335364507026128 ], [ -154.11616875127976, 57.651210466340331 ], [ -153.68771841755287, 57.305130130872783 ], [ -153.84153525691661, 57.862829126756679 ], [ -153.48793752614279, 57.730949238913382 ], [ -153.21746510371571, 57.795746604666448 ], [ -153.16046528464679, 57.971967314513734 ], [ -152.8980513342068, 57.823915551053489 ] ] ], [ [ [ -153.24064076377945, 57.850084985645537 ], [ -153.29497914475857, 57.829463646968264 ], [ -153.52008077688066, 57.955740507254092 ], [ -153.34696645142921, 57.932790066925492 ], [ -153.24064076377945, 57.850084985645537 ] ] ], [ [ [ -134.96976390713286, 57.351437505686135 ], [ -134.62071726295841, 56.718295391689935 ], [ -134.68190012662046, 56.216154259253528 ], [ -135.45493116196866, 57.24942944515422 ], [ -135.81232741583659, 57.00954296139389 ], [ -135.44867994102705, 57.534370862273875 ], [ -134.96976390713286, 57.351437505686135 ] ] ], [ [ [ -170.16056450492647, 57.183950927031418 ], [ -170.26399529500483, 57.136775632263067 ], [ -170.38662194763191, 57.203023193383956 ], [ -170.11617424444404, 57.241782960487541 ], [ -170.16056450492647, 57.183950927031418 ] ] ], [ [ [ -153.00708789842483, 57.12483349313564 ], [ -153.29539113207898, 57.000424308702293 ], [ -153.37458608138908, 57.051917230588487 ], [ -153.28521229868286, 57.185038573557279 ], [ -153.00708789842483, 57.12483349313564 ] ] ], [ [ [ -133.3662213654938, 57.00350048069464 ], [ -132.95415164762616, 56.880277819744066 ], [ -133.00412296300897, 56.623725075582371 ], [ -133.32896123223651, 56.830070298297557 ], [ -133.18080509865513, 56.473970431197813 ], [ -133.60279547119808, 56.464093721836662 ], [ -133.97946723849665, 57.009597893036613 ], [ -133.3662213654938, 57.00350048069464 ] ] ], [ [ [ -133.98959663341432, 56.84495677347482 ], [ -133.7383667654322, 56.650443826601617 ], [ -134.18958077190248, 56.076968462928392 ], [ -134.3736786793159, 56.83865062089049 ], [ -133.98959663341432, 56.84495677347482 ] ] ], [ [ [ -132.74687808014897, 56.525694065983402 ], [ -132.94802676946284, 56.567244360537188 ], [ -132.84253054961815, 56.794771224685377 ], [ -132.56797670613696, 56.575824683130122 ], [ -132.74687808014897, 56.525694065983402 ] ] ], [ [ [ -169.75521430025458, 56.635040993982784 ], [ -169.55049780074606, 56.628119607 ], [ -169.47432683836772, 56.594061988513317 ], [ -169.6326109935757, 56.545700170262194 ], [ -169.75521430025458, 56.635040993982784 ] ] ], [ [ [ -154.20864342521756, 56.514894505024557 ], [ -154.32220361021359, 56.570606177071681 ], [ -154.11038170271917, 56.602927955648397 ], [ -154.11596275761957, 56.543887426052436 ], [ -154.20864342521756, 56.514894505024557 ] ] ], [ [ [ -154.68279963227002, 56.43578195317852 ], [ -154.77716120813525, 56.4399128127111 ], [ -154.44488244790122, 56.573187964279526 ], [ -154.51118219408272, 56.52143137050831 ], [ -154.68279963227002, 56.43578195317852 ] ] ], [ [ [ -132.11234619559195, 56.109389118462019 ], [ -132.36858033622588, 55.939738233084086 ], [ -132.69902712617517, 56.198169639426851 ], [ -132.37984681614785, 56.49877756105036 ], [ -132.11234619559195, 56.109389118462019 ] ] ], [ [ [ -132.77989749058827, 56.247267541690405 ], [ -132.89144168429647, 56.259407434731628 ], [ -133.03766422405411, 56.364832243440759 ], [ -132.64334291994945, 56.435155732451506 ], [ -132.77989749058827, 56.247267541690405 ] ] ], [ [ [ -133.56610662702508, 56.339201138947402 ], [ -132.17269959144895, 55.480597590569261 ], [ -132.51125978502805, 55.593921569501617 ], [ -132.63127993120801, 55.473181818802004 ], [ -131.97643432517296, 55.208598068474544 ], [ -132.02170349193889, 54.726320218045856 ], [ -133.68018316946268, 55.785171576797211 ], [ -133.24152653651834, 55.920819775331154 ], [ -133.74253058395044, 55.964852980135902 ], [ -133.56610662702508, 56.339201138947402 ] ] ], [ [ [ -130.9791338720899, 55.489166926833661 ], [ -131.18787960759198, 55.206290939480311 ], [ -131.44757993488156, 55.408790947205063 ], [ -131.81099120362742, 55.223111008481311 ], [ -131.62495970239027, 55.83168769185292 ], [ -131.26921689096818, 55.955393751259436 ], [ -130.9791338720899, 55.489166926833661 ] ] ], [ [ [ -155.56600157025838, 55.821195748093317 ], [ -155.68062193595892, 55.791840278223475 ], [ -155.73736082972491, 55.829798043343345 ], [ -155.59395902982095, 55.924335400465282 ], [ -155.56600157025838, 55.821195748093317 ] ] ], [ [ [ -133.30508794031019, 55.543747007040736 ], [ -133.28170354000409, 55.49785711271204 ], [ -133.65018499937304, 55.269286547352152 ], [ -133.73713080347102, 55.496923274785786 ], [ -133.30508794031019, 55.543747007040736 ] ] ], [ [ [ -160.68491381386923, 55.314813892838856 ], [ -160.55277849388725, 55.380753836760533 ], [ -160.48753892841029, 55.184845626162229 ], [ -160.79509020967367, 55.145217939103674 ], [ -160.68491381386923, 55.314813892838856 ] ] ], [ [ [ -160.32927811915044, 55.337709401524762 ], [ -160.34330766070127, 55.25879460359252 ], [ -160.51748216685721, 55.3338312275487 ], [ -160.36230027617188, 55.356979421791095 ], [ -160.32927811915044, 55.337709401524762 ] ] ], [ [ [ -132.86227298201189, 54.894422031099054 ], [ -132.70582217037969, 54.684154689093617 ], [ -133.42903569894469, 55.303805591637683 ], [ -133.09740238551262, 55.213739670233196 ], [ -132.86227298201189, 54.894422031099054 ] ] ], [ [ [ -159.87297469598215, 55.128749432616075 ], [ -160.16959732692629, 54.941685216495756 ], [ -160.2270613183762, 54.922689854443036 ], [ -159.92046584769614, 55.267528734785088 ], [ -159.87297469598215, 55.128749432616075 ] ] ], [ [ [ -131.33972714756419, 55.079838297937755 ], [ -131.23203366201071, 54.903782383018637 ], [ -131.57847654632019, 55.248775071960324 ], [ -131.4046343766027, 55.21332218974851 ], [ -131.33972714756419, 55.079838297937755 ] ] ], [ [ [ -159.51511701631534, 55.151875654201405 ], [ -159.53498579148732, 55.059634439745167 ], [ -159.64849104484065, 55.074575846565153 ], [ -159.57475080765269, 55.21771672116617 ], [ -159.51511701631534, 55.151875654201405 ] ] ], [ [ [ -159.36199780881415, 54.972402991105042 ], [ -159.42134870219149, 54.97813785460508 ], [ -159.46191572034056, 55.058810465104358 ], [ -159.39042218733985, 55.040880776920403 ], [ -159.36199780881415, 54.972402991105042 ] ] ], [ [ [ -163.47603727239292, 54.980730628141487 ], [ -163.37896207337729, 54.815518219495374 ], [ -163.08327053377724, 54.669015528359864 ], [ -164.90393451314216, 54.544782125183247 ], [ -164.47863725570744, 54.906825596025357 ], [ -163.47603727239292, 54.980730628141487 ] ] ], [ [ [ -162.29815041715736, 54.847037996088375 ], [ -162.39075418045553, 54.872976717781 ], [ -162.43390435910354, 54.931533848921021 ], [ -162.26461190269438, 54.983521155591689 ], [ -162.29815041715736, 54.847037996088375 ] ] ], [ [ [ -162.55441339690373, 54.401355606040084 ], [ -162.73311015054662, 54.402311416623405 ], [ -162.82054759284696, 54.494552631079642 ], [ -162.6453898102863, 54.462055071246198 ], [ -162.55441339690373, 54.401355606040084 ] ] ], [ [ [ -165.56115453943383, 54.136694951412835 ], [ -165.65414694410424, 54.25330384257984 ], [ -165.4078568040938, 54.196845100191751 ], [ -165.46759496555231, 54.18092591013135 ], [ -165.56115453943383, 54.136694951412835 ] ] ], [ [ [ -165.84155173640943, 54.070656130534275 ], [ -166.03642311225138, 54.047189332764077 ], [ -166.10582512295551, 54.144813848206923 ], [ -165.69287787209538, 54.099923709775737 ], [ -165.84155173640943, 54.070656130534275 ] ] ], [ [ [ -166.61535456133782, 53.900950313513619 ], [ -166.23088112748187, 53.932601926049159 ], [ -166.77040873595385, 53.47601011175658 ], [ -167.80876921867937, 53.323772557121032 ], [ -166.74126337961744, 53.712952259467073 ], [ -167.03806728498256, 53.942182004539632 ], [ -166.61535456133782, 53.900950313513619 ] ] ], [ [ [ -166.20974617794516, 53.723279408298509 ], [ -166.25075127594494, 53.767774038902104 ], [ -166.11373115963406, 53.843074334743335 ], [ -166.13863853973459, 53.787417594338962 ], [ -166.20974617794516, 53.723279408298509 ] ] ], [ [ [ -167.96436721655834, 53.345118993482231 ], [ -168.50562654506706, 53.043170739776315 ], [ -169.08889759392844, 52.832024491487346 ], [ -168.28770722523066, 53.500147075567952 ], [ -167.82809691717057, 53.507947368834266 ], [ -167.96436721655834, 53.345118993482231 ] ] ], [ [ [ -169.69196188695304, 52.847372392463456 ], [ -169.72276205902639, 52.792330886457535 ], [ -169.99184059101944, 52.829849198435625 ], [ -169.82063651344362, 52.883385577431 ], [ -169.69196188695304, 52.847372392463456 ] ] ], [ [ [ -170.73339716837984, 52.581492255367806 ], [ -170.82703501985225, 52.600718330319978 ], [ -170.58462030723572, 52.66758112583932 ], [ -170.61402521558398, 52.609606270112153 ], [ -170.73339716837984, 52.581492255367806 ] ] ], [ [ [ -174.67739435862632, 52.035010300927411 ], [ -175.29554837390626, 52.022145310202291 ], [ -174.01833892882226, 52.331794980217609 ], [ -174.12063263389635, 52.135216603578101 ], [ -174.67739435862632, 52.035010300927411 ] ] ], [ [ [ -172.46479036186867, 52.272293024822773 ], [ -172.61984590977576, 52.272831354921436 ], [ -172.31361024135552, 52.329575741851698 ], [ -172.46479036186867, 52.272293024822773 ] ] ], [ [ [ -173.55330274775247, 52.136304250103962 ], [ -173.35724210184563, 52.095632861833735 ], [ -173.02289585190871, 52.079142382689042 ], [ -173.83579215367018, 52.048193895180333 ], [ -173.99250045737762, 52.123329396093396 ], [ -173.55330274775247, 52.136304250103962 ] ] ], [ [ [ -176.02154968333929, 52.002435836794177 ], [ -176.14286072312319, 52.004314498975219 ], [ -176.1845112679249, 52.056049120089369 ], [ -176.07741241740388, 52.099972461608644 ], [ -176.02154968333929, 52.002435836794177 ] ] ], [ [ [ -176.59329813349447, 51.866699747631884 ], [ -176.45235109137462, 51.735709752400624 ], [ -176.96162235103614, 51.603676055957692 ], [ -176.69835627348846, 51.986055220934929 ], [ -176.59329813349447, 51.866699747631884 ] ] ], [ [ [ -177.14819973547284, 51.716736363004969 ], [ -177.65488714798991, 51.676592318504845 ], [ -177.67023504896602, 51.701080844829647 ], [ -177.11003666333832, 51.928772503906004 ], [ -177.14819973547284, 51.716736363004969 ] ] ], [ [ [ -177.87903365617422, 51.649719758885993 ], [ -178.05889358735172, 51.672604281243338 ], [ -178.19451843993753, 51.882212443536133 ], [ -177.64450026099701, 51.826292031246709 ], [ -177.87903365617422, 51.649719758885993 ] ] ], [ [ [ -176.00896690392864, 51.812372352981328 ], [ -176.20443291480302, 51.83481742219692 ], [ -176.19365875972895, 51.886288371425991 ], [ -176.07162468219772, 51.843298867832942 ], [ -176.00896690392864, 51.812372352981328 ] ] ], [ [ [ -176.28670197616887, 51.791981727203478 ], [ -176.34964402568909, 51.733281773792385 ], [ -176.41372247356804, 51.840585244682558 ], [ -176.37858201507422, 51.86111869273148 ], [ -176.28670197616887, 51.791981727203478 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Alabama\", \"type\": \"State\", \"postal\": \"AL\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -87.566195204298964, 30.7956357114127 ], [ -87.622269425188023, 30.26476532983348 ], [ -88.005933990604916, 30.230916451589124 ], [ -87.790294333941418, 30.291791698051952 ], [ -88.011317291591524, 30.694176967307982 ], [ -88.399585128668392, 30.370805372941078 ], [ -88.203138587971424, 35.024196663735125 ], [ -85.623603577460599, 35.000861701907468 ], [ -84.921533238178739, 32.285887233105029 ], [ -85.007281532465399, 31.00167331692866 ], [ -87.59369398464483, 31.000739479002419 ], [ -87.566195204298964, 30.7956357114127 ] ] ], [ [ [ -88.071335604427915, 30.252339792250112 ], [ -88.159314123409033, 30.230916451589124 ], [ -88.316253826661438, 30.240452584765393 ], [ -88.109370273847574, 30.273730173925458 ], [ -88.071335604427915, 30.252339792250112 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Arkansas\", \"type\": \"State\", \"postal\": \"AR\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -90.303043453232689, 36.099373706702991 ], [ -89.688907687617771, 35.92095573114689 ], [ -91.070174830152681, 33.974200285790317 ], [ -91.149957548039893, 33.015917778531616 ], [ -94.041306535289237, 33.011995659241379 ], [ -94.047327043331393, 33.55443464477753 ], [ -94.484148959408898, 33.648433671800802 ], [ -94.618379921560646, 36.500869083346956 ], [ -90.162242666611562, 36.500869083346956 ], [ -90.303043453232689, 36.099373706702991 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Arizona\", \"type\": \"State\", \"postal\": \"AZ\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -109.04674717117793, 36.291843196466999 ], [ -109.04780735188244, 31.327879384059941 ], [ -111.04197429807105, 31.324209950326207 ], [ -114.83595454533898, 32.508327427137331 ], [ -114.47753106975215, 32.842004197678591 ], [ -114.71942805163603, 33.330862858905192 ], [ -114.50905084634516, 33.903920742093746 ], [ -114.12561150066342, 34.286508647313312 ], [ -114.61093256409882, 34.907401004982844 ], [ -114.74136225657432, 36.013515549130901 ], [ -114.04287895356211, 36.181771170783719 ], [ -114.04026970053289, 37.00415279395196 ], [ -109.04667026687812, 37.000845909060189 ], [ -109.04674717117793, 36.291843196466999 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"California\", \"type\": \"State\", \"postal\": \"CA\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -124.22840851691392, 42.000767974792069 ], [ -120.00080886833911, 42.00055923454974 ], [ -120.0000617979981, 39.000258827128619 ], [ -114.61054254943551, 34.991116828488856 ], [ -114.12506767740048, 34.317182476608423 ], [ -114.70170161053014, 33.417808663003157 ], [ -114.51646661811242, 32.772757368865157 ], [ -117.12827396872153, 32.533365269889316 ], [ -117.46742193087775, 33.295486880993209 ], [ -118.50619577421476, 34.017409515954242 ], [ -120.64469561165143, 34.579986441711725 ], [ -120.65908770204419, 35.122403454590795 ], [ -121.87741111277737, 36.331064389369416 ], [ -121.80744467944429, 36.85123408694669 ], [ -122.49923730837315, 37.542614728555151 ], [ -122.44562402507796, 37.798002921891182 ], [ -122.07052879592547, 37.478278788600932 ], [ -122.31423302885486, 38.007347412298913 ], [ -121.52534322825329, 38.055917970792365 ], [ -122.99879116043742, 37.988615722131243 ], [ -123.70112517160433, 38.907292514988484 ], [ -123.83292815514784, 39.775509100842697 ], [ -124.35653657355942, 40.371077971218085 ], [ -124.06851898444742, 41.384171271583284 ], [ -124.22840851691392, 42.000767974792069 ] ] ], [ [ [ -119.88239272612657, 34.079680026142171 ], [ -119.56912855402024, 34.052961275122939 ], [ -119.54928724466961, 34.028154145270364 ], [ -119.80958083370058, 33.967795256249104 ], [ -119.88239272612657, 34.079680026142171 ] ] ], [ [ [ -120.30660233703544, 34.024869233035687 ], [ -120.35970475605333, 34.022265473170734 ], [ -120.4415583968711, 34.032933198187052 ], [ -120.36773576221907, 34.073296969258053 ], [ -120.30660233703544, 34.024869233035687 ] ] ], [ [ [ -120.04357315219698, 33.918862148913703 ], [ -120.16713089616815, 33.918082119587083 ], [ -120.25190690037866, 34.013838959177406 ], [ -120.07184097554094, 34.026506195988759 ], [ -120.04357315219698, 33.918862148913703 ] ] ], [ [ [ -118.34796517735842, 33.38576154264004 ], [ -118.44630380415663, 33.317086002910898 ], [ -118.56942209498602, 33.46418195578778 ], [ -118.55484873017228, 33.477079905498556 ], [ -118.34796517735842, 33.38576154264004 ] ] ], [ [ [ -119.43802869550356, 33.217198303787981 ], [ -119.54367872394783, 33.224614075555252 ], [ -119.57517652788377, 33.278326235807327 ], [ -119.47879896073069, 33.274634829416513 ], [ -119.43802869550356, 33.217198303787981 ] ] ], [ [ [ -118.35039315596667, 32.827612107285816 ], [ -118.47320382959684, 32.838928025686243 ], [ -118.59016977644154, 33.011160698272022 ], [ -118.55710092752383, 33.032660943232813 ], [ -118.35039315596667, 32.827612107285816 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Colorado\", \"type\": \"State\", \"postal\": \"CO\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -108.6687900034397, 37.000845909060189 ], [ -109.04667026687812, 37.000845909060189 ], [ -109.04639011550024, 41.000858268679792 ], [ -102.02500557031193, 41.000627555780369 ], [ -102.01278327980663, 37.000845909060189 ], [ -108.6687900034397, 37.000845909060189 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Connecticut\", \"type\": \"State\", \"postal\": \"CT\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -72.807699768260164, 42.034078522937762 ], [ -71.801637718163192, 42.022707672894626 ], [ -71.842353051747608, 41.335512822461482 ], [ -73.630465912927463, 40.991860465602173 ], [ -73.480568446271818, 42.055567781570034 ], [ -72.807699768260164, 42.034078522937762 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"District of Columbia\", \"type\": \"Federal District\", \"postal\": \"DC\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -76.931242406029583, 38.888220248635918 ], [ -77.019737282452269, 38.806525909582035 ], [ -77.122052960183439, 38.943536412855451 ], [ -77.042116433696592, 39.01178348577136 ], [ -76.931242406029583, 38.888220248635918 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Delaware\", \"type\": \"State\", \"postal\": \"DE\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -75.128484768900464, 38.632447533800843 ], [ -75.707024830032523, 38.455073259456441 ], [ -75.676823412864806, 39.827232735628286 ], [ -75.421028725372636, 39.81542243244337 ], [ -75.573881514406622, 39.476944636328341 ], [ -75.128484768900464, 38.632447533800843 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Florida\", \"type\": \"State\", \"postal\": \"FL\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -82.399280944696827, 30.575030234247265 ], [ -82.112274097810882, 30.371354689368289 ], [ -81.957081220796994, 30.814290497280567 ], [ -81.503939113667244, 30.731431607401007 ], [ -80.524123402462124, 28.486089724873011 ], [ -80.456887071772258, 27.900672222072359 ], [ -80.838189576552168, 28.757649793825962 ], [ -80.041307221934773, 26.568612845086449 ], [ -80.484638537674641, 25.229829835031552 ], [ -81.110496715846111, 25.13805004637419 ], [ -80.940406377326426, 25.264217043374572 ], [ -81.715502842440884, 25.983173369628702 ], [ -81.828640053787979, 26.687056453120334 ], [ -82.039610520820247, 26.552045461641953 ], [ -82.01325431864295, 26.961560858123107 ], [ -82.290065852639984, 26.870813784348869 ], [ -82.714588573912366, 27.499583339584532 ], [ -82.405762878537843, 27.862901224537751 ], [ -82.843513139377322, 27.846004251236934 ], [ -82.65148310275508, 28.887486224560078 ], [ -83.694371326131858, 29.925979916519211 ], [ -84.309682628901001, 30.064759218688224 ], [ -85.318941700604299, 29.680204760659265 ], [ -85.603531555210537, 30.28678193223584 ], [ -86.454433687279248, 30.399128127927767 ], [ -86.257393884840909, 30.493017291665595 ], [ -87.475766734052513, 30.294274608302914 ], [ -87.607437881653496, 30.929328343465798 ], [ -85.007281532465399, 31.00167331692866 ], [ -84.883938021900846, 30.720939663641403 ], [ -82.399280944696827, 30.575030234247265 ] ] ], [ [ [ -84.907888218126971, 29.642631517038453 ], [ -85.008270302034376, 29.606618332070909 ], [ -85.116738323750226, 29.632787766662943 ], [ -84.737171658880285, 29.732444752886437 ], [ -84.907888218126971, 29.642631517038453 ] ] ], [ [ [ -80.18675522553005, 27.278439532320434 ], [ -80.170506445613327, 27.204798172089369 ], [ -80.436891953821998, 27.8505525912542 ], [ -80.395759139752911, 27.794555274664944 ], [ -80.18675522553005, 27.278439532320434 ] ] ], [ [ [ -82.083764575238959, 26.552331106184099 ], [ -82.085214770606783, 26.493598193787363 ], [ -82.169139334355123, 26.700723445829198 ], [ -82.121129078617429, 26.665534235502463 ], [ -82.083764575238959, 26.552331106184099 ] ] ], [ [ [ -82.037182542211994, 26.453629930543954 ], [ -82.144958425229575, 26.44665361191845 ], [ -82.201384208632049, 26.548046438051898 ], [ -82.116064381158594, 26.460913866368685 ], [ -82.037182542211994, 26.453629930543954 ] ] ], [ [ [ -80.381828475158997, 25.142290769192201 ], [ -80.580582144850226, 24.954237783502933 ], [ -80.257056741883716, 25.347603277024263 ], [ -80.381828475158997, 25.142290769192201 ] ] ], [ [ [ -80.638304315020903, 24.903184314758519 ], [ -80.665143915654127, 24.898449207156006 ], [ -80.614606804351283, 24.937934071943488 ], [ -80.638304315020903, 24.903184314758519 ] ] ], [ [ [ -80.829400513716891, 24.803681137134646 ], [ -80.848362916783998, 24.803681137134646 ], [ -80.785191527655456, 24.835277818027464 ], [ -80.786773558965805, 24.821039536234323 ], [ -80.829400513716891, 24.803681137134646 ] ] ], [ [ [ -81.044194223082499, 24.716812237336484 ], [ -81.137369275464962, 24.710506084752183 ], [ -80.930485722651113, 24.759472151073211 ], [ -80.988922004177155, 24.727875470180393 ], [ -81.044194223082499, 24.716812237336484 ] ] ], [ [ [ -81.33479359940236, 24.650487771915778 ], [ -81.379035544449437, 24.636271462779732 ], [ -81.420091454218721, 24.749990949539651 ], [ -81.322313130176269, 24.68508372050114 ], [ -81.33479359940236, 24.650487771915778 ] ] ], [ [ [ -81.566693022311114, 24.599895728970225 ], [ -81.631501374392741, 24.590019019609088 ], [ -81.562298490893482, 24.689137675733917 ], [ -81.532228909668291, 24.61415598342046 ], [ -81.566693022311114, 24.599895728970225 ] ] ], [ [ [ -81.783837805985158, 24.544579564750705 ], [ -81.811413490630841, 24.557807104317803 ], [ -81.738651036683294, 24.575429175302531 ], [ -81.739760655866249, 24.554500219426018 ], [ -81.783837805985158, 24.544579564750705 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Georgia\", \"type\": \"State\", \"postal\": \"GA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -83.121357388257479, 35.000554084708227 ], [ -83.355574926489055, 34.708317745435295 ], [ -80.872346071995764, 32.029565201842743 ], [ -81.380947165616107, 31.353257802996794 ], [ -81.288464251931913, 31.26390599294767 ], [ -81.441767480436212, 31.199723861593071 ], [ -81.520396633826309, 30.874649386301826 ], [ -81.503939113667244, 30.731431607401007 ], [ -81.957081220796994, 30.814290497280567 ], [ -82.112274097810882, 30.371354689368289 ], [ -84.883938021900846, 30.720939663641403 ], [ -85.067442667572877, 31.117579083068861 ], [ -84.921533238178739, 32.285887233105029 ], [ -85.623603577460599, 35.000861701907468 ], [ -83.121357388257479, 35.000554084708227 ] ] ], [ [ [ -81.418981835035765, 30.971438940775315 ], [ -81.46349843829644, 30.727762173667287 ], [ -81.484636134415268, 30.897830539529878 ], [ -81.418981835035765, 30.971438940775315 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Hawaii\", \"type\": \"State\", \"postal\": \"HI\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -177.37146733737362, 28.200500114369262 ], [ -177.39048467208346, 28.196369254836682 ], [ -177.35410413175521, 28.217034538828116 ], [ -177.36154599605277, 28.207113884152804 ], [ -177.37146733737362, 28.200500114369262 ] ] ], [ [ [ -159.37277265053376, 21.932360226821203 ], [ -159.60885786461782, 21.909519649778019 ], [ -159.78918196817634, 22.041806031777469 ], [ -159.3520524348996, 22.219575813949476 ], [ -159.37277265053376, 21.932360226821203 ] ] ], [ [ [ -160.18000961980397, 21.841074822948315 ], [ -160.22091172097365, 21.897269893451352 ], [ -160.04872848686631, 22.004650268641342 ], [ -160.08004226979912, 21.907443233683196 ], [ -160.18000961980397, 21.841074822948315 ] ] ], [ [ [ -157.79935462176263, 21.456652200861882 ], [ -157.63541113406336, 21.307644626818316 ], [ -158.27312356073392, 21.585247176470517 ], [ -157.96249610747816, 21.701361682853047 ], [ -157.79935462176263, 21.456652200861882 ] ] ], [ [ [ -157.21360203594139, 21.215392426033546 ], [ -156.95235263632708, 21.199692962544034 ], [ -156.71216128194965, 21.155088468655009 ], [ -157.29031407500054, 21.112582363517902 ], [ -157.21360203594139, 21.215392426033546 ] ] ], [ [ [ -156.48682619034599, 20.932571370322904 ], [ -156.27753663158097, 20.951281087833493 ], [ -155.98985412548956, 20.757130689802253 ], [ -156.40879304527942, 20.605178779708865 ], [ -156.69776919155689, 20.949061849467597 ], [ -156.48682619034599, 20.932571370322904 ] ] ], [ [ [ -156.849594758872, 20.772632399377969 ], [ -156.97341068156396, 20.757548170286924 ], [ -157.050564920347, 20.912466389087214 ], [ -156.88054873954499, 20.904819904420521 ], [ -156.849594758872, 20.772632399377969 ] ] ], [ [ [ -155.58132475199525, 19.012018318543994 ], [ -155.88130645289178, 19.070520518041306 ], [ -156.04868591484319, 19.749959020522326 ], [ -155.83162078205109, 20.275819636285433 ], [ -154.80418757635374, 19.524442654497676 ], [ -155.58132475199525, 19.012018318543994 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Iowa\", \"type\": \"State\", \"postal\": \"IA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -91.215128448963469, 40.649559427153804 ], [ -91.441952188084855, 40.379449553568691 ], [ -91.731529835850125, 40.624653420344345 ], [ -95.765028524872136, 40.601867774943884 ], [ -96.621769890562035, 42.729535092436095 ], [ -96.598621696319626, 43.497501430325428 ], [ -91.245252961831383, 43.502412319184629 ], [ -91.069581568411294, 42.788553649374961 ], [ -90.14943260752915, 42.053711092046058 ], [ -90.436670167314517, 41.560359022444942 ], [ -91.048114282436131, 41.369098028820787 ], [ -91.215128448963469, 40.649559427153804 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Idaho\", \"type\": \"State\", \"postal\": \"ID\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -114.75368891720079, 46.734568204200343 ], [ -114.33012200651174, 46.637646813784329 ], [ -114.52923273188065, 45.575719283040655 ], [ -113.80227286528215, 45.601097701977494 ], [ -112.97007495755976, 44.454498537144474 ], [ -111.37252545814152, 44.746240491632904 ], [ -111.05143352694752, 44.498883304462623 ], [ -111.0502964419432, 42.000877838077514 ], [ -117.01667484337061, 42.00055923454974 ], [ -116.91242007865142, 44.199472892650391 ], [ -117.20170109554599, 44.436206300118556 ], [ -116.47704286477747, 45.641087937878012 ], [ -117.03899906297221, 46.39655183388416 ], [ -117.03905399461493, 48.993082694652713 ], [ -116.04849365409368, 48.993082694652713 ], [ -116.04901001153524, 48.004719619840273 ], [ -114.75368891720079, 46.734568204200343 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Illinois\", \"type\": \"State\", \"postal\": \"IL\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.175730101513281, 41.943748929648223 ], [ -87.521085339296917, 41.760760641417761 ], [ -87.529456921647508, 38.7422888465847 ], [ -88.471666430246202, 37.08838497489954 ], [ -89.300826618126152, 37.012051964175157 ], [ -89.52342062075806, 37.644523912130182 ], [ -90.365775389219479, 38.254254159998908 ], [ -90.134205556167032, 38.846669954082159 ], [ -90.577075446108054, 38.909610630311278 ], [ -91.466814249580153, 39.942863843554875 ], [ -91.048114282436131, 41.369098028820787 ], [ -90.176612784347242, 41.883642726183467 ], [ -90.650584970396594, 42.512983570503422 ], [ -87.039126092396003, 42.49280168496793 ], [ -87.175730101513281, 41.943748929648223 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Indiana\", \"type\": \"State\", \"postal\": \"IN\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -84.901241489357801, 38.769567900359704 ], [ -85.405426078903417, 38.729962185958243 ], [ -86.021330643413933, 37.984353026656123 ], [ -86.361445402482033, 38.178986823143305 ], [ -86.599233497490431, 37.874797358414412 ], [ -88.041991120886635, 37.788851310213957 ], [ -87.517679577448249, 38.811821319940293 ], [ -87.521085339296917, 41.760760641417761 ], [ -84.796398956061495, 41.759727926534623 ], [ -84.901241489357801, 38.769567900359704 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Kansas\", \"type\": \"State\", \"postal\": \"KS\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -95.116203426879238, 39.872089915073815 ], [ -94.622384438314967, 39.124404339676886 ], [ -94.618066811197139, 37.000845909060189 ], [ -102.01278327980663, 37.000845909060189 ], [ -102.02448921287036, 40.001124343824216 ], [ -95.116203426879238, 39.872089915073815 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Kentucky\", \"type\": \"State\", \"postal\": \"KY\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -84.660542017285223, 39.09446659439422 ], [ -83.689877917757315, 38.649531274686922 ], [ -82.880438189614026, 38.71025271255013 ], [ -81.965277021890898, 37.539725324148051 ], [ -83.730384511099402, 36.586815131547411 ], [ -89.450328576954206, 36.500023136049066 ], [ -89.046207467788207, 37.182977263664199 ], [ -88.471666430246202, 37.08838497489954 ], [ -87.892115626888099, 37.912985836433691 ], [ -86.599233497490431, 37.874797358414412 ], [ -86.361445402482033, 38.178986823143305 ], [ -86.021330643413933, 37.984353026656123 ], [ -84.660542017285223, 39.09446659439422 ] ] ], [ [ [ -89.487220668205268, 36.503066349055771 ], [ -89.557313444316605, 36.501077823589299 ], [ -89.549644986992817, 36.553065130259952 ], [ -89.519520474124917, 36.554822942827002 ], [ -89.487220668205268, 36.503066349055771 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Louisiana\", \"type\": \"State\", \"postal\": \"LA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -91.176885039301482, 31.001233863786894 ], [ -89.735313939388035, 31.001156959487091 ], [ -89.520860806207295, 30.192629096612947 ], [ -90.225282219797592, 30.379286818577128 ], [ -90.413060547273261, 30.140301213757425 ], [ -89.400736289906149, 30.046049501177635 ], [ -89.720877903681085, 29.619307541539342 ], [ -89.021378365278551, 29.142720609296489 ], [ -89.376148886624463, 28.981331442983731 ], [ -90.15906761766233, 29.537140790358052 ], [ -90.135864491777198, 29.13607388052732 ], [ -90.751021985946721, 29.130888333454507 ], [ -91.893171687719388, 29.83601287207162 ], [ -92.260823679283263, 29.556850263766165 ], [ -93.826463387445187, 29.725138844404611 ], [ -93.530590573424149, 31.046189920189335 ], [ -94.043300553919991, 31.999231948732501 ], [ -94.041306535289237, 33.011995659241379 ], [ -91.149957548039893, 33.015917778531616 ], [ -90.93764674892526, 32.27732888316919 ], [ -91.65644926657977, 31.001805152871185 ], [ -91.176885039301482, 31.001233863786894 ] ] ], [ [ [ -89.223955277303119, 30.084051211611651 ], [ -89.220439652169006, 30.037601014527226 ], [ -89.342003377509428, 30.062847597521554 ], [ -89.18467915275798, 30.168678900386823 ], [ -89.223955277303119, 30.084051211611651 ] ] ], [ [ [ -88.827469666475267, 29.807690117084945 ], [ -88.855660585519416, 29.775862723292704 ], [ -88.866866640634399, 30.056717226193953 ], [ -88.812583191298017, 29.933362729300839 ], [ -88.827469666475267, 29.807690117084945 ] ] ], [ [ [ -88.88930072352143, 29.712581470878703 ], [ -88.943584172857811, 29.660231615366101 ], [ -88.872656435777131, 29.752989187263893 ], [ -88.88930072352143, 29.712581470878703 ] ] ], [ [ [ -91.793690482752609, 29.500732097562917 ], [ -91.830846245888736, 29.486471843112682 ], [ -92.006649475251351, 29.610287765804642 ], [ -91.875231013206886, 29.640983567756848 ], [ -91.793690482752609, 29.500732097562917 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Massachusetts\", \"type\": \"State\", \"postal\": \"MA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -70.78133738627308, 42.721240414385278 ], [ -71.04617382215703, 42.331115887784478 ], [ -70.426676728212598, 41.757299947926384 ], [ -70.001406936599224, 41.826184227897869 ], [ -70.10894112038882, 42.078309481656305 ], [ -69.977896193514852, 41.96126113734752 ], [ -69.948639600601922, 41.677143694868676 ], [ -71.168539549481167, 41.489409312707153 ], [ -71.387134528523035, 42.016862946109171 ], [ -73.507287197291063, 42.080012362580646 ], [ -73.25332722666576, 42.752221860879644 ], [ -70.78133738627308, 42.721240414385278 ] ] ], [ [ [ -70.509898166934121, 41.376338019331342 ], [ -70.78531443720604, 41.327448857310117 ], [ -70.829182847082606, 41.359001592888745 ], [ -70.615993141684442, 41.457208383744415 ], [ -70.509898166934121, 41.376338019331342 ] ] ], [ [ [ -69.977940138829027, 41.265595827606859 ], [ -70.055097124194205, 41.249467897304129 ], [ -70.233075646608555, 41.28633801589811 ], [ -70.041199418585933, 41.397475715450184 ], [ -69.977940138829027, 41.265595827606859 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Maryland\", \"type\": \"State\", \"postal\": \"MD\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -75.784720145496365, 39.722357243346352 ], [ -75.707024830032523, 38.455073259456441 ], [ -75.037660790826436, 38.45558961689801 ], [ -75.659256273522786, 37.953964841903158 ], [ -76.341177686254781, 38.70964846448021 ], [ -75.958919370891536, 39.585050109202257 ], [ -76.570407431327325, 39.269335985830594 ], [ -76.394087844523142, 38.368973402656366 ], [ -76.668548304211726, 38.537514668851315 ], [ -76.341177686254781, 38.087031253229242 ], [ -77.232520493694309, 38.407711197102827 ], [ -76.931242406029583, 38.888220248635918 ], [ -77.883251719689611, 39.61071417268127 ], [ -78.777769576078384, 39.62662237641311 ], [ -79.487980784811413, 39.210910690633085 ], [ -79.477499827380356, 39.722796696488103 ], [ -75.784720145496365, 39.722357243346352 ] ] ], [ [ [ -75.225790680815521, 38.040339356916832 ], [ -75.252476472849125, 38.037449952509746 ], [ -75.097887843905156, 38.298078624561299 ], [ -75.136230130524055, 38.18053589546804 ], [ -75.225790680815521, 38.040339356916832 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Maine\", \"type\": \"State\", \"postal\": \"ME\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -68.937183263189809, 47.211254013400094 ], [ -68.235497445406992, 47.345946401350687 ], [ -67.806788932959307, 47.082812846391079 ], [ -67.802240592942056, 45.727517384534394 ], [ -66.987022055984554, 44.827704117787391 ], [ -68.05661804405203, 44.3843178704048 ], [ -68.450598771971826, 44.507595462998069 ], [ -68.532534810253694, 44.258645258188892 ], [ -68.762720365909573, 44.570766852126638 ], [ -69.226057785928248, 43.986458968508913 ], [ -70.178814169929268, 43.766369848785075 ], [ -70.733096417635963, 43.070034373003239 ], [ -71.084549067761557, 45.294007846512955 ], [ -70.421095673312195, 45.73824004119345 ], [ -70.007680130197897, 46.708937099706986 ], [ -69.242877854929262, 47.4629947456595 ], [ -68.937183263189809, 47.211254013400094 ] ] ], [ [ [ -68.187256476769875, 44.332484372333738 ], [ -68.315104382037504, 44.249702386753995 ], [ -68.41170716892573, 44.294350825957196 ], [ -68.29943787753362, 44.456509035268027 ], [ -68.187256476769875, 44.332484372333738 ] ] ], [ [ [ -68.623193993399568, 44.196067130801708 ], [ -68.701713283504219, 44.182674796306458 ], [ -68.703031642929503, 44.232003411469464 ], [ -68.676730372394942, 44.256217279580625 ], [ -68.623193993399568, 44.196067130801708 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Michigan\", \"type\": \"State\", \"postal\": \"MI\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.743888082171168, 48.060530168844281 ], [ -84.875972933706379, 46.899901462460434 ], [ -84.561752951016715, 46.45737214870428 ], [ -84.149479986071, 46.542768880477524 ], [ -83.977785643583886, 46.084913638402355 ], [ -82.551079046190594, 45.347357457923096 ], [ -82.137850270661545, 43.570879118671428 ], [ -83.12166500545672, 41.950000150589801 ], [ -87.221257447000013, 41.760727682432133 ], [ -87.032490349955367, 44.091466296733387 ], [ -86.264524012066019, 45.226903351765628 ], [ -87.115272335535124, 45.452364786147541 ], [ -87.653613420524337, 45.121797146584271 ], [ -88.151744543042156, 45.945409238549445 ], [ -90.412588135145867, 46.585274985614632 ], [ -89.498382778006075, 47.997897109814403 ], [ -88.378194746993046, 48.303097316769367 ], [ -87.743888082171168, 48.060530168844281 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Minnesota\", \"type\": \"State\", \"postal\": \"MN\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -93.377886099825503, 48.616537270132397 ], [ -91.518307171466319, 48.05831093047837 ], [ -89.498382778006075, 47.997897109814403 ], [ -89.95767722912052, 47.287136584654149 ], [ -90.654023691230904, 47.309098255413801 ], [ -92.291645824013727, 46.660718103726936 ], [ -92.292629100418424, 46.08437530830372 ], [ -92.896520114665975, 45.658578172920215 ], [ -92.769809294402648, 44.725849865855082 ], [ -91.382691931918018, 43.99079856828385 ], [ -91.245252961831383, 43.502412319184629 ], [ -96.453618639030395, 43.501170864059162 ], [ -96.453668077508837, 45.29733670406182 ], [ -96.851060060441583, 45.626003708786953 ], [ -96.560845205620765, 46.138241277155402 ], [ -97.225737809109404, 48.993181571609597 ], [ -95.162043882729478, 48.99176433522743 ], [ -94.939340016812125, 49.349413274651909 ], [ -94.620884804468702, 48.742605390175896 ], [ -93.377886099825503, 48.616537270132397 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Missouri\", \"type\": \"State\", \"postal\": \"MO\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -91.466814249580153, 39.942863843554875 ], [ -90.577075446108054, 38.909610630311278 ], [ -90.134205556167032, 38.846669954082159 ], [ -90.365775389219479, 38.254254159998908 ], [ -89.154312940662095, 36.992111777867635 ], [ -89.70477194603545, 36.001573410003459 ], [ -90.381068358552852, 35.992740401854007 ], [ -90.162242666611562, 36.500869083346956 ], [ -94.618379921560646, 36.500869083346956 ], [ -94.622384438314967, 39.124404339676886 ], [ -95.05793743344563, 39.508958797705844 ], [ -94.929935719578367, 39.861499094357328 ], [ -95.765028524872136, 40.601867774943884 ], [ -91.731529835850125, 40.624653420344345 ], [ -91.466814249580153, 39.942863843554875 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Mississippi\", \"type\": \"State\", \"postal\": \"MS\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -88.444233567871592, 31.139705548756666 ], [ -88.399585128668392, 30.370805372941078 ], [ -89.520860806207295, 30.192629096612947 ], [ -89.735313939388035, 31.001156959487091 ], [ -91.65644926657977, 31.001805152871185 ], [ -90.93764674892526, 32.27732888316919 ], [ -91.207481964296775, 33.675668780261617 ], [ -90.293705073970216, 35.001114387463986 ], [ -88.084771884237341, 34.933109013776033 ], [ -88.444233567871592, 31.139705548756666 ] ] ], [ [ [ -88.558106863231146, 30.215909126797882 ], [ -88.659236017479543, 30.225599068573771 ], [ -88.722846859749851, 30.264248972391911 ], [ -88.573993094305905, 30.22915863902206 ], [ -88.558106863231146, 30.215909126797882 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Montana\", \"type\": \"State\", \"postal\": \"MT\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -104.01801345883915, 46.896462741626124 ], [ -104.00547805797034, 45.000969505256307 ], [ -111.05086223786323, 45.001057395884658 ], [ -111.05143352694752, 44.498883304462623 ], [ -111.37252545814152, 44.746240491632904 ], [ -112.85385608105605, 44.398325439298503 ], [ -113.80227286528215, 45.601097701977494 ], [ -114.52923273188065, 45.575719283040655 ], [ -114.33686761223782, 46.659223963044951 ], [ -115.71331724970615, 47.446745965742764 ], [ -116.04901001153524, 48.004719619840273 ], [ -116.04849365409368, 48.993082694652713 ], [ -104.03392715573527, 48.993137626295436 ], [ -104.01801345883915, 46.896462741626124 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"North Carolina\", \"type\": \"State\", \"postal\": \"NC\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -75.924872738733384, 36.382996764397362 ], [ -75.820074150751253, 36.112831959169512 ], [ -76.733631314506951, 36.229155205794399 ], [ -76.726215542739681, 35.957595136841448 ], [ -76.06977142590145, 35.970306318966962 ], [ -76.083570254552839, 35.690539462591587 ], [ -75.812010185599888, 35.955738447317501 ], [ -76.103510440860362, 35.380296530834883 ], [ -77.039996072287579, 35.527392483711765 ], [ -76.512948933041713, 35.270433245393932 ], [ -76.974957007306543, 35.025174446975555 ], [ -76.439801957595122, 34.842911256429005 ], [ -77.412267815004256, 34.730795773636515 ], [ -78.013340835980244, 33.911808925988396 ], [ -78.564272253480979, 33.876663660975836 ], [ -79.653555742299474, 34.796790649200901 ], [ -80.784081908472501, 34.828629029321689 ], [ -81.087315562618073, 35.155714002736488 ], [ -84.324689953692229, 34.988095588139231 ], [ -83.871306147334508, 35.514890041828593 ], [ -82.051365892362426, 36.122862477130269 ], [ -81.658890291453162, 36.610578560188287 ], [ -75.924872738733384, 36.382996764397362 ] ] ], [ [ [ -75.558687422030147, 35.879361491278942 ], [ -75.534198895705359, 35.8190795065575 ], [ -75.809790947233978, 36.271046076533025 ], [ -75.889057307679636, 36.550505315709174 ], [ -75.558687422030147, 35.879361491278942 ] ] ], [ [ [ -75.635690598795705, 35.855894693508759 ], [ -75.65077482788675, 35.835591958359274 ], [ -75.717176197607259, 35.946125409841414 ], [ -75.64886320672008, 35.910386883087469 ], [ -75.635690598795705, 35.855894693508759 ] ] ], [ [ [ -75.544119550380671, 35.240099992283689 ], [ -75.690105884074612, 35.221566056029801 ], [ -75.503525066410248, 35.769157629653137 ], [ -75.464743326649582, 35.44864248070769 ], [ -75.544119550380671, 35.240099992283689 ] ] ], [ [ [ -75.781962577031791, 35.190200088036406 ], [ -75.96367645115113, 35.118843884142507 ], [ -75.984198912871491, 35.123073620631985 ], [ -75.864920343868249, 35.174127089376384 ], [ -75.781962577031791, 35.190200088036406 ] ] ], [ [ [ -76.503643512764853, 34.642949090597938 ], [ -76.437033402802015, 34.756328001172989 ], [ -76.207386177244786, 34.938898808918765 ], [ -76.357712110713649, 34.803668090869508 ], [ -76.503643512764853, 34.642949090597938 ] ] ], [ [ [ -76.546226522201778, 34.654858270739737 ], [ -76.607793907362876, 34.663570429275197 ], [ -76.673920618869786, 34.700154903327032 ], [ -76.622273888384001, 34.694551875769548 ], [ -76.546226522201778, 34.654858270739737 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"North Dakota\", \"type\": \"State\", \"postal\": \"ND\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -96.570480215753932, 46.019237366365758 ], [ -104.0110865786921, 45.943058164241023 ], [ -104.03392715573527, 48.993137626295436 ], [ -97.225737809109404, 48.993181571609597 ], [ -96.570480215753932, 46.019237366365758 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Nebraska\", \"type\": \"State\", \"postal\": \"NE\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -103.33663037620583, 43.001380805931177 ], [ -98.441765077176839, 43.001095161389031 ], [ -96.804527465893059, 42.701421077691748 ], [ -96.383751082654214, 42.417776047340283 ], [ -95.34668012024153, 40.001486892666179 ], [ -102.02448921287036, 40.001124343824216 ], [ -102.02500557031193, 41.000627555780369 ], [ -104.02165542675152, 41.000858268679792 ], [ -104.02886245827645, 43.001402778588272 ], [ -103.33663037620583, 43.001380805931177 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"New Hampshire\", \"type\": \"State\", \"postal\": \"NH\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -71.084549067761557, 45.294007846512955 ], [ -70.806111557140014, 42.876762881255502 ], [ -72.466859911508166, 42.730315121762715 ], [ -72.031208039420605, 44.300733882841314 ], [ -71.084549067761557, 45.294007846512955 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"New Jersey\", \"type\": \"State\", \"postal\": \"NJ\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -74.241514520221486, 40.456265962749001 ], [ -73.972250593934262, 40.400323577802453 ], [ -74.079916613666384, 39.788110419682766 ], [ -74.064590685347383, 39.993115310315574 ], [ -74.954307516162388, 38.949952428725197 ], [ -75.524245282044404, 39.490172175895452 ], [ -74.734888562479711, 40.154504476628347 ], [ -75.189019439178423, 40.5958143079161 ], [ -75.1230355499426, 40.999001579155845 ], [ -74.699051158768867, 41.357298711964432 ], [ -73.910078960703217, 40.992255973429764 ], [ -74.241514520221486, 40.456265962749001 ] ] ], [ [ [ -74.133222279762336, 39.680784976135499 ], [ -74.250501336970558, 39.529371396140789 ], [ -74.106767200628155, 39.746439275515002 ], [ -74.133222279762336, 39.680784976135499 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"New Mexico\", \"type\": \"State\", \"postal\": \"NM\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -106.56635828261329, 31.819528572736743 ], [ -108.21184113346942, 31.779329596593897 ], [ -108.21445038649864, 31.329428456384647 ], [ -109.04780735188244, 31.327879384059941 ], [ -109.04667026687812, 37.000845909060189 ], [ -103.00083873741983, 37.000845909060189 ], [ -103.06564159633717, 32.002747573866614 ], [ -106.66826197302404, 32.000945815985375 ], [ -106.56635828261329, 31.819528572736743 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Nevada\", \"type\": \"State\", \"postal\": \"NV\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -114.0619237540933, 36.175212332642886 ], [ -114.71575861790231, 36.08498161631023 ], [ -114.61054254943551, 34.991116828488856 ], [ -120.0000617979981, 39.000258827128619 ], [ -120.00080886833911, 42.00055923454974 ], [ -114.04259330901996, 42.001108550976937 ], [ -114.0619237540933, 36.175212332642886 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"New York\", \"type\": \"State\", \"postal\": \"NY\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -73.352182210905525, 45.005418968316661 ], [ -73.25332722666576, 42.752221860879644 ], [ -73.484139003048654, 41.218958862937171 ], [ -73.987082137468789, 40.751391706429018 ], [ -73.871967386983755, 41.055163690673254 ], [ -73.925327984722429, 41.218057983996545 ], [ -73.910078960703217, 40.992255973429764 ], [ -74.935367085752361, 41.474369028930312 ], [ -75.351342443417437, 41.998416900483647 ], [ -79.762957601941579, 42.000899810734609 ], [ -79.762023764015325, 42.538977223838742 ], [ -78.915076710222479, 42.90913959147494 ], [ -79.171849180955078, 43.466574915473785 ], [ -76.81996188420645, 43.628788056427368 ], [ -75.179384429045257, 44.899378925209049 ], [ -73.352182210905525, 45.005418968316661 ] ] ], [ [ [ -72.509783497129945, 40.98602672514528 ], [ -71.903206325553356, 41.060700800259468 ], [ -74.03203819387123, 40.638682961895142 ], [ -72.27413773618764, 41.153040891672589 ], [ -72.509783497129945, 40.98602672514528 ] ] ], [ [ [ -74.188131949825731, 40.522854100054758 ], [ -74.188153922482812, 40.614600929726492 ], [ -74.068754503865591, 40.649306741597286 ], [ -74.079707873424056, 40.58646494232508 ], [ -74.188131949825731, 40.522854100054758 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Ohio\", \"type\": \"State\", \"postal\": \"OH\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -80.520278187471689, 41.696237933878308 ], [ -80.874312624805157, 39.664294496990806 ], [ -82.072272875581831, 38.962949255392857 ], [ -82.387064147355801, 38.433990494980321 ], [ -84.821711457027092, 39.091983684143258 ], [ -84.796113311519349, 41.701434467279654 ], [ -83.12166500545672, 41.950000150589801 ], [ -82.439073426683535, 41.674869524860043 ], [ -80.52076158592763, 42.324392254715491 ], [ -80.520278187471689, 41.696237933878308 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Oklahoma\", \"type\": \"State\", \"postal\": \"OK\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -94.618303017260843, 36.625882515850222 ], [ -94.484148959408898, 33.648433671800802 ], [ -95.215860413102718, 33.95903915239947 ], [ -97.119000134139242, 33.734764241500301 ], [ -99.999340820187399, 34.586721061109259 ], [ -100.00244445800111, 36.500902042332584 ], [ -103.0002949141569, 36.501231632188905 ], [ -103.00083873741983, 37.000845909060189 ], [ -94.618066811197139, 37.000845909060189 ], [ -94.618303017260843, 36.625882515850222 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Oregon\", \"type\": \"State\", \"postal\": \"OR\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -123.96294586030294, 46.225450753138432 ], [ -123.04227504881496, 46.160027166658352 ], [ -122.72591273205919, 45.673750292639596 ], [ -122.20253502654704, 45.591067184016737 ], [ -116.89647891593393, 46.002098693836984 ], [ -116.47704286477747, 45.641087937878012 ], [ -117.20170109554599, 44.436206300118556 ], [ -116.91242007865142, 44.199472892650391 ], [ -117.01667484337061, 42.00055923454974 ], [ -124.22840851691392, 42.000767974792069 ], [ -124.53962923191105, 42.812866394443034 ], [ -124.14871918281932, 43.691728732656486 ], [ -123.96294586030294, 46.225450753138432 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Pennsylvania\", \"type\": \"State\", \"postal\": \"PA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -75.320877354364654, 39.864696115963653 ], [ -80.519443226502332, 39.722511051945958 ], [ -80.52076158592763, 42.324392254715491 ], [ -79.762023764015325, 42.538977223838742 ], [ -79.762957601941579, 42.000899810734609 ], [ -75.351342443417437, 41.998416900483647 ], [ -74.699051158768867, 41.357298711964432 ], [ -75.192282378756033, 40.689868266582096 ], [ -74.734888562479711, 40.154504476628347 ], [ -75.320877354364654, 39.864696115963653 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Rhode Island\", \"type\": \"State\", \"postal\": \"RI\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -71.34072827675277, 41.797916404553888 ], [ -71.522859631356781, 41.37897473818191 ], [ -71.842353051747608, 41.335512822461482 ], [ -71.800835716179478, 42.011963043578504 ], [ -71.34072827675277, 41.797916404553888 ] ] ], [ [ [ -71.241378907728517, 41.491969127257931 ], [ -71.346232427353371, 41.469403208428361 ], [ -71.232051514794577, 41.654303117825492 ], [ -71.241378907728517, 41.491969127257931 ] ] ], [ [ [ -71.365359625348631, 41.485267466846039 ], [ -71.393078132265387, 41.466744516920699 ], [ -71.38398145223087, 41.570532362676772 ], [ -71.354472173761437, 41.542297498318447 ], [ -71.365359625348631, 41.485267466846039 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"South Carolina\", \"type\": \"State\", \"postal\": \"SC\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -81.051170541708004, 35.088972056831111 ], [ -80.784081908472501, 34.828629029321689 ], [ -79.653555742299474, 34.796790649200901 ], [ -78.564272253480979, 33.876663660975836 ], [ -79.940727384113572, 32.667156778899312 ], [ -80.634195428145404, 32.511733188986 ], [ -80.579340689724745, 32.287326442144305 ], [ -80.802560913083667, 32.448045442415875 ], [ -80.872346071995764, 32.029565201842743 ], [ -83.355574926489055, 34.708317745435295 ], [ -82.39253533897076, 35.21093128999911 ], [ -81.051170541708004, 35.088972056831111 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"South Dakota\", \"type\": \"State\", \"postal\": \"SD\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -104.0110865786921, 45.943058164241023 ], [ -96.556401235724678, 45.942772519698877 ], [ -96.851060060441583, 45.626003708786953 ], [ -96.453668077508837, 45.29733670406182 ], [ -96.480952624448094, 42.511258716921986 ], [ -98.441765077176839, 43.001095161389031 ], [ -104.02886245827645, 43.001402778588272 ], [ -104.0110865786921, 45.943058164241023 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Tennessee\", \"type\": \"State\", \"postal\": \"TN\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.868714747089172, 36.675046336085046 ], [ -83.730384511099402, 36.586815131547411 ], [ -81.658890291453162, 36.610578560188287 ], [ -82.051365892362426, 36.122862477130269 ], [ -83.871306147334508, 35.514890041828593 ], [ -84.324689953692229, 34.988095588139231 ], [ -90.293705073970216, 35.001114387463986 ], [ -89.557313444316605, 36.501077823589299 ], [ -87.868714747089172, 36.675046336085046 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Texas\", \"type\": \"State\", \"postal\": \"TX\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -102.81291758767308, 36.501209659531824 ], [ -100.00244445800111, 36.500902042332584 ], [ -99.999340820187399, 34.586721061109259 ], [ -99.15750790233183, 34.223282326542048 ], [ -97.119000134139242, 33.734764241500301 ], [ -95.215860413102718, 33.95903915239947 ], [ -94.047327043331393, 33.55443464477753 ], [ -94.043300553919991, 31.999231948732501 ], [ -93.530590573424149, 31.046189920189335 ], [ -93.710629032440508, 30.112813419740093 ], [ -93.890464244378805, 29.689356372336491 ], [ -94.759609174994992, 29.384255042338424 ], [ -94.526265049882682, 29.547962323973991 ], [ -95.022874565897141, 29.702320240018523 ], [ -94.888286548067711, 29.370555090643933 ], [ -95.853419031173658, 28.64034876396066 ], [ -96.640040154930873, 28.708760631804736 ], [ -96.421110092868417, 28.457338503073117 ], [ -97.15649098029597, 28.144359975508934 ], [ -97.439108788928536, 27.328284504924994 ], [ -97.768445959694887, 27.457494714932096 ], [ -97.146235242600056, 25.961464384425568 ], [ -99.107767299848433, 26.446917283803501 ], [ -99.505318584545066, 27.548340665663218 ], [ -101.38034429083724, 29.742552175146997 ], [ -102.34307626115631, 29.864972834113857 ], [ -103.09000927304798, 29.041866113261705 ], [ -103.42293348008397, 29.070683253032854 ], [ -104.40062333671581, 29.573747237066982 ], [ -104.91785419140754, 30.583357871283695 ], [ -106.66826197302404, 32.000945815985375 ], [ -103.06564159633717, 32.002747573866614 ], [ -103.04215282590989, 36.500616397790438 ], [ -102.81291758767308, 36.501209659531824 ] ] ], [ [ [ -95.039694634898154, 29.145917630902829 ], [ -95.089665950280974, 29.136304593426743 ], [ -94.767618208503634, 29.339035314050932 ], [ -94.864951586240053, 29.252891511936681 ], [ -95.039694634898154, 29.145917630902829 ] ] ], [ [ [ -96.764399900885749, 28.152566762931372 ], [ -96.755610838050472, 28.202433708193013 ], [ -96.403564926183492, 28.38157678143304 ], [ -96.413331772259198, 28.337807248513357 ], [ -96.764399900885749, 28.152566762931372 ] ] ], [ [ [ -97.014355354756731, 27.901628032655694 ], [ -96.978671759645508, 28.013842392405081 ], [ -96.85741565150434, 28.132912221165981 ], [ -96.83976611469825, 28.088802112061444 ], [ -97.014355354756731, 27.901628032655694 ] ] ], [ [ [ -97.353613180198394, 27.300060626895217 ], [ -97.250907487803914, 27.541188565781013 ], [ -97.060558359448933, 27.822021096025182 ], [ -97.384825339592169, 27.242525224309787 ], [ -97.353613180198394, 27.300060626895217 ] ] ], [ [ [ -97.17070179626775, 26.159383093147454 ], [ -97.402084861734949, 26.820507385945461 ], [ -97.385989890417846, 27.196503494038581 ], [ -97.351234640068597, 26.801468078578552 ], [ -97.17070179626775, 26.159383093147454 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Utah\", \"type\": \"State\", \"postal\": \"UT\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -113.66853628791489, 42.001075591991309 ], [ -111.0502964419432, 42.000877838077514 ], [ -111.04998882474398, 41.000858268679792 ], [ -109.04639011550024, 41.000858268679792 ], [ -109.04667026687812, 37.000845909060189 ], [ -114.04026970053289, 37.00415279395196 ], [ -114.04259330901996, 42.001108550976937 ], [ -113.66853628791489, 42.001075591991309 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Virginia\", \"type\": \"State\", \"postal\": \"VA\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -77.948598401869887, 39.216315964276788 ], [ -77.053047830597976, 38.915301548497126 ], [ -77.313698475306623, 38.396625991601837 ], [ -76.264284372774654, 37.893551021239176 ], [ -76.49248140296406, 37.682218005364973 ], [ -76.939976537222137, 38.09545776722257 ], [ -77.111099590624974, 38.165682379276433 ], [ -76.549456502793731, 37.669144274397496 ], [ -76.305570995443361, 37.571508772626117 ], [ -76.453930376102832, 37.273537569853175 ], [ -76.75769137401852, 37.505436992761929 ], [ -76.338277295519134, 37.013117638043937 ], [ -76.63089815629111, 37.221704071782128 ], [ -77.25088963502003, 37.329194310257563 ], [ -76.487856158646991, 36.897025104318487 ], [ -75.999414977905062, 36.912658649836729 ], [ -75.857427667801176, 36.550582220008991 ], [ -83.667520739170087, 36.605030464273526 ], [ -81.965277021890898, 37.539725324148051 ], [ -81.589017241912728, 37.208070038058906 ], [ -80.371182722799773, 37.47259885674363 ], [ -79.639603105048479, 38.572451193621532 ], [ -79.240272035127703, 38.476518572774495 ], [ -78.322221462997476, 39.451851861933648 ], [ -77.948598401869887, 39.216315964276788 ] ] ], [ [ [ -75.333050206391519, 37.888277583538013 ], [ -75.378544592892609, 37.872050776278385 ], [ -75.225790680815521, 38.040339356916832 ], [ -75.225845612458244, 38.040262452617014 ], [ -75.333050206391519, 37.888277583538013 ] ] ], [ [ [ -75.853999933295427, 37.296641818781396 ], [ -75.888156428739009, 37.619156479521862 ], [ -75.37596280568475, 38.02499145594075 ], [ -75.58710905397372, 37.558720686200786 ], [ -75.853999933295427, 37.296641818781396 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Vermont\", \"type\": \"State\", \"postal\": \"VT\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -72.296692668688664, 43.714953831198699 ], [ -72.466859911508166, 42.730315121762715 ], [ -73.25332722666576, 42.752221860879644 ], [ -73.352182210905525, 45.005418968316661 ], [ -71.517520275684348, 45.007561302382754 ], [ -72.296692668688664, 43.714953831198699 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Washington\", \"type\": \"State\", \"postal\": \"WA\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -117.03737308634769, 48.833660081149361 ], [ -116.89647891593393, 46.002098693836984 ], [ -122.64984888638415, 45.627442917826244 ], [ -122.94199733502873, 46.114862370013583 ], [ -124.07275970726545, 46.279448557932653 ], [ -123.88915069147225, 46.660014978700104 ], [ -124.11254669608789, 46.86266879502449 ], [ -123.84287627564453, 46.963182714874421 ], [ -124.13923798128576, 46.95470126923837 ], [ -124.70166109844362, 48.151639791460468 ], [ -124.70997774915151, 48.380375151748524 ], [ -122.7785976705924, 48.137577290924014 ], [ -122.65664393058867, 47.881134410047764 ], [ -122.82138392710738, 47.793155891066647 ], [ -123.13904263063134, 47.386101432179373 ], [ -122.53280054207536, 47.919707409566058 ], [ -122.67547999087752, 47.612342895887906 ], [ -122.57788843442032, 47.293190051681961 ], [ -123.02757534122296, 47.138909039937232 ], [ -122.7019350700117, 47.110871929492703 ], [ -122.35381677059922, 47.371577505844073 ], [ -122.24201439817024, 48.010762100539523 ], [ -122.7887765039885, 48.993027763009991 ], [ -117.03737308634769, 48.833660081149361 ] ], [ [ -122.85309047128564, 47.204717147916369 ], [ -122.84919032465248, 47.216296738201834 ], [ -122.88510463266313, 47.274711047070781 ], [ -122.90797267552766, 47.226107529591701 ], [ -122.85309047128564, 47.204717147916369 ] ] ], [ [ [ -123.04920192896201, 48.993027763009991 ], [ -123.06325893633417, 48.977734793676603 ], [ -123.08643459639794, 48.993027763009991 ], [ -123.04920192896201, 48.993027763009991 ] ] ], [ [ [ -122.78214076154786, 48.672688395321273 ], [ -122.89254237708748, 48.594498695072929 ], [ -123.00285060883446, 48.65219889258654 ], [ -122.89771144466746, 48.710360515898969 ], [ -122.78214076154786, 48.672688395321273 ] ] ], [ [ [ -123.01313381235174, 48.500862216891619 ], [ -123.13992153691487, 48.507948398802569 ], [ -123.16214138639531, 48.606385902557662 ], [ -123.11418606230032, 48.613263344226255 ], [ -123.01313381235174, 48.500862216891619 ] ] ], [ [ [ -122.82092250130853, 48.431362702521682 ], [ -122.92161220241516, 48.456938875372316 ], [ -122.91223537100277, 48.537963048385024 ], [ -122.86890529122485, 48.548608800744262 ], [ -122.82092250130853, 48.431362702521682 ] ] ], [ [ [ -122.57276880531877, 48.15664955727658 ], [ -122.36673669296708, 47.985438613245378 ], [ -122.38314477464769, 47.923201062043091 ], [ -122.74151881175607, 48.225270165362986 ], [ -122.62863428596549, 48.384231353067491 ], [ -122.57276880531877, 48.15664955727658 ] ] ], [ [ [ -122.49727075556375, 47.594588988960652 ], [ -122.57592188161092, 47.619473023113045 ], [ -122.54977441967598, 47.703957889617129 ], [ -122.50786706944453, 47.682644412241586 ], [ -122.49727075556375, 47.594588988960652 ] ] ], [ [ [ -122.39412561002752, 47.395242057528066 ], [ -122.50993249921082, 47.357987417435027 ], [ -122.4864711946049, 47.488779658752492 ], [ -122.46859094489939, 47.489966182235236 ], [ -122.39412561002752, 47.395242057528066 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Wisconsin\", \"type\": \"State\", \"postal\": \"WI\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -90.298846675728853, 46.760715666135297 ], [ -90.118550037991696, 46.341664136477874 ], [ -88.151744543042156, 45.945409238549445 ], [ -87.653613420524337, 45.121797146584271 ], [ -87.115272335535124, 45.452364786147541 ], [ -86.264524012066019, 45.226903351765628 ], [ -87.032490349955367, 44.091466296733387 ], [ -87.039126092396003, 42.49280168496793 ], [ -90.650584970396594, 42.512983570503422 ], [ -91.117591824149002, 42.881651797457636 ], [ -91.319916050617053, 43.936284406048031 ], [ -92.769809294402648, 44.725849865855082 ], [ -92.896520114665975, 45.658578172920215 ], [ -92.292629100418424, 46.08437530830372 ], [ -92.291645824013727, 46.660718103726936 ], [ -90.654023691230904, 47.309098255413801 ], [ -89.95767722912052, 47.287136584654149 ], [ -90.298846675728853, 46.760715666135297 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"West Virginia\", \"type\": \"State\", \"postal\": \"WV\", \"admin\": \"United States of America\", \"sales_rgn\": 1 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -80.519553089787777, 39.838186105186736 ], [ -79.477499827380356, 39.722796696488103 ], [ -79.487980784811413, 39.210910690633085 ], [ -78.181135031834202, 39.685739810308888 ], [ -77.726641606293541, 39.34643803955305 ], [ -77.835790780379114, 39.145212445939393 ], [ -78.322221462997476, 39.451851861933648 ], [ -79.240272035127703, 38.476518572774495 ], [ -79.639603105048479, 38.572451193621532 ], [ -80.371182722799773, 37.47259885674363 ], [ -81.829266274514993, 37.298597385262255 ], [ -82.612778267294232, 38.448217790444914 ], [ -80.874312624805157, 39.664294496990806 ], [ -80.519080677660384, 40.646955667288864 ], [ -80.519553089787777, 39.838186105186736 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"iso_a2\": \"US\", \"name\": \"Wyoming\", \"type\": \"State\", \"postal\": \"WY\", \"admin\": \"United States of America\", \"sales_rgn\": 0 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -110.79953898608851, 41.000858268679792 ], [ -111.04998882474398, 41.000858268679792 ], [ -111.05086223786323, 45.001057395884658 ], [ -104.03721206796996, 45.001134300184475 ], [ -104.02165542675152, 41.000858268679792 ], [ -110.79953898608851, 41.000858268679792 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AF\", \"name\": \"Afghanistan\", \"type\": \"Sovereign country\", \"postal\": \"AF\", \"admin\": \"Afghanistan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 61.210817091725744, 35.650072333309225 ], [ 62.230651483005886, 35.270663967422294 ], [ 62.98466230657661, 35.404040839167621 ], [ 63.193538445900352, 35.857165635718914 ], [ 64.546479119733903, 36.312073269184268 ], [ 64.746105177677407, 37.111817735333304 ], [ 65.588947788357842, 37.305216783185642 ], [ 65.745630731066825, 37.661164048812068 ], [ 68.135562371701383, 37.023115139304309 ], [ 68.859445835245936, 37.344335842430596 ], [ 69.196272820924378, 37.151143500307427 ], [ 69.518785434857961, 37.60899669041342 ], [ 70.116578403610333, 37.588222764632093 ], [ 70.806820509732887, 38.486281643216415 ], [ 71.348131137990265, 38.258905341132163 ], [ 71.448693475230243, 37.06564484308052 ], [ 71.844638299450594, 36.738171291646921 ], [ 73.260055779925011, 37.495256862939002 ], [ 74.980002475895418, 37.419990139305895 ], [ 75.158027785140916, 37.133030910789117 ], [ 71.846291945283923, 36.509942328429858 ], [ 71.26234826038575, 36.074387518857804 ], [ 71.613076206350712, 35.153203436822864 ], [ 70.881803012988399, 33.98885590263852 ], [ 69.930543247359594, 34.02012014417511 ], [ 70.323594191371598, 33.358532619758392 ], [ 69.687147251264861, 33.105498969041236 ], [ 69.262522007122556, 32.5019440780883 ], [ 69.317764113242561, 31.901412258424443 ], [ 66.938891229118468, 31.304911200479353 ], [ 66.381457553986024, 30.738899237586452 ], [ 66.346472609324422, 29.887943427036177 ], [ 64.148002150331251, 29.340819200145972 ], [ 62.549856805272782, 29.318572496044311 ], [ 60.874248488208792, 29.829238999952608 ], [ 61.781221551363444, 30.735850328081238 ], [ 61.699314406180832, 31.379506130492672 ], [ 60.941944614511129, 31.548074652628753 ], [ 60.536077915290775, 32.981268825811568 ], [ 60.963700392506006, 33.528832302376259 ], [ 60.528429803311582, 33.676446031218006 ], [ 61.210817091725744, 35.650072333309225 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AO\", \"name\": \"Angola\", \"type\": \"Sovereign country\", \"postal\": \"AO\", \"admin\": \"Angola\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 16.326528354567046, -5.877470391466218 ], [ 17.472970004962292, -8.068551120641658 ], [ 19.016751743249671, -7.98824594486014 ], [ 19.417502475673217, -7.155428562044278 ], [ 20.09162153492062, -6.943090101756951 ], [ 20.601822950938327, -6.939317722199689 ], [ 20.51474816252653, -7.299605808138665 ], [ 21.728110792739756, -7.290872491081316 ], [ 22.155268182064333, -11.084801120653779 ], [ 23.912215203555746, -10.926826267137542 ], [ 24.016136508894704, -12.911046237848552 ], [ 21.933886346125945, -12.898437188369357 ], [ 21.887842644953878, -16.080310153876894 ], [ 23.215048455506093, -17.523116143465955 ], [ 21.377176141045595, -17.93063648851971 ], [ 18.956186964603631, -17.789094740472237 ], [ 18.263309360434221, -17.309950860262006 ], [ 14.058501417709039, -17.423380629142656 ], [ 13.462362094789967, -16.971211846588744 ], [ 11.73419884608515, -17.301889336824502 ], [ 12.175618930722266, -14.449143568583892 ], [ 13.633721144269828, -12.038644707897191 ], [ 13.738727654686926, -11.297863050993143 ], [ 12.875369500386569, -9.166933689005489 ], [ 13.236432732809874, -8.562629489784342 ], [ 12.72829837408392, -6.927122084178805 ], [ 12.227347039446443, -6.294447523629373 ], [ 13.375597364971895, -5.864241224799557 ], [ 16.326528354567046, -5.877470391466218 ] ] ], [ [ [ 12.436688266660923, -5.684303887559224 ], [ 12.182336866920281, -5.789930515163803 ], [ 11.914963006242118, -5.037986748884734 ], [ 12.62075971848455, -4.438023369976122 ], [ 12.995517205465205, -4.781103203961919 ], [ 12.468004184629763, -5.248361504744992 ], [ 12.436688266660923, -5.684303887559224 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AL\", \"name\": \"Albania\", \"type\": \"Sovereign country\", \"postal\": \"AL\", \"admin\": \"Albania\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 20.59024743010491, 41.855404161133606 ], [ 20.463175083099202, 41.51508901627534 ], [ 20.999989861747224, 40.580003973953978 ], [ 20.15001590341052, 39.624997666983973 ], [ 19.406081984136733, 40.250773423822466 ], [ 19.540027296637106, 41.719986070312757 ], [ 19.304486118250793, 42.19574514420782 ], [ 19.738051385179631, 42.688247382165571 ], [ 20.52295, 42.21787 ], [ 20.59024743010491, 41.855404161133606 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AE\", \"name\": \"United Arab Emirates\", \"type\": \"Sovereign country\", \"postal\": \"AE\", \"admin\": \"United Arab Emirates\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 51.579518670463273, 24.245497137951105 ], [ 51.794389275932872, 24.019826158132506 ], [ 54.008000929587581, 24.121757920828216 ], [ 56.070820753814559, 26.055464178973981 ], [ 56.261041701080956, 25.714606431576769 ], [ 56.396847365144005, 24.924732163995486 ], [ 55.886232537668008, 24.920830593357447 ], [ 55.981213820220461, 24.130542914317829 ], [ 55.528631626208238, 23.933604030853502 ], [ 55.006803012924905, 22.496947536707136 ], [ 52.000733270074335, 23.00115448657894 ], [ 51.579518670463273, 24.245497137951105 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AR\", \"name\": \"Argentina\", \"type\": \"Sovereign country\", \"postal\": \"AR\", \"admin\": \"Argentina\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -65.5, -55.2 ], [ -68.63335, -54.8695 ], [ -68.634010227583161, -52.63637045887446 ], [ -67.75, -53.85 ], [ -65.05, -54.7 ], [ -65.5, -55.2 ] ] ], [ [ [ -64.964892137294584, -22.075861504812352 ], [ -64.377021043542271, -22.798091322523547 ], [ -63.986838141522469, -21.993644301035957 ], [ -62.846468471921554, -22.034985446869456 ], [ -60.84656470400995, -23.880712579038303 ], [ -57.777217169817959, -25.16233977630904 ], [ -57.633660040911138, -25.60365650808167 ], [ -58.618173590719721, -27.123718763947124 ], [ -56.486701626192996, -27.54849903738625 ], [ -55.6958455063982, -27.387837009390822 ], [ -54.788794928595053, -26.621785577096091 ], [ -54.625290696823555, -25.739255466415486 ], [ -54.130049607954419, -25.54763925547725 ], [ -53.62834896504873, -26.124865004177437 ], [ -53.648735317587892, -26.923472588816111 ], [ -55.162286342984601, -27.881915378533421 ], [ -57.625133429582917, -30.216294854454247 ], [ -58.495442064026548, -34.431489760070107 ], [ -57.225829637263644, -35.288026625307893 ], [ -57.362358771378751, -35.977390232081504 ], [ -56.737487352105461, -36.413125909166581 ], [ -56.788285285048346, -36.901571547189334 ], [ -57.749156867083428, -38.183870538079915 ], [ -59.231857062401872, -38.720220228837206 ], [ -62.335956997310149, -38.827707208004369 ], [ -62.145994432205242, -40.676896661136738 ], [ -62.745802781816991, -41.028761488612091 ], [ -63.770494757732536, -41.166789239263665 ], [ -64.732089809819712, -40.802677097335135 ], [ -65.118035244391592, -41.064314874028881 ], [ -64.978560553635845, -42.058000990569326 ], [ -64.30340796574248, -42.359016208669502 ], [ -63.75594784204236, -42.043686618824509 ], [ -63.45805904809589, -42.563138116222362 ], [ -65.181803961839705, -43.495380954767796 ], [ -65.565268927661606, -45.036785577169795 ], [ -66.509965786389358, -45.03962778094585 ], [ -67.293793911392441, -45.551896254255198 ], [ -67.580546434180093, -46.301772963242541 ], [ -66.597066413017274, -47.033924655953811 ], [ -65.641026577401448, -47.236134535511894 ], [ -65.985088263600744, -48.133289076531142 ], [ -67.166178961847663, -48.697337334996945 ], [ -67.816087612566463, -49.869668877970419 ], [ -69.138539191347803, -50.732510267947802 ], [ -68.815561489523532, -51.771104011594105 ], [ -68.149994879820412, -52.349983406127706 ], [ -71.914803839796349, -52.009022305865926 ], [ -72.329403856074038, -51.425956312872408 ], [ -72.30997351753237, -50.677009779666356 ], [ -72.975746832964631, -50.741450290734313 ], [ -73.328050910114484, -50.378785088909872 ], [ -73.415435757120036, -49.318436374712959 ], [ -72.648247443314943, -48.878618259476788 ], [ -72.331160854771952, -48.244238376661826 ], [ -72.447355312780275, -47.738532810253531 ], [ -71.552009446891248, -45.560732924177131 ], [ -71.65931555854533, -44.973688653341441 ], [ -71.222778896759735, -44.784242852559416 ], [ -71.793622606071949, -44.207172133156106 ], [ -71.464056159130507, -43.787611179378331 ], [ -71.915423956983915, -43.408564548517418 ], [ -72.148898078078531, -42.254888197601389 ], [ -71.746803758415467, -42.051386407235995 ], [ -71.915734015577556, -40.832339369470731 ], [ -71.413516608349056, -38.916022230791114 ], [ -70.814664272734717, -38.552995293940739 ], [ -71.121880662709799, -36.658123874662337 ], [ -70.364769253201672, -36.005088799789945 ], [ -70.388049485949097, -35.169687595359449 ], [ -69.817309129501467, -34.193571465798286 ], [ -69.814776984319224, -33.273886000299854 ], [ -70.535068935819453, -31.365010267870289 ], [ -69.919008348251936, -30.336339206668313 ], [ -70.013550381129875, -29.367922865518551 ], [ -69.656130337183157, -28.459141127233693 ], [ -68.295541551370405, -26.89933969493579 ], [ -68.594799770772681, -26.506908868111267 ], [ -68.417652960876126, -24.518554782816878 ], [ -67.328442959244143, -24.025303236590915 ], [ -67.106673550063618, -22.7359245744764 ], [ -66.273339402924847, -21.832310479420684 ], [ -64.964892137294584, -22.075861504812352 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AM\", \"name\": \"Armenia\", \"type\": \"Sovereign country\", \"postal\": \"ARM\", \"admin\": \"Armenia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 43.582745802592733, 41.092143256182567 ], [ 44.972480096218078, 41.248128567055595 ], [ 45.560351189970447, 40.812289537105926 ], [ 45.35917483905817, 40.561503811193461 ], [ 45.891907179555091, 40.218475653639999 ], [ 45.610012241402927, 39.899993801425182 ], [ 46.483498976432458, 39.464154771475535 ], [ 46.505719842317973, 38.770605373686294 ], [ 46.143623081248819, 38.741201483712217 ], [ 45.739978468616982, 39.473999131827128 ], [ 43.656436395040942, 40.253563951166186 ], [ 43.582745802592733, 41.092143256182567 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AQ\", \"name\": \"Antarctica\", \"type\": \"Indeterminate\", \"postal\": \"AQ\", \"admin\": \"Antarctica\", \"sales_rgn\": 5 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -59.572094692611529, -80.040178725096297 ], [ -60.1596557277702, -81.000326837079314 ], [ -64.488125372969762, -80.921933689292558 ], [ -66.29003089055513, -80.25577280061799 ], [ -61.883245612217138, -80.392870375488286 ], [ -60.610119188058405, -79.628679294756125 ], [ -59.572094692611529, -80.040178725096297 ] ] ], [ [ [ -159.20818356019765, -79.497059421708727 ], [ -161.12760128481466, -79.634208673011301 ], [ -163.71289567772874, -78.595666605797277 ], [ -163.10580095116381, -78.223337911134294 ], [ -161.24511349184638, -78.380175883140168 ], [ -159.48240454815448, -79.046337579258989 ], [ -159.20818356019765, -79.497059421708727 ] ] ], [ [ [ -45.154757656421026, -78.047069600586738 ], [ -43.920827806155756, -78.478102722333261 ], [ -43.333266770997085, -80.026122735512928 ], [ -50.482106899606464, -81.025441583173119 ], [ -54.164259406131606, -80.633527520671578 ], [ -53.98799109558405, -80.222028090331406 ], [ -50.991326463410587, -79.614623305172657 ], [ -48.660616014182523, -78.047017924154446 ], [ -46.662856818211026, -77.831475525065031 ], [ -45.154757656421026, -78.047069600586738 ] ] ], [ [ [ -121.21151139385712, -73.500990499006036 ], [ -119.91885127829205, -73.65772511814734 ], [ -118.72414303269191, -73.481353454735199 ], [ -120.23221716370998, -74.088809916326156 ], [ -122.62173539288614, -73.657776794579632 ], [ -122.40624467022903, -73.32461883559391 ], [ -121.21151139385712, -73.500990499006036 ] ] ], [ [ [ -125.55956640689531, -73.481353454735199 ], [ -124.03188187726685, -73.873267517236741 ], [ -127.28313045312616, -73.461768086896569 ], [ -126.55847184309721, -73.246225687807168 ], [ -125.55956640689531, -73.481353454735199 ] ] ], [ [ [ -98.981549648823901, -71.933334248999785 ], [ -96.787936774466232, -71.952971293270707 ], [ -96.200349901091442, -72.521205342752182 ], [ -100.78345516640921, -72.501619974913552 ], [ -102.33072506387639, -71.89416351332261 ], [ -98.981549648823901, -71.933334248999785 ] ] ], [ [ [ -68.451345994730417, -70.955822855766741 ], [ -68.333833787698694, -71.406493021784186 ], [ -68.784297247986984, -72.170735778948625 ], [ -71.075888637970138, -72.50384206150207 ], [ -72.388134121373781, -72.484256693663426 ], [ -71.898499925408288, -72.092342631161884 ], [ -74.190039638959064, -72.366692810199496 ], [ -74.953894822881381, -72.07275726332324 ], [ -75.01262508818121, -71.661257832983068 ], [ -73.230330776650561, -71.151779887017511 ], [ -72.074716559523551, -71.190950622694771 ], [ -71.741791144483187, -69.505782165656797 ], [ -71.173815477163146, -69.035474955368414 ], [ -70.253251512315728, -68.878740336227196 ], [ -68.451345994730417, -70.955822855766741 ] ] ], [ [ [ -58.614142829000912, -64.152467130133147 ], [ -60.611927863188697, -64.309201749274436 ], [ -62.022100185785433, -64.799094327401363 ], [ -62.648857794837369, -65.484942321890657 ], [ -62.120078701410705, -66.190325622674706 ], [ -63.745690070232371, -66.503846537389592 ], [ -65.508424852140564, -67.581610209268916 ], [ -65.665081956633287, -67.95388722749945 ], [ -64.783714565679333, -68.678907572554493 ], [ -63.197299770751044, -69.227556254197253 ], [ -61.806661139560589, -70.716767679984471 ], [ -60.69026933454316, -73.166178894187084 ], [ -60.827366909413428, -73.695242207991186 ], [ -61.96336992048569, -74.439847920884887 ], [ -63.295200771727963, -74.576997172187376 ], [ -64.352836473229587, -75.262846781565159 ], [ -69.797723761662837, -76.222994893548176 ], [ -70.600723843046239, -76.634494323888447 ], [ -77.240370246067613, -76.712887471675202 ], [ -76.926978522433586, -77.104801534176744 ], [ -73.656118740519446, -77.908111674153957 ], [ -77.925858120419264, -78.378418884442254 ], [ -78.02378495961247, -79.18183318472822 ], [ -75.360097418911749, -80.259545180175252 ], [ -59.691415574773458, -82.375850111824349 ], [ -58.222487148660917, -83.21843434034335 ], [ -49.761349860215461, -81.729171238123755 ], [ -42.808363409992381, -82.081914564948107 ], [ -40.771433478343596, -81.356894219893221 ], [ -28.549802212018704, -80.337938327962007 ], [ -29.685805223090966, -79.632503350745679 ], [ -29.685805223090966, -79.260226332514975 ], [ -35.639912075328255, -79.456131687333453 ], [ -35.914107225069017, -79.083854669102919 ], [ -35.777009650198721, -78.33924814876498 ], [ -28.882779303491361, -76.673665059565721 ], [ -22.45859778491095, -76.105431010084246 ], [ -17.522981736714172, -75.125697530262499 ], [ -15.701490851290259, -74.498604024400635 ], [ -15.407710333710867, -74.106741638331371 ], [ -16.465320196996373, -73.871613871403412 ], [ -15.446855231171952, -73.146541849916076 ], [ -12.293507656289563, -72.401936137022545 ], [ -10.295774298534155, -71.265416361627302 ], [ -7.416621873392415, -71.696501159806033 ], [ -6.868231573911118, -70.932310079073972 ], [ -4.341667446296867, -71.461373392878073 ], [ -0.659489101555522, -71.226245625950042 ], [ -0.228636847322065, -71.637745056290299 ], [ 6.273911980828927, -70.462054545217796 ], [ 7.742866245157842, -69.893768819304029 ], [ 8.487110223025326, -70.148533630502996 ], [ 9.525134718472202, -70.011332702768215 ], [ 10.81782067225339, -70.834331563448501 ], [ 13.422777947654396, -69.972161967090955 ], [ 14.734997592842006, -70.030918070606774 ], [ 15.126756626046586, -70.403246765269756 ], [ 15.949342075268646, -70.030918070606774 ], [ 19.259372592860046, -69.893768819304029 ], [ 21.452985467217815, -70.070140482716255 ], [ 22.569403110451447, -70.697182312145827 ], [ 27.093726434037279, -70.462054545217796 ], [ 31.990171746556854, -69.658641052376069 ], [ 33.8704187354966, -68.50258758557456 ], [ 36.162010125479782, -69.247141622035969 ], [ 37.200034620926573, -69.168748474249043 ], [ 38.649403517416914, -69.776204935840184 ], [ 41.959434035008229, -68.600514424767667 ], [ 46.503342726432635, -67.601195577107461 ], [ 47.443440382686305, -67.718759460571476 ], [ 48.990736118369597, -67.091717631141904 ], [ 50.753470900277733, -66.876175232052404 ], [ 50.949324578663919, -66.523483581660429 ], [ 51.791547072157044, -66.249133402622903 ], [ 54.533550245996054, -65.818048604444002 ], [ 56.355041131419881, -65.974783223585376 ], [ 58.744507684163949, -67.287674662392675 ], [ 61.427806430919333, -67.95388722749945 ], [ 62.387489455011661, -68.012695007447547 ], [ 64.052349074159025, -67.40523854585669 ], [ 68.890038283162909, -67.934301859660806 ], [ 69.673452996707482, -69.227556254197253 ], [ 69.555940789675816, -69.678226420214713 ], [ 67.812739699174159, -70.305268249644286 ], [ 67.949888950476662, -70.697182312145827 ], [ 69.066306593710266, -70.67754526787499 ], [ 67.949888950476662, -71.853287455379615 ], [ 69.869306675093952, -72.264786885719801 ], [ 71.024895054004588, -72.088415222307759 ], [ 73.864876743469239, -69.874183451465484 ], [ 77.644904412755267, -69.462684021125298 ], [ 79.113858677083925, -68.326215922162433 ], [ 82.776425815770409, -67.209281514605919 ], [ 86.752358839874859, -67.150473734657723 ], [ 87.477017449903798, -66.876175232052404 ], [ 87.986288690140242, -66.20991099051335 ], [ 88.828407830768555, -66.95456837983923 ], [ 89.670630324261566, -67.150473734657723 ], [ 94.175419956441004, -67.111302998980449 ], [ 95.781471795640272, -67.385653178017975 ], [ 99.718182407635055, -67.248503926715486 ], [ 102.83241092327265, -65.56328379324512 ], [ 106.18156050010876, -66.934931335568393 ], [ 110.23583499556784, -66.699803568640363 ], [ 113.60467329310737, -65.876804707959906 ], [ 115.60238081264654, -66.699803568640363 ], [ 119.8329236186531, -67.268089294553945 ], [ 123.22129560759893, -66.484261169550862 ], [ 128.80328047090242, -66.75861134858846 ], [ 134.75738732313991, -66.209962666945628 ], [ 135.07075320855782, -65.30857065847843 ], [ 135.69748497939358, -65.582869161083664 ], [ 136.61804894424111, -66.778196716427018 ], [ 137.46027143773395, -66.95456837983923 ], [ 145.49042728086502, -66.915345967729678 ], [ 146.19555219948782, -67.228866882444464 ], [ 145.99969852110152, -67.601195577107461 ], [ 146.64606733620823, -67.895131123983703 ], [ 148.83962853413371, -68.385023702110544 ], [ 152.50224734925249, -68.874812927372986 ], [ 153.63819868389257, -68.894501648076101 ], [ 154.28456749899928, -68.561292012658186 ], [ 156.81113162661339, -69.384290873338458 ], [ 159.18101281151874, -69.599833272427958 ], [ 161.57047936426281, -70.579618428681812 ], [ 167.30909549384299, -70.834331563448501 ], [ 171.20679039945762, -71.696501159806033 ], [ 169.28732099840832, -73.656019795881633 ], [ 166.09480268784844, -74.381040140936605 ], [ 164.2341927431797, -75.45880381281593 ], [ 163.56823856023428, -76.242580261386735 ], [ 163.48989708887976, -77.065579122067263 ], [ 164.74346398341615, -78.182513529623776 ], [ 166.60412560451735, -78.319611104494058 ], [ 166.99578128485743, -78.750747579105251 ], [ 161.76638471908112, -79.162247816889675 ], [ 159.78821089094842, -80.945394789553049 ], [ 163.70533613510477, -82.395435479662893 ], [ 168.89566531806796, -83.335998223807366 ], [ 169.40478152900758, -83.825890801934378 ], [ 172.28393395414938, -84.041433201023708 ], [ 173.22408328683539, -84.413710219254412 ], [ 175.98567182851312, -84.158997084487638 ], [ 180.00000000000014, -84.71338 ], [ 180.00000000000014, -90.0 ], [ -180.0, -90.0 ], [ -180.0, -84.71338 ], [ -179.0586773346912, -84.139411716649093 ], [ -177.25677181710574, -84.452932631363879 ], [ -175.82988216866252, -84.117914320815672 ], [ -174.38250281481569, -84.534323012223567 ], [ -172.8891055980128, -84.061018568862337 ], [ -169.95122290757143, -83.884646905450126 ], [ -167.02209937240332, -84.570496514827909 ], [ -158.07137956442494, -85.373910007669707 ], [ -155.19225297749929, -85.09955982863211 ], [ -148.5330728830715, -85.609037774597667 ], [ -143.10771847860045, -85.040752048683913 ], [ -142.89227943237563, -84.570496514827909 ], [ -150.06073157448395, -84.296146335790382 ], [ -150.90292822976073, -83.904232273288841 ], [ -153.5862011383002, -83.688689874199355 ], [ -152.66563717345275, -82.454191583178812 ], [ -152.86151669005505, -82.042692152838541 ], [ -156.8374497141595, -81.102129408694253 ], [ -152.09766150613282, -81.004150893068783 ], [ -150.64829260964262, -81.337308852054591 ], [ -146.41774899619185, -80.337938327962007 ], [ -146.77028642473118, -79.926438897621921 ], [ -149.53190080462511, -79.358204848140446 ], [ -155.32937639058576, -79.064269301264204 ], [ -158.05176835837011, -78.025675557617902 ], [ -158.36513424378796, -76.889207458654951 ], [ -156.97457312724595, -77.300758565427515 ], [ -153.74283240457675, -77.065579122067263 ], [ -152.92024695535477, -77.496663920245993 ], [ -151.3337804839943, -77.398737081052801 ], [ -146.10440894899, -76.477759704747058 ], [ -146.49609127499048, -75.733153991853541 ], [ -146.202309949967, -75.380410665029189 ], [ -144.90962399618576, -75.204039001616962 ], [ -144.32203712281108, -75.53719696060277 ], [ -135.21458269569129, -74.302698669582142 ], [ -121.07361283428624, -74.518241068671642 ], [ -117.46980099167121, -74.02834849054463 ], [ -116.21631161178341, -74.243890889633946 ], [ -113.94433142785508, -73.71482757582983 ], [ -112.29908301476259, -74.714198099922413 ], [ -111.26105851931563, -74.420262553046172 ], [ -107.55934648316811, -75.184453633778418 ], [ -104.87607357462866, -74.949325866850458 ], [ -100.64553076862231, -75.302017517242433 ], [ -100.11669999876327, -74.870932719063532 ], [ -101.25270300983553, -74.185083109685834 ], [ -102.54533728718451, -74.106741638331371 ], [ -103.11331295450454, -73.734412943668389 ], [ -103.68128862182439, -72.617530212544153 ], [ -99.137379930400101, -72.911414082988102 ], [ -97.688036872126105, -73.558041280256333 ], [ -96.336594814828914, -73.616849060204359 ], [ -92.439003262078955, -73.166178894187084 ], [ -90.088733283228436, -73.322913513328203 ], [ -89.226951260112941, -72.558722432595957 ], [ -88.42395117872951, -73.009392598613402 ], [ -86.01482174349843, -73.087785746400158 ], [ -85.192236294276569, -73.47969980890187 ], [ -81.470913052074138, -73.851976827132404 ], [ -80.295790981756994, -73.126956482077432 ], [ -76.221879442027074, -73.969540710596419 ], [ -74.890048590784801, -73.871613871403412 ], [ -68.935915900331224, -73.009392598613402 ], [ -67.36906063502559, -72.480329284809301 ], [ -67.251548427993669, -71.637745056290299 ], [ -68.544208543558938, -69.717397155891973 ], [ -67.427842576757513, -68.149844258750221 ], [ -67.741182623959332, -67.326845398069935 ], [ -63.001394415932566, -64.642308031827866 ], [ -62.041685553623978, -64.583551928311948 ], [ -58.594557461162282, -63.388224372968601 ], [ -57.223581712458838, -63.525425300703638 ], [ -58.614142829000912, -64.152467130133147 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TF\", \"name\": \"Fr. S. Antarctic Lands\", \"type\": \"Dependency\", \"postal\": \"TF\", \"admin\": \"French Southern and Antarctic Lands\", \"sales_rgn\": 5 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 68.935, -48.625 ], [ 70.525, -49.065 ], [ 70.56, -49.255 ], [ 70.28, -49.71 ], [ 68.745, -49.775 ], [ 68.935, -48.625 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AU\", \"name\": \"Australia\", \"type\": \"Country\", \"postal\": \"AU\", \"admin\": \"Australia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 145.39797814349484, -40.792548516605891 ], [ 146.36412072162372, -41.137695407883342 ], [ 148.28906782449602, -40.87543751400213 ], [ 148.35986453673584, -42.062445163746446 ], [ 147.91405195535381, -43.211522312188492 ], [ 147.56456424376401, -42.937688897473862 ], [ 146.87034305235497, -43.634597263362096 ], [ 146.04837772032042, -43.549744561538887 ], [ 144.71807132383063, -41.162551771815714 ], [ 144.74375451067968, -40.703975111657712 ], [ 145.39797814349484, -40.792548516605891 ] ] ], [ [ [ 143.56181115129996, -13.763655694232213 ], [ 143.92209923723894, -14.548310642152003 ], [ 144.56371382057486, -14.171176039285882 ], [ 145.37472374896348, -14.984976495018287 ], [ 145.48525963763578, -16.285672295804773 ], [ 146.38747846901961, -18.958274021075908 ], [ 148.84841352762325, -20.391209812097259 ], [ 148.71746544819561, -20.633468926681516 ], [ 149.67833703023067, -22.342511895438392 ], [ 150.07738244038862, -22.122783705333319 ], [ 150.48293908101519, -22.556142266533016 ], [ 150.72726525289121, -22.402404880464658 ], [ 150.89955447815228, -23.462236830338682 ], [ 152.85519738180594, -25.267501316023015 ], [ 153.13616214417678, -26.07117319102619 ], [ 153.09290897034859, -27.26029957449451 ], [ 153.56946902894421, -28.110066827102102 ], [ 152.89157759013941, -31.640445651985956 ], [ 152.45000247620536, -32.550002536755244 ], [ 151.70911746643682, -33.041342054986345 ], [ 150.32821984273326, -35.67187916437193 ], [ 149.99728397033616, -37.425260512035138 ], [ 149.42388227762555, -37.77268116633347 ], [ 148.30462243061592, -37.809061374666882 ], [ 146.3179219911548, -39.03575652441144 ], [ 144.87697635312819, -38.417448012039117 ], [ 145.03221235573298, -37.896187839510986 ], [ 143.60997358619611, -38.809465427405328 ], [ 140.63857872941324, -38.019332777662555 ], [ 139.99215823787435, -37.402936293285109 ], [ 139.57414757706525, -36.138362318670673 ], [ 139.0828080588341, -35.732754001611781 ], [ 138.12074791885632, -35.612296237939404 ], [ 138.44946170466503, -35.127261244447894 ], [ 138.20756432510669, -34.384722588845932 ], [ 137.71917036351616, -35.076825046531027 ], [ 136.82940555231474, -35.260534763328621 ], [ 137.89011600153768, -33.640478610978334 ], [ 137.81032759007914, -32.900007012668112 ], [ 136.37206912653167, -34.094766127256193 ], [ 135.98904341038437, -34.890118096660487 ], [ 135.20821251845413, -34.478670342752608 ], [ 135.23921837782919, -33.947953383114978 ], [ 134.08590376193914, -32.848072198214766 ], [ 134.27390262261704, -32.617233575166964 ], [ 131.32633060112093, -31.495803318001052 ], [ 126.14871382050117, -32.215966078420607 ], [ 124.22164798390494, -32.959486586236068 ], [ 123.65966678273074, -33.890179131812729 ], [ 119.89369510302825, -33.976065362281815 ], [ 118.02497195848954, -35.064732761374714 ], [ 116.62510908413495, -35.025096937806836 ], [ 115.02680870977954, -34.196517022438925 ], [ 115.04861616420678, -33.623425388322033 ], [ 115.71467370001668, -33.259571628554951 ], [ 115.68961063035513, -31.612437025683789 ], [ 115.16090905157697, -30.601594333622458 ], [ 115.04003787644629, -29.461095472940798 ], [ 113.33895307826251, -26.116545098578484 ], [ 113.77835778204027, -26.549025160429181 ], [ 113.44096235560662, -25.621278171493159 ], [ 114.23285200404732, -26.298446140245872 ], [ 113.39352339076268, -24.384764499613269 ], [ 114.14975630092189, -21.755881036061012 ], [ 114.22530724493268, -22.517488295178637 ], [ 114.6477620789187, -21.829519952076907 ], [ 116.71161543179156, -20.70168181730682 ], [ 117.44154503791427, -20.746898695562166 ], [ 119.25249393115067, -19.952941989829839 ], [ 120.85622033089666, -19.683707777589191 ], [ 122.24166548064179, -18.197648614171769 ], [ 122.31277225147542, -17.254967136303449 ], [ 123.01257449757193, -16.405199883695857 ], [ 123.43378909718305, -17.268558037996229 ], [ 123.85934451710662, -17.069035332917252 ], [ 123.50324222218327, -16.596506036040367 ], [ 123.81707319549193, -16.111316013251994 ], [ 124.25828657439988, -16.327943617419564 ], [ 124.37972619028582, -15.567059828353976 ], [ 125.68579634003052, -14.230655612853838 ], [ 126.12514936737611, -14.347340996968953 ], [ 126.14282270721989, -14.095986830301214 ], [ 127.06586714081735, -13.817967624570926 ], [ 128.35968997610897, -14.869169610252257 ], [ 129.62147342337963, -14.969783623924556 ], [ 129.40960005098302, -14.420669854391036 ], [ 130.33946577364296, -13.357375583553477 ], [ 130.18350630098601, -13.107520033422304 ], [ 130.617795037967, -12.536392103732467 ], [ 131.22349450086003, -12.183648776908115 ], [ 132.57529829318312, -12.114040622611014 ], [ 132.55721154188106, -11.603012383676685 ], [ 131.82469811414367, -11.273781833545101 ], [ 132.35722374891142, -11.128519382372644 ], [ 135.29849124566803, -12.248606052299053 ], [ 136.49247521377166, -11.857208754120393 ], [ 136.95162031468502, -12.351958916882737 ], [ 136.30540652887512, -13.291229750219898 ], [ 135.96175825413414, -13.324509372615893 ], [ 136.07761681533256, -13.724278252825783 ], [ 135.50018436090321, -14.997740573794431 ], [ 140.2152453960783, -17.710804945550066 ], [ 140.87546349503927, -17.369068698803943 ], [ 141.27409549373883, -16.388870131091608 ], [ 141.70218305884467, -15.044921156476931 ], [ 141.68699018775081, -12.407614434461138 ], [ 142.51526004452498, -10.668185723516643 ], [ 143.52212365129989, -12.834358412327433 ], [ 143.56181115129996, -13.763655694232213 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AT\", \"name\": \"Austria\", \"type\": \"Sovereign country\", \"postal\": \"A\", \"admin\": \"Austria\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 16.979666782304037, 48.123497015976305 ], [ 16.903754103267261, 47.714865627628328 ], [ 16.340584344150415, 47.71290192320123 ], [ 16.534267612380376, 47.496170966169117 ], [ 16.011663852612656, 46.683610744811702 ], [ 14.632471551174829, 46.431817328469549 ], [ 12.376485223040817, 46.76755910906985 ], [ 12.153088006243054, 47.115393174826451 ], [ 11.048555942436536, 46.751358547546339 ], [ 9.479969516649021, 47.102809963563374 ], [ 9.89606814946319, 47.580196845075704 ], [ 10.402083774465211, 47.302487697939164 ], [ 10.544504021861627, 47.566399237653769 ], [ 12.141357456112788, 47.703083401065776 ], [ 12.932626987365948, 47.467645575543997 ], [ 12.884102817443903, 48.289145819687917 ], [ 13.595945672264437, 48.877171942737149 ], [ 14.338897739324722, 48.555305284207208 ], [ 15.253415561593982, 49.039074205107582 ], [ 16.499282667718774, 48.785808010445109 ], [ 16.960288120194576, 48.5969823268506 ], [ 16.979666782304037, 48.123497015976305 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"AZ\", \"name\": \"Azerbaijan\", \"type\": \"Sovereign country\", \"postal\": \"AZ\", \"admin\": \"Azerbaijan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 45.001987339056797, 39.740003567049598 ], [ 45.739978468617011, 39.473999131827156 ], [ 46.143623081248819, 38.741201483712217 ], [ 45.457721795438744, 38.874139105783115 ], [ 44.952688022650278, 39.335764675446427 ], [ 44.793989699082005, 39.713002631177034 ], [ 45.001987339056797, 39.740003567049598 ] ] ], [ [ [ 47.373315464066224, 41.219732367511256 ], [ 47.815665724484717, 41.151416124021353 ], [ 48.58435265482629, 41.808869533854676 ], [ 49.618914829309603, 40.572924302729973 ], [ 50.392821079312711, 40.256561184239104 ], [ 49.569202101444802, 40.176100979160708 ], [ 48.883249139202547, 38.320245266262646 ], [ 48.010744256386516, 38.794014797514535 ], [ 48.355529412637935, 39.288764960276893 ], [ 48.06009524922527, 39.582235419262446 ], [ 46.505719842317973, 38.770605373686266 ], [ 46.483498976432458, 39.464154771475535 ], [ 45.610012241402927, 39.899993801425182 ], [ 45.891907179555147, 40.218475653639985 ], [ 44.972480096218163, 41.24812856705563 ], [ 46.501637404166985, 41.064444688474111 ], [ 46.145431756378997, 41.722802435872637 ], [ 46.404950799348825, 41.860675157227348 ], [ 47.373315464066224, 41.219732367511256 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BI\", \"name\": \"Burundi\", \"type\": \"Sovereign country\", \"postal\": \"BI\", \"admin\": \"Burundi\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 29.339997592900346, -4.499983412294093 ], [ 29.024926385216787, -2.839257907730158 ], [ 29.632176141078588, -2.917857761246097 ], [ 29.938359002407939, -2.348486830254238 ], [ 30.469696079232989, -2.413857517103459 ], [ 30.752262811004954, -3.35932952231557 ], [ 29.753512404099922, -4.452389418153281 ], [ 29.339997592900346, -4.499983412294093 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BE\", \"name\": \"Belgium\", \"type\": \"Sovereign country\", \"postal\": \"B\", \"admin\": \"Belgium\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 3.314971144228537, 51.345780951536085 ], [ 4.973991326526914, 51.475023708698131 ], [ 6.15665815595878, 50.803721015010581 ], [ 6.043073357781111, 50.128051662794235 ], [ 5.782417433300907, 50.09032786722122 ], [ 5.674051954784829, 49.529483547557504 ], [ 4.79922163251581, 49.985373033236385 ], [ 4.286022983425085, 49.907496649772554 ], [ 3.123251580425801, 50.780363267614575 ], [ 2.658422071960274, 50.796848049515745 ], [ 2.513573032246143, 51.148506171261829 ], [ 3.314971144228537, 51.345780951536085 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BJ\", \"name\": \"Benin\", \"type\": \"Sovereign country\", \"postal\": \"BJ\", \"admin\": \"Benin\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 2.691701694356254, 6.258817246928629 ], [ 1.865240512712319, 6.142157701029731 ], [ 1.664477573258381, 9.128590399609379 ], [ 0.772335646171484, 10.470808213742359 ], [ 1.447178175471066, 11.547719224488858 ], [ 2.848643019226671, 12.235635891158267 ], [ 3.611180454125559, 11.660167141155968 ], [ 3.797112257511714, 10.734745591673105 ], [ 3.705438266625919, 10.063210354040208 ], [ 2.723792758809509, 8.50684540448971 ], [ 2.691701694356254, 6.258817246928629 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BF\", \"name\": \"Burkina Faso\", \"type\": \"Sovereign country\", \"postal\": \"BF\", \"admin\": \"Burkina Faso\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -2.827496303712707, 9.642460842319778 ], [ -4.779883592131967, 9.821984768101743 ], [ -5.404341599946974, 10.370736802609146 ], [ -5.220941941743121, 11.713858954307227 ], [ -4.006390753587226, 13.472485459848116 ], [ -3.10370683431276, 13.541266791228594 ], [ -1.066363491205664, 14.973815009007765 ], [ 0.374892205414682, 14.92890818934613 ], [ 0.429927605805517, 13.988733018443924 ], [ 1.024103224297477, 12.851825669806574 ], [ 2.177107781593776, 12.625017808477535 ], [ 2.154473504249921, 11.940150051313339 ], [ 0.899563022474069, 10.99733938236426 ], [ -2.940409308270461, 10.962690334512558 ], [ -2.827496303712707, 9.642460842319778 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BD\", \"name\": \"Bangladesh\", \"type\": \"Sovereign country\", \"postal\": \"BD\", \"admin\": \"Bangladesh\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 92.672720981825563, 22.041238918541254 ], [ 92.65225711463799, 21.324047552978485 ], [ 92.303234490938678, 21.475485337809818 ], [ 92.36855350135562, 20.670883287025347 ], [ 91.41708702999766, 22.765019029221222 ], [ 90.496006300827275, 22.805016587815128 ], [ 90.272970819055558, 21.836367702720111 ], [ 89.031961297566227, 22.055708319582976 ], [ 88.529769728553788, 23.631141872649167 ], [ 88.699940220090923, 24.23371491138856 ], [ 88.084422235062419, 24.501657212821925 ], [ 88.931553989623083, 25.238692328384776 ], [ 88.209789259802506, 25.768065700782714 ], [ 88.563049350949768, 26.446525580342723 ], [ 89.832480910199621, 25.965082098895479 ], [ 89.920692580121852, 25.269749864192178 ], [ 92.376201613334814, 24.976692816664965 ], [ 91.158963250699728, 23.503526923104388 ], [ 91.706475050832111, 22.985263983649187 ], [ 91.869927606171316, 23.624346421802784 ], [ 92.146034783906813, 23.627498684172593 ], [ 92.672720981825563, 22.041238918541254 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BG\", \"name\": \"Bulgaria\", \"type\": \"Sovereign country\", \"postal\": \"BG\", \"admin\": \"Bulgaria\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 22.657149692482989, 44.234923000661283 ], [ 22.944832391051847, 43.82378530534713 ], [ 25.569271681426926, 43.688444729174719 ], [ 27.242399529740908, 44.175986029632405 ], [ 28.558081495891997, 43.707461656258133 ], [ 27.673897739378049, 42.577892361006221 ], [ 27.99672041190539, 42.007358710287789 ], [ 27.13573937349048, 42.141484890301342 ], [ 26.1170418637208, 41.826904608724561 ], [ 26.106138136507212, 41.32889883072778 ], [ 25.197201368925448, 41.23448598893053 ], [ 24.492644891058035, 41.583896185872035 ], [ 22.952377150166452, 41.337993882811148 ], [ 22.881373732197432, 41.999297186850256 ], [ 22.380525750424592, 42.320259507815088 ], [ 22.986018507588483, 43.211161200526966 ], [ 22.50015669118028, 43.642814439460992 ], [ 22.657149692482989, 44.234923000661283 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BS\", \"name\": \"Bahamas\", \"type\": \"Sovereign country\", \"postal\": \"BS\", \"admin\": \"The Bahamas\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -77.53466, 23.75975 ], [ -77.78, 23.71 ], [ -78.40848, 24.57564 ], [ -78.19087, 25.2103 ], [ -77.89, 25.17 ], [ -77.53466, 23.75975 ] ] ], [ [ [ -77.82, 26.58 ], [ -78.91, 26.42 ], [ -78.98, 26.79 ], [ -77.85, 26.84 ], [ -77.82, 26.58 ] ] ], [ [ [ -77.0, 26.59 ], [ -77.17255, 25.87918 ], [ -77.79, 27.04 ], [ -77.0, 26.59 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BA\", \"name\": \"Bosnia and Herz.\", \"type\": \"Sovereign country\", \"postal\": \"BiH\", \"admin\": \"Bosnia and Herzegovina\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 19.005486281010121, 44.860233669609158 ], [ 19.36803, 44.863 ], [ 19.11761, 44.423070000000109 ], [ 19.59976, 44.03847 ], [ 19.454, 43.568100000000129 ], [ 18.70648, 43.20011 ], [ 18.56, 42.65 ], [ 17.674921502358984, 43.02856252702361 ], [ 15.750026075918981, 44.818711656262565 ], [ 15.959367303133376, 45.233776760430942 ], [ 19.005486281010121, 44.860233669609158 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BY\", \"name\": \"Belarus\", \"type\": \"Sovereign country\", \"postal\": \"BY\", \"admin\": \"Belarus\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 23.484127638449849, 53.912497667041137 ], [ 25.536353794056993, 54.282423407602529 ], [ 25.768432651479799, 54.846962592175089 ], [ 26.588279249790389, 55.167175604871673 ], [ 26.494331495883756, 55.615106919977634 ], [ 28.176709425577997, 56.169129950578814 ], [ 29.371571893030673, 55.670090643936184 ], [ 30.87390913262001, 55.550976467503411 ], [ 30.757533807098721, 54.811770941784317 ], [ 31.731272820774507, 53.794029446012019 ], [ 32.693643019346041, 53.35142080343212 ], [ 31.305200636528014, 53.073995876673209 ], [ 31.785998162571587, 52.101677964885454 ], [ 30.927549269338982, 52.04235342061439 ], [ 30.555117221811457, 51.319503485715657 ], [ 25.327787713327009, 51.910656032918553 ], [ 23.527070753684374, 51.57845408793024 ], [ 23.199493849386187, 52.486977444053672 ], [ 23.799198846133379, 52.691099351606567 ], [ 23.484127638449849, 53.912497667041137 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BZ\", \"name\": \"Belize\", \"type\": \"Sovereign country\", \"postal\": \"BZ\", \"admin\": \"Belize\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -89.143080410503316, 17.808318996649319 ], [ -88.490122850279349, 18.486830552641607 ], [ -88.106812913754382, 18.348673610909287 ], [ -88.355428229510565, 16.530774237529627 ], [ -88.930612759135272, 15.887273464415076 ], [ -89.229121670269279, 15.886937567605171 ], [ -89.143080410503316, 17.808318996649319 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BO\", \"name\": \"Bolivia\", \"type\": \"Sovereign country\", \"postal\": \"BO\", \"admin\": \"Bolivia\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -62.846468471921561, -22.034985446869449 ], [ -63.986838141522476, -21.99364430103595 ], [ -64.377021043542257, -22.79809132252354 ], [ -64.964892137294612, -22.075861504812327 ], [ -66.273339402924847, -21.83231047942072 ], [ -67.106673550063604, -22.735924574476417 ], [ -67.828179897722734, -22.872918796482175 ], [ -68.757167121033746, -20.372657972904463 ], [ -68.442225104430918, -19.405068454671429 ], [ -68.966818406841867, -18.981683444904107 ], [ -69.59042375352405, -17.580011895419332 ], [ -68.959635382753305, -16.50069793057127 ], [ -69.389764166934711, -15.660129082911652 ], [ -69.160346645774951, -15.323973890853019 ], [ -69.339534674747014, -14.953195489158832 ], [ -68.948886684836594, -14.453639418193283 ], [ -68.665079718689626, -12.561300144097173 ], [ -69.529678107364958, -10.951734307502194 ], [ -68.271253628193264, -11.014521172736821 ], [ -66.646908331962806, -9.931331475466863 ], [ -65.338435228116424, -9.761987806846392 ], [ -65.402281460213032, -11.566270440317155 ], [ -64.316352912031604, -12.461978041232193 ], [ -63.196498786050569, -12.627032565972435 ], [ -61.713204311760776, -13.489202162330052 ], [ -60.503304002511136, -13.775954685117659 ], [ -60.251148851142936, -15.07721892665932 ], [ -60.542965664295153, -15.093910414289596 ], [ -60.158389655179036, -16.258283786690086 ], [ -58.24121985536668, -16.299573256091293 ], [ -58.280804002502251, -17.271710300366017 ], [ -57.734558274961003, -17.552468357007768 ], [ -57.498371141170992, -18.174187513911292 ], [ -57.949997321185826, -19.400004164306822 ], [ -57.853801642474508, -19.969995212486189 ], [ -58.166392381408045, -20.176700941653678 ], [ -58.183471442280506, -19.868399346600363 ], [ -59.115042487206111, -19.356906019775401 ], [ -61.786326463453769, -19.633736667562964 ], [ -62.685057135657885, -22.249029229422387 ], [ -62.846468471921561, -22.034985446869449 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BR\", \"name\": \"Brazil\", \"type\": \"Sovereign country\", \"postal\": \"BR\", \"admin\": \"Brazil\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -57.625133429582959, -30.216294854454262 ], [ -55.162286342984572, -27.881915378533463 ], [ -53.648735317587892, -26.92347258881609 ], [ -53.628348965048744, -26.124865004177472 ], [ -54.13004960795439, -25.547639255477254 ], [ -54.625290696823576, -25.739255466415514 ], [ -54.292959560754518, -24.021014092710729 ], [ -55.400747239795422, -23.956935316668805 ], [ -55.797958136606908, -22.356929620047822 ], [ -57.937155727761294, -22.090175876557172 ], [ -57.8706739976178, -20.732687676681952 ], [ -58.166392381408045, -20.176700941653678 ], [ -57.853801642474508, -19.969995212486189 ], [ -57.949997321185826, -19.400004164306822 ], [ -57.498371141170992, -18.174187513911292 ], [ -57.734558274961003, -17.552468357007768 ], [ -58.280804002502251, -17.271710300366017 ], [ -58.24121985536668, -16.299573256091293 ], [ -60.158389655179036, -16.258283786690086 ], [ -60.542965664295153, -15.093910414289596 ], [ -60.251148851142936, -15.07721892665932 ], [ -60.503304002511136, -13.775954685117659 ], [ -61.713204311760776, -13.489202162330052 ], [ -63.196498786050569, -12.627032565972435 ], [ -64.316352912031604, -12.461978041232193 ], [ -65.402281460213032, -11.566270440317155 ], [ -65.338435228116424, -9.761987806846392 ], [ -66.646908331962806, -9.931331475466863 ], [ -68.271253628193264, -11.014521172736821 ], [ -70.548685675728407, -11.009146823778465 ], [ -70.481893886991173, -9.490118096558845 ], [ -71.302412278921537, -10.079436130415374 ], [ -72.18489071316985, -10.053597914269432 ], [ -72.563033006465645, -9.520193780152717 ], [ -73.226713426390162, -9.462212823121234 ], [ -73.015382656532552, -9.032833347208062 ], [ -73.987235480429661, -7.523829847853065 ], [ -73.724486660441642, -6.91859547285064 ], [ -73.120027431923603, -6.629930922068239 ], [ -72.891927659787257, -5.274561455916981 ], [ -70.794768846302304, -4.251264743673303 ], [ -69.893635219996625, -4.298186944194328 ], [ -69.420485805932231, -1.122618503426409 ], [ -70.020655890570055, -0.185156345219539 ], [ -70.015565761989308, 0.541414292804205 ], [ -69.252434048119056, 0.602650865070075 ], [ -69.21863766140018, 0.985676581217433 ], [ -69.80459672715773, 1.089081122233466 ], [ -69.816973232691623, 1.714805202639624 ], [ -67.868565029558837, 1.692455145673392 ], [ -67.537810024674698, 2.03716278727633 ], [ -67.065048183852497, 1.130112209473225 ], [ -66.325765143484958, 0.724452215982012 ], [ -65.548267381437569, 0.78925446207603 ], [ -63.368788011311665, 2.200899562993129 ], [ -64.269999152265797, 2.497005520025567 ], [ -64.368494432214106, 3.797210394705246 ], [ -64.816064012294021, 4.056445217297423 ], [ -63.093197597899106, 3.770571193858785 ], [ -60.966893276601539, 4.536467596856639 ], [ -60.601179165271944, 4.91809804933213 ], [ -60.733574184803722, 5.200277207861901 ], [ -60.213683437731333, 5.244486395687602 ], [ -60.11100236676738, 4.574966538914083 ], [ -59.538039923731233, 3.958802598481938 ], [ -59.974524909084558, 2.755232652188056 ], [ -59.646043667221257, 1.786893825686789 ], [ -59.030861579002647, 1.317697658692723 ], [ -58.540012986878295, 1.268088283692521 ], [ -57.335822923396904, 1.948537705895759 ], [ -55.995698004771754, 1.817667141116601 ], [ -55.973322109589375, 2.510363877773017 ], [ -52.939657151894956, 2.124857692875636 ], [ -51.657797410678889, 4.156232408053029 ], [ -51.317146369010857, 4.203490505383954 ], [ -50.508875291533656, 1.901563828942457 ], [ -49.974075893745059, 1.736483465986069 ], [ -49.947100796088712, 1.046189683431223 ], [ -50.699251268096916, 0.222984117021682 ], [ -50.388210822132137, -0.078444512536819 ], [ -48.62056677915632, -0.235489190271821 ], [ -48.584496629416591, -1.237805271005001 ], [ -47.824956427590635, -0.5816179337628 ], [ -44.905703090990414, -1.551739597178134 ], [ -44.417619187993665, -2.137750339367976 ], [ -44.581588507655781, -2.691308282078524 ], [ -43.418791266440195, -2.383110039889793 ], [ -41.472656826328247, -2.912018324397117 ], [ -39.978665330554037, -2.873054294449041 ], [ -37.2232521225352, -4.820945733258917 ], [ -35.597795783010469, -5.149504489770649 ], [ -35.23538896334756, -5.464937432480247 ], [ -34.729993455533034, -7.343220716992967 ], [ -35.128212042774223, -8.996401462442286 ], [ -38.673887091616521, -13.057652276260619 ], [ -39.267339240056401, -17.867746270420483 ], [ -39.760823330227637, -19.599113457927409 ], [ -40.774740770010339, -20.904511814052423 ], [ -40.944756232250612, -21.937316989837811 ], [ -41.754164191238225, -22.370675551037458 ], [ -41.98828426773656, -22.970070489190896 ], [ -44.647811855637812, -23.351959323827842 ], [ -47.648972337420659, -24.885199069927722 ], [ -48.495458136577703, -25.877024834905654 ], [ -48.474735887228654, -27.175911960561891 ], [ -48.8884574041574, -28.674115085567884 ], [ -53.373661668498244, -33.768377780900764 ], [ -53.650543992718099, -33.20200408298183 ], [ -53.209588995971544, -32.727666110974724 ], [ -53.787951626182192, -32.047242526987624 ], [ -56.976025763564735, -30.109686374636127 ], [ -57.625133429582959, -30.216294854454262 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BN\", \"name\": \"Brunei\", \"type\": \"Sovereign country\", \"postal\": \"BN\", \"admin\": \"Brunei\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 114.20401655482837, 4.525873928236806 ], [ 114.59996137904872, 4.900011298029966 ], [ 115.45071048386981, 5.447729803891534 ], [ 115.34746097215066, 4.316636053887009 ], [ 114.8695573263154, 4.348313706881925 ], [ 114.65959598191353, 4.007636826997754 ], [ 114.20401655482837, 4.525873928236806 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BT\", \"name\": \"Bhutan\", \"type\": \"Sovereign country\", \"postal\": \"BT\", \"admin\": \"Bhutan\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 91.696656528696678, 27.771741848251665 ], [ 92.103711785859744, 27.452614040633208 ], [ 92.033483514375092, 26.838310451763562 ], [ 89.744527622438852, 26.719402981059957 ], [ 88.83564253128938, 27.098966376243762 ], [ 89.475810174521115, 28.042758897406397 ], [ 90.015828891971182, 28.296438503527217 ], [ 91.696656528696678, 27.771741848251665 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"BW\", \"name\": \"Botswana\", \"type\": \"Sovereign country\", \"postal\": \"BW\", \"admin\": \"Botswana\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 25.649163445750162, -18.536025892818991 ], [ 27.296504754350508, -20.391519870690999 ], [ 27.724747348753255, -20.499058526290391 ], [ 28.021370070108617, -21.485975030200585 ], [ 29.43218834810904, -22.091312758067588 ], [ 27.119409620886245, -23.574323011979775 ], [ 26.485753208123299, -24.616326592713104 ], [ 25.941652052522159, -24.696373386333221 ], [ 25.664666375437719, -25.486816094669713 ], [ 24.211266717228796, -25.670215752873574 ], [ 23.312096795350186, -25.26868987396572 ], [ 21.605896030369394, -26.726533705351756 ], [ 20.889609002371738, -26.828542982695915 ], [ 20.758609246511838, -25.86813648855145 ], [ 19.895767856534434, -24.767790215760591 ], [ 19.895457797940679, -21.849156996347869 ], [ 20.88113406747587, -21.814327080983148 ], [ 20.910641310314535, -18.252218926672022 ], [ 23.196858351339301, -17.869038181227786 ], [ 23.579005568137717, -18.281261081620059 ], [ 25.084443393664571, -17.661815687737374 ], [ 25.649163445750162, -18.536025892818991 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CF\", \"name\": \"Central African Rep.\", \"type\": \"Sovereign country\", \"postal\": \"CF\", \"admin\": \"Central African Republic\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 15.279460483469109, 7.421924546737969 ], [ 17.964929640380888, 7.890914008002866 ], [ 18.911021762780507, 8.630894680206353 ], [ 18.812009718509273, 8.982914536978598 ], [ 20.059685499764271, 9.012706000194854 ], [ 21.000868361096167, 9.475985215691509 ], [ 21.723821648859456, 10.567055568885976 ], [ 22.864165480244225, 11.142395127807546 ], [ 23.554304233502194, 10.089255275915308 ], [ 23.459012892355986, 8.954285793488893 ], [ 25.114932488716789, 7.825104071479174 ], [ 26.465909458123235, 5.946717434101871 ], [ 27.37422610851749, 5.233944403500061 ], [ 25.650455356557472, 5.256087754737123 ], [ 24.805028924262416, 4.89724660890235 ], [ 24.410531040146253, 5.10878408448913 ], [ 23.297213982850138, 4.609693101414223 ], [ 22.841479526468106, 4.710126247573484 ], [ 22.405123732195538, 4.029160061047321 ], [ 19.467783644293149, 5.03152781821278 ], [ 18.542982211997781, 4.201785183118318 ], [ 18.453065219809929, 3.504385891123349 ], [ 17.133042433346304, 3.728196519379452 ], [ 16.012852410555354, 2.267639675298085 ], [ 15.862732374747482, 3.013537298998983 ], [ 14.478372430080469, 4.732605495620447 ], [ 14.536560092841114, 6.226958726420691 ], [ 15.279460483469109, 7.421924546737969 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CH\", \"name\": \"Switzerland\", \"type\": \"Sovereign country\", \"postal\": \"CH\", \"admin\": \"Switzerland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 9.59422610844635, 47.52505809182027 ], [ 9.479969516649021, 47.102809963563374 ], [ 10.442701450246631, 46.893546250997431 ], [ 10.363378126678612, 46.483571275409858 ], [ 9.182881707403055, 46.440214748716983 ], [ 8.966305779667806, 46.036931871111193 ], [ 8.316629672894379, 46.163642483090861 ], [ 7.273850945676657, 45.776947740250776 ], [ 6.500099724970426, 46.429672756529442 ], [ 6.022609490593538, 46.272989813820473 ], [ 6.037388950229001, 46.725778713561866 ], [ 6.736571079138059, 47.541801255882845 ], [ 8.522611932009767, 47.830827541691292 ], [ 9.59422610844635, 47.52505809182027 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CL\", \"name\": \"Chile\", \"type\": \"Sovereign country\", \"postal\": \"CL\", \"admin\": \"Chile\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -68.634010227583161, -52.636370458874367 ], [ -68.633349999999893, -54.8695 ], [ -66.95992, -54.89681 ], [ -68.148629999999855, -55.61183 ], [ -71.00568, -55.05383 ], [ -73.2852, -53.957519999999889 ], [ -74.66253, -52.83749 ], [ -71.10773, -54.07433 ], [ -70.26748, -52.93123 ], [ -69.345649999999893, -52.5183 ], [ -68.634010227583161, -52.636370458874367 ] ] ], [ [ [ -68.219913092711238, -21.494346612231837 ], [ -67.828179897722663, -22.872918796482182 ], [ -67.106673550063618, -22.7359245744764 ], [ -66.985233934177643, -22.986348565362832 ], [ -67.328442959244143, -24.025303236590915 ], [ -68.417652960876126, -24.518554782816878 ], [ -68.594799770772681, -26.506908868111267 ], [ -68.295541551370405, -26.89933969493579 ], [ -69.656130337183157, -28.459141127233693 ], [ -70.013550381129875, -29.367922865518551 ], [ -69.919008348251936, -30.336339206668313 ], [ -70.535068935819453, -31.365010267870289 ], [ -69.814776984319224, -33.273886000299854 ], [ -69.817309129501467, -34.193571465798286 ], [ -70.388049485949097, -35.169687595359449 ], [ -70.364769253201672, -36.005088799789945 ], [ -71.121880662709799, -36.658123874662337 ], [ -70.814664272734717, -38.552995293940739 ], [ -71.413516608349056, -38.916022230791114 ], [ -71.915734015577556, -40.832339369470731 ], [ -71.746803758415467, -42.051386407235995 ], [ -72.148898078078531, -42.254888197601389 ], [ -71.915423956983915, -43.408564548517418 ], [ -71.464056159130507, -43.787611179378331 ], [ -71.793622606071949, -44.207172133156106 ], [ -71.222778896759735, -44.784242852559416 ], [ -71.65931555854533, -44.973688653341441 ], [ -71.552009446891248, -45.560732924177131 ], [ -72.447355312780275, -47.738532810253531 ], [ -72.331160854771952, -48.244238376661826 ], [ -72.648247443314943, -48.878618259476788 ], [ -73.415435757120036, -49.318436374712959 ], [ -73.328050910114484, -50.378785088909872 ], [ -72.975746832964631, -50.741450290734313 ], [ -72.30997351753237, -50.677009779666356 ], [ -72.329403856074038, -51.425956312872408 ], [ -71.914803839796349, -52.009022305865926 ], [ -68.571545376241346, -52.299443855346262 ], [ -69.461284349226645, -52.291950772663931 ], [ -70.845101691354529, -52.899200528525725 ], [ -71.006332160105245, -53.833252042201352 ], [ -71.429794684520942, -53.856454760300387 ], [ -74.946763475225168, -52.262753588419031 ], [ -75.608015102831956, -48.673772881871798 ], [ -75.182769741502142, -47.71191944762316 ], [ -74.126580980104706, -46.939253431995098 ], [ -75.644395311165454, -46.64764332457203 ], [ -74.692153693323064, -45.763976332380977 ], [ -74.351709357384266, -44.103044122087894 ], [ -73.240356004515206, -44.454960625995625 ], [ -72.71780392117978, -42.383355808278992 ], [ -73.388899909138246, -42.117532240569574 ], [ -73.701335618774863, -43.365776462579745 ], [ -74.331943122032584, -43.224958184584409 ], [ -73.677099372029971, -39.942212823243125 ], [ -73.217592536090677, -39.258688653318515 ], [ -73.58806087919109, -37.156284681956024 ], [ -73.166717088499297, -37.123780206044358 ], [ -71.438450486929923, -32.418899428030826 ], [ -71.668720669222438, -30.920644626592519 ], [ -71.370082567007728, -30.095682061485007 ], [ -71.489894375276464, -28.861442152625912 ], [ -70.905123867461583, -27.640379734001201 ], [ -70.091245897080682, -21.393319187101227 ], [ -70.372572394477743, -18.347975355708883 ], [ -69.590423753523993, -17.58001189541929 ], [ -68.966818406841838, -18.981683444904093 ], [ -68.442225104430946, -19.405068454671422 ], [ -68.757167121033717, -20.372657972904477 ], [ -68.219913092711238, -21.494346612231837 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CN\", \"name\": \"China\", \"type\": \"Country\", \"postal\": \"CN\", \"admin\": \"China\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 110.33918786015155, 18.678395087147607 ], [ 109.47520958866372, 18.197700913968617 ], [ 108.65520796105616, 18.507681993071401 ], [ 108.62621748254045, 19.367887885001977 ], [ 109.11905561730802, 19.821038519769388 ], [ 110.78655073450224, 20.077534491450081 ], [ 111.01005130416465, 19.695929877190736 ], [ 110.33918786015155, 18.678395087147607 ] ] ], [ [ [ 127.65740726126242, 49.760270494172943 ], [ 129.39781782442046, 49.440600084015443 ], [ 130.58229332898239, 48.729687404976119 ], [ 130.98728152885386, 47.790132351261406 ], [ 132.50667199109952, 47.788969631534883 ], [ 135.02631147678673, 48.478229885443909 ], [ 133.09712690646646, 45.144066473972174 ], [ 131.88345421765959, 45.321161607436437 ], [ 131.0252120301561, 44.967953192721581 ], [ 131.28855512911557, 44.111519680348266 ], [ 131.14468794161488, 42.929989732426947 ], [ 130.63386640840983, 42.903014634770557 ], [ 130.64001590385246, 42.395009467125277 ], [ 129.99426720593326, 42.9853868678438 ], [ 129.59666873587949, 42.424981797854599 ], [ 128.05221520397234, 41.994284572917991 ], [ 128.20843305879075, 41.466771552082548 ], [ 126.8690832866499, 41.816569322266162 ], [ 124.26562462778534, 39.928493353834142 ], [ 121.05455447803288, 38.897471014962917 ], [ 121.58599490772249, 39.360853583324143 ], [ 121.37675703337268, 39.750261338859531 ], [ 122.16859500538104, 40.422442531896053 ], [ 121.64035851449356, 40.946389878903318 ], [ 119.63960208544907, 39.898055935214217 ], [ 119.02346398323303, 39.252333075511103 ], [ 118.04274865119791, 39.204273993479688 ], [ 117.53270226447708, 38.737635809884097 ], [ 118.05969852098971, 38.061475531561058 ], [ 118.87814985562838, 37.897325344385905 ], [ 118.91163618375353, 37.448463853498737 ], [ 119.70280236214208, 37.15638865818508 ], [ 120.82345747282366, 37.870427761377982 ], [ 122.35793745329849, 37.454484157860691 ], [ 122.51999474496583, 36.930614325501836 ], [ 121.10416385303304, 36.65132904718044 ], [ 119.15120812385859, 34.909859117160465 ], [ 120.22752485563373, 34.36033193616862 ], [ 121.90814578663006, 31.69217438407469 ], [ 121.89191938689035, 30.949351508095106 ], [ 121.26425744027333, 30.676267401648715 ], [ 121.50351932178475, 30.142914943964257 ], [ 122.0921138855891, 29.832520453403163 ], [ 121.68443851123848, 28.225512600206685 ], [ 121.12566124886646, 28.135673122667185 ], [ 118.65687137255455, 24.547390855400238 ], [ 115.89073530483515, 22.782873236578098 ], [ 114.76382734584624, 22.66807404224167 ], [ 114.15254682826568, 22.223760077396207 ], [ 113.80677981980077, 22.54833974862143 ], [ 113.24107791550162, 22.051367499270469 ], [ 110.78546552942416, 21.397143866455338 ], [ 110.44403934127169, 20.341032619706397 ], [ 109.88986128137358, 20.282457383703445 ], [ 109.62765506392466, 21.008227037026728 ], [ 109.86448815311834, 21.395050970947523 ], [ 107.04342003787266, 21.811898912029903 ], [ 106.56727339073538, 22.218204860924743 ], [ 106.72540327354849, 22.794267889898379 ], [ 105.32920942588666, 23.352063300056983 ], [ 104.4768583516645, 22.819150092046925 ], [ 102.70699222210018, 22.708795070887703 ], [ 101.65201785686159, 22.318198757409561 ], [ 101.80311974488293, 21.174366766845054 ], [ 101.27002566936002, 21.20165192309517 ], [ 101.15003299357826, 21.849984442629022 ], [ 100.41653771362738, 21.558839423096657 ], [ 99.240898878987224, 22.118314317304566 ], [ 99.531992222087439, 22.949038804612599 ], [ 98.898749220782832, 23.142722072842588 ], [ 98.660262485755794, 24.063286037690006 ], [ 97.604719679762042, 23.897404690033056 ], [ 97.724609002679159, 25.083637193293043 ], [ 98.67183800658924, 25.918702500913497 ], [ 98.682690057370536, 27.508812160750665 ], [ 97.911987746169444, 28.335945136014374 ], [ 96.248833449287844, 28.411030992134471 ], [ 96.58659061074755, 28.830979519154369 ], [ 96.117678664131034, 29.45280202892252 ], [ 95.404802280664654, 29.03171662039216 ], [ 94.565990431702943, 29.277438055939967 ], [ 92.503118931043645, 27.896876329046449 ], [ 91.696656528696707, 27.771741848251622 ], [ 90.015828891971211, 28.296438503527185 ], [ 88.814248488320601, 27.299315904239393 ], [ 88.730325962278556, 28.086864732367559 ], [ 88.120440708369955, 27.876541652939579 ], [ 85.82331994013154, 28.203575954698749 ], [ 84.234579705750178, 28.839893703724698 ], [ 83.898992954446754, 29.32022614187764 ], [ 82.327512648450892, 30.115268052688208 ], [ 81.5258044778748, 30.422716986608663 ], [ 81.11125613802929, 30.183480943313413 ], [ 79.721366815107132, 30.882714748654735 ], [ 78.738894484374015, 31.515906073527049 ], [ 78.458446486326039, 32.618164374312727 ], [ 79.176128777995558, 32.483779812137755 ], [ 79.208891636068557, 32.994394639613745 ], [ 78.811086460285736, 33.506198025032404 ], [ 78.912268914713223, 34.321936346975775 ], [ 77.837450799474624, 35.494009507787808 ], [ 76.192848341785719, 35.898403428687857 ], [ 75.896897414050187, 36.666806138651879 ], [ 74.980002475895418, 37.419990139305895 ], [ 74.864815708316797, 38.378846340481601 ], [ 73.928852166646408, 38.505815334622724 ], [ 73.675379266254851, 39.431236884105573 ], [ 73.960013055318456, 39.660008449861721 ], [ 73.82224368682833, 39.893973497063143 ], [ 74.776862420556057, 40.366425279291633 ], [ 76.526368035797447, 40.427946071935139 ], [ 76.904484490877138, 41.066485907549662 ], [ 78.187196893226059, 41.185315863604814 ], [ 78.543660923175281, 41.58224254003872 ], [ 80.119430373051415, 42.123940741538235 ], [ 80.180150180994389, 42.920067857426858 ], [ 80.866206496101228, 43.180362046881015 ], [ 79.96610639844144, 44.917516994804629 ], [ 82.458925815769049, 45.539649563166506 ], [ 83.180483839860557, 47.330031236350749 ], [ 85.164290399113241, 47.000955715516113 ], [ 85.720483839870695, 47.452969468773091 ], [ 85.768232863308384, 48.455750637396903 ], [ 86.598776483103364, 48.549181626980612 ], [ 87.751264276076682, 49.297197984405472 ], [ 88.013832228551706, 48.599462795600601 ], [ 90.280825636763922, 47.693549099307916 ], [ 90.970809360724985, 46.888146063822944 ], [ 90.585768263718336, 45.719716091487498 ], [ 90.94553958533433, 45.28607330991025 ], [ 93.48073367714133, 44.975472113620015 ], [ 95.306875441471533, 44.241330878265472 ], [ 96.349395786527822, 42.725635280928657 ], [ 100.84586551310829, 42.663804429691425 ], [ 104.96499393109346, 41.597409572916348 ], [ 106.12931562706169, 42.134327704428898 ], [ 110.41210330611531, 42.871233628911028 ], [ 111.8295878438814, 43.743118394539493 ], [ 111.34837690637946, 44.457441718110061 ], [ 111.87330610560028, 45.102079372735119 ], [ 113.46390669154422, 44.808893134127118 ], [ 115.98509647020015, 45.727235012386018 ], [ 117.42170128791426, 46.672732855814218 ], [ 119.66326989143877, 46.692679958678951 ], [ 119.77282392789758, 47.048058783550147 ], [ 118.06414269416675, 48.066730455103738 ], [ 117.29550744025747, 47.697709052107399 ], [ 115.74283735561576, 47.726544501326288 ], [ 115.48528201707305, 48.135382595403456 ], [ 116.67880089728621, 49.888531399121405 ], [ 117.87924441942639, 49.510983384796958 ], [ 119.28846072802585, 50.142882798862047 ], [ 119.27936567594239, 50.582907619827296 ], [ 120.73819135954201, 51.964115302124554 ], [ 120.725789015792, 52.516226304730822 ], [ 120.17708865771689, 52.753886216841209 ], [ 121.00308475147025, 53.251401068731241 ], [ 123.57150678924089, 53.458804429734641 ], [ 125.9463489116462, 52.79279857035695 ], [ 127.65740726126242, 49.760270494172943 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CI\", \"name\": \"C�te d'Ivoire\", \"type\": \"Sovereign country\", \"postal\": \"CI\", \"admin\": \"Ivory Coast\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -2.856125047202397, 4.994475816259509 ], [ -4.649917364917911, 5.168263658057086 ], [ -7.712159389669751, 4.364565944837722 ], [ -7.570152553731688, 5.707352199725904 ], [ -8.60288021486862, 6.467564195171661 ], [ -8.299048631208564, 8.316443589710303 ], [ -7.832100389019188, 8.575704250518626 ], [ -8.229337124046822, 10.129020290563901 ], [ -6.850506557635057, 10.138993841996239 ], [ -6.205222947606431, 10.524060777219134 ], [ -6.050452032892267, 10.096360785355444 ], [ -5.404341599946974, 10.370736802609146 ], [ -4.330246954760384, 9.610834865757141 ], [ -3.511898972986273, 9.90032623945622 ], [ -2.827496303712707, 9.642460842319778 ], [ -2.562189500326241, 8.219627793811483 ], [ -3.244370083011262, 6.250471503113502 ], [ -2.856125047202397, 4.994475816259509 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CM\", \"name\": \"Cameroon\", \"type\": \"Sovereign country\", \"postal\": \"CM\", \"admin\": \"Cameroon\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 13.075822381246752, 2.267097072759015 ], [ 9.649158155972629, 2.283866075037736 ], [ 9.795195753629457, 3.073404445809117 ], [ 8.500287713259695, 4.771982937026849 ], [ 9.233162876023044, 6.444490668153335 ], [ 10.118276808318257, 7.03876963950988 ], [ 11.058787876030351, 6.644426784690594 ], [ 11.745774366918511, 6.981382961449754 ], [ 13.572949659894562, 10.798565985553566 ], [ 14.415378859116684, 11.572368882692075 ], [ 14.577177768622533, 12.085360826053503 ], [ 14.181336297266794, 12.483656927943116 ], [ 14.495787387762846, 12.859396267137329 ], [ 14.893385857816526, 12.219047756392584 ], [ 14.923564894274961, 10.891325181517473 ], [ 15.467872755605271, 9.982336737503431 ], [ 14.171466098699028, 10.021378282099931 ], [ 13.954218377344006, 9.549494940626687 ], [ 14.97999555833769, 8.796104234243472 ], [ 15.436091749745771, 7.692812404811973 ], [ 14.536560092841114, 6.226958726420691 ], [ 14.478372430080469, 4.732605495620447 ], [ 15.862732374747482, 3.013537298998983 ], [ 15.940918816805066, 1.727672634280296 ], [ 13.075822381246752, 2.267097072759015 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CD\", \"name\": \"Dem. Rep. Congo\", \"type\": \"Sovereign country\", \"postal\": \"DRC\", \"admin\": \"Democratic Republic of the Congo\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 30.833859897593811, 3.509165961110341 ], [ 30.773346795380039, 2.339883327642127 ], [ 31.174149204235817, 2.204465236821264 ], [ 29.875778842902491, 0.597379868976304 ], [ 29.024926385216787, -2.839257907730158 ], [ 29.419992710088167, -5.939998874539434 ], [ 30.740015496551791, -8.340007419470915 ], [ 29.00291222506047, -8.407031752153472 ], [ 28.449871046672826, -9.164918308146085 ], [ 28.673681674928929, -9.605924981324932 ], [ 28.372253045370428, -11.793646742401393 ], [ 29.34154788586909, -12.360743910372413 ], [ 29.61600141777123, -12.178894545137311 ], [ 29.699613885219492, -13.257226657771831 ], [ 28.934285922976837, -13.248958428605135 ], [ 28.155108676879987, -12.272480564017897 ], [ 27.388798862423783, -12.132747491100666 ], [ 27.164419793412463, -11.608748467661075 ], [ 26.553087599399618, -11.924439792532127 ], [ 25.752309604604733, -11.784965101776358 ], [ 25.418118116973204, -11.330935967659961 ], [ 24.314516228947952, -11.26282642989927 ], [ 24.257155389103989, -10.951992689663657 ], [ 22.155268182064308, -11.084801120653772 ], [ 21.728110792739699, -7.290872491081302 ], [ 20.514748162526502, -7.29960580813863 ], [ 20.601822950938299, -6.939317722199682 ], [ 20.091621534920648, -6.943090101756994 ], [ 19.41750247567316, -7.155428562044299 ], [ 19.016751743249671, -7.988245944860132 ], [ 17.472970004962235, -8.0685511206417 ], [ 16.326528354567046, -5.877470391466268 ], [ 12.322431674863511, -6.10009246177966 ], [ 12.182336866920252, -5.789930515163839 ], [ 12.63161176926579, -4.991271254092936 ], [ 13.600234816144678, -4.50013844159097 ], [ 14.144956088933299, -4.510008640158716 ], [ 14.582603794013181, -4.97023894615014 ], [ 16.006289503654301, -3.535132744972529 ], [ 15.972803175529151, -2.712392266453612 ], [ 16.407091912510054, -1.740927015798683 ], [ 17.638644646889986, -0.424831638189247 ], [ 18.542982211997781, 4.201785183118318 ], [ 19.467783644293149, 5.03152781821278 ], [ 22.405123732195538, 4.029160061047321 ], [ 22.841479526468106, 4.710126247573484 ], [ 23.297213982850138, 4.609693101414223 ], [ 24.410531040146253, 5.10878408448913 ], [ 24.805028924262416, 4.89724660890235 ], [ 25.650455356557472, 5.256087754737123 ], [ 27.37422610851749, 5.233944403500061 ], [ 27.979977247842811, 4.408413397637375 ], [ 29.71599531425602, 4.600804755060025 ], [ 30.833859897593811, 3.509165961110341 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CG\", \"name\": \"Congo\", \"type\": \"Sovereign country\", \"postal\": \"CG\", \"admin\": \"Republic of Congo\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 12.995517205465177, -4.781103203961884 ], [ 12.620759718484493, -4.438023369976136 ], [ 11.91496300624209, -5.037986748884791 ], [ 11.093772820691925, -3.978826592630547 ], [ 11.855121697648116, -3.426870619321051 ], [ 11.478038771214303, -2.765618991714241 ], [ 12.495702752338161, -2.391688327650243 ], [ 12.575284458067642, -1.948511244315135 ], [ 13.109618767965628, -2.428740329603514 ], [ 13.99240726080771, -2.4708049454891 ], [ 14.299210239324566, -1.998275648612214 ], [ 14.316418491277744, -0.552627455247048 ], [ 13.843320753645656, 0.038757635901149 ], [ 14.276265903386957, 1.196929836426619 ], [ 13.282631463278818, 1.314183661296881 ], [ 13.075822381246752, 2.267097072759015 ], [ 15.940918816805066, 1.727672634280296 ], [ 16.537058139724138, 3.198254706226279 ], [ 17.133042433346304, 3.728196519379452 ], [ 18.453065219809929, 3.504385891123349 ], [ 17.638644646889986, -0.424831638189247 ], [ 16.407091912510054, -1.740927015798683 ], [ 15.972803175529151, -2.712392266453612 ], [ 16.006289503654301, -3.535132744972529 ], [ 14.582603794013181, -4.97023894615014 ], [ 14.144956088933299, -4.510008640158716 ], [ 12.995517205465177, -4.781103203961884 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CO\", \"name\": \"Colombia\", \"type\": \"Sovereign country\", \"postal\": \"CO\", \"admin\": \"Colombia\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -75.373223232713855, -0.15203175212045 ], [ -76.292314419240967, 0.416047268064119 ], [ -77.424984300430395, 0.395686753741117 ], [ -78.99093522817104, 1.691369940595251 ], [ -78.617831387023713, 1.766404120283056 ], [ -78.427610439757331, 2.629555568854215 ], [ -77.931542527971487, 2.696605739752926 ], [ -77.12768978545526, 3.849636135265357 ], [ -77.496271938777028, 4.087606105969428 ], [ -77.318815070286746, 5.84535411216136 ], [ -77.881571417945253, 7.223771267114785 ], [ -77.753413865861404, 7.709839789252143 ], [ -77.242566494440084, 7.935278225125444 ], [ -77.353360765273862, 8.67050466555807 ], [ -76.836673957003569, 8.638749497914716 ], [ -75.674600185840063, 9.443248195834599 ], [ -75.480425991503353, 10.618990383339309 ], [ -74.906895107711989, 11.083044745320322 ], [ -73.414763963500292, 11.22701528568548 ], [ -71.754090135368642, 12.437303168177309 ], [ -71.399822353791706, 12.376040757695293 ], [ -71.13746110704588, 12.112981879113505 ], [ -71.331583624950298, 11.776284084515808 ], [ -71.973921678338286, 11.60867157637712 ], [ -72.905286017534706, 10.450344346554772 ], [ -73.304951544880055, 9.151999823437606 ], [ -72.788729824500393, 9.085027167187334 ], [ -72.439862230097958, 8.405275376820029 ], [ -72.444487270788073, 7.423784898300482 ], [ -71.960175747348643, 6.991614895043539 ], [ -70.093312954372422, 6.96037649172311 ], [ -69.389479946557117, 6.099860541198837 ], [ -67.341439581965574, 6.095468044454023 ], [ -67.823012254493548, 4.503937282728899 ], [ -67.303173183853445, 3.31845408773718 ], [ -67.809938117123707, 2.820655015469569 ], [ -67.18129431829307, 2.250638129074062 ], [ -66.87632585312258, 1.253360500489336 ], [ -67.065048183852497, 1.130112209473225 ], [ -67.537810024674698, 2.03716278727633 ], [ -67.868565029558837, 1.692455145673392 ], [ -69.816973232691623, 1.714805202639624 ], [ -69.80459672715773, 1.089081122233466 ], [ -69.21863766140018, 0.985676581217433 ], [ -69.252434048119056, 0.602650865070075 ], [ -70.015565761989308, 0.541414292804205 ], [ -70.020655890570055, -0.185156345219539 ], [ -69.420485805932231, -1.122618503426409 ], [ -69.893635219996625, -4.298186944194328 ], [ -70.692682054309714, -3.742872002785859 ], [ -70.047708502874855, -2.725156345229699 ], [ -70.813475714791963, -2.256864515800743 ], [ -73.070392218707241, -2.308954359550953 ], [ -73.6595035468346, -1.260491224781134 ], [ -75.106624518520078, -0.05720549886486 ], [ -75.373223232713855, -0.15203175212045 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CR\", \"name\": \"Costa Rica\", \"type\": \"Sovereign country\", \"postal\": \"CR\", \"admin\": \"Costa Rica\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -82.965783047197363, 8.225027980985985 ], [ -83.508437262694315, 8.446926581247283 ], [ -83.632641567707836, 9.051385809765321 ], [ -84.975660366541334, 10.086723130733006 ], [ -85.11092342806532, 9.55703969974131 ], [ -85.66078650586698, 9.933347479690724 ], [ -85.659313727546674, 10.754330959511719 ], [ -85.941725430021762, 10.895278428587801 ], [ -85.561851976244199, 11.217119248901597 ], [ -83.895054490885954, 10.726839097532446 ], [ -83.655611741861577, 10.938764146361422 ], [ -82.546196255203483, 9.566134751824677 ], [ -82.932890998043575, 9.476812038608173 ], [ -82.719183112300527, 8.925708726431495 ], [ -82.965783047197363, 8.225027980985985 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CU\", \"name\": \"Cuba\", \"type\": \"Sovereign country\", \"postal\": \"CU\", \"admin\": \"Cuba\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -82.268151211257063, 23.188610744717707 ], [ -80.618768683581195, 23.105980129483001 ], [ -79.281485968732085, 22.399201565027056 ], [ -78.347434455056487, 22.512166246017088 ], [ -76.523824835908556, 21.206819566324373 ], [ -75.59822241891267, 21.016624457274133 ], [ -75.671060350228061, 20.735091254148003 ], [ -74.17802486845126, 20.284627793859741 ], [ -74.961594611292938, 19.923435370355691 ], [ -77.755480923153073, 19.855480861891877 ], [ -77.085108405246743, 20.413353786698792 ], [ -78.137292243141587, 20.739948838783434 ], [ -78.719866502584011, 21.598113511638434 ], [ -82.16999182811864, 22.387109279870753 ], [ -81.795001797192668, 22.636964830001958 ], [ -82.775897996740852, 22.688150336187064 ], [ -84.052150845053262, 21.910575059491254 ], [ -84.974911058273108, 21.89602814380109 ], [ -83.778239915690193, 22.788118394455694 ], [ -82.268151211257063, 23.188610744717707 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"-99\", \"name\": \"N. Cyprus\", \"type\": \"Sovereign country\", \"postal\": \"CN\", \"admin\": \"Northern Cyprus\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 32.731780226377452, 35.140025946588437 ], [ 32.946960890440806, 35.386703396133697 ], [ 34.576473829900465, 35.671595567358793 ], [ 33.973616570783463, 35.058506374648005 ], [ 32.731780226377452, 35.140025946588437 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CY\", \"name\": \"Cyprus\", \"type\": \"Sovereign country\", \"postal\": \"CY\", \"admin\": \"Cyprus\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 33.973616570783463, 35.058506374648005 ], [ 32.979827101378447, 34.571869411755443 ], [ 32.25666710788596, 35.103232326796629 ], [ 33.190977003723049, 35.17312470147138 ], [ 33.973616570783463, 35.058506374648005 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"CZ\", \"name\": \"Czech Rep.\", \"type\": \"Sovereign country\", \"postal\": \"CZ\", \"admin\": \"Czech Republic\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 16.960288120194576, 48.5969823268506 ], [ 15.253415561593982, 49.039074205107582 ], [ 14.338897739324722, 48.555305284207208 ], [ 12.521024204161193, 49.547415269562734 ], [ 12.240111118222558, 50.266337795607285 ], [ 14.307013380600637, 51.117267767941414 ], [ 15.016995883858669, 51.10667409932158 ], [ 16.238626743238569, 50.697732652379841 ], [ 16.176253289462267, 50.422607326857907 ], [ 16.719475945714436, 50.215746568393541 ], [ 16.868769158605659, 50.47397370055603 ], [ 17.554567091551121, 50.362145901076417 ], [ 17.649445021238989, 50.049038397819956 ], [ 18.392913852622172, 49.988628648470751 ], [ 18.853144158613617, 49.496229763377642 ], [ 16.960288120194576, 48.5969823268506 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"DE\", \"name\": \"Germany\", \"type\": \"Sovereign country\", \"postal\": \"D\", \"admin\": \"Germany\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 9.921906365609232, 54.983104153048032 ], [ 9.9395797054529, 54.596641954153256 ], [ 10.950112338920519, 54.363607082733154 ], [ 10.93946699386845, 54.00869334575259 ], [ 12.518440382546714, 54.470370591847995 ], [ 13.647467075259499, 54.075510972705899 ], [ 14.353315463934166, 53.248171291713106 ], [ 14.074521111719434, 52.981262518925348 ], [ 15.016995883858783, 51.106674099321708 ], [ 14.307013380600665, 51.117267767941371 ], [ 12.240111118222671, 50.266337795607228 ], [ 12.521024204161336, 49.547415269562748 ], [ 13.595945672264577, 48.877171942737164 ], [ 12.884102817443875, 48.28914581968786 ], [ 12.932626987366064, 47.467645575543997 ], [ 12.141357456112871, 47.703083401065783 ], [ 10.544504021861599, 47.566399237653798 ], [ 10.402083774465325, 47.302487697939171 ], [ 8.522611932009795, 47.830827541691349 ], [ 7.466759067422288, 47.620581976911922 ], [ 8.099278598674857, 49.01778351500343 ], [ 6.186320428094177, 49.463802802114515 ], [ 5.988658074577813, 51.851615709025054 ], [ 6.589396599970826, 51.852029120483394 ], [ 6.842869500362383, 52.228440253297549 ], [ 7.092053256873896, 53.144043280644894 ], [ 6.905139601274129, 53.482162177130647 ], [ 7.936239454793963, 53.748295803433791 ], [ 8.121706170289485, 53.527792466844289 ], [ 8.800734490604668, 54.020785630908904 ], [ 8.526229282270208, 54.962743638725158 ], [ 9.921906365609232, 54.983104153048032 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"DJ\", \"name\": \"Djibouti\", \"type\": \"Sovereign country\", \"postal\": \"DJ\", \"admin\": \"Djibouti\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 43.081226027200159, 12.699638576707116 ], [ 43.286381463398925, 11.974928290245884 ], [ 42.715873650896526, 11.735640570518342 ], [ 43.145304803242141, 11.462039699748857 ], [ 42.776851841000962, 10.92687856693442 ], [ 41.755570000000205, 11.050910000000101 ], [ 41.661760000000129, 11.6312 ], [ 42.35156000000012, 12.542230000000131 ], [ 43.081226027200159, 12.699638576707116 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"DK\", \"name\": \"Denmark\", \"type\": \"Country\", \"postal\": \"DK\", \"admin\": \"Denmark\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 12.690006137755631, 55.609990953180784 ], [ 12.089991082414741, 54.800014553437933 ], [ 11.043543328504228, 55.364863796604254 ], [ 10.903913608451631, 55.779954738988749 ], [ 12.370904168353292, 56.111407375708836 ], [ 12.690006137755631, 55.609990953180784 ] ] ], [ [ [ 10.912181837618363, 56.458621324277914 ], [ 9.649984978889307, 55.469999498102055 ], [ 9.921906365609175, 54.98310415304806 ], [ 8.526229282270236, 54.962743638724987 ], [ 8.12031090661759, 55.517722683323626 ], [ 8.089976840862249, 56.540011705137601 ], [ 8.543437534223386, 57.110002753316905 ], [ 10.580005730846153, 57.73001658795485 ], [ 10.250000034230226, 56.89001618105047 ], [ 10.912181837618363, 56.458621324277914 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"DO\", \"name\": \"Dominican Rep.\", \"type\": \"Sovereign country\", \"postal\": \"DO\", \"admin\": \"Dominican Republic\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -71.712361416292964, 19.714455878167357 ], [ -69.950815192327582, 19.647999986240009 ], [ -69.769250047470081, 19.293267116772441 ], [ -69.222125820579876, 19.313214219637103 ], [ -69.254346076113848, 19.015196234609874 ], [ -68.317943284768972, 18.612197577381693 ], [ -68.689315965434517, 18.205142320218613 ], [ -69.952933926051543, 18.428306993071061 ], [ -70.517137213814223, 18.184290879788833 ], [ -70.669298468697633, 18.426885891183034 ], [ -71.400209927033899, 17.598564357976599 ], [ -71.945112067335558, 18.616900132720261 ], [ -71.701302659782499, 18.785416978424053 ], [ -71.712361416292964, 19.714455878167357 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"DZ\", \"name\": \"Algeria\", \"type\": \"Sovereign country\", \"postal\": \"DZ\", \"admin\": \"Algeria\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 11.999505649471613, 23.47166840259645 ], [ 5.677565952180686, 19.601206976799716 ], [ 3.158133172222705, 19.057364203360038 ], [ 3.1466610042539, 19.693578599521445 ], [ 2.06099083823392, 20.142233384679486 ], [ 1.823227573259032, 20.610809434486043 ], [ -8.684399786809053, 27.395744126896005 ], [ -8.674116176782974, 28.841288967396579 ], [ -5.242129278982787, 30.000443020135592 ], [ -4.859646165374471, 30.501187649043846 ], [ -3.690441046554696, 30.896951605751156 ], [ -3.647497931320146, 31.637294012980675 ], [ -1.30789913573787, 32.262888902306102 ], [ -1.124551153966308, 32.651521511357132 ], [ -2.169913702798624, 35.16839630791668 ], [ -1.208602871089056, 35.714848741187097 ], [ 1.466918572606545, 36.605647081034405 ], [ 5.320120070017794, 36.716518866516623 ], [ 6.261819695672613, 37.110655015606739 ], [ 8.420964389691676, 36.946427313783161 ], [ 8.140981479534304, 34.65514598239379 ], [ 7.524481642292244, 34.09737641045146 ], [ 7.612641635782182, 33.344114895148962 ], [ 9.055602654668149, 32.102691962201291 ], [ 9.805634392952413, 29.42463837332339 ], [ 9.716285841519749, 26.512206325785698 ], [ 9.319410841518163, 26.094324856057455 ], [ 10.303846876678362, 24.379313259370917 ], [ 10.771363559622927, 24.562532050061751 ], [ 11.999505649471613, 23.47166840259645 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"EC\", \"name\": \"Ecuador\", \"type\": \"Sovereign country\", \"postal\": \"EC\", \"admin\": \"Ecuador\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -80.302560594387216, -3.404856459164713 ], [ -79.770293341780928, -2.65751189535964 ], [ -79.986559210922422, -2.220794366061014 ], [ -80.368783942369248, -2.685158786635788 ], [ -80.967765469064361, -2.246942640800704 ], [ -80.933659023751716, -1.057454522306358 ], [ -80.583370327461267, -0.906662692878683 ], [ -80.090609707342111, 0.768428859862397 ], [ -78.855258755188714, 1.380923773601822 ], [ -77.668612840470445, 0.825893052570962 ], [ -77.424984300430395, 0.395686753741117 ], [ -76.292314419240967, 0.416047268064119 ], [ -75.373223232713855, -0.15203175212045 ], [ -75.233722703741947, -0.911416924649529 ], [ -75.544995693652041, -1.56160979574588 ], [ -76.635394253226721, -2.608677666843818 ], [ -77.837904832658609, -3.003020521663103 ], [ -78.639897223612337, -4.547784112164074 ], [ -79.205289069317729, -4.959128513207389 ], [ -79.624979214176179, -4.454198093283495 ], [ -80.442241990872162, -4.425724379090674 ], [ -80.302560594387216, -3.404856459164713 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"EG\", \"name\": \"Egypt\", \"type\": \"Sovereign country\", \"postal\": \"EG\", \"admin\": \"Egypt\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 34.9226, 29.50133 ], [ 33.92136, 27.6487 ], [ 32.32046, 29.76043 ], [ 34.10455, 26.14227 ], [ 35.69241, 23.92671 ], [ 35.52598, 23.10244 ], [ 36.86623, 22.0 ], [ 25.0, 22.0 ], [ 25.0, 29.238654529533459 ], [ 24.70007, 30.04419 ], [ 24.80287, 31.08929 ], [ 25.16482, 31.56915 ], [ 26.49533, 31.58568 ], [ 28.91353, 30.87005 ], [ 30.97693, 31.55586 ], [ 31.68796, 31.4296 ], [ 31.96041, 30.9336 ], [ 32.19247, 31.26034 ], [ 33.7734, 30.96746 ], [ 34.26544, 31.21936 ], [ 34.9226, 29.50133 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ER\", \"name\": \"Eritrea\", \"type\": \"Sovereign country\", \"postal\": \"ER\", \"admin\": \"Eritrea\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 42.35156000000012, 12.542230000000131 ], [ 40.8966, 14.118640000000141 ], [ 40.026218702969175, 14.519579169162284 ], [ 39.0994, 14.74064 ], [ 38.51295, 14.50547 ], [ 37.906070000000113, 14.959430000000168 ], [ 37.59377, 14.2131 ], [ 36.42951, 14.42211 ], [ 36.852530000000115, 16.95655 ], [ 38.410089959473225, 17.998307399970315 ], [ 39.26611006038803, 15.922723496967251 ], [ 43.081226027200159, 12.699638576707116 ], [ 42.35156000000012, 12.542230000000131 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ES\", \"name\": \"Spain\", \"type\": \"Sovereign country\", \"postal\": \"E\", \"admin\": \"Spain\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -9.034817674180246, 41.880570583659676 ], [ -8.984433152695672, 42.592775173506269 ], [ -9.392883673530648, 43.026624660812701 ], [ -7.97818966310831, 43.748337714200993 ], [ -1.901351284177764, 43.422802028978339 ], [ -1.502770961910528, 43.034014390630432 ], [ 0.338046909190581, 42.57954600683955 ], [ 0.701590610363894, 42.795734361332606 ], [ 1.826793247087153, 42.343384711265692 ], [ 2.985998976258458, 42.473015041669861 ], [ 3.039484083680549, 41.892120266276905 ], [ 2.091841668312185, 41.226088568683096 ], [ 0.810524529635188, 41.014731960609339 ], [ -0.278711310212941, 39.30997813573272 ], [ 0.111290724293838, 38.73851430923304 ], [ -0.467123582349103, 38.292365831041153 ], [ -0.683389451490598, 37.642353827457825 ], [ -1.438382127274849, 37.443063666324221 ], [ -2.146452602538119, 36.674144192037289 ], [ -4.368900926114719, 36.677839056946155 ], [ -5.377159796561458, 35.946850083961465 ], [ -5.866432257500904, 36.029816596006057 ], [ -6.520190802425404, 36.942913316387319 ], [ -7.453725551778092, 37.097787583966067 ], [ -7.537105475281024, 37.428904323876239 ], [ -7.029281175148796, 38.075764065089771 ], [ -7.374092169616318, 38.373058580064921 ], [ -7.098036668313128, 39.030072740223787 ], [ -7.498632371439726, 39.629571031241809 ], [ -7.066591559263529, 39.711891587882775 ], [ -6.851126674822552, 41.111082668617527 ], [ -6.389087693700915, 41.381815497394655 ], [ -6.668605515967657, 41.883386949219584 ], [ -8.013174607769912, 41.790886135417125 ], [ -8.263856980817792, 42.28046865495034 ], [ -9.034817674180246, 41.880570583659676 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"EE\", \"name\": \"Estonia\", \"type\": \"Sovereign country\", \"postal\": \"EST\", \"admin\": \"Estonia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 24.312862583114622, 57.793423570376973 ], [ 24.428927850042161, 58.383413397853289 ], [ 24.061198357853186, 58.257374579493408 ], [ 23.426560092876684, 58.612753404364625 ], [ 23.339795363058645, 59.187240302153384 ], [ 25.864189080516638, 59.611090399811332 ], [ 28.13169925305175, 59.300825100330925 ], [ 27.420166456824944, 58.724581203844238 ], [ 27.716685825315722, 57.791899115624361 ], [ 27.288184848751513, 57.474528306703832 ], [ 25.164593540149269, 57.970156968815189 ], [ 24.312862583114622, 57.793423570376973 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ET\", \"name\": \"Ethiopia\", \"type\": \"Sovereign country\", \"postal\": \"ET\", \"admin\": \"Ethiopia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 37.906070000000113, 14.959430000000168 ], [ 38.51295, 14.50547 ], [ 39.0994, 14.74064 ], [ 40.026250000000118, 14.51959 ], [ 41.59856, 13.452090000000112 ], [ 42.35156000000012, 12.542230000000131 ], [ 41.661760000000129, 11.6312 ], [ 41.755570000000205, 11.050910000000101 ], [ 42.776851841000962, 10.92687856693442 ], [ 42.55876, 10.57258000000013 ], [ 43.67875, 9.18358000000012 ], [ 46.94834, 7.99688 ], [ 47.78942, 8.003 ], [ 44.9636, 5.001620000000116 ], [ 43.66087, 4.95755 ], [ 41.855083092644122, 3.918911920483765 ], [ 41.171800000000133, 3.91909 ], [ 40.768480000000125, 4.257020000000125 ], [ 39.559384258765931, 3.422060000000215 ], [ 38.120915000000139, 3.598605 ], [ 36.855093238008237, 4.447864127672858 ], [ 36.159078632855653, 4.447864127672858 ], [ 35.817447662353629, 4.776965663462022 ], [ 35.817447662353629, 5.338232082790853 ], [ 35.298007118233102, 5.506 ], [ 34.70702, 6.594220000000121 ], [ 33.568290000000104, 7.71334 ], [ 32.954180000000235, 7.784970000000101 ], [ 33.294800000000123, 8.35458 ], [ 33.825500000000147, 8.37916 ], [ 34.25745, 10.63009 ], [ 35.863630000000171, 12.57828 ], [ 36.42951, 14.42211 ], [ 37.59377, 14.2131 ], [ 37.906070000000113, 14.959430000000168 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"FI\", \"name\": \"Finland\", \"type\": \"Country\", \"postal\": \"FIN\", \"admin\": \"Finland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 28.591929559043194, 69.064776923286658 ], [ 28.445943637818658, 68.364612942164044 ], [ 29.97742638522061, 67.698297024192655 ], [ 29.054588657352326, 66.944286200621931 ], [ 30.21765, 65.80598 ], [ 29.544429559046989, 64.948671576590485 ], [ 30.444684686003711, 64.20445343693909 ], [ 30.035872430142717, 63.552813625738551 ], [ 31.516092156711125, 62.867687486412891 ], [ 31.139991082490894, 62.357692776124409 ], [ 28.069997592895277, 60.503516547275837 ], [ 22.869694858499457, 59.846373196036225 ], [ 21.322244093519316, 60.720169989659524 ], [ 21.544866163832694, 61.705329494871791 ], [ 21.059211053153689, 62.60739329695874 ], [ 21.536029493910803, 63.18973501245587 ], [ 25.398067661243942, 65.111426500093742 ], [ 25.294043003040404, 65.534346421970454 ], [ 23.565879754335583, 66.396050930437426 ], [ 23.539473097434438, 67.93600861273525 ], [ 20.645592889089528, 69.106247260200874 ], [ 21.244936150810673, 69.370443020293081 ], [ 22.356237827247412, 68.841741441514912 ], [ 24.735679152126725, 68.64955678982146 ], [ 25.689212680776365, 69.092113755969038 ], [ 26.179622023226244, 69.825298977326142 ], [ 27.732292107867863, 70.164193020296253 ], [ 29.015572950971972, 69.766491197377988 ], [ 28.591929559043194, 69.064776923286658 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"FJ\", \"name\": \"Fiji\", \"type\": \"Sovereign country\", \"postal\": \"FJ\", \"admin\": \"Fiji\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 178.3736, -17.33992 ], [ 178.71806, -17.62846 ], [ 178.55271, -18.15059 ], [ 177.38146, -18.16432 ], [ 177.28504, -17.72465 ], [ 177.67087000000012, -17.38114 ], [ 178.3736, -17.33992 ] ] ], [ [ [ 179.36414266196428, -16.801354076946851 ], [ 178.72505936299709, -17.012041674368021 ], [ 178.59683859511708, -16.63915 ], [ 180.00000000000014, -16.06713266364244 ], [ 180.00000000000014, -16.55521656663916 ], [ 179.36414266196428, -16.801354076946851 ] ] ], [ [ [ -179.91736938476527, -16.501783135649362 ], [ -180.0, -16.06713266364244 ], [ -179.79332010904861, -16.020882256741231 ], [ -179.91736938476527, -16.501783135649362 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"FK\", \"name\": \"Falkland Is.\", \"type\": \"Dependency\", \"postal\": \"FK\", \"admin\": \"Falkland Islands\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -61.2, -51.85 ], [ -60.0, -51.25 ], [ -59.15, -51.5 ], [ -58.55, -51.1 ], [ -57.75, -51.55 ], [ -58.05, -51.9 ], [ -59.4, -52.2 ], [ -59.85, -51.85 ], [ -60.7, -52.3 ], [ -61.2, -51.85 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"FR\", \"name\": \"France\", \"type\": \"Country\", \"postal\": \"F\", \"admin\": \"France\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -52.556424730018392, 2.504705308437053 ], [ -53.418465135295264, 2.053389187016038 ], [ -53.554839240113495, 2.334896551925965 ], [ -54.088062506717279, 2.105556545414629 ], [ -54.524754197799751, 2.311848863123785 ], [ -54.011503872276819, 3.622569891774859 ], [ -54.478632981979217, 4.896755682795643 ], [ -53.958044603070931, 5.756548163267809 ], [ -52.882141282754077, 5.409850979021599 ], [ -51.82334286152593, 4.565768133966145 ], [ -51.657797410678882, 4.156232408053029 ], [ -52.556424730018392, 2.504705308437053 ] ] ], [ [ [ 9.560016310269134, 42.152491970379572 ], [ 9.229752231491773, 41.380006822264448 ], [ 8.775723097375362, 41.583611965494441 ], [ 8.54421268070783, 42.256516628583086 ], [ 9.390000848028905, 43.009984849614739 ], [ 9.560016310269134, 42.152491970379572 ] ] ], [ [ [ 3.588184441755715, 50.378992418003577 ], [ 4.286022983425141, 49.907496649772554 ], [ 8.099278598674772, 49.017783515003373 ], [ 7.466759067422231, 47.620581976911865 ], [ 6.736571079138088, 47.541801255882888 ], [ 6.037388950228973, 46.725778713561908 ], [ 6.022609490593567, 46.272989813820516 ], [ 6.500099724970454, 46.429672756529442 ], [ 6.843592970414562, 45.991146552100673 ], [ 7.096652459347837, 45.333098863295874 ], [ 6.749955275101712, 45.028517971367592 ], [ 7.007562290076663, 44.254766750661389 ], [ 7.549596388386163, 44.127901109384823 ], [ 7.435184767291844, 43.693844916349178 ], [ 6.529245232783069, 43.128892320318357 ], [ 4.556962517931396, 43.399650987311588 ], [ 3.10041059735272, 43.075200507167125 ], [ 2.985998976258486, 42.473015041669896 ], [ 1.826793247087181, 42.343384711265657 ], [ 0.701590610363922, 42.795734361332649 ], [ 0.338046909190581, 42.579546006839564 ], [ -1.502770961910471, 43.034014390630489 ], [ -1.901351284177736, 43.422802028978339 ], [ -1.384225226232957, 44.022610378590173 ], [ -1.193797573237362, 46.014917710954876 ], [ -2.963276129559574, 47.570326646507965 ], [ -4.491554938159482, 47.954954332056417 ], [ -4.592349819344747, 48.684160468126947 ], [ -3.295813971357745, 48.901692409859635 ], [ -1.616510789384932, 48.644421291694584 ], [ -1.933494025063254, 49.776341864615773 ], [ -0.98946895995536, 49.347375800160876 ], [ 1.338761020522753, 50.127173163445264 ], [ 1.6390010921385, 50.946606350297515 ], [ 2.513573032246171, 51.148506171261857 ], [ 2.658422071960331, 50.79684804951566 ], [ 3.588184441755715, 50.378992418003577 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GA\", \"name\": \"Gabon\", \"type\": \"Sovereign country\", \"postal\": \"GA\", \"admin\": \"Gabon\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 11.093772820691925, -3.978826592630547 ], [ 9.405245395554971, -2.144313246269043 ], [ 8.830086704146424, -0.779073581550037 ], [ 9.492888624721985, 1.010119533691494 ], [ 11.285078973036462, 1.057661851400013 ], [ 11.276449008843713, 2.261050930180872 ], [ 12.951333855855609, 2.32161570882694 ], [ 13.282631463278818, 1.314183661296881 ], [ 14.276265903386957, 1.196929836426619 ], [ 13.843320753645656, 0.038757635901149 ], [ 14.316418491277744, -0.552627455247048 ], [ 14.299210239324566, -1.998275648612214 ], [ 13.99240726080771, -2.4708049454891 ], [ 13.109618767965628, -2.428740329603514 ], [ 12.575284458067642, -1.948511244315135 ], [ 12.495702752338161, -2.391688327650243 ], [ 11.478038771214303, -2.765618991714241 ], [ 11.855121697648116, -3.426870619321051 ], [ 11.093772820691925, -3.978826592630547 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GB\", \"name\": \"United Kingdom\", \"type\": \"Country\", \"postal\": \"GB\", \"admin\": \"United Kingdom\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -5.661948614921897, 54.554603176483852 ], [ -6.197884894220977, 53.867565009163343 ], [ -7.572167934591079, 54.059956366585993 ], [ -7.366030646178785, 54.595840969452695 ], [ -7.572167934591079, 55.131622219454897 ], [ -6.733847011736145, 55.172860012423797 ], [ -5.661948614921897, 54.554603176483852 ] ] ], [ [ [ -3.005004848635281, 58.635000108466329 ], [ -4.073828497728016, 57.553024807355257 ], [ -1.959280564776918, 57.684799709699519 ], [ -2.219988165689301, 56.870017401753529 ], [ -3.119003058271119, 55.973793036515474 ], [ -2.085009324543023, 55.909998480851272 ], [ -1.11499101399221, 54.624986477265395 ], [ -0.4304849918542, 54.464376125702159 ], [ 0.469976840831777, 52.929999498091973 ], [ 1.681530795914739, 52.739520168664001 ], [ 1.559987827164377, 52.099998480836007 ], [ 1.050561557630914, 51.806760565795685 ], [ 1.449865349950301, 51.289427802121963 ], [ 0.550333693045502, 50.765738837275876 ], [ -2.489997524414378, 50.500018622431242 ], [ -2.956273972984036, 50.696879991247016 ], [ -3.617448085942328, 50.228355617872722 ], [ -4.542507900399244, 50.341837063185665 ], [ -5.245023159191135, 49.959999904981089 ], [ -5.776566941745301, 50.159677639356829 ], [ -4.309989793301838, 51.210001125689161 ], [ -3.414850633142123, 51.42600861266925 ], [ -4.984367234710874, 51.593466091510976 ], [ -5.267295701508886, 51.991400458374585 ], [ -4.222346564134853, 52.301355699261364 ], [ -4.770013393564113, 52.840004991255626 ], [ -4.579999152026915, 53.495003770555172 ], [ -3.092079637047107, 53.404440822963551 ], [ -2.945008510744344, 53.984999701546684 ], [ -3.630005458989331, 54.615012925833014 ], [ -4.844169073903004, 54.790971177786844 ], [ -5.082526617849226, 55.061600653699372 ], [ -4.719112107756644, 55.508472601943481 ], [ -5.047980922862109, 55.78398550070753 ], [ -5.58639767091114, 55.311146145236819 ], [ -5.644998745130181, 56.275014960344805 ], [ -6.149980841486354, 56.785009670633542 ], [ -5.786824713555291, 57.818848375064647 ], [ -5.009998745127575, 58.630013332750053 ], [ -3.005004848635281, 58.635000108466329 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GE\", \"name\": \"Georgia\", \"type\": \"Sovereign country\", \"postal\": \"GE\", \"admin\": \"Georgia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 41.554084100110657, 41.535656236327569 ], [ 41.453470086438386, 42.64512339941794 ], [ 40.32139448422032, 43.128633938156845 ], [ 40.076964959479767, 43.553104153002316 ], [ 42.39439456560882, 43.220307929042633 ], [ 43.931199985536836, 42.554973863284772 ], [ 45.470279168485717, 42.502780666669977 ], [ 46.404950799348825, 41.860675157227305 ], [ 46.145431756379018, 41.72280243587258 ], [ 46.637908156120581, 41.181672675128226 ], [ 45.217426385281584, 41.411451931314048 ], [ 43.582745802592733, 41.092143256182567 ], [ 42.619548781104491, 41.583172715819941 ], [ 41.554084100110657, 41.535656236327569 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GH\", \"name\": \"Ghana\", \"type\": \"Sovereign country\", \"postal\": \"GH\", \"admin\": \"Ghana\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 1.060121697604927, 5.928837388528876 ], [ -1.964706590167594, 4.710462144383371 ], [ -2.856125047202397, 4.994475816259509 ], [ -3.244370083011262, 6.250471503113502 ], [ -2.562189500326241, 8.219627793811483 ], [ -2.940409308270461, 10.962690334512558 ], [ 0.023802524423701, 11.018681748900804 ], [ 0.712029249686879, 8.312464504423829 ], [ 0.570384148774849, 6.914358628767189 ], [ 1.060121697604927, 5.928837388528876 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GN\", \"name\": \"Guinea\", \"type\": \"Sovereign country\", \"postal\": \"GN\", \"admin\": \"Guinea\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -8.439298468448698, 7.686042792181738 ], [ -9.208786383490846, 7.313920803247953 ], [ -9.755342169625834, 8.541055202666925 ], [ -10.505477260774668, 8.348896389189605 ], [ -10.622395188835041, 9.267910061068278 ], [ -11.11748124840733, 10.045872911006285 ], [ -12.425928514037565, 9.835834051955956 ], [ -13.246550258832515, 8.903048610871508 ], [ -15.130311245168173, 11.040411688679526 ], [ -14.685687221728898, 11.527823798056488 ], [ -13.743160773157413, 11.811269029177412 ], [ -13.700476040084325, 12.586182969610194 ], [ -11.513942836950591, 12.442987575729418 ], [ -11.456168585648271, 12.076834214725338 ], [ -11.03655595543826, 12.211244615116515 ], [ -10.165213792348837, 11.844083563682744 ], [ -9.127473517279583, 12.308060411015333 ], [ -8.376304897484914, 11.393645941610629 ], [ -8.620321010767128, 10.810890814655183 ], [ -8.282357143578281, 10.792597357623846 ], [ -8.029943610048619, 10.206534939001713 ], [ -8.309616461612251, 9.789531968622441 ], [ -7.832100389019188, 8.575704250518626 ], [ -8.299048631208564, 8.316443589710303 ], [ -8.439298468448698, 7.686042792181738 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GM\", \"name\": \"Gambia\", \"type\": \"Sovereign country\", \"postal\": \"GM\", \"admin\": \"Gambia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -16.841524624081273, 13.151393947802561 ], [ -16.713728807023472, 13.594958604379855 ], [ -15.39877031092446, 13.860368760630919 ], [ -14.046992356817482, 13.794067898000449 ], [ -13.844963344772408, 13.505041612192002 ], [ -16.841524624081273, 13.151393947802561 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GW\", \"name\": \"Guinea-Bissau\", \"type\": \"Sovereign country\", \"postal\": \"GW\", \"admin\": \"Guinea Bissau\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -15.130311245168173, 11.040411688679526 ], [ -16.085214199273565, 11.52459402103824 ], [ -16.677451951554573, 12.384851589401052 ], [ -13.700476040084325, 12.586182969610194 ], [ -13.743160773157413, 11.811269029177412 ], [ -14.685687221728898, 11.527823798056488 ], [ -15.130311245168173, 11.040411688679526 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GQ\", \"name\": \"Eq. Guinea\", \"type\": \"Sovereign country\", \"postal\": \"GQ\", \"admin\": \"Equatorial Guinea\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 9.492888624721985, 1.010119533691494 ], [ 9.305613234096256, 1.160911363119183 ], [ 9.649158155972629, 2.283866075037736 ], [ 11.276449008843713, 2.261050930180872 ], [ 11.285078973036462, 1.057661851400013 ], [ 9.492888624721985, 1.010119533691494 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GR\", \"name\": \"Greece\", \"type\": \"Sovereign country\", \"postal\": \"GR\", \"admin\": \"Greece\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 23.699980096133004, 35.705004380835533 ], [ 24.24666507334868, 35.368022365860156 ], [ 26.290002882601726, 35.299990342747918 ], [ 26.164997592887659, 35.004995429009796 ], [ 24.724982130642303, 34.91998769788961 ], [ 23.514978468528113, 35.279991563450977 ], [ 23.699980096133004, 35.705004380835533 ] ] ], [ [ [ 26.604195590936285, 41.562114569661105 ], [ 26.056942172965506, 40.824123440100834 ], [ 23.714811232200816, 40.687129218095123 ], [ 24.407998894964066, 40.124992987624097 ], [ 23.899967889102584, 39.96200552017558 ], [ 23.3429993018608, 39.960997829745793 ], [ 22.813987664488963, 40.476005153966554 ], [ 22.849747755634809, 39.659310818025773 ], [ 23.350027296652598, 39.190011298167263 ], [ 22.973099399515547, 38.970903225249657 ], [ 24.025024855248944, 38.21999298761645 ], [ 24.040011020613605, 37.655014553369426 ], [ 23.115002882589152, 37.920011298162223 ], [ 23.409971958111072, 37.409990749657396 ], [ 22.774971958108637, 37.305010077456558 ], [ 23.15422529469862, 36.422505804992056 ], [ 21.670026482843696, 36.844986477194198 ], [ 21.120034213961333, 38.310323391262727 ], [ 20.15001590341052, 39.624997666984029 ], [ 21.020040317476429, 40.84272695572588 ], [ 24.492644891058035, 41.58389618587205 ], [ 25.197201368925533, 41.234485988930658 ], [ 26.106138136507184, 41.328898830727837 ], [ 26.117041863720914, 41.826904608724732 ], [ 26.604195590936285, 41.562114569661105 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GL\", \"name\": \"Greenland\", \"type\": \"Country\", \"postal\": \"GL\", \"admin\": \"Greenland\", \"sales_rgn\": 5 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -46.76379, 82.62796 ], [ -43.40644, 83.22516 ], [ -39.89753, 83.18018 ], [ -38.62214, 83.54905 ], [ -27.10046, 83.51966 ], [ -20.84539, 82.72669 ], [ -22.69182, 82.34165 ], [ -31.9, 82.2 ], [ -24.84448, 81.78697 ], [ -22.90328, 82.09317 ], [ -22.07175, 81.73449 ], [ -23.16961, 81.15271 ], [ -15.76818, 81.91245 ], [ -12.77018, 81.71885 ], [ -12.20855, 81.29154 ], [ -16.85, 80.35 ], [ -20.04624, 80.17708 ], [ -17.73035, 80.12912 ], [ -19.70499, 78.75128 ], [ -19.67353, 77.63859 ], [ -18.47285, 76.98565 ], [ -21.67944, 76.62795 ], [ -19.83407, 76.09808 ], [ -19.59896, 75.24838 ], [ -20.66818, 75.15585 ], [ -19.37281, 74.29561 ], [ -21.59422, 74.22382 ], [ -20.43454, 73.81713 ], [ -20.76234, 73.46436 ], [ -23.56593, 73.30663 ], [ -22.31311, 72.62928 ], [ -22.29954, 72.18409 ], [ -24.27834, 72.59788 ], [ -24.79296, 72.3302 ], [ -22.13281, 71.46898 ], [ -21.75356, 70.66369 ], [ -23.53603, 70.471 ], [ -25.54341, 71.43094 ], [ -25.20135, 70.75226 ], [ -26.36276, 70.22646 ], [ -22.34902, 70.12946 ], [ -27.74737, 68.47046 ], [ -31.77665, 68.12078 ], [ -34.20196, 66.67974 ], [ -36.35284, 65.9789 ], [ -39.81222, 65.45848 ], [ -40.66899, 64.83997 ], [ -40.68281, 64.13902 ], [ -41.1887, 63.48246 ], [ -42.81938, 62.68233 ], [ -42.41666, 61.90093 ], [ -43.3784, 60.09772 ], [ -44.7875, 60.03676 ], [ -46.26364, 60.85328 ], [ -48.26294, 60.85843 ], [ -51.63325, 63.62691 ], [ -52.14014, 64.27842 ], [ -52.27659, 65.1767 ], [ -53.66166, 66.09957 ], [ -53.30161, 66.8365 ], [ -53.96911, 67.18899 ], [ -52.9804, 68.35759 ], [ -51.47536, 68.72958 ], [ -50.87122, 69.9291 ], [ -53.45629, 69.283625 ], [ -54.68336, 69.61003 ], [ -54.75001, 70.28932 ], [ -54.35884, 70.821315 ], [ -51.39014, 70.56978 ], [ -54.00422, 71.54719 ], [ -55.83468, 71.65444 ], [ -54.71819, 72.58625 ], [ -57.32363, 74.71026 ], [ -58.59679, 75.09861 ], [ -58.58516, 75.51727 ], [ -61.26861, 76.10238 ], [ -68.50438, 76.06141 ], [ -71.40257, 77.00857 ], [ -66.76397, 77.37595 ], [ -73.297, 78.04419 ], [ -73.15938, 78.43271 ], [ -65.7107, 79.39436 ], [ -65.3239, 79.75814 ], [ -68.02298, 80.11721 ], [ -67.15129, 80.51582 ], [ -62.23444, 81.3211 ], [ -62.65116, 81.77042 ], [ -57.20744, 82.19074 ], [ -54.13442, 82.19962 ], [ -53.04328, 81.88833 ], [ -50.39061, 82.43883 ], [ -44.523, 81.6607 ], [ -46.9007, 82.19979 ], [ -46.76379, 82.62796 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GT\", \"name\": \"Guatemala\", \"type\": \"Sovereign country\", \"postal\": \"GT\", \"admin\": \"Guatemala\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -90.095554572290979, 13.735337632700734 ], [ -91.689746670279135, 14.126218166556455 ], [ -92.227750006869826, 14.538828640190928 ], [ -92.229248623406278, 15.25144664149586 ], [ -91.747960171255926, 16.066564846251723 ], [ -90.464472622422662, 16.069562079324655 ], [ -90.438866950222035, 16.410109768128095 ], [ -91.453921271515156, 17.252177232324172 ], [ -91.002269253284211, 17.25465770107418 ], [ -91.001519945015957, 17.81759491624571 ], [ -89.143080410503316, 17.808318996649319 ], [ -89.229121670269279, 15.886937567605171 ], [ -88.225022752622024, 15.727722479713904 ], [ -89.154810960633569, 15.06641917567481 ], [ -89.145535041037178, 14.678019110569082 ], [ -90.095554572290979, 13.735337632700734 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"GY\", \"name\": \"Guyana\", \"type\": \"Sovereign country\", \"postal\": \"GY\", \"admin\": \"Guyana\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -59.758284878159195, 8.367034816924047 ], [ -58.482962205628063, 7.347691351750697 ], [ -58.454876064677421, 6.832787380394464 ], [ -57.147436489476888, 5.973149929219161 ], [ -57.307245856339506, 5.073566595882227 ], [ -57.914288906472137, 4.812626451024414 ], [ -58.044694383360678, 4.060863552258383 ], [ -57.60156897645787, 3.334654649260685 ], [ -57.28143347840971, 3.333491929534119 ], [ -56.539385748914555, 1.899522609866921 ], [ -57.335822923396904, 1.948537705895759 ], [ -58.540012986878295, 1.268088283692521 ], [ -59.646043667221257, 1.786893825686789 ], [ -59.974524909084558, 2.755232652188056 ], [ -59.538039923731233, 3.958802598481938 ], [ -60.11100236676738, 4.574966538914083 ], [ -59.980958624904886, 5.014061184098139 ], [ -60.733574184803722, 5.200277207861901 ], [ -61.410302903881956, 5.959068101419618 ], [ -61.159336310456482, 6.696077378766319 ], [ -60.295668097562398, 7.043911444522919 ], [ -60.637972785063766, 7.414999904810856 ], [ -60.5505879380582, 7.779602972846178 ], [ -59.758284878159195, 8.367034816924047 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"HN\", \"name\": \"Honduras\", \"type\": \"Sovereign country\", \"postal\": \"HN\", \"admin\": \"Honduras\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.316654425795491, 12.984685777229004 ], [ -87.79311113152653, 13.384480495655168 ], [ -87.859515347021613, 13.893312486217098 ], [ -88.503997972349623, 13.845485948130943 ], [ -89.353325975282814, 14.424132798719086 ], [ -89.15481096063354, 15.066419175674866 ], [ -88.225022752621953, 15.727722479714032 ], [ -84.983721889978824, 15.995923163308703 ], [ -83.147219000974133, 14.99582916916421 ], [ -84.449335903648603, 14.621614284722511 ], [ -84.924500698572331, 14.790492865452336 ], [ -85.801294725268519, 13.836054999237604 ], [ -86.096263800790609, 14.038187364147234 ], [ -86.755086636079625, 13.754845485890939 ], [ -86.733821784191491, 13.2630925562014 ], [ -87.316654425795491, 12.984685777229004 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"HR\", \"name\": \"Croatia\", \"type\": \"Sovereign country\", \"postal\": \"HR\", \"admin\": \"Croatia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 18.829838087650046, 45.908877671891844 ], [ 19.390475701584592, 45.236515611342384 ], [ 19.005486281010121, 44.860233669609158 ], [ 15.959367303133376, 45.233776760430942 ], [ 15.750026075918981, 44.818711656262565 ], [ 17.674921502358984, 43.02856252702361 ], [ 18.56, 42.65 ], [ 18.450016310304818, 42.479991360029317 ], [ 16.015384555737683, 43.507215481127218 ], [ 15.174453973052096, 44.243191229827914 ], [ 15.376250441151797, 44.317915350922078 ], [ 14.901602410550879, 45.076060289076111 ], [ 14.258747592839995, 45.233776760430942 ], [ 13.952254672917036, 44.802123521496867 ], [ 13.656975538801191, 45.136935126315961 ], [ 13.715059848697251, 45.500323798192426 ], [ 15.327674594797429, 45.452316392593332 ], [ 15.768732944408612, 46.238108222023527 ], [ 16.564808383864943, 46.503750922219808 ], [ 17.630066359129557, 45.951769110694102 ], [ 18.829838087650046, 45.908877671891844 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"HT\", \"name\": \"Haiti\", \"type\": \"Sovereign country\", \"postal\": \"HT\", \"admin\": \"Haiti\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -73.189790615517623, 19.915683905511912 ], [ -71.712361416292964, 19.714455878167357 ], [ -71.701302659782499, 18.785416978424053 ], [ -71.945112067335558, 18.616900132720261 ], [ -71.708304816358051, 18.044997056546094 ], [ -73.922433234335656, 18.030992743395004 ], [ -74.458033616824778, 18.342549953682706 ], [ -74.369925299767132, 18.664907538319412 ], [ -72.694937099890637, 18.445799465401862 ], [ -72.334881557897006, 18.668421535715254 ], [ -72.784104783810278, 19.483591416903408 ], [ -73.415022345661754, 19.639550889560283 ], [ -73.189790615517623, 19.915683905511912 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"HU\", \"name\": \"Hungary\", \"type\": \"Sovereign country\", \"postal\": \"HU\", \"admin\": \"Hungary\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 16.202298211337364, 46.852385972676963 ], [ 16.534267612380376, 47.496170966169117 ], [ 16.340584344150415, 47.71290192320123 ], [ 16.903754103267261, 47.714865627628328 ], [ 16.979666782304037, 48.123497015976305 ], [ 17.857132602620027, 47.758428860050373 ], [ 20.801293979584926, 48.623854071642384 ], [ 22.085608351334855, 48.422264309271789 ], [ 22.710531447040495, 47.882193915389408 ], [ 22.099767693782837, 47.672439276716702 ], [ 21.021952345471249, 46.316087958351901 ], [ 18.456062452882861, 45.759481106136136 ], [ 16.202298211337364, 46.852385972676963 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ID\", \"name\": \"Indonesia\", \"type\": \"Sovereign country\", \"postal\": \"INDO\", \"admin\": \"Indonesia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 120.71560875863045, -10.239581394087864 ], [ 120.2950142762069, -10.258649997603527 ], [ 118.96780846565471, -9.557969252158031 ], [ 119.90030968636162, -9.361340427287516 ], [ 120.77550174365675, -9.969675388227458 ], [ 120.71560875863045, -10.239581394087864 ] ] ], [ [ [ 124.43595014861941, -10.140000909061442 ], [ 123.45998904835503, -10.239994805546175 ], [ 123.98000898650812, -9.290026950724695 ], [ 124.96868248911622, -8.892790215697048 ], [ 125.0885201356011, -9.393173109579323 ], [ 124.43595014861941, -10.140000909061442 ] ] ], [ [ [ 117.90001834520777, -8.095681247594925 ], [ 118.87845991422213, -8.28068287519983 ], [ 119.1265067892231, -8.705824883665073 ], [ 116.74014082241663, -9.032936700072639 ], [ 117.08373742072533, -8.457157891476541 ], [ 117.63202436734215, -8.449303073768192 ], [ 117.90001834520777, -8.095681247594925 ] ] ], [ [ [ 122.90353722543611, -8.094234307490737 ], [ 122.75698286345633, -8.649807631060639 ], [ 119.92439090380961, -8.810417982623875 ], [ 119.92092858284613, -8.444858900591072 ], [ 120.71509199430758, -8.236964613480865 ], [ 121.34166873584658, -8.536739597206022 ], [ 122.90353722543611, -8.094234307490737 ] ] ], [ [ [ 108.62347863162896, -6.777673841990676 ], [ 110.53922732955331, -6.877357679881683 ], [ 110.75957563684594, -6.465186455921753 ], [ 112.61481123255638, -6.946035658397591 ], [ 112.97876834518812, -7.59421314863458 ], [ 114.47893517462117, -7.776527601760279 ], [ 115.70552697150109, -8.370806573116866 ], [ 114.56451134649652, -8.751816908404834 ], [ 113.4647335144609, -8.348947442257426 ], [ 108.27776329959633, -7.766657403192582 ], [ 106.45410200401616, -7.354899590690948 ], [ 106.28062422081231, -6.924899997590202 ], [ 105.36548628135554, -6.85141611087117 ], [ 106.05164594932708, -5.8959188777945 ], [ 107.26500857954019, -5.954985039904059 ], [ 108.48684614464926, -6.421984958525769 ], [ 108.62347863162896, -6.777673841990676 ] ] ], [ [ [ 134.72462446506668, -6.214400730009288 ], [ 134.21013390516893, -6.895237725454706 ], [ 134.11277550673103, -6.142467136259015 ], [ 134.49962527886791, -5.445042006047899 ], [ 134.72462446506668, -6.214400730009288 ] ] ], [ [ [ 127.24921512258894, -3.45906503663889 ], [ 126.87492272349888, -3.79098276124958 ], [ 126.18380211802733, -3.607376397316557 ], [ 125.98903364471929, -3.177273451351326 ], [ 127.00065148326499, -3.12931772218441 ], [ 127.24921512258894, -3.45906503663889 ] ] ], [ [ [ 130.4713440288518, -3.09376433676762 ], [ 130.8348360535928, -3.858472181822762 ], [ 129.99054650280814, -3.446300957862817 ], [ 127.89889122936236, -3.393435967628193 ], [ 128.13587934785281, -2.843650404474914 ], [ 130.4713440288518, -3.09376433676762 ] ] ], [ [ [ 134.1433679546478, -1.151867364103595 ], [ 134.42262739475305, -2.769184665542383 ], [ 135.4576029806947, -3.367752780779114 ], [ 136.29331424371881, -2.30704233155609 ], [ 137.44073774632753, -1.703513278819372 ], [ 138.32972741104479, -1.702686455902651 ], [ 141.00021040259188, -2.600151055515624 ], [ 141.0338517600139, -9.117892754760419 ], [ 140.14341515519257, -8.297167657100957 ], [ 139.12776655492812, -8.096042982620944 ], [ 138.88147667862498, -8.380935153846096 ], [ 137.61447391169284, -8.411682631059762 ], [ 138.0390991558352, -7.597882175327356 ], [ 138.66862145401481, -7.320224704623072 ], [ 137.92783979711086, -5.393365573756 ], [ 135.16459760959972, -4.462931410340772 ], [ 133.6628804871979, -3.538853448097527 ], [ 132.98395551974735, -4.112978610860282 ], [ 132.75378869031923, -3.311787204607072 ], [ 131.98980431531621, -2.820551039240456 ], [ 133.78003095920351, -2.47984832114021 ], [ 133.69621178602617, -2.214541517753688 ], [ 132.23237348849423, -2.212526136894326 ], [ 131.83622195854471, -1.617161960459598 ], [ 130.94283979708283, -1.432522067880797 ], [ 130.51955814018007, -0.937720228686075 ], [ 132.3801164084168, -0.369537855636978 ], [ 133.98554813042844, -0.780210463060442 ], [ 134.1433679546478, -1.151867364103595 ] ] ], [ [ [ 125.24050052297159, 1.419836127117605 ], [ 124.43703535369738, 0.427881171058971 ], [ 123.68550499887672, 0.235593166500877 ], [ 120.18308312386276, 0.23724681233422 ], [ 120.04086958219548, -0.519657891444851 ], [ 120.93590538949073, -1.408905938323372 ], [ 121.47582075407618, -0.955962009285116 ], [ 123.34056481332848, -0.615672702643081 ], [ 123.2583992859845, -1.076213067228338 ], [ 122.82271528533161, -0.930950616055881 ], [ 122.38852990121538, -1.516858005381124 ], [ 121.50827355355548, -1.904482924002423 ], [ 122.4545723816843, -3.186058444840882 ], [ 122.27189619353257, -3.529500013852697 ], [ 123.17096276254657, -4.683693129091708 ], [ 123.16233279835379, -5.340603936385961 ], [ 122.62851525277873, -5.634591159694494 ], [ 122.23639448454807, -5.282933037948283 ], [ 122.71956912647707, -4.46417164471579 ], [ 121.73823367725439, -4.8513314754465 ], [ 121.48946333220127, -4.574552504091216 ], [ 121.61917117725389, -4.188477878438675 ], [ 120.89818159391771, -3.602105401222829 ], [ 120.97238895068878, -2.62764291749491 ], [ 120.30545291552991, -2.931603692235726 ], [ 120.43071658740539, -5.528241062037779 ], [ 119.79654341031952, -5.673400160345651 ], [ 119.36690555224496, -5.379878024927805 ], [ 119.65360639860015, -4.459417412944958 ], [ 119.49883548388598, -3.494411716326511 ], [ 119.07834435432702, -3.487021986508765 ], [ 118.7677689962529, -2.801999200047689 ], [ 120.03570193896635, 0.566477362465804 ], [ 120.8857792501677, 1.309222723796836 ], [ 122.92756676645186, 0.875192368977466 ], [ 124.07752241424285, 0.917101955566139 ], [ 125.06598921112183, 1.643259182131558 ], [ 125.24050052297159, 1.419836127117605 ] ] ], [ [ [ 128.68824873262074, 1.132385972494106 ], [ 128.63595218314137, 0.258485826006179 ], [ 128.12016971243619, 0.356412665199286 ], [ 127.96803429576889, -0.252077325037533 ], [ 128.37999881399972, -0.780003757331286 ], [ 128.10001590384232, -0.899996433112975 ], [ 127.39949018769377, 1.011721503092574 ], [ 127.93237755748751, 2.174596258956555 ], [ 128.00415612194084, 1.628531398928331 ], [ 128.59455936087548, 1.540810655112864 ], [ 128.68824873262074, 1.132385972494106 ] ] ], [ [ [ 117.87562706916603, 1.827640692548911 ], [ 118.99674726773819, 0.902219143066048 ], [ 117.8118583517178, 0.784241848143722 ], [ 117.47833865770608, 0.102474676917026 ], [ 117.52164350796662, -0.803723239753211 ], [ 116.56004845587952, -1.487660821136231 ], [ 116.14808393764864, -4.012726332214015 ], [ 116.00085778204911, -3.657037448749009 ], [ 114.86480309454456, -4.106984144714417 ], [ 114.46865156459509, -3.495703627133821 ], [ 113.25699425664757, -3.118775729996855 ], [ 112.06812625534067, -3.478392022316072 ], [ 111.70329064336002, -2.994442233902632 ], [ 110.223846063276, -2.934032484553484 ], [ 110.07093550012436, -1.592874037282414 ], [ 109.09187381392255, -0.459506524257051 ], [ 109.06913618371405, 1.341933905437642 ], [ 109.66326012577375, 2.006466986494985 ], [ 109.83022667850886, 1.338135687664192 ], [ 110.51406090702713, 0.773131415200993 ], [ 111.79754845586044, 0.904441229654651 ], [ 112.8598091980522, 1.497790025229946 ], [ 113.80584964401956, 1.217548732911041 ], [ 114.6213554220175, 1.430688177898887 ], [ 115.86551720587678, 4.306559149590157 ], [ 117.88203494677018, 4.137551377779488 ], [ 117.31323245653354, 3.234428208830579 ], [ 118.04832970588538, 2.287690131027361 ], [ 117.87562706916603, 1.827640692548911 ] ] ], [ [ [ 105.81765506390937, -5.852355645372413 ], [ 104.71038414919153, -5.873284600450646 ], [ 102.58426069540693, -4.220258884298204 ], [ 99.263739862060248, 0.183141587724663 ], [ 98.601351352943112, 1.823506577965617 ], [ 95.380876092513489, 4.970782172053674 ], [ 95.293026157617334, 5.479820868344817 ], [ 97.484882033277103, 5.246320909034012 ], [ 100.64143354696168, 2.099381211755798 ], [ 101.65801232300734, 2.083697414555189 ], [ 103.83839603069836, 0.104541734208667 ], [ 103.43764529827499, -0.711945896002845 ], [ 104.36999148968491, -1.084843031421016 ], [ 104.88789269411402, -2.340425306816655 ], [ 105.622111444117, -2.42884368246807 ], [ 106.10859337771271, -3.06177662517895 ], [ 105.81765506390937, -5.852355645372413 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IN\", \"name\": \"India\", \"type\": \"Sovereign country\", \"postal\": \"IND\", \"admin\": \"India\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 77.837450799474567, 35.494009507787766 ], [ 78.912268914713223, 34.321936346975789 ], [ 78.811086460285736, 33.506198025032418 ], [ 79.208891636068586, 32.994394639613716 ], [ 79.17612877799553, 32.483779812137712 ], [ 78.458446486326011, 32.618164374312727 ], [ 78.738894484374015, 31.515906073527063 ], [ 81.111256138029319, 30.183480943313402 ], [ 80.476721225917402, 29.729865220655341 ], [ 80.088424513676273, 28.79447011974014 ], [ 83.304248895199549, 27.364505723575562 ], [ 84.675017938173795, 27.234901231387536 ], [ 85.251778598983378, 26.726198431906344 ], [ 88.06023766474982, 26.414615383402491 ], [ 88.12044070836987, 27.876541652939594 ], [ 88.730325962278556, 28.086864732367516 ], [ 88.83564253128938, 27.098966376243762 ], [ 89.744527622438852, 26.719402981059957 ], [ 92.033483514375092, 26.838310451763562 ], [ 92.103711785859744, 27.452614040633208 ], [ 91.696656528696678, 27.771741848251665 ], [ 92.503118931043645, 27.896876329046449 ], [ 94.565990431702943, 29.277438055939985 ], [ 95.40480228066464, 29.031716620392132 ], [ 96.117678664131034, 29.452802028922466 ], [ 96.586590610747493, 28.83097951915434 ], [ 96.248833449287787, 28.411030992134442 ], [ 97.327113885490036, 28.261582749946339 ], [ 97.402561476636137, 27.882536119085444 ], [ 97.051988559968095, 27.699058946233151 ], [ 97.133999058015306, 27.083773505149964 ], [ 96.419365675850969, 27.264589341739224 ], [ 95.124767694074961, 26.573572089132298 ], [ 95.155153436262594, 26.001307277932085 ], [ 94.106741977925068, 23.85074087167348 ], [ 93.325187615942795, 24.078556423432204 ], [ 93.166127557348375, 22.278459580977103 ], [ 92.672720981825563, 22.041238918541254 ], [ 92.146034783906813, 23.627498684172593 ], [ 91.869927606171316, 23.624346421802784 ], [ 91.706475050832111, 22.985263983649187 ], [ 91.158963250699728, 23.503526923104388 ], [ 92.376201613334814, 24.976692816664965 ], [ 89.920692580121852, 25.269749864192178 ], [ 89.832480910199621, 25.965082098895479 ], [ 88.563049350949768, 26.446525580342723 ], [ 88.209789259802506, 25.768065700782714 ], [ 88.931553989623083, 25.238692328384776 ], [ 88.084422235062419, 24.501657212821925 ], [ 88.699940220090923, 24.23371491138856 ], [ 88.529769728553788, 23.631141872649167 ], [ 89.031961297566227, 22.055708319582976 ], [ 88.888765903685425, 21.690588487224748 ], [ 86.975704380240273, 21.495561631755209 ], [ 87.033168572948867, 20.743307806882413 ], [ 86.499351027373791, 20.151638495356607 ], [ 85.060265740909699, 19.4785788029711 ], [ 82.192792189465919, 17.016636053937816 ], [ 82.191241896497189, 16.556664130107848 ], [ 80.324895867843878, 15.89918488205835 ], [ 80.025069207686442, 15.136414903214147 ], [ 80.286293572921863, 13.006260687710835 ], [ 79.862546828128501, 12.056215318240888 ], [ 79.857999302086824, 10.35727509199711 ], [ 79.340511509115998, 10.30885427493962 ], [ 78.885345493489183, 9.546135972527722 ], [ 79.189719679688295, 9.216543687370148 ], [ 78.277940708330505, 8.933046779816934 ], [ 77.539897902337941, 7.965534776232332 ], [ 76.592978957021671, 8.89927623131419 ], [ 75.746467319648502, 11.308250637248307 ], [ 74.864815708316826, 12.741935736537897 ], [ 74.443859490867226, 14.617221787977698 ], [ 73.534199253233396, 15.990652167214961 ], [ 72.630533481745402, 21.356009426351008 ], [ 71.175273471973952, 20.757441311114235 ], [ 70.470458611945105, 20.877330634031384 ], [ 69.164130080038831, 22.0892980005727 ], [ 69.644927606082405, 22.450774644454338 ], [ 69.349596795534353, 22.84317963306269 ], [ 68.176645135373406, 23.691965033456711 ], [ 68.842599318318776, 24.359133612560939 ], [ 71.043240187468228, 24.3565239527302 ], [ 70.168926629522019, 26.491871649678842 ], [ 69.514392938113133, 26.940965684511372 ], [ 70.616496209601934, 27.989196275335868 ], [ 71.777665643200322, 27.913180243434525 ], [ 74.421380242820277, 30.979814764931177 ], [ 74.405928989565012, 31.692639471965279 ], [ 75.258641798813215, 32.271105455040498 ], [ 74.451559279278712, 32.764899603805503 ], [ 73.749948358051967, 34.317698879527853 ], [ 74.240202671204969, 34.748887030571254 ], [ 76.871721632804025, 34.653544012992739 ], [ 77.837450799474567, 35.494009507787766 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IE\", \"name\": \"Ireland\", \"type\": \"Sovereign country\", \"postal\": \"IRL\", \"admin\": \"Ireland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -6.197884894220991, 53.867565009163364 ], [ -6.032985398777611, 53.153164170944351 ], [ -6.788856573910849, 52.260117906292336 ], [ -8.561616583683559, 51.669301255899356 ], [ -9.977085740590269, 51.820454820353078 ], [ -9.166282517930782, 52.864628811242682 ], [ -9.688524542672454, 53.881362616585299 ], [ -7.572167934591064, 55.131622219454869 ], [ -7.366030646178785, 54.595840969452723 ], [ -7.572167934591064, 54.059956366586 ], [ -6.197884894220991, 53.867565009163364 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IR\", \"name\": \"Iran\", \"type\": \"Sovereign country\", \"postal\": \"IRN\", \"admin\": \"Iran\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 53.921597934795557, 37.198918361961262 ], [ 54.800303989486565, 37.392420762678185 ], [ 55.511578403551908, 37.964117133123167 ], [ 56.619366082592819, 38.121394354803485 ], [ 59.234761997316809, 37.412987982730343 ], [ 60.377637973883878, 36.527383124328367 ], [ 61.123070509694145, 36.491597194966246 ], [ 61.210817091725744, 35.650072333309225 ], [ 60.528429803311582, 33.676446031218006 ], [ 60.963700392506006, 33.528832302376259 ], [ 60.536077915290775, 32.981268825811568 ], [ 60.941944614511129, 31.548074652628753 ], [ 61.699314406180832, 31.379506130492672 ], [ 61.781221551363444, 30.735850328081238 ], [ 60.874248488208792, 29.829238999952608 ], [ 61.771868117118629, 28.699333807890799 ], [ 62.727830438085988, 28.25964488373539 ], [ 62.755425652929858, 27.378923448184988 ], [ 63.233897739520302, 27.217047024030709 ], [ 63.316631707619592, 26.756532497661667 ], [ 61.87418745305655, 26.239974880472104 ], [ 61.49736290878419, 25.078237006118499 ], [ 57.397251417882387, 25.739902045183641 ], [ 56.970765822177555, 26.966106268821363 ], [ 56.492138706290206, 27.143304755150197 ], [ 54.715089552637266, 26.480657863871514 ], [ 53.493096958231348, 26.812368882753049 ], [ 52.483597853409613, 27.580849107365495 ], [ 51.520762566947418, 27.865689602158298 ], [ 50.115008579311585, 30.147772528599717 ], [ 49.576850213423995, 29.985715236932407 ], [ 48.941333449098551, 30.317090359004037 ], [ 48.567971225789755, 29.926778265903522 ], [ 48.014568312376099, 30.452456773392598 ], [ 48.004698113808324, 30.985137437457244 ], [ 47.685286085812272, 30.984853217079632 ], [ 47.849203729042102, 31.70917593029867 ], [ 47.334661492711909, 32.469155381799112 ], [ 46.109361606639318, 33.017287299119005 ], [ 45.416690708199042, 33.967797756479584 ], [ 45.648459507028093, 34.748137722303014 ], [ 46.151787957550937, 35.093258775364291 ], [ 46.0763403664048, 35.677383327775487 ], [ 45.420618117053209, 35.977545884742824 ], [ 44.225755649600529, 37.971584377589352 ], [ 44.421402622257546, 38.281281236314541 ], [ 44.109225294782341, 39.428136298168099 ], [ 44.793989699081948, 39.713002631177048 ], [ 45.457721795438772, 38.874139105783058 ], [ 46.143623081248819, 38.741201483712217 ], [ 48.060095249225242, 39.58223541926246 ], [ 48.355529412637878, 39.288764960276907 ], [ 48.010744256386481, 38.794014797514521 ], [ 48.883249139202491, 38.320245266262617 ], [ 49.199612257693339, 37.582874253889884 ], [ 50.842354363819709, 36.872814235983398 ], [ 52.264024692601424, 36.700421657857703 ], [ 53.921597934795557, 37.198918361961262 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IQ\", \"name\": \"Iraq\", \"type\": \"Sovereign country\", \"postal\": \"IRQ\", \"admin\": \"Iraq\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 45.420618117053209, 35.977545884742824 ], [ 46.0763403664048, 35.677383327775487 ], [ 46.151787957550937, 35.093258775364291 ], [ 45.648459507028093, 34.748137722303014 ], [ 45.416690708199042, 33.967797756479584 ], [ 46.109361606639318, 33.017287299119005 ], [ 47.334661492711909, 32.469155381799112 ], [ 47.849203729042102, 31.70917593029867 ], [ 47.685286085812272, 30.984853217079632 ], [ 48.004698113808324, 30.985137437457244 ], [ 48.014568312376099, 30.452456773392598 ], [ 48.567971225789755, 29.926778265903522 ], [ 47.302622104690961, 30.059069932570722 ], [ 46.568713413281756, 29.09902517345229 ], [ 44.709498732284743, 29.178891099559383 ], [ 41.889980910007836, 31.190008653278369 ], [ 39.195468377444968, 32.161008816042667 ], [ 38.792340529136084, 33.378686428352225 ], [ 41.006158888519934, 34.419372260062119 ], [ 41.289707472505455, 36.358814602192268 ], [ 42.349591098811771, 37.229872544904097 ], [ 44.772699008977696, 37.170444647768434 ], [ 45.420618117053209, 35.977545884742824 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IS\", \"name\": \"Iceland\", \"type\": \"Sovereign country\", \"postal\": \"IS\", \"admin\": \"Iceland\", \"sales_rgn\": 5 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -14.508695441129234, 66.455892239031428 ], [ -14.739637417041607, 65.808748277440301 ], [ -13.60973222497981, 65.126671047619865 ], [ -14.909833746794902, 64.364081936288684 ], [ -18.656245896874992, 63.49638296167582 ], [ -22.762971971110158, 63.960178941495386 ], [ -21.778484259517683, 64.402115790455511 ], [ -23.955043911219111, 64.891129869233495 ], [ -22.184402635170358, 65.084968166760305 ], [ -22.227423265053332, 65.378593655042735 ], [ -24.326184047939336, 65.611189276788465 ], [ -23.650514695723089, 66.262519029395222 ], [ -22.134922451250887, 66.41046865504687 ], [ -20.57628373867955, 65.732112128351432 ], [ -19.05684160000159, 66.276600857194765 ], [ -17.798623826559052, 65.993853257909777 ], [ -16.167818976292125, 66.526792304135867 ], [ -14.508695441129234, 66.455892239031428 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IL\", \"name\": \"Israel\", \"type\": \"Sovereign country\", \"postal\": \"IS\", \"admin\": \"Israel\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 35.719918247222751, 32.709192409794866 ], [ 35.545665317534542, 32.393992011030576 ], [ 35.183930291491436, 32.532510687788943 ], [ 34.974640740709333, 31.866582343059722 ], [ 35.22589155451243, 31.754341132121766 ], [ 34.927408481594568, 31.353435370401414 ], [ 35.397560662586045, 31.489086005167582 ], [ 35.420918409981965, 31.100065822874356 ], [ 34.92260257339143, 29.501326198844524 ], [ 34.265433383935687, 31.219360866820153 ], [ 35.098457472480675, 33.080539252244265 ], [ 35.821100701650238, 33.277426459276299 ], [ 35.719918247222751, 32.709192409794866 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"IT\", \"name\": \"Italy\", \"type\": \"Sovereign country\", \"postal\": \"I\", \"admin\": \"Italy\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 15.520376010813834, 38.231155096991472 ], [ 15.099988234119451, 36.619987290995397 ], [ 12.431003859108813, 37.612949937483819 ], [ 12.570943637755136, 38.12638113051969 ], [ 15.520376010813834, 38.231155096991472 ] ] ], [ [ [ 9.210011834356266, 41.209991360024219 ], [ 9.809975213264977, 40.500008856766101 ], [ 9.669518670295673, 39.177376410471794 ], [ 8.806935662479731, 38.906617743478478 ], [ 8.428302443077115, 39.171847032216618 ], [ 8.15999840661766, 40.950007229163788 ], [ 9.210011834356266, 41.209991360024219 ] ] ], [ [ [ 12.376485223040845, 46.767559109069879 ], [ 13.806475457421556, 46.509306138691187 ], [ 13.937630242578336, 45.591015936864665 ], [ 13.141606479554298, 45.736691799495418 ], [ 12.328581170306308, 45.381778062514854 ], [ 12.261453484759159, 44.600482082694015 ], [ 12.589237094786483, 44.091365871754476 ], [ 13.526905958722494, 43.587727362637906 ], [ 14.029820997787027, 42.76100779883248 ], [ 15.142569614327954, 41.955139675456905 ], [ 15.926191033601896, 41.961315009115737 ], [ 16.169897088290412, 41.740294908203424 ], [ 15.889345737377795, 41.541082261718202 ], [ 18.480247023195403, 40.168866278639825 ], [ 18.293385044028099, 39.810774441073249 ], [ 17.738380161213286, 40.277671006830303 ], [ 16.869595981522338, 40.442234605463852 ], [ 16.448743116937322, 39.79540070246648 ], [ 17.171489698971499, 39.424699815420723 ], [ 17.052840610429342, 38.902871202137305 ], [ 16.635088331781844, 38.843572496082402 ], [ 16.100960727613057, 37.985898749334183 ], [ 15.684086948314501, 37.90884918878703 ], [ 16.109332309644316, 38.964547024077689 ], [ 15.413612501698822, 40.04835683853517 ], [ 11.191906365614187, 42.355425319989678 ], [ 10.511947869517797, 42.931462510747224 ], [ 10.200028924204048, 43.920006822274615 ], [ 8.888946160526871, 44.36633616797954 ], [ 7.435184767291844, 43.693844916349178 ], [ 7.549596388386163, 44.127901109384823 ], [ 7.007562290076663, 44.254766750661389 ], [ 6.843592970414562, 45.991146552100673 ], [ 7.273850945676685, 45.776947740250762 ], [ 8.316629672894379, 46.163642483090854 ], [ 8.966305779667835, 46.036931871111165 ], [ 9.182881707403112, 46.440214748716983 ], [ 10.363378126678668, 46.483571275409844 ], [ 10.442701450246602, 46.893546250997446 ], [ 11.048555942436508, 46.751358547546403 ], [ 12.153088006243081, 47.115393174826437 ], [ 12.376485223040845, 46.767559109069879 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"JM\", \"name\": \"Jamaica\", \"type\": \"Sovereign country\", \"postal\": \"J\", \"admin\": \"Jamaica\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -77.569600796199211, 18.490525417550487 ], [ -76.896618618462128, 18.400866807524082 ], [ -76.199658576141644, 17.886867173732966 ], [ -77.206341315403478, 17.701116237859821 ], [ -78.33771928578561, 18.225967922432233 ], [ -77.569600796199211, 18.490525417550487 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"JO\", \"name\": \"Jordan\", \"type\": \"Sovereign country\", \"postal\": \"J\", \"admin\": \"Jordan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 35.545665317534542, 32.393992011030576 ], [ 35.719918247222751, 32.709192409794866 ], [ 36.834062127435544, 32.312937526980775 ], [ 38.792340529136084, 33.378686428352225 ], [ 39.195468377444968, 32.161008816042667 ], [ 37.002165561681011, 31.508412990844747 ], [ 37.998848911294374, 30.508499864213135 ], [ 36.068940870922063, 29.197494615184453 ], [ 34.92260257339143, 29.501326198844524 ], [ 35.545665317534542, 32.393992011030576 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"JP\", \"name\": \"Japan\", \"type\": \"Sovereign country\", \"postal\": \"J\", \"admin\": \"Japan\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 134.63842817600388, 34.149233710256425 ], [ 134.76637902235851, 33.80633474378368 ], [ 134.20341596897086, 33.201177883429636 ], [ 133.79295006727651, 33.521985175097598 ], [ 133.28026818250888, 33.289570420864948 ], [ 133.01485802625788, 32.70456736910478 ], [ 132.3631148621927, 32.98938202568138 ], [ 132.37117638563021, 33.463642483040076 ], [ 132.92437259331481, 34.060298570282043 ], [ 133.49296837782222, 33.944620876596701 ], [ 133.90410607313638, 34.364931138642618 ], [ 134.63842817600388, 34.149233710256425 ] ] ], [ [ [ 140.9763875673053, 37.142074286440163 ], [ 140.59976972876214, 36.343983466124541 ], [ 140.77407433488267, 35.842877102190243 ], [ 140.25327925024513, 35.13811391859366 ], [ 138.97552778539622, 34.667600002576108 ], [ 137.21759891169123, 34.606285915661857 ], [ 135.7929830262689, 33.464805202766627 ], [ 135.12098270074543, 33.84907115328906 ], [ 135.07943484918272, 34.59654490817482 ], [ 130.98614464734348, 33.885761420216284 ], [ 132.00003624891005, 33.149992377244615 ], [ 131.33279015515737, 31.450354519164847 ], [ 130.68631798718596, 31.029579169228242 ], [ 130.20241987520498, 31.418237616495418 ], [ 130.44767622286216, 32.319474595665724 ], [ 129.8146916037189, 32.610309556604392 ], [ 129.40846316947258, 33.29605581311759 ], [ 130.35393517468466, 33.6041507024417 ], [ 132.61767296766251, 35.43339305270942 ], [ 134.6083008159778, 35.731617743465819 ], [ 135.67753787652893, 35.527134100886826 ], [ 136.72383060114245, 37.304984239240383 ], [ 137.3906116070045, 36.827390651998826 ], [ 139.42640465714291, 38.215962225897641 ], [ 140.05479007381209, 39.438807481436385 ], [ 139.88337934789988, 40.563312486323696 ], [ 140.30578250545372, 41.195005194659558 ], [ 141.3689734234267, 41.378559882160289 ], [ 141.9142631369705, 39.991616115878685 ], [ 141.88460086483499, 39.180864569651504 ], [ 140.95948937394579, 38.17400096287659 ], [ 140.9763875673053, 37.142074286440163 ] ] ], [ [ [ 143.9101619813795, 44.174099839853739 ], [ 144.61342654843966, 43.960882880217525 ], [ 145.3208252300831, 44.384732977875444 ], [ 145.54313724180278, 43.262088324550604 ], [ 144.0596619, 42.988358262700558 ], [ 143.18384972551732, 41.995214748699198 ], [ 141.61149092017249, 42.678790595056086 ], [ 141.06728641170665, 41.584593817707997 ], [ 139.95510623592108, 41.569555975911044 ], [ 139.81754357315995, 42.563758856774399 ], [ 140.31208703019323, 43.333272610032651 ], [ 141.38054894426003, 43.388824774746496 ], [ 141.96764489152801, 45.551483466161358 ], [ 143.9101619813795, 44.174099839853739 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KZ\", \"name\": \"Kazakhstan\", \"type\": \"Sovereign country\", \"postal\": \"KZ\", \"admin\": \"Kazakhstan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 70.962314894499286, 42.266154283205537 ], [ 69.070027296835235, 41.384244289712342 ], [ 68.632482944620051, 40.668680731766869 ], [ 68.259895867795649, 40.662324530594901 ], [ 67.98585574735182, 41.135990708982206 ], [ 66.714047072216601, 41.168443508461564 ], [ 66.510648634715722, 41.987644151368556 ], [ 66.023391554635623, 41.994646307944038 ], [ 66.098012322865202, 42.997660020513081 ], [ 64.900824415959335, 43.728080552742654 ], [ 62.013300408786279, 43.504476630215663 ], [ 61.058319940032504, 44.405816962250583 ], [ 58.50312706892845, 45.586804307632974 ], [ 55.928917270741181, 44.995858466159177 ], [ 55.968191359283026, 41.308641669269377 ], [ 55.455251092353819, 41.25985911718584 ], [ 54.079417759014973, 42.324109402020838 ], [ 52.502459751196284, 41.78331553808647 ], [ 52.501426222550322, 42.792297878585202 ], [ 51.342427199108215, 43.132974758469345 ], [ 50.305642938036272, 44.609835516938915 ], [ 51.278503452363225, 44.514854234386462 ], [ 51.316899041556042, 45.245998236667901 ], [ 53.040876499245201, 45.259046535821767 ], [ 53.042736850807785, 46.853006089864493 ], [ 51.191945428274266, 47.048704738953916 ], [ 49.101160000000107, 46.399330000000134 ], [ 48.593241001180502, 46.561034247415478 ], [ 48.694733514201744, 47.075628160177928 ], [ 48.057253045449272, 47.743752753279523 ], [ 47.315231154170249, 47.715847479841955 ], [ 46.46644575377627, 48.39415233010493 ], [ 47.549480421749308, 50.454698391311126 ], [ 48.57784142435753, 49.874759629915673 ], [ 48.702381626181023, 50.605128485712839 ], [ 50.766648390512159, 51.692762356159903 ], [ 52.328723585830971, 51.718652248738124 ], [ 55.716940545479815, 50.621716620478537 ], [ 56.777961053296565, 51.043551337277052 ], [ 58.36329064314674, 51.063653469438577 ], [ 59.642282342370606, 50.545442206415714 ], [ 59.932807244715491, 50.842194118851864 ], [ 61.337424350840934, 50.799070136104262 ], [ 61.588003371024172, 51.272658799843214 ], [ 59.967533807215545, 51.960420437215703 ], [ 60.92726850774028, 52.447548326215042 ], [ 60.739993117114579, 52.719986477257748 ], [ 61.699986199800605, 52.979996446334269 ], [ 60.978066440683165, 53.664993394579142 ], [ 61.436591424409073, 54.006264553434789 ], [ 65.178533563095925, 54.354227810272107 ], [ 69.068166945272878, 55.385250149143531 ], [ 70.865266554655136, 55.169733588270105 ], [ 71.180131056609412, 54.133285224008262 ], [ 72.224150018202181, 54.376655381886735 ], [ 73.508516066384402, 54.035616766976602 ], [ 73.425678745420441, 53.489810289109755 ], [ 74.384845005190073, 53.54686107036008 ], [ 76.891100294913429, 54.490524400441927 ], [ 76.525179477854749, 54.177003485727141 ], [ 77.800915561844249, 53.404414984747575 ], [ 80.035559523441691, 50.864750881547252 ], [ 80.568446893235489, 51.38833649352847 ], [ 81.945985548839928, 50.812195949906368 ], [ 83.38300377801238, 51.069182847693924 ], [ 85.541269972682471, 49.692858588248157 ], [ 86.829356723989633, 49.826674709668168 ], [ 87.359970330762678, 49.214980780629162 ], [ 86.598776483103393, 48.549181626980612 ], [ 85.768232863308299, 48.455750637396989 ], [ 85.720483839870724, 47.452969468773119 ], [ 85.164290399113384, 47.000955715516113 ], [ 83.180483839860472, 47.330031236350862 ], [ 82.458925815769135, 45.539649563166506 ], [ 79.966106398441411, 44.917516994804657 ], [ 80.86620649610137, 43.180362046881044 ], [ 80.180150180994303, 42.920067857426943 ], [ 80.25999026888536, 42.349999294599115 ], [ 79.142177361979805, 42.856092434249604 ], [ 75.636964959622105, 42.877899888676779 ], [ 74.212865838522589, 43.298339341803512 ], [ 73.645303582660915, 43.09127187760987 ], [ 73.489757521462366, 42.50089447689129 ], [ 71.844638299450651, 42.845395412765185 ], [ 71.186280552052267, 42.704292914392227 ], [ 70.962314894499286, 42.266154283205537 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KE\", \"name\": \"Kenya\", \"type\": \"Sovereign country\", \"postal\": \"KE\", \"admin\": \"Kenya\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 40.993, -0.85829 ], [ 41.58513, -1.68325 ], [ 40.26304, -2.57309 ], [ 39.60489, -4.34653 ], [ 39.20222, -4.67677 ], [ 37.7669, -3.67712 ], [ 37.69869, -3.09699 ], [ 33.903711197104528, -0.95 ], [ 33.893568969666944, 0.109813537861896 ], [ 35.03599, 1.90584 ], [ 34.005, 4.249884947362048 ], [ 35.298007118232981, 5.506 ], [ 35.817447662353516, 5.338232082790797 ], [ 35.817447662353516, 4.77696566346189 ], [ 36.159078632855646, 4.447864127672769 ], [ 36.855093238008124, 4.447864127672769 ], [ 38.120915, 3.598605 ], [ 39.559384258765853, 3.42206 ], [ 40.76848, 4.25702 ], [ 41.1718, 3.91909 ], [ 41.855083092643973, 3.918911920483727 ], [ 40.98105, 2.78452 ], [ 40.993, -0.85829 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KG\", \"name\": \"Kyrgyzstan\", \"type\": \"Sovereign country\", \"postal\": \"KG\", \"admin\": \"Kyrgyzstan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 70.962314894499144, 42.266154283205495 ], [ 71.186280552052125, 42.704292914392141 ], [ 71.844638299450594, 42.8453954127651 ], [ 73.489757521462366, 42.500894476891318 ], [ 73.645303582660915, 43.091271877609827 ], [ 74.212865838522561, 43.29833934180337 ], [ 75.63696495962202, 42.87789988867668 ], [ 79.142177361979776, 42.856092434249518 ], [ 80.259990268885304, 42.349999294599058 ], [ 78.187196893225973, 41.185315863604806 ], [ 76.904484490877081, 41.066485907549648 ], [ 76.526368035797447, 40.427946071935118 ], [ 74.776862420556057, 40.366425279291633 ], [ 73.822243686828301, 39.893973497063186 ], [ 73.960013055318427, 39.660008449861735 ], [ 73.675379266254794, 39.431236884105601 ], [ 69.46488691597753, 39.526683254548701 ], [ 69.559609816368521, 40.103211371412982 ], [ 71.77487511585656, 40.145844428053778 ], [ 73.05541710804917, 40.866033026689465 ], [ 71.870114780570475, 41.392900092121266 ], [ 71.157858514291604, 41.143587144529121 ], [ 70.42002241402821, 41.519998277343142 ], [ 71.259247674448233, 42.167710679689463 ], [ 70.962314894499144, 42.266154283205495 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KH\", \"name\": \"Cambodia\", \"type\": \"Sovereign country\", \"postal\": \"KH\", \"admin\": \"Cambodia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 103.49727990113971, 10.632555446815928 ], [ 102.5849324890267, 12.186594956913282 ], [ 102.34809939983302, 13.394247341358223 ], [ 102.98842207236163, 14.225721136934467 ], [ 104.28141808473661, 14.416743068901367 ], [ 106.04394616091552, 13.881091009979956 ], [ 106.49637332563088, 14.570583807834282 ], [ 107.38272749230109, 14.202440904186972 ], [ 107.49140302941089, 12.337205918827948 ], [ 105.81052371625313, 11.567614650921229 ], [ 106.24967003786946, 10.961811835163587 ], [ 104.33433475140347, 10.48654368737523 ], [ 103.49727990113971, 10.632555446815928 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KR\", \"name\": \"Korea\", \"type\": \"Sovereign country\", \"postal\": \"KR\", \"admin\": \"South Korea\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 128.34971642467661, 38.61224294692785 ], [ 129.46044966035817, 36.784189154602828 ], [ 129.4683044780665, 35.632140611303953 ], [ 129.09137658092959, 35.082484239231434 ], [ 126.48574751190876, 34.39004588473648 ], [ 126.55923139862779, 35.684540513647903 ], [ 126.11739790253229, 36.725484727519259 ], [ 126.86014326386339, 36.893924058574626 ], [ 126.17475874237624, 37.74968577732804 ], [ 128.34971642467661, 38.61224294692785 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"-99\", \"name\": \"Kosovo\", \"type\": \"Sovereign country\", \"postal\": \"KO\", \"admin\": \"Kosovo\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 20.76216, 42.05186 ], [ 20.59023, 41.85541 ], [ 20.0707, 42.58863 ], [ 20.81448, 43.27205 ], [ 21.77505, 42.6827 ], [ 21.576635989402121, 42.245224397061861 ], [ 20.76216, 42.05186 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KW\", \"name\": \"Kuwait\", \"type\": \"Sovereign country\", \"postal\": \"KW\", \"admin\": \"Kuwait\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 47.974519077349896, 29.975819200148504 ], [ 48.416094191283946, 28.55200429942667 ], [ 47.708850538937384, 28.526062730416143 ], [ 47.459821811722833, 29.002519436147224 ], [ 46.568713413281756, 29.09902517345229 ], [ 47.302622104690961, 30.059069932570722 ], [ 47.974519077349896, 29.975819200148504 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LA\", \"name\": \"Lao PDR\", \"type\": \"Sovereign country\", \"postal\": \"LA\", \"admin\": \"Laos\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 105.21877689007889, 14.273211778210694 ], [ 105.58903852745016, 15.570316066952858 ], [ 104.7793205098688, 16.441864935771449 ], [ 104.71694705609249, 17.428858954330082 ], [ 103.9564766784853, 18.240954087796879 ], [ 103.20019209189374, 18.309632066312773 ], [ 102.99870568238771, 17.961694647691601 ], [ 102.11359175009248, 18.109101670804165 ], [ 101.05954756063517, 17.51249725999449 ], [ 101.2820146016517, 19.462584947176765 ], [ 100.60629357300316, 19.508344427971224 ], [ 100.54888105672688, 20.109237982661128 ], [ 100.11598758341785, 20.417849636308187 ], [ 101.18000532430754, 21.436572984294028 ], [ 101.80311974488293, 21.174366766845068 ], [ 101.65201785686152, 22.318198757409547 ], [ 102.17043582561358, 22.464753119389304 ], [ 103.20386111858645, 20.766562201413748 ], [ 104.43500044150805, 20.758733221921531 ], [ 104.8225736836971, 19.886641750563882 ], [ 103.89653201702671, 19.265180975821806 ], [ 105.09459842328152, 18.66697459561108 ], [ 107.3127059265456, 15.908538316303179 ], [ 107.5645251811039, 15.202173163305559 ], [ 107.38272749230109, 14.202440904186972 ], [ 106.49637332563088, 14.570583807834282 ], [ 106.04394616091552, 13.881091009979956 ], [ 105.21877689007889, 14.273211778210694 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LB\", \"name\": \"Lebanon\", \"type\": \"Sovereign country\", \"postal\": \"LB\", \"admin\": \"Lebanon\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 35.821100701650238, 33.277426459276299 ], [ 35.126052687324545, 33.090900376918782 ], [ 35.998402540843642, 34.644914048800004 ], [ 36.448194207512103, 34.593935248344067 ], [ 36.611750115715893, 34.201788641897181 ], [ 35.821100701650238, 33.277426459276299 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LR\", \"name\": \"Liberia\", \"type\": \"Sovereign country\", \"postal\": \"LR\", \"admin\": \"Liberia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -7.712159389669751, 4.364565944837722 ], [ -9.004793667018674, 4.8324185245922 ], [ -11.438779466182055, 6.785916856305748 ], [ -10.23009355309128, 8.406205552601293 ], [ -9.755342169625834, 8.541055202666925 ], [ -9.208786383490846, 7.313920803247953 ], [ -8.439298468448698, 7.686042792181738 ], [ -8.60288021486862, 6.467564195171661 ], [ -7.570152553731688, 5.707352199725904 ], [ -7.712159389669751, 4.364565944837722 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LY\", \"name\": \"Libya\", \"type\": \"Sovereign country\", \"postal\": \"LY\", \"admin\": \"Libya\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 14.8513, 22.862950000000126 ], [ 14.143870883855243, 22.491288967371133 ], [ 13.581424594790462, 23.040506089769281 ], [ 11.999505649471701, 23.471668402596435 ], [ 10.771363559622955, 24.562532050061748 ], [ 10.303846876678449, 24.379313259370974 ], [ 9.31941084151822, 26.094324856057483 ], [ 9.716285841519664, 26.512206325785655 ], [ 9.859997999723476, 28.959989732371071 ], [ 9.482139926805417, 30.307556057246188 ], [ 9.970017124072967, 30.539324856075382 ], [ 9.950225050505196, 31.376069647745283 ], [ 11.432253452203781, 32.368903103152832 ], [ 11.488787469131012, 33.136995754523241 ], [ 15.24563, 32.26508 ], [ 15.71394, 31.37626 ], [ 19.08641, 30.26639 ], [ 20.05335, 30.98576 ], [ 19.82033, 31.751790000000142 ], [ 20.85452, 32.7068 ], [ 22.89576, 32.63858 ], [ 23.2368, 32.19149 ], [ 24.92114, 31.89936 ], [ 25.16482, 31.56915 ], [ 24.80287, 31.08929 ], [ 24.70007, 30.04419 ], [ 25.000000000000114, 29.238654529533562 ], [ 25.000000000000114, 20.00304 ], [ 23.850000000000136, 20.0 ], [ 23.837660000000142, 19.580470000000105 ], [ 15.86085, 23.40972 ], [ 14.8513, 22.862950000000126 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LK\", \"name\": \"Sri Lanka\", \"type\": \"Sovereign country\", \"postal\": \"LK\", \"admin\": \"Sri Lanka\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 81.787959018891399, 7.523055324733164 ], [ 81.637322218760588, 6.481775214051922 ], [ 80.348356968104412, 5.968369859232155 ], [ 79.872468703128533, 6.76346344647493 ], [ 79.695166863935128, 8.200843410673386 ], [ 80.147800734379643, 9.824077663609558 ], [ 80.838817986986555, 9.268426825391188 ], [ 81.787959018891399, 7.523055324733164 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LS\", \"name\": \"Lesotho\", \"type\": \"Sovereign country\", \"postal\": \"LS\", \"admin\": \"Lesotho\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 28.978262566857243, -28.955596612261711 ], [ 29.325166456832591, -29.257386976846256 ], [ 28.848399692507741, -30.070050551068256 ], [ 28.107204624145425, -30.545732110314951 ], [ 27.749397006956485, -30.645105889612225 ], [ 26.999261915807637, -29.875953871379984 ], [ 28.074338413207784, -28.851468601193588 ], [ 28.541700066855498, -28.647501722937569 ], [ 28.978262566857243, -28.955596612261711 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LT\", \"name\": \"Lithuania\", \"type\": \"Sovereign country\", \"postal\": \"LT\", \"admin\": \"Lithuania\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 22.731098667092652, 54.327536932993326 ], [ 22.757763706155259, 54.85657440858138 ], [ 21.268448927503467, 55.190481675835315 ], [ 21.055800408622417, 56.031076361711065 ], [ 22.201156853939494, 56.33780182557949 ], [ 24.86068444184076, 56.37252838807963 ], [ 26.494331495883756, 55.615106919977634 ], [ 26.588279249790389, 55.167175604871673 ], [ 25.768432651479799, 54.846962592175089 ], [ 25.536353794056993, 54.282423407602529 ], [ 24.450683628037037, 53.905702216194754 ], [ 23.484127638449849, 53.912497667041137 ], [ 22.731098667092652, 54.327536932993326 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LU\", \"name\": \"Luxembourg\", \"type\": \"Sovereign country\", \"postal\": \"L\", \"admin\": \"Luxembourg\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 6.043073357781111, 50.128051662794235 ], [ 6.186320428094177, 49.463802802114515 ], [ 5.674051954784829, 49.529483547557504 ], [ 5.782417433300907, 50.09032786722122 ], [ 6.043073357781111, 50.128051662794235 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"LV\", \"name\": \"Latvia\", \"type\": \"Sovereign country\", \"postal\": \"LV\", \"admin\": \"Latvia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 21.055800408622417, 56.031076361711065 ], [ 21.090423618257972, 56.783872789122938 ], [ 21.581866489353672, 57.411870632549935 ], [ 22.524341261492879, 57.753374335350763 ], [ 23.318452996522097, 57.006236477274868 ], [ 24.120729607853431, 57.025692654032767 ], [ 24.312862583114622, 57.793423570376973 ], [ 25.164593540149269, 57.970156968815189 ], [ 27.770015903440932, 57.244258124411232 ], [ 28.176709425577997, 56.169129950578814 ], [ 26.494331495883756, 55.615106919977634 ], [ 24.86068444184076, 56.37252838807963 ], [ 22.201156853939494, 56.33780182557949 ], [ 21.055800408622417, 56.031076361711065 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MA\", \"name\": \"Morocco\", \"type\": \"Sovereign country\", \"postal\": \"MA\", \"admin\": \"Morocco\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -5.193863491222032, 35.755182196590852 ], [ -4.591006232105144, 35.330711981745651 ], [ -2.169913702798624, 35.168396307916709 ], [ -1.124551153966195, 32.651521511357203 ], [ -1.30789913573787, 32.262888902306031 ], [ -3.647497931320146, 31.637294012980817 ], [ -3.690441046554668, 30.896951605751156 ], [ -4.859646165374443, 30.501187649043885 ], [ -5.242129278982787, 30.000443020135577 ], [ -8.674116176782832, 28.84128896739665 ], [ -8.794883999049034, 27.12069631602256 ], [ -11.39255489749695, 26.883423977154393 ], [ -12.50096269372537, 24.770116278578143 ], [ -13.891110398809047, 23.691009019459386 ], [ -14.750954555713406, 21.500600083903805 ], [ -17.020428432675772, 21.422310288981635 ], [ -15.982610642958065, 23.723358466074103 ], [ -15.089331834360735, 24.520260728446971 ], [ -14.439939947964831, 26.254418443297652 ], [ -13.773804897506466, 26.618892320252286 ], [ -12.618836635783111, 28.038185533148663 ], [ -11.688919236690765, 28.148643907172584 ], [ -9.564811163765626, 29.933573716749862 ], [ -9.814718390329176, 31.17773550060906 ], [ -9.300692918321829, 32.564679266890636 ], [ -8.65747636558504, 33.240245266242397 ], [ -6.91254411460136, 34.110476386037448 ], [ -5.929994269219833, 35.75998810479399 ], [ -5.193863491222032, 35.755182196590852 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MD\", \"name\": \"Moldova\", \"type\": \"Sovereign country\", \"postal\": \"MD\", \"admin\": \"Moldova\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 26.619336785597795, 48.220726223333472 ], [ 27.522537469195157, 48.467119452501116 ], [ 28.670891147585166, 48.118148505234103 ], [ 30.024658644335375, 46.42393667254504 ], [ 28.862972446414062, 46.437889309263831 ], [ 28.233553501099042, 45.488283189468376 ], [ 28.128030226359044, 46.810476386088254 ], [ 26.619336785597795, 48.220726223333472 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MG\", \"name\": \"Madagascar\", \"type\": \"Sovereign country\", \"postal\": \"MG\", \"admin\": \"Madagascar\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 49.543518914595751, -12.469832858940554 ], [ 50.056510857957164, -13.555761407121985 ], [ 50.377111443895956, -15.706069431219127 ], [ 50.200274692593183, -16.000263360256767 ], [ 49.860605503138679, -15.414252618066918 ], [ 49.672606642460863, -15.710203545802479 ], [ 49.774564243372708, -16.875042006093601 ], [ 47.095761346226595, -24.941629733990453 ], [ 45.409507684110451, -25.601434421493089 ], [ 44.039720493349762, -24.988345228782308 ], [ 43.345654331237625, -22.776903985283873 ], [ 43.43329756040464, -21.336475111580189 ], [ 43.893682895692926, -21.163307386970128 ], [ 44.464397413924388, -19.435454196859048 ], [ 43.963084344260913, -17.409944756746782 ], [ 44.446517368351401, -16.216219170804507 ], [ 46.31224327981721, -15.780018405828798 ], [ 47.705129835812357, -14.594302666891764 ], [ 48.005214878131255, -14.091232598530375 ], [ 47.869047479042166, -13.663868503476586 ], [ 48.293827752481377, -13.784067884987486 ], [ 49.194651320193316, -12.04055673589197 ], [ 49.543518914595751, -12.469832858940554 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MX\", \"name\": \"Mexico\", \"type\": \"Sovereign country\", \"postal\": \"MX\", \"admin\": \"Mexico\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -97.140008307670712, 25.869997463478398 ], [ -97.702945522842242, 24.272343044526735 ], [ -97.699043952204192, 21.898689480064263 ], [ -95.900884975959968, 18.82802419684873 ], [ -94.839063483442715, 18.562717393462208 ], [ -94.425729539756219, 18.144370835843347 ], [ -91.407903408559264, 18.87608327888023 ], [ -90.771869879910867, 19.284120388256781 ], [ -90.278618333684904, 20.999855454995554 ], [ -88.543866339862859, 21.49367544197662 ], [ -86.811982388032959, 21.331514797444754 ], [ -87.62105445021075, 19.646553046135921 ], [ -87.436750454441778, 19.472403469312269 ], [ -87.837191128271513, 18.25981598558343 ], [ -88.490122850279306, 18.48683055264172 ], [ -88.848343878926585, 17.883198147040332 ], [ -91.001519945015957, 17.817594916245696 ], [ -91.002269253284169, 17.254657701074279 ], [ -91.453921271515128, 17.252177232324186 ], [ -90.438866950222007, 16.410109768128109 ], [ -90.464472622422647, 16.069562079324726 ], [ -91.747960171255954, 16.066564846251765 ], [ -92.229248623406306, 15.251446641495875 ], [ -92.227750006869826, 14.538828640190957 ], [ -93.875168830118525, 15.940164292865916 ], [ -94.691656460330137, 16.200975246642884 ], [ -96.557434048228288, 15.653515122942792 ], [ -100.82949886758132, 17.17107107184205 ], [ -101.91852800170022, 17.916090196193977 ], [ -103.50098954955808, 18.292294623278849 ], [ -104.9920096504755, 19.316133938061682 ], [ -105.73139604370766, 20.434101874264115 ], [ -105.39777299683135, 20.531718654863425 ], [ -105.26581722697404, 21.422103583252351 ], [ -106.02871639689897, 22.773752346278627 ], [ -108.40190487347098, 25.172313951105934 ], [ -109.26019873740665, 25.580609442644061 ], [ -109.29164384645628, 26.442934068298428 ], [ -110.39173173708571, 27.16211497650454 ], [ -110.64101884646163, 27.859876003525528 ], [ -111.17891883018785, 27.94124054616907 ], [ -112.2282346260904, 28.954408677683489 ], [ -113.14866939985717, 31.170965887978923 ], [ -114.77645117883503, 31.79953217216115 ], [ -114.67389929895177, 30.162681179315996 ], [ -111.61648902061921, 26.662817287700477 ], [ -110.65504899782889, 24.298594672131117 ], [ -110.17285620811344, 24.265547593680424 ], [ -109.40910437705571, 23.364672349536249 ], [ -110.03139197471444, 22.823077500901206 ], [ -110.29507097048366, 23.430973212166691 ], [ -112.18203589562148, 24.738412787367167 ], [ -112.3007108223797, 26.012004299416617 ], [ -115.05514217818501, 27.722726752222911 ], [ -114.57036556685495, 27.741485297144891 ], [ -114.16201839888464, 28.566111965442303 ], [ -115.51865393762699, 29.556361599235402 ], [ -117.12776, 32.53534 ], [ -114.72139, 32.72083 ], [ -114.815, 32.52528 ], [ -111.02361, 31.33472 ], [ -108.24194, 31.34222 ], [ -108.24, 31.754853718166373 ], [ -106.50759, 31.75452 ], [ -105.03737, 30.64402 ], [ -104.45697, 29.57196 ], [ -103.94, 29.27 ], [ -103.11, 28.97 ], [ -102.48, 29.76 ], [ -101.6624, 29.7793 ], [ -100.9576, 29.380710000000136 ], [ -99.52, 27.54 ], [ -99.02, 26.37 ], [ -97.140008307670712, 25.869997463478398 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MK\", \"name\": \"Macedonia\", \"type\": \"Sovereign country\", \"postal\": \"MK\", \"admin\": \"Macedonia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 20.59023, 41.85541 ], [ 22.380525750424681, 42.320259507815081 ], [ 22.881373732197346, 41.999297186850356 ], [ 22.952377150166512, 41.33799388281119 ], [ 21.020040317476401, 40.84272695572588 ], [ 20.60518, 41.08622 ], [ 20.59023, 41.85541 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ML\", \"name\": \"Mali\", \"type\": \"Sovereign country\", \"postal\": \"ML\", \"admin\": \"Mali\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -12.170750291380301, 14.616834214735505 ], [ -11.666078253617854, 15.388208319556298 ], [ -10.650791388379417, 15.132745876521426 ], [ -9.550238409859389, 15.486496893775438 ], [ -5.537744309908447, 15.501689764869257 ], [ -5.315277268891933, 16.201853745991841 ], [ -6.453786586930335, 24.956590684503425 ], [ -4.923337368174231, 24.974574082941 ], [ 1.823227573259032, 20.610809434486043 ], [ 2.06099083823392, 20.142233384679486 ], [ 3.1466610042539, 19.693578599521445 ], [ 3.158133172222705, 19.057364203360038 ], [ 4.267419467800039, 19.155265204336999 ], [ 4.270209995143802, 16.852227484601215 ], [ 3.638258904646477, 15.568119818580456 ], [ 1.385528191746858, 15.323561102759172 ], [ 1.01578331869851, 14.968182277887948 ], [ -1.066363491205664, 14.973815009007765 ], [ -3.10370683431276, 13.541266791228594 ], [ -4.006390753587226, 13.472485459848116 ], [ -5.220941941743121, 11.713858954307227 ], [ -5.404341599946974, 10.370736802609146 ], [ -6.050452032892267, 10.096360785355444 ], [ -6.205222947606431, 10.524060777219134 ], [ -6.850506557635057, 10.138993841996239 ], [ -8.029943610048619, 10.206534939001713 ], [ -8.282357143578281, 10.792597357623846 ], [ -8.620321010767128, 10.810890814655183 ], [ -8.376304897484914, 11.393645941610629 ], [ -9.127473517279583, 12.308060411015333 ], [ -10.165213792348837, 11.844083563682744 ], [ -11.03655595543826, 12.211244615116515 ], [ -11.456168585648271, 12.076834214725338 ], [ -12.170750291380301, 14.616834214735505 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MM\", \"name\": \"Myanmar\", \"type\": \"Sovereign country\", \"postal\": \"MM\", \"admin\": \"Myanmar\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 99.543309360759309, 20.186597601802063 ], [ 98.959675734454876, 19.752980658440947 ], [ 98.25372399291561, 19.708203029860044 ], [ 97.797782830804408, 18.627080389881755 ], [ 97.375896437573545, 18.445437730375815 ], [ 98.903348423256759, 16.177824204976119 ], [ 98.192074009191401, 15.123702500870351 ], [ 99.097755161538757, 13.827502549693278 ], [ 99.587286004639722, 11.892762762901697 ], [ 98.553550653073046, 9.932959906448545 ], [ 98.764545526120784, 11.441291612183749 ], [ 98.428338657629851, 12.032986761925685 ], [ 98.509574009192676, 13.122377631070677 ], [ 98.103603957107694, 13.640459703012851 ], [ 97.164539829499802, 16.92873444260934 ], [ 95.369352248112406, 15.714389960182601 ], [ 94.188804152404543, 16.037936102762018 ], [ 94.533485955791349, 17.277240301985728 ], [ 94.324816522196755, 18.2135139022499 ], [ 93.540988397193644, 19.366492621330025 ], [ 93.663254835996213, 19.726961574781996 ], [ 93.078277622452191, 19.855144965081976 ], [ 92.36855350135562, 20.670883287025347 ], [ 92.303234490938678, 21.475485337809818 ], [ 92.65225711463799, 21.324047552978485 ], [ 92.672720981825563, 22.041238918541254 ], [ 93.166127557348375, 22.278459580977103 ], [ 93.325187615942795, 24.078556423432204 ], [ 94.106741977925068, 23.85074087167348 ], [ 95.155153436262594, 26.001307277932085 ], [ 95.124767694074961, 26.573572089132298 ], [ 96.419365675850969, 27.264589341739224 ], [ 97.133999058015306, 27.083773505149964 ], [ 97.327113885490036, 28.261582749946339 ], [ 97.911987746169444, 28.335945136014345 ], [ 98.682690057370465, 27.508812160750619 ], [ 98.671838006589155, 25.918702500913525 ], [ 97.724609002679145, 25.083637193293001 ], [ 97.604719679761985, 23.897404690033042 ], [ 98.660262485755766, 24.063286037689966 ], [ 98.898749220782776, 23.142722072842531 ], [ 99.531992222087396, 22.949038804612581 ], [ 99.240898878987252, 22.118314317304581 ], [ 100.41653771362738, 21.558839423096614 ], [ 101.15003299357825, 21.849984442629022 ], [ 101.18000532430754, 21.436572984294028 ], [ 99.543309360759309, 20.186597601802063 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ME\", \"name\": \"Montenegro\", \"type\": \"Sovereign country\", \"postal\": \"ME\", \"admin\": \"Montenegro\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 19.801613396898688, 42.500093492190842 ], [ 19.304490000000101, 42.19574 ], [ 19.37177000000014, 41.87755 ], [ 18.45, 42.48 ], [ 18.70648, 43.20011 ], [ 19.21852, 43.52384 ], [ 20.3398, 42.89852 ], [ 19.801613396898688, 42.500093492190842 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MN\", \"name\": \"Mongolia\", \"type\": \"Sovereign country\", \"postal\": \"MN\", \"admin\": \"Mongolia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 87.751264276076711, 49.297197984405486 ], [ 92.234711541719676, 50.802170722041723 ], [ 94.147566359435629, 50.48053660745709 ], [ 94.815949334698729, 50.013433335970852 ], [ 97.25972781778141, 49.726060695995741 ], [ 98.231761509191557, 50.422400621128745 ], [ 97.825739780674311, 51.010995184933179 ], [ 98.861490513100335, 52.047366034546691 ], [ 102.06522260946733, 51.259920559283124 ], [ 102.25590864462433, 50.510560614618683 ], [ 103.67654544476022, 50.089966132195116 ], [ 106.88880415245535, 50.274295966180233 ], [ 108.47516727095129, 49.28254771585074 ], [ 110.66201053267878, 49.130128078805868 ], [ 112.89773969935439, 49.543565375356991 ], [ 114.36245649623527, 50.248302720737414 ], [ 115.48569542853141, 49.805177313834605 ], [ 116.67880089728618, 49.888531399121391 ], [ 115.48528201707306, 48.135382595403442 ], [ 115.74283735561579, 47.726544501326288 ], [ 117.29550744025741, 47.697709052107427 ], [ 118.06414269416672, 48.066730455103688 ], [ 119.77282392789751, 47.048058783550132 ], [ 119.66326989143876, 46.692679958678923 ], [ 117.42170128791419, 46.67273285581426 ], [ 115.98509647020009, 45.727235012386004 ], [ 113.46390669154417, 44.808893134127118 ], [ 111.87330610560031, 45.102079372735062 ], [ 111.34837690637946, 44.45744171811009 ], [ 111.82958784388137, 43.743118394539522 ], [ 110.41210330611528, 42.871233628911028 ], [ 106.12931562706169, 42.134327704428912 ], [ 104.96499393109347, 41.597409572916348 ], [ 100.84586551310827, 42.663804429691453 ], [ 96.349395786527808, 42.725635280928685 ], [ 95.306875441471533, 44.241330878265472 ], [ 93.480733677141302, 44.975472113619965 ], [ 90.945539585334302, 45.286073309910279 ], [ 90.585768263718279, 45.719716091487527 ], [ 90.970809360725013, 46.88814606382293 ], [ 90.280825636763922, 47.69354909930793 ], [ 88.013832228551735, 48.599462795600616 ], [ 87.751264276076711, 49.297197984405486 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MZ\", \"name\": \"Mozambique\", \"type\": \"Sovereign country\", \"postal\": \"MZ\", \"admin\": \"Mozambique\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 34.559989047999352, -11.520020033415925 ], [ 37.47128421402661, -11.568750909067161 ], [ 39.521029900883775, -10.896853936408228 ], [ 40.316588576017189, -10.317096042525698 ], [ 40.775475294768995, -14.691764418194241 ], [ 39.452558628097051, -16.72089120856694 ], [ 37.411132846838882, -17.586368096591237 ], [ 34.786383497870048, -19.784011732667736 ], [ 34.701892531072843, -20.497043145431011 ], [ 35.562545536369086, -22.09 ], [ 35.458745558419622, -24.122609958596549 ], [ 33.013210076639012, -25.357573337507738 ], [ 32.574632195777866, -25.727318210556092 ], [ 32.915955031065693, -26.215867201443466 ], [ 32.830120477028885, -26.742191664336197 ], [ 32.071665480281069, -26.733820082304909 ], [ 31.752408481581881, -25.484283949487413 ], [ 31.930588820124253, -24.369416599222539 ], [ 31.191409132621288, -22.251509698172399 ], [ 32.65974327976258, -20.304290052982317 ], [ 32.847638787575846, -16.713398125884616 ], [ 31.17306399915768, -15.860943698797874 ], [ 30.338954705534544, -15.880839125230246 ], [ 30.17948123548183, -14.796099134991529 ], [ 33.214024692525214, -13.971860039936153 ], [ 34.459633416488543, -14.613009535381423 ], [ 34.381291945134052, -16.183559665596043 ], [ 35.033810255683534, -16.801299737213093 ], [ 35.339062941231646, -16.107440280830112 ], [ 35.771904738108361, -15.896858819240727 ], [ 35.68684533055594, -14.611045830954332 ], [ 35.267956170398008, -13.887834161029566 ], [ 34.559989047999352, -13.579997653866876 ], [ 34.28000613784198, -12.280025323132506 ], [ 34.559989047999352, -11.520020033415925 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MR\", \"name\": \"Mauritania\", \"type\": \"Sovereign country\", \"postal\": \"MR\", \"admin\": \"Mauritania\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -12.170750291380301, 14.616834214735505 ], [ -13.435737677453062, 16.039383042866191 ], [ -14.577347581428981, 16.598263658102809 ], [ -16.120690070041931, 16.455662543193384 ], [ -16.463098110407884, 16.13503611903846 ], [ -16.14634741867485, 18.108481553616656 ], [ -16.277838100641517, 20.092520656814699 ], [ -17.063423224342571, 20.999752102130827 ], [ -16.845193650773993, 21.333323472574879 ], [ -12.929101935263532, 21.327070624267563 ], [ -13.118754441774712, 22.771220201096256 ], [ -12.874221564169575, 23.284832261645178 ], [ -11.937224493853321, 23.374594224536168 ], [ -11.969418911171161, 25.933352769468268 ], [ -8.6872936670174, 25.881056219988906 ], [ -8.684399786809053, 27.395744126896005 ], [ -4.923337368174231, 24.974574082941 ], [ -6.453786586930335, 24.956590684503425 ], [ -5.315277268891933, 16.201853745991841 ], [ -5.537744309908447, 15.501689764869257 ], [ -9.550238409859389, 15.486496893775438 ], [ -10.650791388379417, 15.132745876521426 ], [ -11.666078253617854, 15.388208319556298 ], [ -12.170750291380301, 14.616834214735505 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MW\", \"name\": \"Malawi\", \"type\": \"Sovereign country\", \"postal\": \"MW\", \"admin\": \"Malawi\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 34.559989047999352, -11.520020033415925 ], [ 34.28000613784198, -12.280025323132506 ], [ 34.559989047999352, -13.579997653866876 ], [ 35.267956170398008, -13.887834161029566 ], [ 35.68684533055594, -14.611045830954332 ], [ 35.771904738108361, -15.896858819240727 ], [ 35.339062941231646, -16.107440280830112 ], [ 35.033810255683534, -16.801299737213093 ], [ 34.381291945134052, -16.183559665596043 ], [ 34.459633416488543, -14.613009535381423 ], [ 32.688165317523129, -13.712857761289277 ], [ 33.306422153463075, -12.435778090060218 ], [ 33.114289178201915, -11.607198174692314 ], [ 33.485687697083591, -10.525558770391115 ], [ 32.759375441221323, -9.23059905358906 ], [ 33.73972903823045, -9.417150974162723 ], [ 34.28000613784198, -10.159999688358404 ], [ 34.559989047999352, -11.520020033415925 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"MY\", \"name\": \"Malaysia\", \"type\": \"Sovereign country\", \"postal\": \"MY\", \"admin\": \"Malaysia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 101.07551557821333, 6.204867051615892 ], [ 101.15421878459384, 5.691384182147715 ], [ 101.81428185425804, 5.810808417174229 ], [ 102.14118696493645, 6.221636053894656 ], [ 102.9617053568667, 5.524495144061078 ], [ 103.38121463421217, 4.855001125503748 ], [ 103.50244754436889, 2.791018581550205 ], [ 104.22881147666354, 1.293048000489534 ], [ 103.51970747275445, 1.226333726400682 ], [ 101.39063846232918, 2.760813706875624 ], [ 100.19670617065773, 5.31249258058368 ], [ 100.08575687052709, 6.464489447450291 ], [ 100.25959638875693, 6.642824815289572 ], [ 101.07551557821333, 6.204867051615892 ] ] ], [ [ [ 118.61832075406485, 4.478202419447541 ], [ 117.88203494677018, 4.137551377779488 ], [ 115.86551720587678, 4.306559149590157 ], [ 114.6213554220175, 1.430688177898887 ], [ 113.80584964401956, 1.217548732911041 ], [ 112.8598091980522, 1.497790025229946 ], [ 111.79754845586044, 0.904441229654651 ], [ 110.51406090702713, 0.773131415200993 ], [ 109.83022667850886, 1.338135687664192 ], [ 109.66326012577375, 2.006466986494985 ], [ 110.39613528853707, 1.663774725751395 ], [ 111.16885298059751, 1.850636704918784 ], [ 111.3700810079421, 2.697303371588873 ], [ 112.99561486211527, 3.102394924324869 ], [ 114.20401655482843, 4.52587392823682 ], [ 114.65959598191355, 4.00763682699781 ], [ 114.8695573263154, 4.348313706881953 ], [ 115.34746097215069, 4.316636053887009 ], [ 115.45071048386981, 5.447729803891562 ], [ 116.72510298061977, 6.924771429873999 ], [ 117.12962609260049, 6.928052883324568 ], [ 117.68907514859237, 5.987490139180181 ], [ 119.18190392463995, 5.407835598162251 ], [ 119.11069380094173, 5.016128241389865 ], [ 118.43972700406411, 4.96651886638962 ], [ 118.61832075406485, 4.478202419447541 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NA\", \"name\": \"Namibia\", \"type\": \"Sovereign country\", \"postal\": \"NA\", \"admin\": \"Namibia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 16.344976840895242, -28.576705010697701 ], [ 15.210472446359461, -27.090955905874047 ], [ 14.257714064194175, -22.111208184499958 ], [ 11.794918654028066, -18.069129327061916 ], [ 11.734198846085121, -17.301889336824473 ], [ 13.462362094789967, -16.971211846588773 ], [ 14.05850141770901, -17.423380629142663 ], [ 18.263309360434164, -17.309950860262006 ], [ 18.956186964603603, -17.789094740472258 ], [ 21.377176141045567, -17.930636488519696 ], [ 24.033861525170778, -17.295843194246324 ], [ 25.076950310982259, -17.578823337476621 ], [ 23.579005568137717, -18.281261081620059 ], [ 23.196858351339301, -17.869038181227786 ], [ 20.910641310314535, -18.252218926672022 ], [ 20.88113406747587, -21.814327080983148 ], [ 19.895457797940679, -21.849156996347869 ], [ 19.894734327888614, -28.461104831660776 ], [ 18.464899122804752, -29.045461928017279 ], [ 17.387497185951503, -28.783514092729781 ], [ 16.824017368240902, -28.08216155366447 ], [ 16.344976840895242, -28.576705010697701 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NC\", \"name\": \"New Caledonia\", \"type\": \"Dependency\", \"postal\": \"NC\", \"admin\": \"New Caledonia\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 165.77998986232637, -21.080004978115628 ], [ 167.12001142808691, -22.159990736583492 ], [ 166.74003462144481, -22.39997608814695 ], [ 165.47437544175222, -21.679606621998232 ], [ 164.02960574773601, -20.105645847252354 ], [ 165.77998986232637, -21.080004978115628 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NE\", \"name\": \"Niger\", \"type\": \"Sovereign country\", \"postal\": \"NE\", \"admin\": \"Niger\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 2.15447350424995, 11.940150051313424 ], [ 2.177107781593918, 12.625017808477537 ], [ 1.024103224297619, 12.851825669806601 ], [ 0.429927605805517, 13.988733018443895 ], [ 0.374892205414767, 14.928908189346146 ], [ 3.638258904646591, 15.568119818580442 ], [ 4.270209995143887, 16.852227484601315 ], [ 4.267419467800096, 19.155265204337127 ], [ 5.677565952180714, 19.601206976799801 ], [ 11.999505649471701, 23.471668402596435 ], [ 13.581424594790462, 23.040506089769281 ], [ 14.143870883855243, 22.491288967371133 ], [ 14.8513, 22.862950000000126 ], [ 15.096887648181848, 21.308518785074909 ], [ 15.903246697664315, 20.387618923417506 ], [ 15.247731154041844, 16.627305813050782 ], [ 13.972201775781684, 15.684365953021143 ], [ 13.540393507550789, 14.367133693901224 ], [ 13.956698846094127, 13.996691189016929 ], [ 13.95447675950561, 13.353448798063766 ], [ 14.595781284247607, 13.330426947477861 ], [ 14.18133629726691, 12.483656927943173 ], [ 13.083987257548813, 13.596147162322495 ], [ 12.302071160540549, 13.037189032437539 ], [ 10.989593133191534, 13.387322699431195 ], [ 9.014933302454438, 12.826659247280418 ], [ 7.804671258178871, 13.343526923063735 ], [ 6.820441928747812, 13.115091254117601 ], [ 5.443058302440136, 13.865923977102227 ], [ 4.107945997747379, 13.531215725147945 ], [ 3.611180454125588, 11.660167141155966 ], [ 2.848643019226586, 12.235635891158211 ], [ 2.15447350424995, 11.940150051313424 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NG\", \"name\": \"Nigeria\", \"type\": \"Sovereign country\", \"postal\": \"NG\", \"admin\": \"Nigeria\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 8.500287713259695, 4.771982937026849 ], [ 5.898172641634687, 4.262453314628985 ], [ 4.325607130560684, 6.270651149923467 ], [ 2.691701694356254, 6.258817246928629 ], [ 2.723792758809509, 8.50684540448971 ], [ 3.705438266625919, 10.063210354040208 ], [ 3.680633579125811, 12.552903347214226 ], [ 4.107945997747322, 13.531215725147831 ], [ 5.443058302440164, 13.865923977102298 ], [ 6.820441928747754, 13.115091254117518 ], [ 7.804671258178786, 13.343526923063747 ], [ 9.014933302454466, 12.82665924728043 ], [ 10.989593133191535, 13.38732269943111 ], [ 12.302071160540523, 13.037189032437524 ], [ 13.318701613018561, 13.556356309457826 ], [ 14.577177768622533, 12.085360826053503 ], [ 14.415378859116684, 11.572368882692075 ], [ 13.572949659894562, 10.798565985553566 ], [ 11.745774366918511, 6.981382961449754 ], [ 11.058787876030351, 6.644426784690594 ], [ 10.118276808318257, 7.03876963950988 ], [ 9.233162876023044, 6.444490668153335 ], [ 8.500287713259695, 4.771982937026849 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NI\", \"name\": \"Nicaragua\", \"type\": \"Sovereign country\", \"postal\": \"NI\", \"admin\": \"Nicaragua\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -85.712540452807303, 11.088444932494824 ], [ -87.668493415054712, 12.909909979702633 ], [ -86.733821784191605, 13.263092556201443 ], [ -86.75508663607971, 13.754845485890913 ], [ -86.096263800790595, 14.038187364147248 ], [ -85.80129472526859, 13.836054999237589 ], [ -84.924500698572402, 14.79049286545235 ], [ -84.449335903648603, 14.621614284722497 ], [ -83.147219000974133, 14.995829169164111 ], [ -83.855470343750397, 11.373311265503787 ], [ -83.655611741861577, 10.938764146361422 ], [ -83.895054490885954, 10.726839097532446 ], [ -85.712540452807303, 11.088444932494824 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NL\", \"name\": \"Netherlands\", \"type\": \"Country\", \"postal\": \"NL\", \"admin\": \"Netherlands\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 6.074182570020923, 53.510403347378144 ], [ 6.905139601274129, 53.482162177130647 ], [ 7.092053256873896, 53.144043280644894 ], [ 6.589396599970826, 51.852029120483394 ], [ 5.988658074577813, 51.851615709025054 ], [ 6.15665815595878, 50.803721015010581 ], [ 4.973991326526914, 51.475023708698131 ], [ 3.314971144228537, 51.34575511331991 ], [ 3.830288527043138, 51.620544542031951 ], [ 4.705997348661185, 53.091798407597764 ], [ 6.074182570020923, 53.510403347378144 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NO\", \"name\": \"Norway\", \"type\": \"Sovereign country\", \"postal\": \"N\", \"admin\": \"Norway\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 28.165547316202918, 71.185474351680512 ], [ 31.293418409965483, 70.453787746859916 ], [ 30.005435011522792, 70.186258856884905 ], [ 31.101078728975125, 69.558080145944871 ], [ 28.591929559043194, 69.064776923286701 ], [ 29.015572950971972, 69.766491197377974 ], [ 27.732292107867892, 70.164193020296295 ], [ 26.179622023226301, 69.825298977326156 ], [ 25.689212680776393, 69.092113755969024 ], [ 24.735679152126721, 68.649556789821446 ], [ 22.356237827247412, 68.841741441514955 ], [ 21.24493615081073, 69.370443020293123 ], [ 20.025268995857914, 69.065138658312719 ], [ 19.878559604581255, 68.407194322372618 ], [ 17.99386844246439, 68.567391262477344 ], [ 17.729181756265348, 68.010551866316234 ], [ 16.768878614985539, 68.013936672631388 ], [ 13.555689731509091, 64.787027696381472 ], [ 13.919905226302205, 64.445420640716122 ], [ 13.57191613124877, 64.049114081469668 ], [ 12.579935336973932, 64.066218980558347 ], [ 11.930569288794231, 63.128317572676991 ], [ 11.992064243221535, 61.800362453856565 ], [ 12.631146681375242, 61.2935716823701 ], [ 12.300365838274899, 60.11793284773006 ], [ 11.027368605196926, 58.856149400459401 ], [ 10.356556837616097, 59.469807033925377 ], [ 8.382000359743643, 58.313288479233279 ], [ 7.048748406613299, 58.078884182357285 ], [ 5.665835402050419, 58.588155422593672 ], [ 4.992078077829007, 61.970998033284275 ], [ 5.912900424837886, 62.614472968182696 ], [ 8.553411085655768, 63.454008287196473 ], [ 10.527709181366788, 64.486038316497485 ], [ 14.761145867581604, 67.81064158799515 ], [ 19.184028354578516, 69.817444159617821 ], [ 21.378416375420613, 70.255169379346057 ], [ 23.023742303161583, 70.202071845166273 ], [ 24.546543409938522, 71.030496731237236 ], [ 28.165547316202918, 71.185474351680512 ] ] ], [ [ [ 24.72412, 77.85385 ], [ 22.49032, 77.44493 ], [ 20.72601, 77.67704 ], [ 21.41611, 77.93504 ], [ 20.8119, 78.25463 ], [ 22.88426, 78.45494 ], [ 23.28134, 78.07954 ], [ 24.72412, 77.85385 ] ] ], [ [ [ 18.25183, 79.70175 ], [ 21.54383, 78.95611 ], [ 19.02737, 78.5626 ], [ 18.47172, 77.82669 ], [ 17.59441, 77.63796 ], [ 17.1182, 76.80941 ], [ 15.91315, 76.77045 ], [ 13.76259, 77.38035 ], [ 14.66956, 77.73565 ], [ 11.22231, 78.8693 ], [ 10.44453, 79.65239 ], [ 13.17077, 80.01046 ], [ 13.71852, 79.66039 ], [ 15.14282, 79.67431 ], [ 15.52255, 80.01608 ], [ 16.99085, 80.05086 ], [ 18.25183, 79.70175 ] ] ], [ [ [ 25.447625359811894, 80.407340399894508 ], [ 27.407505730913499, 80.056405748200461 ], [ 25.924650506298178, 79.517833970854554 ], [ 23.02446577321362, 79.400011705229105 ], [ 20.075188429451885, 79.566823228667261 ], [ 19.897266473070914, 79.842361965647513 ], [ 18.462263624757924, 79.859880276194417 ], [ 17.368015170977458, 80.318896186027018 ], [ 20.455992059010697, 80.59815562613224 ], [ 21.907944777115404, 80.357679348462085 ], [ 22.919252557067438, 80.657144273593502 ], [ 25.447625359811894, 80.407340399894508 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NP\", \"name\": \"Nepal\", \"type\": \"Sovereign country\", \"postal\": \"NP\", \"admin\": \"Nepal\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 88.12044070836987, 27.876541652939594 ], [ 88.06023766474982, 26.414615383402491 ], [ 87.227471958366294, 26.397898057556077 ], [ 85.251778598983378, 26.726198431906344 ], [ 84.675017938173795, 27.234901231387536 ], [ 83.304248895199549, 27.364505723575562 ], [ 80.088424513676273, 28.79447011974014 ], [ 80.476721225917402, 29.729865220655341 ], [ 81.525804477874743, 30.422716986608631 ], [ 85.823319940131512, 28.203575954698707 ], [ 88.12044070836987, 27.876541652939594 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"NZ\", \"name\": \"New Zealand\", \"type\": \"Country\", \"postal\": \"NZ\", \"admin\": \"New Zealand\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 173.02037479074076, -40.919052422856424 ], [ 173.24723432850206, -41.331998793300784 ], [ 173.9584053897029, -40.926700534835618 ], [ 174.24758670480813, -41.34915536882167 ], [ 174.24851688058951, -41.770008233406756 ], [ 172.71124637277077, -43.372287693048506 ], [ 173.08011274647023, -43.853343601253584 ], [ 171.45292524646365, -44.242518812843727 ], [ 170.61669721911662, -45.908928724959708 ], [ 169.33233117093428, -46.641235446967855 ], [ 166.67688602118423, -46.21991749449225 ], [ 166.50914432196473, -45.852704766626218 ], [ 167.04642418850327, -45.110941257508671 ], [ 168.30376346259689, -44.123973077166127 ], [ 170.52491987536618, -43.03168832781283 ], [ 171.94870893787194, -41.514416599291152 ], [ 172.09722700427878, -40.956104424809681 ], [ 172.798579543344, -40.493962090823473 ], [ 173.02037479074076, -40.919052422856424 ] ] ], [ [ [ 174.61200890533055, -36.156397393540544 ], [ 175.3366158389272, -37.20909799575827 ], [ 175.35759647043753, -36.526193943021127 ], [ 175.8088867536425, -36.798942152657688 ], [ 175.95849002512753, -37.55538176854607 ], [ 176.76319542877658, -37.881253350578703 ], [ 178.51709354076283, -37.695373223624799 ], [ 177.97046023997936, -39.166342868812976 ], [ 177.20699262929915, -39.145775648760846 ], [ 177.03294640534014, -39.879942722331478 ], [ 176.01244022044031, -41.289624118821507 ], [ 175.23956749908299, -41.688307793953243 ], [ 174.65097293527847, -41.281820977545451 ], [ 175.22763024322367, -40.459235528323404 ], [ 174.90015669178999, -39.90893320084723 ], [ 173.82404666574402, -39.508854262043513 ], [ 173.85226199777534, -39.146602471677468 ], [ 174.57480187408041, -38.797683200842755 ], [ 174.69701663645063, -37.381128838857961 ], [ 172.63600548735374, -34.529106540669389 ], [ 173.00704227120949, -34.450661716450341 ], [ 174.3293904971263, -35.265495700828623 ], [ 174.61200890533055, -36.156397393540544 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"OM\", \"name\": \"Oman\", \"type\": \"Sovereign country\", \"postal\": \"OM\", \"admin\": \"Oman\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 58.861141391846587, 21.114034532144302 ], [ 58.487985874266968, 20.428985907467109 ], [ 57.826372511634105, 20.243002427648634 ], [ 57.694390903560674, 18.944709580963803 ], [ 56.609650913321985, 18.574267076079479 ], [ 56.283520949128018, 17.876066799383949 ], [ 55.661491733630697, 17.884128322821539 ], [ 54.791002231674128, 16.950696926333364 ], [ 53.108572625547509, 16.651051133688981 ], [ 52.000009800022241, 19.000003363516072 ], [ 54.999981723862419, 19.999994004796122 ], [ 55.666659376859883, 22.000001125572311 ], [ 55.234489373602884, 23.110992743415352 ], [ 55.528631626208295, 23.933604030853502 ], [ 55.981213820220518, 24.130542914317857 ], [ 55.886232537668064, 24.920830593357493 ], [ 56.396847365143998, 24.924732163995515 ], [ 57.40345258975745, 23.878594468678841 ], [ 58.729211460205448, 23.565667832935418 ], [ 59.808060337162857, 22.533611965418203 ], [ 58.861141391846587, 21.114034532144302 ] ] ], [ [ [ 56.391421339753407, 25.895990708921261 ], [ 56.261041701080927, 25.714606431576755 ], [ 56.070820753814559, 26.055464178973949 ], [ 56.362017449779358, 26.395934353128951 ], [ 56.391421339753407, 25.895990708921261 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PK\", \"name\": \"Pakistan\", \"type\": \"Sovereign country\", \"postal\": \"PK\", \"admin\": \"Pakistan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 75.158027785140916, 37.133030910789117 ], [ 75.89689741405013, 36.666806138651836 ], [ 76.192848341785691, 35.898403428687828 ], [ 77.837450799474567, 35.494009507787766 ], [ 76.871721632804025, 34.653544012992739 ], [ 74.240202671204969, 34.748887030571254 ], [ 73.749948358051967, 34.317698879527853 ], [ 74.451559279278712, 32.764899603805503 ], [ 75.258641798813215, 32.271105455040498 ], [ 74.405928989565012, 31.692639471965279 ], [ 74.421380242820277, 30.979814764931177 ], [ 71.777665643200322, 27.913180243434525 ], [ 70.616496209601934, 27.989196275335868 ], [ 69.514392938113133, 26.940965684511372 ], [ 70.168926629522019, 26.491871649678842 ], [ 71.043240187468228, 24.3565239527302 ], [ 68.842599318318776, 24.359133612560939 ], [ 68.176645135373406, 23.691965033456711 ], [ 67.443666619745471, 23.944843654876991 ], [ 66.372827589793275, 25.425140896093851 ], [ 61.49736290878419, 25.078237006118499 ], [ 61.87418745305655, 26.239974880472104 ], [ 63.316631707619592, 26.756532497661667 ], [ 63.233897739520302, 27.217047024030709 ], [ 62.755425652929858, 27.378923448184988 ], [ 62.727830438085988, 28.25964488373539 ], [ 61.771868117118629, 28.699333807890799 ], [ 60.874248488208792, 29.829238999952608 ], [ 62.549856805272782, 29.318572496044311 ], [ 65.046862013616106, 29.472180691031905 ], [ 66.346472609324422, 29.887943427036177 ], [ 66.381457553986024, 30.738899237586452 ], [ 66.938891229118468, 31.304911200479353 ], [ 69.317764113242561, 31.901412258424443 ], [ 69.262522007122556, 32.5019440780883 ], [ 69.687147251264861, 33.105498969041236 ], [ 70.323594191371598, 33.358532619758392 ], [ 69.930543247359594, 34.02012014417511 ], [ 70.881803012988399, 33.98885590263852 ], [ 71.613076206350712, 35.153203436822864 ], [ 71.26234826038575, 36.074387518857804 ], [ 71.846291945283923, 36.509942328429858 ], [ 75.158027785140916, 37.133030910789117 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PA\", \"name\": \"Panama\", \"type\": \"Sovereign country\", \"postal\": \"PA\", \"admin\": \"Panama\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -77.881571417945253, 7.223771267114785 ], [ -78.429160732726075, 8.052041123888927 ], [ -78.182095709938636, 8.319182440621773 ], [ -79.120307176413746, 8.996092027213024 ], [ -80.382659064439622, 8.298408514840432 ], [ -80.003689948227162, 7.547524115423372 ], [ -80.42115800649708, 7.271571966984765 ], [ -80.886400926420805, 7.220541490096537 ], [ -81.059542812814726, 7.817921047390597 ], [ -81.51951473664468, 7.706610012233909 ], [ -81.721311204744467, 8.108962714058436 ], [ -82.82008134635042, 8.290863755725823 ], [ -82.850958014644817, 8.073822740099956 ], [ -82.932890998043575, 9.476812038608173 ], [ -82.546196255203483, 9.566134751824677 ], [ -82.207586432610967, 8.9955752628901 ], [ -81.439287075511544, 8.786234035675719 ], [ -79.573302781884308, 9.611610012241528 ], [ -78.055927700498017, 9.247730414258299 ], [ -77.353360765273862, 8.67050466555807 ], [ -77.242566494440084, 7.935278225125444 ], [ -77.753413865861404, 7.709839789252143 ], [ -77.881571417945253, 7.223771267114785 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PE\", \"name\": \"Peru\", \"type\": \"Sovereign country\", \"postal\": \"PE\", \"admin\": \"Peru\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -69.59042375352405, -17.580011895419332 ], [ -70.372572394477714, -18.347975355708869 ], [ -71.375250210236928, -17.773798516513857 ], [ -71.462040778271131, -17.363487644116383 ], [ -76.009205084929945, -14.649286390850321 ], [ -76.423469204397747, -13.823186944232432 ], [ -76.25924150257417, -13.535039157772943 ], [ -79.760578172510051, -7.194340915560084 ], [ -81.249996304026425, -6.136834405139183 ], [ -80.926346808582437, -5.690556735866565 ], [ -81.410942552399462, -4.73676482505546 ], [ -81.099669562489368, -4.036394138203697 ], [ -80.302560594387216, -3.404856459164713 ], [ -80.442241990872162, -4.425724379090674 ], [ -79.624979214176179, -4.454198093283495 ], [ -79.205289069317729, -4.959128513207389 ], [ -78.639897223612337, -4.547784112164074 ], [ -77.837904832658609, -3.003020521663103 ], [ -76.635394253226721, -2.608677666843818 ], [ -75.544995693652041, -1.56160979574588 ], [ -75.233722703741947, -0.911416924649529 ], [ -75.373223232713855, -0.15203175212045 ], [ -75.106624518520078, -0.05720549886486 ], [ -73.6595035468346, -1.260491224781134 ], [ -73.070392218707241, -2.308954359550953 ], [ -70.813475714791963, -2.256864515800743 ], [ -70.047708502874855, -2.725156345229699 ], [ -70.692682054309714, -3.742872002785859 ], [ -69.893635219996625, -4.298186944194328 ], [ -70.794768846302304, -4.251264743673303 ], [ -72.891927659787257, -5.274561455916981 ], [ -73.120027431923603, -6.629930922068239 ], [ -73.724486660441642, -6.91859547285064 ], [ -73.987235480429661, -7.523829847853065 ], [ -73.015382656532552, -9.032833347208062 ], [ -73.226713426390162, -9.462212823121234 ], [ -72.563033006465645, -9.520193780152717 ], [ -72.18489071316985, -10.053597914269432 ], [ -71.302412278921537, -10.079436130415374 ], [ -70.481893886991173, -9.490118096558845 ], [ -70.548685675728407, -11.009146823778465 ], [ -69.529678107364958, -10.951734307502194 ], [ -68.665079718689626, -12.561300144097173 ], [ -68.948886684836594, -14.453639418193283 ], [ -69.339534674747014, -14.953195489158832 ], [ -69.160346645774951, -15.323973890853019 ], [ -69.389764166934711, -15.660129082911652 ], [ -68.959635382753305, -16.50069793057127 ], [ -69.59042375352405, -17.580011895419332 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PH\", \"name\": \"Philippines\", \"type\": \"Sovereign country\", \"postal\": \"PH\", \"admin\": \"Philippines\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 126.37681359263749, 8.414706325713354 ], [ 126.53742394420064, 7.189380601424574 ], [ 126.19677290253256, 6.27429433840004 ], [ 125.8314205262291, 7.293715318221857 ], [ 125.3638521668523, 6.786485297060992 ], [ 125.68316084198372, 6.049656887227258 ], [ 125.39651167206065, 5.58100332277229 ], [ 124.21978763234236, 6.161355495626182 ], [ 123.93871951710693, 6.885135606306122 ], [ 124.24366214406135, 7.360610459823661 ], [ 123.61021243702757, 7.833527329942754 ], [ 122.08549930225578, 6.899424139834849 ], [ 121.91992801319262, 7.192119452336073 ], [ 122.31235884001714, 8.034962063016508 ], [ 123.48768761606354, 8.693009751821194 ], [ 123.84115441293986, 8.240324204944386 ], [ 124.60146976125023, 8.514157619659017 ], [ 124.76461225799565, 8.96040945071546 ], [ 125.47139082245158, 8.986996975129642 ], [ 125.4121179546128, 9.760334784377548 ], [ 126.22271447154318, 9.286074327018852 ], [ 126.37681359263749, 8.414706325713354 ] ] ], [ [ [ 123.98243777882581, 10.278778591345812 ], [ 122.99588300994165, 9.0221886255204 ], [ 122.38005496631948, 9.713360907424203 ], [ 122.94741051645192, 10.881868394408031 ], [ 123.49884972543848, 10.940624497923949 ], [ 123.33777428598475, 10.267383938025446 ], [ 124.07793582570125, 11.23272553145371 ], [ 123.98243777882581, 10.278778591345812 ] ] ], [ [ [ 118.50458092659036, 9.316382554558089 ], [ 117.17427453010069, 8.367499904814665 ], [ 119.51149620979757, 11.369668077027214 ], [ 119.68967654833992, 10.554291490109875 ], [ 118.50458092659036, 9.316382554558089 ] ] ], [ [ [ 121.88354780485915, 11.89175507247198 ], [ 123.12021650603597, 11.58366018314787 ], [ 123.10083784392648, 11.16593374271649 ], [ 122.00261030485959, 10.441016750526089 ], [ 121.88354780485915, 11.89175507247198 ] ] ], [ [ [ 125.50255171112352, 12.162694606978349 ], [ 125.78346479706218, 11.046121934447768 ], [ 125.01188398651229, 11.31145457605038 ], [ 125.27744917206027, 10.358722032101312 ], [ 124.80181928924574, 10.134678859899893 ], [ 124.7601680848185, 10.837995103392302 ], [ 124.45910119028608, 10.889929917845635 ], [ 124.30252160044174, 11.495370998577229 ], [ 124.89101281138161, 11.415582587118593 ], [ 124.87799035044398, 11.794189968304991 ], [ 124.26676150929572, 12.557760931849685 ], [ 125.22711632700785, 12.535720933477194 ], [ 125.50255171112352, 12.162694606978349 ] ] ], [ [ [ 121.52739383350351, 13.069590155484519 ], [ 121.26219038298157, 12.205560207564403 ], [ 120.32343631396751, 13.46641347905387 ], [ 121.18012820850217, 13.429697373910443 ], [ 121.52739383350351, 13.069590155484519 ] ] ], [ [ [ 121.32130822152359, 18.504064642811016 ], [ 121.9376013530364, 18.218552354398383 ], [ 122.24600630095429, 18.478949896717097 ], [ 122.51565392465338, 17.093504746971973 ], [ 122.25231082569391, 16.262444362854126 ], [ 121.6627860861083, 15.931017564350128 ], [ 121.72882856657728, 14.328376369682246 ], [ 122.70127566944566, 14.336541245984421 ], [ 123.95029503794026, 13.78213064214107 ], [ 124.07741906137827, 12.536676947474575 ], [ 122.92865197152994, 13.552919826710408 ], [ 122.67135501514869, 13.185836289925135 ], [ 122.03464969288055, 13.784481919810347 ], [ 120.62863732308332, 13.857655747935652 ], [ 120.99181928923056, 14.525392767795083 ], [ 120.6933362163127, 14.756670640517285 ], [ 120.564145135583, 14.396279201713824 ], [ 120.07042850146641, 14.970869452367097 ], [ 119.88377322802828, 16.363704331929966 ], [ 120.28648766487882, 16.034628811095331 ], [ 120.71586714079191, 18.505227362537539 ], [ 121.32130822152359, 18.504064642811016 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PG\", \"name\": \"Papua New Guinea\", \"type\": \"Sovereign country\", \"postal\": \"PG\", \"admin\": \"Papua New Guinea\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 155.88002566957843, -6.81999684003776 ], [ 155.16699425681512, -6.535931491729301 ], [ 154.51411421123967, -5.139117526880014 ], [ 156.01996544822478, -6.540013929880388 ], [ 155.88002566957843, -6.81999684003776 ] ] ], [ [ [ 151.98279585185449, -5.478063246282346 ], [ 150.24119673075384, -6.317753594592986 ], [ 148.31893680236075, -5.74714242922613 ], [ 148.40182579975689, -5.437755629094724 ], [ 149.84556196512725, -5.505503431829339 ], [ 150.13975589416495, -5.001348158389789 ], [ 150.23690758687351, -5.532220147324281 ], [ 150.80746707580809, -5.455842380396888 ], [ 151.64788089417087, -4.757073662946169 ], [ 151.53786176982155, -4.16780730552189 ], [ 152.33874311748102, -4.312966403829762 ], [ 151.98279585185449, -5.478063246282346 ] ] ], [ [ [ 147.19187381407497, -7.38802418378998 ], [ 148.0846358583494, -8.044108168167611 ], [ 148.7341052593936, -9.104663588093757 ], [ 149.30683515848446, -9.071435642130069 ], [ 149.26663089416135, -9.514406019736029 ], [ 150.80162763895916, -10.293686618697421 ], [ 150.69057498596388, -10.582712904505868 ], [ 147.91301842670802, -10.130440769087471 ], [ 146.56788089415065, -8.942554619994155 ], [ 146.04848107318494, -8.06741423913131 ], [ 144.74416792213802, -7.630128269077474 ], [ 143.2863757671843, -8.245491224809058 ], [ 143.41391320208069, -8.983068942910947 ], [ 142.62843143124425, -9.326820570516503 ], [ 141.0338517600139, -9.117892754760419 ], [ 141.00021040259188, -2.600151055515624 ], [ 144.58397098203326, -3.861417738463402 ], [ 145.82978641172568, -4.876497897972683 ], [ 145.98192182839298, -5.465609226100014 ], [ 147.6480733583476, -6.083659356310804 ], [ 147.8911076194162, -6.614014580922316 ], [ 146.97090538959489, -6.721656589386257 ], [ 147.19187381407497, -7.38802418378998 ] ] ], [ [ [ 153.14003787659877, -4.499983412294114 ], [ 152.82729210836831, -4.766427097190999 ], [ 152.40602583232496, -3.789742526874562 ], [ 150.66204959533886, -2.741486097833956 ], [ 150.93996544820456, -2.500002129734028 ], [ 152.2399894553711, -3.240008640153661 ], [ 153.01999352438466, -3.980015150573294 ], [ 153.14003787659877, -4.499983412294114 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PL\", \"name\": \"Poland\", \"type\": \"Sovereign country\", \"postal\": \"PL\", \"admin\": \"Poland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 15.016995883858669, 51.10667409932158 ], [ 14.074521111719491, 52.981262518925433 ], [ 14.353315463934138, 53.248171291712971 ], [ 14.119686313542587, 53.75702912049104 ], [ 17.622831658608675, 54.851535956432912 ], [ 18.620858595461641, 54.682605699270781 ], [ 18.696254510175464, 54.43871877706929 ], [ 23.243987257589509, 54.220566718149144 ], [ 23.799198846133379, 52.691099351606567 ], [ 23.199493849386187, 52.486977444053672 ], [ 24.029985792748903, 50.705406602575181 ], [ 22.518450148211603, 49.476773586619743 ], [ 22.776418898212626, 49.027395331409622 ], [ 21.607808058364213, 49.470107326854091 ], [ 19.825022820726872, 49.217125352569226 ], [ 19.320712517990472, 49.571574001659194 ], [ 18.909574822676319, 49.435845852244576 ], [ 18.392913852622172, 49.988628648470751 ], [ 17.649445021238989, 50.049038397819956 ], [ 17.554567091551121, 50.362145901076417 ], [ 16.868769158605659, 50.47397370055603 ], [ 16.719475945714436, 50.215746568393541 ], [ 16.176253289462267, 50.422607326857907 ], [ 16.238626743238569, 50.697732652379841 ], [ 15.016995883858669, 51.10667409932158 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PR\", \"name\": \"Puerto Rico\", \"type\": \"Dependency\", \"postal\": \"PR\", \"admin\": \"Puerto Rico\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -66.282434455008215, 18.514761664295364 ], [ -65.591003790942949, 18.228034979723915 ], [ -65.847163865813769, 17.975905666571862 ], [ -67.184162360285271, 17.946553453030077 ], [ -67.10067908391774, 18.520601101144351 ], [ -66.282434455008215, 18.514761664295364 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"KP\", \"name\": \"Dem. Rep. Korea\", \"type\": \"Sovereign country\", \"postal\": \"KP\", \"admin\": \"North Korea\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 130.64001590385243, 42.395009467125277 ], [ 130.78000735893113, 42.22000722916885 ], [ 130.40003055228902, 42.280003567059708 ], [ 129.66736209525482, 41.601104437825228 ], [ 129.70518924369247, 40.882827867184332 ], [ 127.53343550019417, 39.756850083976701 ], [ 127.38543419811027, 39.213472398427655 ], [ 128.34971642467661, 38.61224294692785 ], [ 128.20574588431145, 38.370397243801889 ], [ 125.2753304383362, 37.669070542952724 ], [ 124.71216067921938, 38.10834605564979 ], [ 125.38658979706059, 39.387957872061165 ], [ 124.26562462778531, 39.928493353834156 ], [ 125.07994184784064, 40.569823716792449 ], [ 126.86908328664987, 41.81656932226619 ], [ 128.20843305879066, 41.466771552082491 ], [ 128.05221520397231, 41.994284572917948 ], [ 129.59666873587952, 42.424981797854556 ], [ 129.99426720593323, 42.985386867843786 ], [ 130.64001590385243, 42.395009467125277 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PT\", \"name\": \"Portugal\", \"type\": \"Sovereign country\", \"postal\": \"P\", \"admin\": \"Portugal\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -9.034817674180246, 41.880570583659676 ], [ -8.263856980817792, 42.28046865495034 ], [ -8.013174607769912, 41.790886135417125 ], [ -6.668605515967657, 41.883386949219584 ], [ -6.389087693700915, 41.381815497394655 ], [ -6.851126674822552, 41.111082668617527 ], [ -7.066591559263529, 39.711891587882775 ], [ -7.498632371439726, 39.629571031241809 ], [ -7.098036668313128, 39.030072740223787 ], [ -7.374092169616318, 38.373058580064921 ], [ -7.029281175148796, 38.075764065089771 ], [ -7.855613165711986, 36.838268540996268 ], [ -8.898856980820327, 36.868809312480778 ], [ -8.83999752443988, 38.266243394517616 ], [ -9.526570603869715, 38.737429104154913 ], [ -8.768684047877102, 40.760638943030187 ], [ -9.034817674180246, 41.880570583659676 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PY\", \"name\": \"Paraguay\", \"type\": \"Sovereign country\", \"postal\": \"PY\", \"admin\": \"Paraguay\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -62.685057135657885, -22.249029229422387 ], [ -61.786326463453769, -19.633736667562964 ], [ -59.115042487206111, -19.356906019775401 ], [ -58.183471442280506, -19.868399346600363 ], [ -57.8706739976178, -20.732687676681952 ], [ -57.937155727761294, -22.090175876557172 ], [ -55.797958136606908, -22.356929620047822 ], [ -55.400747239795422, -23.956935316668805 ], [ -54.292959560754518, -24.021014092710729 ], [ -54.788794928595053, -26.621785577096134 ], [ -55.695845506398157, -27.387837009390864 ], [ -56.486701626192996, -27.548499037386293 ], [ -58.618173590719749, -27.123718763947096 ], [ -57.633660040911131, -25.603656508081642 ], [ -57.777217169817938, -25.16233977630904 ], [ -60.846564704009914, -23.880712579038292 ], [ -62.685057135657885, -22.249029229422387 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"PS\", \"name\": \"Palestine\", \"type\": \"Disputed\", \"postal\": \"PAL\", \"admin\": \"Palestine\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 35.545665317534542, 32.393992011030576 ], [ 35.397560662586045, 31.489086005167582 ], [ 34.927408481594568, 31.353435370401414 ], [ 35.22589155451243, 31.754341132121766 ], [ 34.974640740709333, 31.866582343059722 ], [ 35.183930291491436, 32.532510687788943 ], [ 35.545665317534542, 32.393992011030576 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"QA\", \"name\": \"Qatar\", \"type\": \"Sovereign country\", \"postal\": \"QA\", \"admin\": \"Qatar\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 50.810108270069577, 24.754742539971378 ], [ 50.743910760303692, 25.482424221289396 ], [ 51.286461622936059, 26.114582017515868 ], [ 51.606700473848811, 25.215670477798739 ], [ 51.38960778179063, 24.627385972588058 ], [ 50.810108270069577, 24.754742539971378 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"RO\", \"name\": \"Romania\", \"type\": \"Sovereign country\", \"postal\": \"RO\", \"admin\": \"Romania\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 22.710531447040495, 47.882193915389408 ], [ 23.142236362406805, 48.096341050806949 ], [ 24.866317172960578, 47.737525743188314 ], [ 26.197450392366932, 48.220881252630349 ], [ 26.924176059687568, 48.123264472030996 ], [ 28.128030226359044, 46.810476386088254 ], [ 28.233553501099042, 45.488283189468376 ], [ 29.149724969201653, 45.464925442072456 ], [ 29.626543409958771, 45.035390936862399 ], [ 28.8378577003202, 44.913873806328056 ], [ 28.558081495891997, 43.707461656258133 ], [ 27.242399529740908, 44.175986029632405 ], [ 25.569271681426926, 43.688444729174719 ], [ 22.944832391051847, 43.82378530534713 ], [ 22.474008416440601, 44.409227606781769 ], [ 22.705725538837356, 44.578002834647023 ], [ 21.562022739353608, 44.7689472519655 ], [ 21.483526238702236, 45.18117015235778 ], [ 20.220192498462836, 46.127468980486555 ], [ 21.021952345471249, 46.316087958351901 ], [ 22.099767693782837, 47.672439276716702 ], [ 22.710531447040495, 47.882193915389408 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"RU\", \"name\": \"Russia\", \"type\": \"Sovereign country\", \"postal\": \"RUS\", \"admin\": \"Russia\", \"sales_rgn\": 5 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 143.64800744036287, 50.747600409541519 ], [ 144.65414757708564, 48.976390692737596 ], [ 143.17392785051723, 49.306551418650372 ], [ 142.5586682476501, 47.861575018904915 ], [ 143.53349246640406, 46.836728013692493 ], [ 143.50527713437262, 46.137907619809482 ], [ 142.74770063697392, 46.740764878926569 ], [ 142.09203006405451, 45.966755276058791 ], [ 141.90444461483506, 48.85918854429957 ], [ 142.17998335181531, 50.952342434281917 ], [ 141.59407596249005, 51.935434882202543 ], [ 141.68254601457366, 53.301966457728781 ], [ 142.60693403541077, 53.762145087287905 ], [ 142.2097489768154, 54.225475979216867 ], [ 142.65478641171299, 54.365880845753878 ], [ 143.64800744036287, 50.747600409541519 ] ] ], [ [ [ 22.731098667092652, 54.327536932993326 ], [ 20.892244500418656, 54.312524929412575 ], [ 19.660640089606403, 54.426083889373984 ], [ 19.888481479581344, 54.866160386771497 ], [ 21.268448927503499, 55.190481675835287 ], [ 22.757763706155288, 54.856574408581423 ], [ 22.731098667092652, 54.327536932993326 ] ] ], [ [ [ -175.01425, 66.58435 ], [ -174.33983, 66.33556 ], [ -174.57182, 67.06219 ], [ -171.85731, 66.91308 ], [ -169.89958, 65.97724 ], [ -170.89107, 65.54139 ], [ -172.53025, 65.43791 ], [ -172.555, 64.46079 ], [ -172.95533, 64.25269 ], [ -175.98353, 64.92288 ], [ -176.20716, 65.35667 ], [ -178.35993, 65.39052 ], [ -178.90332, 65.74044 ], [ -178.68611, 66.11211 ], [ -179.88377, 65.87456 ], [ -179.43268, 65.40411 ], [ -180.0, 64.979708702198366 ], [ -180.0, 68.963636363636368 ], [ -174.92825, 67.20589 ], [ -175.01425, 66.58435 ] ] ], [ [ [ 180.00000000000014, 70.832199208546683 ], [ 178.90342500000011, 70.78114 ], [ 178.7253, 71.0988 ], [ 180.00000000000014, 71.51571433642826 ], [ 180.00000000000014, 70.832199208546683 ] ] ], [ [ [ -178.69378, 70.89302 ], [ -180.0, 70.832199208546683 ], [ -180.0, 71.51571433642826 ], [ -177.577945, 71.26948 ], [ -178.69378, 70.89302 ] ] ], [ [ [ 143.60385, 73.21244 ], [ 142.08763, 73.20544 ], [ 139.86312, 73.36983 ], [ 142.06207, 73.85758 ], [ 143.60385, 73.21244 ] ] ], [ [ [ 150.73167, 75.08406 ], [ 149.575925, 74.68892 ], [ 146.11919, 75.17298 ], [ 146.358485, 75.49682 ], [ 150.73167, 75.08406 ] ] ], [ [ [ 145.086285, 75.56262 ], [ 144.3, 74.82 ], [ 138.95544, 74.61148 ], [ 136.97439, 75.26167 ], [ 137.51176, 75.94917 ], [ 138.831075, 76.13676 ], [ 145.086285, 75.56262 ] ] ], [ [ [ 57.5356925799924, 70.72046397570216 ], [ 53.677375115784201, 70.76265778266847 ], [ 53.412016635965387, 71.206661688920207 ], [ 51.601894565645722, 71.474759019650492 ], [ 51.455753615124223, 72.014881089965144 ], [ 52.478275180883571, 72.22944163684096 ], [ 52.444168735570855, 72.774731350384855 ], [ 54.427613559797663, 73.627547512497586 ], [ 53.50828982932515, 73.749813951300155 ], [ 55.902458937407658, 74.627486477345343 ], [ 55.631932814359715, 75.081412258597169 ], [ 61.170044386647504, 76.251883450008137 ], [ 68.157059767534832, 76.939696763812918 ], [ 68.852211134725138, 76.544811306454619 ], [ 61.583507521414759, 75.260884507946798 ], [ 58.47708214705338, 74.309056301562833 ], [ 55.419335971910954, 72.371267605265984 ], [ 55.622837762276305, 71.54059479439033 ], [ 57.5356925799924, 70.72046397570216 ] ] ], [ [ [ 106.97013000000013, 76.97419 ], [ 107.24000000000015, 76.48 ], [ 111.07726000000017, 76.71 ], [ 114.13417, 75.84764 ], [ 113.88539, 75.327790000000135 ], [ 109.4, 74.18 ], [ 112.11919, 73.787740000000127 ], [ 113.01954000000026, 73.976930000000152 ], [ 113.52958000000032, 73.335050000000109 ], [ 115.56782, 73.75285 ], [ 118.77633000000023, 73.58772 ], [ 119.02, 73.12 ], [ 123.20066000000011, 72.97122 ], [ 123.25777000000019, 73.735030000000108 ], [ 126.97644, 73.56549 ], [ 128.59126, 73.03871 ], [ 129.05157, 72.39872 ], [ 128.46000000000012, 71.98 ], [ 129.71599000000023, 71.19304 ], [ 131.28858000000028, 70.786990000000117 ], [ 132.25350000000017, 71.836300000000108 ], [ 133.85766000000032, 71.386420000000157 ], [ 135.56193, 71.655250000000137 ], [ 137.49755, 71.34763 ], [ 138.23409000000018, 71.62803 ], [ 139.86983000000012, 71.487830000000145 ], [ 139.14791, 72.416190000000114 ], [ 140.46817, 72.849410000000148 ], [ 149.5, 72.2 ], [ 150.3511800000002, 71.60643 ], [ 152.96890000000022, 70.84222 ], [ 158.99779, 70.86672 ], [ 159.83031000000025, 70.45324 ], [ 159.70866, 69.72198 ], [ 160.94053000000034, 69.437280000000101 ], [ 167.83567, 69.58269 ], [ 169.5776300000002, 68.6938 ], [ 170.81688000000028, 69.01363 ], [ 170.00820000000019, 69.65276 ], [ 170.45345000000029, 70.09703 ], [ 175.72403000000023, 69.877250000000231 ], [ 180.00000000000014, 68.963636363636567 ], [ 180.00000000000014, 64.979708702198479 ], [ 178.70720000000026, 64.53493 ], [ 177.41128000000018, 64.60821 ], [ 179.37034, 62.982620000000111 ], [ 179.22825000000014, 62.304100000000147 ], [ 177.3643, 62.5219 ], [ 173.68013, 61.65261 ], [ 170.69850000000011, 60.33618 ], [ 170.33085000000031, 59.88177 ], [ 168.90046, 60.57355 ], [ 166.29498000000032, 59.788550000000214 ], [ 165.84000000000023, 60.16 ], [ 164.87674, 59.7316 ], [ 163.53929000000014, 59.86871 ], [ 163.21711000000025, 59.21101 ], [ 162.0173300000001, 58.24328 ], [ 162.05297, 57.83912 ], [ 163.19191, 57.615030000000104 ], [ 163.05794000000017, 56.159240000000125 ], [ 162.12958000000023, 56.12219 ], [ 161.70146, 55.285680000000156 ], [ 162.11749000000017, 54.85514 ], [ 160.36877000000035, 54.34433 ], [ 160.02173000000025, 53.20257 ], [ 158.53094000000019, 52.958680000000243 ], [ 158.23118, 51.94269 ], [ 156.78979000000029, 51.01105 ], [ 155.43366000000012, 55.381030000000123 ], [ 155.91442000000032, 56.767920000000146 ], [ 156.75815, 57.3647 ], [ 156.81035000000011, 57.83204 ], [ 158.36433000000019, 58.05575 ], [ 161.87204, 60.343000000000131 ], [ 163.66969, 61.140900000000101 ], [ 164.47355000000013, 62.55061 ], [ 163.2584200000002, 62.46627 ], [ 162.65791, 61.6425 ], [ 160.1214800000001, 60.54423 ], [ 159.30232, 61.773960000000102 ], [ 156.7206800000001, 61.43442 ], [ 154.21806000000035, 59.758180000000124 ], [ 155.04375, 59.14495 ], [ 151.26573000000027, 58.78089 ], [ 151.33815000000013, 59.50396 ], [ 149.78371, 59.655730000000148 ], [ 148.54481, 59.16448 ], [ 145.48722, 59.33637 ], [ 142.19782000000018, 59.03998 ], [ 135.12619, 54.72959 ], [ 136.70171, 54.603550000000126 ], [ 137.19342, 53.97732 ], [ 138.1647, 53.755010000000254 ], [ 138.80463, 54.254550000000108 ], [ 139.90151, 54.18968000000018 ], [ 141.34531, 53.089570000000123 ], [ 141.37923, 52.23877 ], [ 140.5974200000002, 51.239670000000103 ], [ 140.06193000000022, 48.446710000000166 ], [ 138.21971, 46.30795 ], [ 134.86939000000027, 43.39821 ], [ 133.53687000000028, 42.81147 ], [ 132.90627000000015, 42.798490000000101 ], [ 132.27807000000027, 43.284560000000113 ], [ 130.78, 42.220000000000198 ], [ 130.63386640840983, 42.903014634770557 ], [ 131.14468794161499, 42.929989732426947 ], [ 131.28855512911562, 44.111519680348266 ], [ 131.02519000000026, 44.96796 ], [ 131.88345421765959, 45.321161607436522 ], [ 133.09712000000022, 45.14409 ], [ 135.02631147678679, 48.478229885443909 ], [ 132.50669000000013, 47.78896 ], [ 130.98726000000013, 47.79013 ], [ 130.58229332898267, 48.729687404976204 ], [ 129.39781782442051, 49.440600084015614 ], [ 127.65740000000037, 49.76027 ], [ 125.94634891164648, 52.79279857035695 ], [ 125.06821129771046, 53.161044826868931 ], [ 123.57147, 53.4588 ], [ 121.00308475147037, 53.251401068731241 ], [ 120.17708865771689, 52.753886216841209 ], [ 120.725789015792, 52.516226304730907 ], [ 120.7382, 51.96411 ], [ 119.27939, 50.58292 ], [ 119.28846072802585, 50.142882798861962 ], [ 117.8792444194265, 49.510983384797044 ], [ 116.67880089728621, 49.888531399121405 ], [ 115.48569542853144, 49.805177313834747 ], [ 114.36245649623535, 50.248302720737485 ], [ 112.89773969935439, 49.543565375356991 ], [ 110.66201053267886, 49.130128078805853 ], [ 108.47516727095129, 49.282547715850711 ], [ 106.88880415245532, 50.27429596618029 ], [ 103.67654544476036, 50.089966132195144 ], [ 102.25589000000011, 50.510560000000112 ], [ 102.06521, 51.259910000000104 ], [ 98.861490513100506, 52.047366034546712 ], [ 97.825739780674525, 51.01099518493325 ], [ 98.231761509191728, 50.42240062112873 ], [ 97.259760000000227, 49.72605 ], [ 94.815949334698786, 50.013433335970888 ], [ 94.147566359435615, 50.480536607457168 ], [ 92.23471154171969, 50.802170722041751 ], [ 88.805566847695587, 49.470520738312473 ], [ 87.359970330762707, 49.214980780629162 ], [ 86.829356723989662, 49.82667470966814 ], [ 85.5412699726825, 49.692858588248157 ], [ 83.383003778012466, 51.069182847693895 ], [ 81.945985548839957, 50.812195949906339 ], [ 80.56844689323546, 51.388336493528442 ], [ 80.035559523441719, 50.864750881547224 ], [ 77.800915561844334, 53.404414984747547 ], [ 76.525179477854778, 54.177003485727141 ], [ 76.891100294913457, 54.490524400441927 ], [ 74.384820000000133, 53.54685000000012 ], [ 73.425678745420527, 53.489810289109755 ], [ 73.508516066384374, 54.035616766976602 ], [ 72.224150018202209, 54.376655381886792 ], [ 71.180131056609497, 54.133285224008262 ], [ 70.865266554655165, 55.169733588270105 ], [ 69.068166945272907, 55.385250149143502 ], [ 65.178533563095954, 54.354227810272079 ], [ 61.436600000000141, 54.00625 ], [ 60.97806644068325, 53.664993394579142 ], [ 61.699986199800634, 52.979996446334269 ], [ 60.739993117114551, 52.719986477257748 ], [ 60.927268507740251, 52.447548326215014 ], [ 59.967533807215574, 51.960420437215674 ], [ 61.588003371024143, 51.272658799843185 ], [ 61.337424350841019, 50.799070136104262 ], [ 59.932807244715576, 50.842194118851836 ], [ 59.642282342370578, 50.545442206415714 ], [ 58.36332000000013, 51.06364 ], [ 56.77798, 51.04355 ], [ 55.716940000000108, 50.621710000000149 ], [ 52.328723585831057, 51.718652248738096 ], [ 50.766648390512188, 51.692762356159875 ], [ 48.702381626181051, 50.605128485712839 ], [ 48.577841424357615, 49.874759629915644 ], [ 47.549480421749394, 50.454698391311126 ], [ 46.466445753776298, 48.39415233010493 ], [ 47.315240000000159, 47.71585 ], [ 48.05725, 47.74377 ], [ 48.694733514201886, 47.075628160177899 ], [ 48.593250000000154, 46.561040000000105 ], [ 49.101160000000135, 46.399330000000106 ], [ 48.645410000000112, 45.80629 ], [ 47.67591, 45.641490000000118 ], [ 46.68201, 44.609200000000101 ], [ 47.59094, 43.660160000000133 ], [ 47.49252, 42.98658 ], [ 48.584370000000177, 41.80888 ], [ 47.81566572448466, 41.151416124021353 ], [ 45.7764, 42.092440000000238 ], [ 45.470279168485916, 42.502780666670049 ], [ 43.931210000000107, 42.554960000000108 ], [ 42.394400000000161, 43.2203 ], [ 39.955008579271095, 43.434997666999294 ], [ 36.675460000000129, 45.24469 ], [ 37.40317, 45.404510000000101 ], [ 38.23295, 46.24087 ], [ 37.67372, 46.63657 ], [ 39.14767, 47.044750000000136 ], [ 39.12120000000013, 47.26336 ], [ 38.223538038899477, 47.102189846375978 ], [ 38.255112339029807, 47.54640045835697 ], [ 39.738277622238996, 47.898937079452082 ], [ 39.67465, 48.783820000000134 ], [ 40.069040000000115, 49.60105 ], [ 38.010631137857075, 49.915661526074729 ], [ 37.393459506995242, 50.383953355503678 ], [ 36.626167840325394, 50.225590928745135 ], [ 35.356116163888117, 50.577197374059153 ], [ 35.022183058417937, 51.207572333371502 ], [ 34.224815708154409, 51.255993150428935 ], [ 34.391730584457235, 51.768881740925906 ], [ 33.752699822735877, 52.33507457133166 ], [ 31.78597, 52.10168 ], [ 31.305200636527985, 53.073995876673308 ], [ 32.693643019346126, 53.351420803432148 ], [ 31.731272820774592, 53.794029446012019 ], [ 30.757533807098781, 54.811770941784403 ], [ 30.873909132620071, 55.550976467503517 ], [ 29.37157189303079, 55.670090643936277 ], [ 28.17670942557794, 56.169129950578792 ], [ 27.770015903440992, 57.244258124411203 ], [ 27.288184848751655, 57.474528306703917 ], [ 27.716685825315778, 57.79189911562446 ], [ 27.420150000000206, 58.724570000000142 ], [ 28.131699253051863, 59.300825100330997 ], [ 27.98112, 59.47537 ], [ 29.1177, 60.028050000000121 ], [ 28.07, 60.503520000000151 ], [ 31.139991082491036, 62.357692776124452 ], [ 31.516092156711267, 62.867687486412905 ], [ 30.035872430142803, 63.552813625738565 ], [ 30.44468468600374, 64.204453436939076 ], [ 29.544429559047018, 64.948671576590556 ], [ 30.21765, 65.80598 ], [ 29.054588657352383, 66.944286200622031 ], [ 29.977426385220696, 67.698297024192755 ], [ 28.445943637818772, 68.364612942164001 ], [ 28.591929559043365, 69.064776923286701 ], [ 32.132720000000262, 69.905950000000246 ], [ 33.77547, 69.301420000000121 ], [ 36.51396, 69.06342 ], [ 41.059870000000132, 67.45713000000012 ], [ 41.125950000000188, 66.791580000000124 ], [ 38.38295, 65.999530000000107 ], [ 33.918710000000175, 66.75961 ], [ 33.18444, 66.63253 ], [ 34.81477, 65.900150000000139 ], [ 34.943910000000159, 64.414370000000162 ], [ 37.012730000000118, 63.849830000000111 ], [ 37.141970000000157, 64.33471 ], [ 36.539579035089815, 64.76446 ], [ 37.176040000000143, 65.143220000000127 ], [ 39.59345, 64.520790000000176 ], [ 40.435600000000107, 64.76446 ], [ 39.762600000000162, 65.49682 ], [ 42.093090000000103, 66.47623 ], [ 43.949750000000137, 66.06908 ], [ 44.53226, 66.756340000000137 ], [ 43.69839, 67.35245 ], [ 44.187950000000143, 67.95051 ], [ 43.45282, 68.57079 ], [ 46.250000000000142, 68.25 ], [ 46.821340000000163, 67.68997 ], [ 45.55517, 67.56652 ], [ 45.562020000000103, 67.010050000000206 ], [ 46.349150000000151, 66.667670000000101 ], [ 47.894160000000255, 66.884550000000161 ], [ 48.13876, 67.52238 ], [ 53.717430000000178, 68.85738000000012 ], [ 54.47171, 68.80815 ], [ 53.485820000000132, 68.20131 ], [ 54.72628, 68.09702 ], [ 55.442680000000138, 68.43866 ], [ 57.317020000000156, 68.46628 ], [ 58.80200000000022, 68.88082 ], [ 59.941420000000193, 68.278440000000103 ], [ 61.07784000000018, 68.94069 ], [ 60.03, 69.52 ], [ 60.55, 69.85 ], [ 63.504000000000161, 69.54739 ], [ 68.512160000000137, 68.092330000000175 ], [ 69.18068, 68.615630000000124 ], [ 68.13522, 69.35649 ], [ 66.930080000000117, 69.454610000000116 ], [ 67.25976, 69.92873 ], [ 66.69466, 71.028970000000243 ], [ 68.540060000000125, 71.934500000000241 ], [ 69.196360000000112, 72.84336000000016 ], [ 69.94, 73.040000000000134 ], [ 72.58754, 72.776290000000103 ], [ 72.79603, 72.22006 ], [ 71.848110000000105, 71.40898 ], [ 72.47011, 71.09019 ], [ 72.79188, 70.39114 ], [ 72.564700000000215, 69.02085 ], [ 73.66787, 68.4079 ], [ 73.2387, 67.7404 ], [ 71.280000000000115, 66.320000000000164 ], [ 72.423010000000176, 66.172670000000181 ], [ 73.92099000000016, 66.789460000000133 ], [ 74.186510000000197, 67.28429 ], [ 75.052, 67.760470000000169 ], [ 74.469260000000162, 68.32899 ], [ 74.935840000000127, 68.98918 ], [ 73.84236, 69.07146 ], [ 73.601870000000218, 69.62763 ], [ 74.3998, 70.63175 ], [ 73.1011, 71.447170000000256 ], [ 74.890820000000218, 72.12119 ], [ 74.65926, 72.83227 ], [ 75.158010000000189, 72.854970000000122 ], [ 75.68351, 72.300560000000132 ], [ 75.288980000000123, 71.33556 ], [ 76.35911, 71.152870000000149 ], [ 75.903130000000175, 71.87401 ], [ 77.576650000000114, 72.26717 ], [ 79.652020000000135, 72.32011 ], [ 81.5, 71.75 ], [ 80.610710000000125, 72.582850000000121 ], [ 80.51109, 73.6482 ], [ 86.82230000000024, 73.93688 ], [ 86.00956, 74.459670000000159 ], [ 87.166820000000172, 75.11643 ], [ 92.90058, 75.77333 ], [ 93.234210000000161, 76.0472 ], [ 96.67821, 75.91548 ], [ 98.922540000000225, 76.44689 ], [ 100.75967000000023, 76.43028 ], [ 101.99084000000013, 77.287540000000206 ], [ 104.3516000000001, 77.69792 ], [ 106.06664000000015, 77.37389 ], [ 104.70500000000024, 77.1274 ], [ 106.97013000000013, 76.97419 ] ] ], [ [ [ 105.07547, 78.30689 ], [ 99.43814, 77.921 ], [ 101.2649, 79.23399 ], [ 102.08635, 79.34641 ], [ 105.37243, 78.71334 ], [ 105.07547, 78.30689 ] ] ], [ [ [ 51.13618655783128, 80.547280178540944 ], [ 47.586119012244154, 80.010181179515342 ], [ 46.502825962109654, 80.247246812654367 ], [ 47.072455275262911, 80.559424140129465 ], [ 44.846958042181114, 80.589809882317184 ], [ 48.318477410684665, 80.784009914869955 ], [ 48.522806023966695, 80.514568996900152 ], [ 50.039767693894618, 80.918885403151819 ], [ 51.522932977103693, 80.69972565380192 ], [ 51.13618655783128, 80.547280178540944 ] ] ], [ [ [ 99.93976, 78.88094 ], [ 94.97259, 79.044745 ], [ 93.31288, 79.4265 ], [ 92.5454, 80.14379 ], [ 91.18107, 80.34146 ], [ 95.940895, 81.2504 ], [ 100.186655, 79.780135 ], [ 99.93976, 78.88094 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"RW\", \"name\": \"Rwanda\", \"type\": \"Sovereign country\", \"postal\": \"RW\", \"admin\": \"Rwanda\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 30.419104852019245, -1.134659112150416 ], [ 30.816134881317712, -1.698914076345389 ], [ 30.758308953583111, -2.287250257988369 ], [ 29.938359002407939, -2.348486830254238 ], [ 29.632176141078588, -2.917857761246097 ], [ 29.024926385216787, -2.839257907730158 ], [ 29.291886834436614, -1.620055840667987 ], [ 30.419104852019245, -1.134659112150416 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"EH\", \"name\": \"W. Sahara\", \"type\": \"Indeterminate\", \"postal\": \"WS\", \"admin\": \"Western Sahara\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -8.794883999049077, 27.120696316022507 ], [ -8.665589565454809, 27.656425889592356 ], [ -8.6872936670174, 25.881056219988906 ], [ -11.969418911171161, 25.933352769468268 ], [ -11.937224493853321, 23.374594224536168 ], [ -12.874221564169575, 23.284832261645178 ], [ -13.118754441774712, 22.771220201096256 ], [ -12.929101935263532, 21.327070624267563 ], [ -16.845193650773993, 21.333323472574879 ], [ -17.063423224342571, 20.999752102130827 ], [ -17.020428432675743, 21.422310288981478 ], [ -14.750954555713534, 21.500600083903663 ], [ -13.891110398809047, 23.691009019459305 ], [ -12.50096269372537, 24.7701162785782 ], [ -12.030758836301615, 26.030866197203043 ], [ -11.718219773800357, 26.104091701760623 ], [ -11.392554897496979, 26.883423977154365 ], [ -8.794883999049077, 27.120696316022507 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SA\", \"name\": \"Saudi Arabia\", \"type\": \"Sovereign country\", \"postal\": \"SA\", \"admin\": \"Saudi Arabia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 42.77933230975097, 16.347891343648683 ], [ 40.93934126156654, 19.486485297111756 ], [ 39.801684604660949, 20.338862209550058 ], [ 39.139399448408284, 21.291904812092934 ], [ 39.066328973147591, 22.57965566659027 ], [ 38.492772251140082, 23.688451036060854 ], [ 37.483634881344386, 24.285494696545015 ], [ 36.93162723160259, 25.602959499610179 ], [ 35.130186801907882, 28.063351955674719 ], [ 34.632336053207979, 28.058546047471566 ], [ 34.956037225084259, 29.356554673778845 ], [ 36.068940870922063, 29.197494615184453 ], [ 37.998848911294374, 30.508499864213135 ], [ 37.002165561681011, 31.508412990844747 ], [ 39.195468377444968, 32.161008816042667 ], [ 40.399994337736246, 31.889991766887935 ], [ 41.889980910007836, 31.190008653278369 ], [ 44.709498732284743, 29.178891099559383 ], [ 47.459821811722833, 29.002519436147224 ], [ 47.708850538937384, 28.526062730416143 ], [ 48.416094191283946, 28.55200429942667 ], [ 48.807594842327177, 27.689627997339883 ], [ 50.152422316290881, 26.689663194275997 ], [ 50.239858839728754, 25.608049628190926 ], [ 50.810108270069577, 24.754742539971378 ], [ 51.38960778179063, 24.627385972588058 ], [ 52.000733270074335, 23.00115448657894 ], [ 55.006803012924905, 22.496947536707136 ], [ 55.208341098863194, 22.708329982997046 ], [ 55.666659376859826, 22.000001125572339 ], [ 54.999981723862362, 19.999994004796108 ], [ 52.000009800022241, 19.000003363516058 ], [ 49.116671583864871, 18.616667588774945 ], [ 48.183343540241339, 18.166669216377315 ], [ 47.466694777217633, 17.116681626854884 ], [ 47.000004917189756, 16.949999294497445 ], [ 46.749994337761649, 17.283338120996177 ], [ 43.791518589051918, 17.319976711491108 ], [ 43.380794305196105, 17.579986680567671 ], [ 43.218375278502748, 16.66688996018641 ], [ 42.77933230975097, 16.347891343648683 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SD\", \"name\": \"Sudan\", \"type\": \"Sovereign country\", \"postal\": \"SD\", \"admin\": \"Sudan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 33.963392794971185, 9.464285229420625 ], [ 33.721959248183111, 10.325262079630193 ], [ 33.206938084561784, 10.720111638406593 ], [ 33.206938084561784, 12.179338268667095 ], [ 32.743419037302544, 12.248007757149992 ], [ 32.073891524594785, 11.973329803218519 ], [ 32.400071594888345, 11.080626452941488 ], [ 31.352861895524882, 9.810240916008695 ], [ 30.837840731903384, 9.707236683284521 ], [ 29.996639497988554, 10.290927335388687 ], [ 28.966597170745786, 9.398223985111656 ], [ 26.752006167173818, 9.466893473594496 ], [ 25.790633328413946, 10.411098940233728 ], [ 25.069603699343986, 10.273759963267992 ], [ 24.53741516360202, 8.91753756573172 ], [ 23.886979580860668, 8.619729712933065 ], [ 23.459012892355986, 8.954285793489021 ], [ 23.554304233502194, 10.08925527591532 ], [ 22.977543572692753, 10.71446259199854 ], [ 22.28801, 12.64605 ], [ 21.93681, 12.588180000000136 ], [ 22.51202, 14.09318 ], [ 22.30351, 14.32682 ], [ 23.024590000000103, 15.68072 ], [ 23.886890000000108, 15.61084 ], [ 23.850000000000136, 20.0 ], [ 25.000000000000114, 20.00304 ], [ 25.000000000000114, 22.0 ], [ 36.86623, 22.0 ], [ 37.481790000000103, 18.61409 ], [ 38.410089959473225, 17.998307399970315 ], [ 36.852530000000115, 16.95655 ], [ 36.27022, 13.563330000000121 ], [ 34.731150000000127, 10.910170000000107 ], [ 34.25745, 10.63009 ], [ 33.963392794971185, 9.464285229420625 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SS\", \"name\": \"S. Sudan\", \"type\": \"Sovereign country\", \"postal\": \"SS\", \"admin\": \"South Sudan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 33.963392794971185, 9.464285229420625 ], [ 33.825500000000147, 8.37916 ], [ 33.294800000000123, 8.35458 ], [ 32.95418, 7.784970000000101 ], [ 33.568290000000104, 7.71334 ], [ 34.0751, 7.22595 ], [ 35.298007118233102, 5.506 ], [ 33.3900000000001, 3.79 ], [ 31.881450000000143, 3.55827 ], [ 31.24556, 3.7819 ], [ 30.83385, 3.50917 ], [ 29.71599531425602, 4.600804755060153 ], [ 27.979977247842953, 4.408413397637389 ], [ 27.213409051225256, 5.550953477394614 ], [ 26.465909458123292, 5.946717434101856 ], [ 26.21341840994512, 6.546603298362129 ], [ 25.124130893664812, 7.500085150579423 ], [ 25.114932488716875, 7.825104071479245 ], [ 23.886979580860668, 8.619729712933065 ], [ 24.53741516360202, 8.91753756573172 ], [ 25.069603699343986, 10.273759963267992 ], [ 25.790633328413946, 10.411098940233728 ], [ 26.752006167173818, 9.466893473594496 ], [ 28.966597170745786, 9.398223985111656 ], [ 29.996639497988554, 10.290927335388687 ], [ 30.837840731903384, 9.707236683284521 ], [ 31.352861895524882, 9.810240916008695 ], [ 32.400071594888345, 11.080626452941488 ], [ 32.073891524594785, 11.973329803218519 ], [ 32.743419037302544, 12.248007757149992 ], [ 33.206938084561784, 12.179338268667095 ], [ 33.206938084561784, 10.720111638406593 ], [ 33.721959248183111, 10.325262079630193 ], [ 33.963392794971185, 9.464285229420625 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SN\", \"name\": \"Senegal\", \"type\": \"Sovereign country\", \"postal\": \"SN\", \"admin\": \"Senegal\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -16.713728807023472, 13.594958604379855 ], [ -17.625042690490659, 14.729540513564073 ], [ -17.185172898822231, 14.919477240452862 ], [ -16.120690070041931, 16.455662543193384 ], [ -14.577347581428981, 16.598263658102809 ], [ -13.435737677453062, 16.039383042866191 ], [ -12.170750291380301, 14.616834214735505 ], [ -11.513942836950591, 12.442987575729418 ], [ -15.54847693527401, 12.628170070847347 ], [ -16.677451951554573, 12.384851589401052 ], [ -16.841524624081273, 13.151393947802561 ], [ -13.844963344772408, 13.505041612192002 ], [ -14.046992356817482, 13.794067898000449 ], [ -14.687030808968487, 13.630356960499784 ], [ -15.081735398813819, 13.876491807505985 ], [ -16.713728807023472, 13.594958604379855 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SB\", \"name\": \"Solomon Is.\", \"type\": \"Sovereign country\", \"postal\": \"SB\", \"admin\": \"Solomon Islands\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 162.11902469304087, -10.482719008021135 ], [ 162.39864586817222, -10.826367282762121 ], [ 161.70003218001838, -10.820011081590224 ], [ 161.31979699121476, -10.204751478723125 ], [ 162.11902469304087, -10.482719008021135 ] ] ], [ [ [ 160.85222863183796, -9.872937106977005 ], [ 159.8494474632142, -9.794027194867368 ], [ 159.70294477766666, -9.242949720906779 ], [ 160.36295617089846, -9.400304457235535 ], [ 160.85222863183796, -9.872937106977005 ] ] ], [ [ [ 161.67998172428915, -9.599982191611375 ], [ 161.52939660059056, -9.784312025596435 ], [ 160.57999718652437, -8.320008640173967 ], [ 160.92002811100494, -8.320008640173967 ], [ 161.67998172428915, -9.599982191611375 ] ] ], [ [ [ 159.87502729719861, -8.337320244991716 ], [ 159.917401971678, -8.538289890174866 ], [ 158.21114953026486, -7.421872246941149 ], [ 158.82000125552773, -7.560003350457393 ], [ 159.87502729719861, -8.337320244991716 ] ] ], [ [ [ 157.5384257346893, -7.347819919466929 ], [ 156.9020304710148, -7.176874281445393 ], [ 156.54282759015396, -6.59933847415148 ], [ 157.14000044171891, -7.021638278840655 ], [ 157.5384257346893, -7.347819919466929 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SL\", \"name\": \"Sierra Leone\", \"type\": \"Sovereign country\", \"postal\": \"SL\", \"admin\": \"Sierra Leone\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -11.438779466182055, 6.785916856305748 ], [ -12.949049038128194, 7.798645738145738 ], [ -13.246550258832515, 8.903048610871508 ], [ -11.917277390988659, 10.046983954300558 ], [ -11.11748124840733, 10.045872911006285 ], [ -10.622395188835041, 9.267910061068278 ], [ -10.505477260774668, 8.348896389189605 ], [ -10.23009355309128, 8.406205552601293 ], [ -11.438779466182055, 6.785916856305748 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SV\", \"name\": \"El Salvador\", \"type\": \"Sovereign country\", \"postal\": \"SV\", \"admin\": \"El Salvador\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -87.793111131526572, 13.384480495655055 ], [ -88.48330156121682, 13.163951320849492 ], [ -90.095554572290979, 13.735337632700734 ], [ -89.3533259752828, 14.424132798719114 ], [ -88.503997972349708, 13.845485948130857 ], [ -87.859515347021599, 13.893312486216983 ], [ -87.793111131526572, 13.384480495655055 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"-99\", \"name\": \"Somaliland\", \"type\": \"Indeterminate\", \"postal\": \"SL\", \"admin\": \"Somaliland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 48.938129510296505, 9.451748968946674 ], [ 47.78942, 8.003 ], [ 46.948328484897957, 7.996876532417389 ], [ 43.67875, 9.18358000000012 ], [ 42.55876, 10.57258000000013 ], [ 43.145304803242141, 11.462039699748857 ], [ 44.11780358254282, 10.445538438351605 ], [ 48.948206414593471, 11.41062164961852 ], [ 48.938129510296505, 9.451748968946674 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SO\", \"name\": \"Somalia\", \"type\": \"Sovereign country\", \"postal\": \"SO\", \"admin\": \"Somalia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 49.72862, 11.5789 ], [ 51.1112, 12.02464 ], [ 51.04531, 10.6409 ], [ 48.59455, 5.33911 ], [ 46.56476, 2.85529 ], [ 43.13597, 0.2922 ], [ 41.58513, -1.68325 ], [ 40.993, -0.85829 ], [ 40.98105, 2.78452 ], [ 42.12861, 4.23413 ], [ 42.76967, 4.25259 ], [ 43.66087, 4.95755 ], [ 44.9636, 5.00162 ], [ 48.938129510296449, 9.451748968946617 ], [ 48.942005242718352, 11.394266058798138 ], [ 49.72862, 11.5789 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"RS\", \"name\": \"Serbia\", \"type\": \"Sovereign country\", \"postal\": \"RS\", \"admin\": \"Republic of Serbia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 20.874312778413412, 45.41637543393432 ], [ 22.145087924902896, 44.478422349620587 ], [ 22.705725538837441, 44.578002834647009 ], [ 22.410446404721597, 44.008063462900054 ], [ 22.986018507588483, 43.211161200527101 ], [ 22.380525750424681, 42.320259507815081 ], [ 21.576635989402121, 42.245224397061861 ], [ 21.77505, 42.6827 ], [ 20.81448, 43.27205 ], [ 20.25758, 42.812750000000108 ], [ 19.21852, 43.52384 ], [ 19.59976, 44.03847 ], [ 19.11761, 44.423070000000109 ], [ 19.36803, 44.863 ], [ 19.00548, 44.86023 ], [ 19.390475701584592, 45.236515611342384 ], [ 18.82982, 45.90888 ], [ 20.220192498462893, 46.127468980486583 ], [ 20.874312778413412, 45.41637543393432 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SR\", \"name\": \"Suriname\", \"type\": \"Sovereign country\", \"postal\": \"SR\", \"admin\": \"Suriname\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -57.147436489476888, 5.973149929219161 ], [ -53.958044603070903, 5.756548163267765 ], [ -54.478632981979231, 4.896755682795586 ], [ -54.006930508019011, 3.620037746592558 ], [ -54.524754197799716, 2.311848863123785 ], [ -55.973322109589375, 2.510363877773017 ], [ -55.995698004771754, 1.817667141116601 ], [ -56.539385748914555, 1.899522609866921 ], [ -57.28143347840971, 3.333491929534119 ], [ -57.60156897645787, 3.334654649260685 ], [ -58.044694383360678, 4.060863552258383 ], [ -57.914288906472137, 4.812626451024414 ], [ -57.307245856339506, 5.073566595882227 ], [ -57.147436489476888, 5.973149929219161 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SK\", \"name\": \"Slovakia\", \"type\": \"Sovereign country\", \"postal\": \"SK\", \"admin\": \"Slovakia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 18.853144158613617, 49.496229763377642 ], [ 19.320712517990472, 49.571574001659194 ], [ 19.825022820726872, 49.217125352569226 ], [ 21.607808058364213, 49.470107326854091 ], [ 22.558137648211755, 49.085738023467144 ], [ 21.872236362401736, 48.319970811550021 ], [ 20.801293979584926, 48.623854071642384 ], [ 17.857132602620027, 47.758428860050373 ], [ 16.979666782304037, 48.123497015976305 ], [ 17.101984897538898, 48.816968899117114 ], [ 17.886484816161811, 48.903475246773709 ], [ 18.853144158613617, 49.496229763377642 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SI\", \"name\": \"Slovenia\", \"type\": \"Sovereign country\", \"postal\": \"SLO\", \"admin\": \"Slovenia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 13.806475457421527, 46.509306138691215 ], [ 16.202298211337364, 46.852385972676963 ], [ 16.564808383864857, 46.50375092221983 ], [ 15.768732944408553, 46.238108222023449 ], [ 15.327674594797429, 45.452316392593232 ], [ 13.715059848697223, 45.500323798192376 ], [ 13.937630242578308, 45.591015936864622 ], [ 13.806475457421527, 46.509306138691215 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SE\", \"name\": \"Sweden\", \"type\": \"Sovereign country\", \"postal\": \"S\", \"admin\": \"Sweden\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 22.18317345550193, 65.723740546320172 ], [ 21.21351687997722, 65.026005357515274 ], [ 21.369631381930958, 64.413587958424287 ], [ 17.847779168375212, 62.74940013289681 ], [ 17.119554884518124, 61.341165676510968 ], [ 18.787721795332089, 60.081914374422595 ], [ 17.86922488777634, 58.953766181058697 ], [ 16.829185011470088, 58.719826972073392 ], [ 16.447709588291474, 57.041118069071885 ], [ 15.879785597403783, 56.104301866268663 ], [ 14.666681349352075, 56.200885118222175 ], [ 14.100721062891465, 55.407781073622651 ], [ 12.942910597392057, 55.361737372450577 ], [ 11.027368605196868, 58.856149400459358 ], [ 12.300365838274899, 60.117932847730032 ], [ 12.631146681375185, 61.293571682370136 ], [ 11.992064243221563, 61.80036245385655 ], [ 11.930569288794231, 63.128317572676977 ], [ 12.579935336973934, 64.066218980558332 ], [ 13.571916131248713, 64.04911408146971 ], [ 13.919905226302204, 64.44542064071608 ], [ 13.555689731509091, 64.787027696381514 ], [ 16.768878614985482, 68.013936672631402 ], [ 17.729181756265348, 68.010551866316277 ], [ 17.993868442464333, 68.567391262477358 ], [ 19.878559604581255, 68.407194322372575 ], [ 20.025268995857886, 69.065138658312705 ], [ 20.645592889089528, 69.106247260200874 ], [ 23.539473097434438, 67.93600861273525 ], [ 23.565879754335583, 66.396050930437426 ], [ 23.903378533633802, 66.006927395279618 ], [ 22.18317345550193, 65.723740546320172 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SZ\", \"name\": \"Swaziland\", \"type\": \"Sovereign country\", \"postal\": \"SW\", \"admin\": \"Swaziland\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 32.071665480281069, -26.733820082304909 ], [ 31.86806033705108, -27.177927341421277 ], [ 31.282773064913329, -27.285879408478998 ], [ 30.68596194837448, -26.743845310169533 ], [ 31.044079624157149, -25.731452325139443 ], [ 31.83777794772806, -25.843331801051349 ], [ 32.071665480281069, -26.733820082304909 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"SY\", \"name\": \"Syria\", \"type\": \"Sovereign country\", \"postal\": \"SYR\", \"admin\": \"Syria\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 38.792340529136084, 33.378686428352225 ], [ 36.834062127435544, 32.312937526980775 ], [ 35.700797967274752, 32.716013698857381 ], [ 36.066460402172055, 33.82491242119255 ], [ 36.611750115715893, 34.201788641897181 ], [ 36.448194207512103, 34.593935248344067 ], [ 35.998402540843642, 34.644914048800004 ], [ 35.905023227692226, 35.410009467097325 ], [ 36.685389031731802, 36.259699205056464 ], [ 36.739494256341402, 36.817520453431086 ], [ 39.522580193852548, 36.716053778625991 ], [ 42.349591098811771, 37.229872544904097 ], [ 41.289707472505455, 36.358814602192268 ], [ 41.006158888519934, 34.419372260062119 ], [ 38.792340529136084, 33.378686428352225 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TD\", \"name\": \"Chad\", \"type\": \"Sovereign country\", \"postal\": \"TD\", \"admin\": \"Chad\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 14.495787387762903, 12.859396267137356 ], [ 14.595781284247607, 13.330426947477861 ], [ 13.95447675950561, 13.353448798063766 ], [ 13.956698846094127, 13.996691189016929 ], [ 13.540393507550789, 14.367133693901224 ], [ 13.97217, 15.68437 ], [ 15.247731154041844, 16.627305813050782 ], [ 15.903246697664315, 20.387618923417506 ], [ 15.096887648181848, 21.308518785074909 ], [ 14.8513, 22.862950000000126 ], [ 15.86085, 23.40972 ], [ 23.837660000000142, 19.580470000000105 ], [ 23.886890000000108, 15.61084 ], [ 23.024590000000103, 15.68072 ], [ 22.30351, 14.32682 ], [ 22.51202, 14.09318 ], [ 21.93681, 12.588180000000136 ], [ 22.28801, 12.64605 ], [ 22.864165480244253, 11.142395127807617 ], [ 21.723821648859541, 10.567055568885962 ], [ 21.000868361096309, 9.47598521569148 ], [ 20.059685499764271, 9.012706000194839 ], [ 18.812009718509273, 8.982914536978626 ], [ 18.911021762780592, 8.630894680206438 ], [ 17.964929640380888, 7.890914008002994 ], [ 15.279460483469165, 7.421924546738012 ], [ 15.436091749745742, 7.692812404811889 ], [ 14.979995558337691, 8.796104234243444 ], [ 13.954218377344091, 9.549494940626687 ], [ 14.171466098699113, 10.021378282100045 ], [ 15.467872755605242, 9.982336737503545 ], [ 14.923564894275046, 10.891325181517516 ], [ 14.89336, 12.21905 ], [ 14.495787387762903, 12.859396267137356 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TG\", \"name\": \"Togo\", \"type\": \"Sovereign country\", \"postal\": \"TG\", \"admin\": \"Togo\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 1.865240512712319, 6.142157701029731 ], [ 1.060121697604927, 5.928837388528876 ], [ 0.570384148774849, 6.914358628767189 ], [ 0.712029249686879, 8.312464504423829 ], [ 0.023802524423701, 11.018681748900804 ], [ 0.899563022474069, 10.99733938236426 ], [ 0.772335646171484, 10.470808213742359 ], [ 1.425060662450136, 9.825395412633 ], [ 1.865240512712319, 6.142157701029731 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TH\", \"name\": \"Thailand\", \"type\": \"Sovereign country\", \"postal\": \"TH\", \"admin\": \"Thailand\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 102.5849324890267, 12.186594956913282 ], [ 101.68715783081996, 12.645740057826572 ], [ 100.83180952352487, 12.627084865769206 ], [ 100.97846723836921, 13.412721665902566 ], [ 100.09779747925111, 13.406856390837433 ], [ 100.01873253784456, 12.307001044153354 ], [ 99.153772414143162, 9.963061428258556 ], [ 99.222398716226763, 9.239255479362427 ], [ 99.873831821698133, 9.20786204674512 ], [ 100.45927412313276, 7.429572658717177 ], [ 102.14118696493638, 6.221636053894628 ], [ 101.81428185425798, 5.810808417174243 ], [ 101.15421878459387, 5.691384182147715 ], [ 101.07551557821336, 6.204867051615921 ], [ 100.25959638875696, 6.642824815289544 ], [ 100.08575687052711, 6.464489447450291 ], [ 98.503786248775995, 8.382305202666288 ], [ 98.339661899817003, 7.794511623562386 ], [ 98.150009393305822, 8.350007432483878 ], [ 98.553550653073046, 9.932959906448545 ], [ 99.587286004639722, 11.892762762901697 ], [ 99.097755161538757, 13.827502549693278 ], [ 98.192074009191401, 15.123702500870351 ], [ 98.903348423256759, 16.177824204976119 ], [ 97.375896437573545, 18.445437730375815 ], [ 97.797782830804408, 18.627080389881755 ], [ 98.25372399291561, 19.708203029860044 ], [ 98.959675734454876, 19.752980658440947 ], [ 100.11598758341785, 20.417849636308187 ], [ 100.54888105672688, 20.109237982661128 ], [ 100.60629357300316, 19.508344427971224 ], [ 101.2820146016517, 19.462584947176765 ], [ 101.05954756063517, 17.51249725999449 ], [ 102.11359175009248, 18.109101670804165 ], [ 102.99870568238771, 17.961694647691601 ], [ 103.20019209189374, 18.309632066312773 ], [ 103.9564766784853, 18.240954087796879 ], [ 104.71694705609249, 17.428858954330082 ], [ 104.7793205098688, 16.441864935771449 ], [ 105.58903852745016, 15.570316066952858 ], [ 105.54433841351769, 14.723933620660418 ], [ 105.21877689007889, 14.273211778210694 ], [ 102.98842207236163, 14.225721136934467 ], [ 102.34809939983302, 13.394247341358223 ], [ 102.5849324890267, 12.186594956913282 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TJ\", \"name\": \"Tajikistan\", \"type\": \"Sovereign country\", \"postal\": \"TJ\", \"admin\": \"Tajikistan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 71.01419803252017, 40.244365546218233 ], [ 70.648018833299972, 39.935753892571171 ], [ 69.559609816368521, 40.103211371412982 ], [ 69.46488691597753, 39.526683254548701 ], [ 73.675379266254794, 39.431236884105601 ], [ 73.928852166646436, 38.505815334622739 ], [ 74.864815708316826, 38.378846340481601 ], [ 74.980002475895418, 37.419990139305895 ], [ 73.260055779925011, 37.495256862939002 ], [ 71.844638299450594, 36.738171291646921 ], [ 71.448693475230243, 37.06564484308052 ], [ 71.348131137990265, 38.258905341132163 ], [ 70.806820509732887, 38.486281643216415 ], [ 70.116578403610333, 37.588222764632093 ], [ 69.518785434857961, 37.60899669041342 ], [ 69.196272820924378, 37.151143500307427 ], [ 67.829999627559516, 37.144994004864685 ], [ 68.392032505165957, 38.157025254868742 ], [ 68.176025018185925, 38.901553453113905 ], [ 67.442219679641312, 39.140143541005486 ], [ 67.701428664017357, 39.580478420564532 ], [ 68.536416456989429, 39.533452867178937 ], [ 69.329494663372827, 40.727824408524853 ], [ 70.666622348925046, 40.960213324541414 ], [ 70.458159621059622, 40.496494859370287 ], [ 71.01419803252017, 40.244365546218233 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TM\", \"name\": \"Turkmenistan\", \"type\": \"Sovereign country\", \"postal\": \"TM\", \"admin\": \"Turkmenistan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 61.210817091725744, 35.650072333309225 ], [ 61.123070509694145, 36.491597194966246 ], [ 60.377637973883878, 36.527383124328367 ], [ 59.234761997316809, 37.412987982730343 ], [ 57.330433790928986, 38.02922943781094 ], [ 55.511578403551908, 37.964117133123167 ], [ 54.800303989486565, 37.392420762678185 ], [ 53.921597934795557, 37.198918361961262 ], [ 53.880928582581845, 38.952093003895357 ], [ 53.101027866432901, 39.290573635407128 ], [ 53.35780805849123, 39.975286363274449 ], [ 52.693972609269821, 40.033629055331971 ], [ 52.915251092343624, 40.876523342444727 ], [ 53.858139275941134, 40.631034450842179 ], [ 54.73684533063215, 40.951014919593462 ], [ 53.72171349469059, 42.12319143327003 ], [ 52.916749708880076, 41.868116563477329 ], [ 52.814688755103617, 41.135370591794711 ], [ 52.502459751196149, 41.78331553808637 ], [ 54.079417759014952, 42.324109402020831 ], [ 55.45525109235377, 41.25985911718584 ], [ 57.096391229079103, 41.322310085610567 ], [ 56.932215203687804, 41.826026109375604 ], [ 58.62901085799146, 42.751551011723052 ], [ 59.976422153569786, 42.223081976890207 ], [ 60.083340691981675, 41.425146185871405 ], [ 60.465952996670694, 41.220326646482548 ], [ 61.882714064384693, 41.084856879229406 ], [ 62.374260288345006, 40.053886216790389 ], [ 64.170223016216767, 38.892406724598246 ], [ 66.546150343700219, 37.974684963526869 ], [ 66.51860680528867, 37.362784328758792 ], [ 65.745630731066825, 37.661164048812068 ], [ 65.588947788357842, 37.305216783185642 ], [ 64.746105177677407, 37.111817735333304 ], [ 64.546479119733903, 36.312073269184268 ], [ 63.193538445900352, 35.857165635718914 ], [ 62.98466230657661, 35.404040839167621 ], [ 62.230651483005886, 35.270663967422294 ], [ 61.210817091725744, 35.650072333309225 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TL\", \"name\": \"Timor-Leste\", \"type\": \"Sovereign country\", \"postal\": \"TL\", \"admin\": \"East Timor\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 124.96868248911623, -8.892790215697083 ], [ 125.94707238169826, -8.432094821815035 ], [ 127.33592817597463, -8.397316582882603 ], [ 125.08852013560109, -9.393173109579294 ], [ 124.96868248911623, -8.892790215697083 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TT\", \"name\": \"Trinidad and Tobago\", \"type\": \"Sovereign country\", \"postal\": \"TT\", \"admin\": \"Trinidad and Tobago\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -61.68, 10.76 ], [ -60.895, 10.855 ], [ -60.935, 10.11 ], [ -61.95, 10.09 ], [ -61.68, 10.76 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TN\", \"name\": \"Tunisia\", \"type\": \"Sovereign country\", \"postal\": \"TN\", \"admin\": \"Tunisia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 9.482139926805274, 30.307556057246188 ], [ 9.055602654668149, 32.102691962201291 ], [ 7.612641635782182, 33.344114895148962 ], [ 7.524481642292244, 34.09737641045146 ], [ 8.140981479534304, 34.65514598239379 ], [ 8.420964389691676, 36.946427313783161 ], [ 9.509993523810607, 37.349994411766545 ], [ 10.210002475636317, 37.230001735984814 ], [ 10.180650262094531, 36.724037787415085 ], [ 11.02886722173335, 37.092103176413957 ], [ 10.600004510143094, 36.410000108377375 ], [ 10.593286573945138, 35.947444362932814 ], [ 10.939518670300687, 35.698984076473494 ], [ 10.807847120821009, 34.83350718844919 ], [ 10.149592726287125, 34.330773016897709 ], [ 10.339658644256616, 33.785741685515319 ], [ 10.856836378633687, 33.768740139291282 ], [ 11.488787469131012, 33.136995754523141 ], [ 11.432253452203696, 32.368903103152874 ], [ 9.950225050505082, 31.376069647745258 ], [ 9.970017124072854, 30.53932485607524 ], [ 9.482139926805274, 30.307556057246188 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TR\", \"name\": \"Turkey\", \"type\": \"Sovereign country\", \"postal\": \"TR\", \"admin\": \"Turkey\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 36.913127068842158, 41.335358384764305 ], [ 38.347664829264517, 40.948586127275718 ], [ 40.373432651538252, 41.013672593747344 ], [ 41.554084100110714, 41.535656236327611 ], [ 42.619548781104555, 41.583172715819927 ], [ 43.582745802592711, 41.092143256182567 ], [ 43.65643639504097, 40.253563951166171 ], [ 44.793989699082005, 39.713002631177034 ], [ 44.109225294782362, 39.428136298168056 ], [ 44.421402622257602, 38.281281236314527 ], [ 44.225755649600529, 37.971584377589352 ], [ 44.772699008977753, 37.170444647768448 ], [ 44.293451775902867, 37.00151439060636 ], [ 42.779125604021857, 37.385263576805812 ], [ 39.522580193852519, 36.716053778626019 ], [ 36.739494256341374, 36.817520453431115 ], [ 36.68538903173183, 36.259699205056506 ], [ 36.149762811026591, 35.821534735653671 ], [ 35.782084995269855, 36.274995429014922 ], [ 36.160821567537056, 36.650605577128374 ], [ 34.714553256984374, 36.795532131490916 ], [ 34.02689497247647, 36.219960028623973 ], [ 32.509158156064103, 36.1075637883892 ], [ 31.699595167779563, 36.644275214172609 ], [ 30.621624790171069, 36.677864895162315 ], [ 30.391096225717121, 36.26298065850699 ], [ 29.699975620245567, 36.144357408181008 ], [ 28.732902866335394, 36.676831366516438 ], [ 27.64118655773737, 36.658822129862756 ], [ 26.318218214633049, 38.208133246405396 ], [ 26.804700148228733, 38.985760199533559 ], [ 26.170785353304382, 39.463612168936464 ], [ 27.280019972449395, 40.420013739578309 ], [ 28.81997765474722, 40.460011298172219 ], [ 29.240003696415584, 41.219990749672689 ], [ 31.145933872204438, 41.087621568357065 ], [ 33.513282911927519, 42.018960069337311 ], [ 35.16770389175187, 42.040224921225445 ], [ 36.913127068842158, 41.335358384764305 ] ] ], [ [ [ 27.192376743282409, 40.690565700842455 ], [ 26.35800906749779, 40.151993923496491 ], [ 26.056942172965336, 40.824123440100749 ], [ 26.604195590936285, 41.56211456966102 ], [ 26.117041863720829, 41.826904608724561 ], [ 27.135739373490509, 42.141484890301314 ], [ 27.996720411905414, 42.007358710287775 ], [ 28.115524529744448, 41.622886054036286 ], [ 28.98844282401879, 41.299934190428189 ], [ 27.192376743282409, 40.690565700842455 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TW\", \"name\": \"Taiwan\", \"type\": \"Sovereign country\", \"postal\": \"TW\", \"admin\": \"Taiwan\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 121.77781782438993, 24.3942735865194 ], [ 121.17563235889274, 22.790857245367167 ], [ 120.74707970589623, 21.970571397382113 ], [ 120.1061885926124, 23.556262722258236 ], [ 121.49504438688878, 25.295458889257386 ], [ 121.95124393116146, 24.997595933527037 ], [ 121.77781782438993, 24.3942735865194 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"TZ\", \"name\": \"Tanzania\", \"type\": \"Sovereign country\", \"postal\": \"TZ\", \"admin\": \"United Republic of Tanzania\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 33.903711197104599, -0.95 ], [ 37.69869, -3.09699 ], [ 37.7669, -3.67712 ], [ 39.20222, -4.67677 ], [ 38.74054, -5.90895 ], [ 38.79977, -6.47566 ], [ 39.44, -6.839999999999861 ], [ 39.18652, -8.48551 ], [ 40.31659, -10.317099999999868 ], [ 39.521, -10.89688 ], [ 36.514081658684404, -11.720938002166747 ], [ 34.559989047999466, -11.520020033415847 ], [ 34.28, -10.16 ], [ 33.73972, -9.41715 ], [ 30.74, -8.34 ], [ 30.2, -7.08 ], [ 29.62, -6.52 ], [ 29.339997592900374, -4.499983412294114 ], [ 29.753512404099865, -4.452389418153302 ], [ 30.75224, -3.35931 ], [ 30.46967, -2.41383 ], [ 30.758308953583139, -2.287250257988376 ], [ 30.816134881317851, -1.698914076345375 ], [ 30.419104852019302, -1.134659112150416 ], [ 33.903711197104599, -0.95 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"UG\", \"name\": \"Uganda\", \"type\": \"Sovereign country\", \"postal\": \"UG\", \"admin\": \"Uganda\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 31.86617, -1.02736 ], [ 29.579466180141026, -1.341313164885605 ], [ 29.875778842902434, 0.597379868976361 ], [ 31.17414920423596, 2.204465236821307 ], [ 30.77332, 2.339890000000139 ], [ 30.83385, 3.50917 ], [ 31.24556, 3.7819 ], [ 31.88145, 3.55827 ], [ 33.3900000000001, 3.79 ], [ 34.005, 4.249884947362148 ], [ 35.03599, 1.90584 ], [ 33.893568969667001, 0.109813537861839 ], [ 33.903711197104599, -0.95 ], [ 31.86617, -1.02736 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"UA\", \"name\": \"Ukraine\", \"type\": \"Sovereign country\", \"postal\": \"UA\", \"admin\": \"Ukraine\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 31.785998162571587, 52.101677964885454 ], [ 33.752699822735707, 52.335074571331695 ], [ 34.391730584457008, 51.768881740925792 ], [ 34.224815708154267, 51.255993150428957 ], [ 35.02218305841788, 51.207572333371459 ], [ 35.356116163887947, 50.577197374059061 ], [ 36.626167840325337, 50.225590928745135 ], [ 37.393459506995072, 50.383953355503593 ], [ 38.010631137856905, 49.915661526074629 ], [ 40.069058465339111, 49.601055406281702 ], [ 39.674663934087533, 48.783818467801879 ], [ 39.738277622238826, 47.89893707945199 ], [ 38.7705847511412, 47.825608222029814 ], [ 38.255112339029751, 47.546400458356814 ], [ 38.22353803889942, 47.102189846375886 ], [ 34.962341749823878, 46.273196519549643 ], [ 35.020787794745985, 45.651218980484657 ], [ 36.529997999830158, 45.469989732437057 ], [ 36.33471276219916, 45.113215643893966 ], [ 33.882511020652885, 44.361478583344073 ], [ 33.326420932760044, 44.564877020844889 ], [ 33.546924269349461, 45.03477081967489 ], [ 32.454174432105503, 45.327466132176077 ], [ 33.588162062318389, 45.851568508480241 ], [ 31.744140252415178, 46.333347886737386 ], [ 31.675307244602408, 46.706245022155542 ], [ 30.748748813609101, 46.583100084004002 ], [ 29.603289015427436, 45.293308010431126 ], [ 28.233553501099042, 45.488283189468376 ], [ 28.862972446414062, 46.437889309263831 ], [ 30.024658644335375, 46.42393667254504 ], [ 28.670891147585166, 48.118148505234103 ], [ 27.522537469195157, 48.467119452501116 ], [ 24.866317172960578, 47.737525743188314 ], [ 23.142236362406805, 48.096341050806949 ], [ 22.710531447040495, 47.882193915389408 ], [ 22.085608351334855, 48.422264309271789 ], [ 22.776418898212626, 49.027395331409622 ], [ 22.518450148211603, 49.476773586619743 ], [ 23.922757195743262, 50.424881089878753 ], [ 23.527070753684374, 51.57845408793024 ], [ 25.327787713327009, 51.910656032918553 ], [ 30.555117221811457, 51.319503485715657 ], [ 30.927549269338982, 52.04235342061439 ], [ 31.785998162571587, 52.101677964885454 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"UY\", \"name\": \"Uruguay\", \"type\": \"Sovereign country\", \"postal\": \"UY\", \"admin\": \"Uruguay\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -57.625133429582959, -30.216294854454262 ], [ -56.976025763564735, -30.109686374636127 ], [ -53.787951626182192, -32.047242526987624 ], [ -53.209588995971544, -32.727666110974724 ], [ -53.650543992718099, -33.20200408298183 ], [ -53.373661668498244, -33.768377780900764 ], [ -53.806425950726535, -34.396814874002231 ], [ -54.93586605489773, -34.952646579733624 ], [ -56.215297003796067, -34.859835707337417 ], [ -57.81786068381551, -34.462547295877499 ], [ -58.427074144104388, -33.909454441057576 ], [ -57.625133429582959, -30.216294854454262 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"UZ\", \"name\": \"Uzbekistan\", \"type\": \"Sovereign country\", \"postal\": \"UZ\", \"admin\": \"Uzbekistan\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 66.51860680528867, 37.362784328758792 ], [ 66.546150343700219, 37.974684963526869 ], [ 64.170223016216767, 38.892406724598246 ], [ 62.374260288345006, 40.053886216790389 ], [ 61.882714064384693, 41.084856879229406 ], [ 60.465952996670694, 41.220326646482548 ], [ 60.083340691981675, 41.425146185871405 ], [ 59.976422153569786, 42.223081976890207 ], [ 58.62901085799146, 42.751551011723052 ], [ 56.932215203687804, 41.826026109375604 ], [ 57.096391229079103, 41.322310085610567 ], [ 55.968191359282912, 41.308641669269363 ], [ 55.928917270741096, 44.995858466159113 ], [ 58.503127068928471, 45.586804307632832 ], [ 61.058319940032447, 44.405816962250512 ], [ 62.01330040878625, 43.504476630215649 ], [ 64.900824415959278, 43.728080552742583 ], [ 66.098012322865088, 42.997660020513095 ], [ 66.023391554635623, 41.994646307943981 ], [ 66.510648634715722, 41.987644151368443 ], [ 66.714047072216516, 41.1684435084615 ], [ 67.98585574735182, 41.13599070898222 ], [ 68.25989586779562, 40.662324530594901 ], [ 68.632482944620023, 40.668680731766813 ], [ 69.07002729683532, 41.38424428971237 ], [ 70.962314894499144, 42.266154283205495 ], [ 71.259247674448233, 42.167710679689463 ], [ 70.42002241402821, 41.519998277343142 ], [ 71.157858514291604, 41.143587144529121 ], [ 71.870114780570475, 41.392900092121266 ], [ 73.05541710804917, 40.866033026689465 ], [ 71.77487511585656, 40.145844428053778 ], [ 70.601406691372688, 40.218527330072291 ], [ 70.666622348925046, 40.960213324541414 ], [ 69.329494663372827, 40.727824408524853 ], [ 68.536416456989429, 39.533452867178937 ], [ 67.701428664017357, 39.580478420564532 ], [ 67.442219679641312, 39.140143541005486 ], [ 68.176025018185925, 38.901553453113905 ], [ 68.392032505165957, 38.157025254868742 ], [ 67.829999627559516, 37.144994004864685 ], [ 66.51860680528867, 37.362784328758792 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"VE\", \"name\": \"Venezuela\", \"type\": \"Sovereign country\", \"postal\": \"VE\", \"admin\": \"Venezuela\", \"sales_rgn\": 2 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ -71.331583624950298, 11.776284084515808 ], [ -71.947049933546509, 11.423282375530022 ], [ -71.633063930941091, 10.446494452349029 ], [ -72.074173956984509, 9.865651353388373 ], [ -71.695644090446535, 9.072263088411248 ], [ -71.264559292267734, 9.137194525585983 ], [ -71.03999935574339, 9.859992784052409 ], [ -71.400623338492238, 10.968969021036015 ], [ -70.155298834906517, 11.375481675660041 ], [ -70.29384334988103, 11.846822414594214 ], [ -69.943244594996827, 12.162307033736099 ], [ -69.584300096297468, 11.459610907431212 ], [ -68.882999233664449, 11.443384507691563 ], [ -68.194126552997631, 10.554653225135922 ], [ -66.227864142507997, 10.648626817258688 ], [ -64.89045223657817, 10.077214667191299 ], [ -64.318006557864948, 10.64141795495398 ], [ -61.880946010980196, 10.715625311725104 ], [ -62.730118984616411, 10.420268662960906 ], [ -62.388511928950976, 9.94820445397464 ], [ -61.58876746280194, 9.873066921422264 ], [ -60.830596686431718, 9.381339829948942 ], [ -60.671252407459733, 8.580174261911878 ], [ -59.758284878159195, 8.367034816924047 ], [ -60.5505879380582, 7.779602972846178 ], [ -60.637972785063766, 7.414999904810856 ], [ -60.295668097562398, 7.043911444522919 ], [ -61.159336310456482, 6.696077378766319 ], [ -61.410302903881956, 5.959068101419618 ], [ -60.601179165271944, 4.91809804933213 ], [ -63.093197597899106, 3.770571193858785 ], [ -64.816064012294021, 4.056445217297423 ], [ -64.368494432214106, 3.797210394705246 ], [ -64.269999152265797, 2.497005520025567 ], [ -63.368788011311665, 2.200899562993129 ], [ -65.548267381437569, 0.78925446207603 ], [ -66.325765143484958, 0.724452215982012 ], [ -67.809938117123707, 2.820655015469569 ], [ -67.303173183853445, 3.31845408773718 ], [ -67.823012254493548, 4.503937282728899 ], [ -67.341439581965574, 6.095468044454023 ], [ -69.389479946557117, 6.099860541198837 ], [ -70.093312954372422, 6.96037649172311 ], [ -71.960175747348643, 6.991614895043539 ], [ -72.444487270788073, 7.423784898300482 ], [ -72.439862230097958, 8.405275376820029 ], [ -72.788729824500393, 9.085027167187334 ], [ -73.304951544880055, 9.151999823437606 ], [ -72.905286017534706, 10.450344346554772 ], [ -71.973921678338286, 11.60867157637712 ], [ -71.331583624950298, 11.776284084515808 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"VN\", \"name\": \"Vietnam\", \"type\": \"Sovereign country\", \"postal\": \"VN\", \"admin\": \"Vietnam\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 108.05018029178294, 21.552379869060118 ], [ 106.71506798709009, 20.696850694252021 ], [ 105.66200564984631, 19.05816518806057 ], [ 107.36195356651974, 16.697456569887052 ], [ 108.87710656131748, 15.27669057867044 ], [ 109.33526981001722, 13.426028347217724 ], [ 109.20013593957398, 11.666859239137764 ], [ 105.15826378786511, 8.599759629750494 ], [ 104.79518517458239, 9.241038316276502 ], [ 105.07620161338562, 9.918490505406808 ], [ 104.33433475140347, 10.48654368737523 ], [ 106.24967003786946, 10.961811835163587 ], [ 105.81052371625313, 11.567614650921229 ], [ 107.49140302941089, 12.337205918827948 ], [ 107.5645251811039, 15.202173163305559 ], [ 107.3127059265456, 15.908538316303179 ], [ 105.09459842328152, 18.66697459561108 ], [ 103.89653201702671, 19.265180975821806 ], [ 104.8225736836971, 19.886641750563882 ], [ 104.43500044150805, 20.758733221921531 ], [ 103.20386111858645, 20.766562201413748 ], [ 102.17043582561358, 22.464753119389304 ], [ 104.47685835166448, 22.819150092046968 ], [ 105.32920942588663, 23.352063300056912 ], [ 106.72540327354847, 22.794267889898421 ], [ 106.56727339073532, 22.218204860924772 ], [ 107.04342003787264, 21.811898912029914 ], [ 108.05018029178294, 21.552379869060118 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"VU\", \"name\": \"Vanuatu\", \"type\": \"Sovereign country\", \"postal\": \"VU\", \"admin\": \"Vanuatu\", \"sales_rgn\": 4 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ 167.84487674384511, -16.466333103097156 ], [ 167.5151811058229, -16.59784962327997 ], [ 167.21680138576963, -15.891846205308454 ], [ 167.84487674384511, -16.466333103097156 ] ] ], [ [ [ 167.10771243720151, -14.933920179913954 ], [ 167.27002811103026, -15.740020847234874 ], [ 166.79315799384088, -15.668810723536723 ], [ 166.62913699774649, -14.626497084209603 ], [ 167.10771243720151, -14.933920179913954 ] ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"YE\", \"name\": \"Yemen\", \"type\": \"Sovereign country\", \"postal\": \"YE\", \"admin\": \"Yemen\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 53.108572625547509, 16.651051133688952 ], [ 52.385205926325881, 16.382411200419654 ], [ 52.1681649107, 15.597420355689948 ], [ 49.57457645040315, 14.708766587782748 ], [ 48.679230584514158, 14.00320241948566 ], [ 45.625050083199881, 13.290946153206763 ], [ 44.989533318874415, 12.69958690027471 ], [ 44.175112745954493, 12.585950425664876 ], [ 43.482958611837127, 12.636800035040084 ], [ 42.60487267433362, 15.213335272680595 ], [ 43.380794305196105, 17.579986680567671 ], [ 43.791518589051918, 17.319976711491108 ], [ 46.749994337761649, 17.283338120996177 ], [ 47.000004917189756, 16.949999294497445 ], [ 47.466694777217633, 17.116681626854884 ], [ 48.183343540241339, 18.166669216377315 ], [ 49.116671583864871, 18.616667588774945 ], [ 52.000009800022241, 19.000003363516058 ], [ 53.108572625547509, 16.651051133688952 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ZA\", \"name\": \"South Africa\", \"type\": \"Sovereign country\", \"postal\": \"ZA\", \"admin\": \"South Africa\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 31.521001417778876, -29.257386976846256 ], [ 30.055716180142781, -31.140269463832958 ], [ 27.464608188595975, -33.226963799778801 ], [ 25.909664340933489, -33.667040297176399 ], [ 25.780628289500697, -33.944646091448341 ], [ 22.574157342222236, -33.864082533505311 ], [ 19.616405063564571, -34.819166355123713 ], [ 18.377410922934615, -34.136520684548067 ], [ 17.925190463948439, -32.611290785453427 ], [ 18.247909783611192, -32.42913136162457 ], [ 18.221761508871481, -31.661632989225669 ], [ 16.344976840895242, -28.576705010697701 ], [ 16.824017368240902, -28.08216155366447 ], [ 17.387497185951503, -28.783514092729781 ], [ 18.464899122804752, -29.045461928017279 ], [ 19.894734327888614, -28.461104831660776 ], [ 19.895767856534434, -24.767790215760591 ], [ 20.758609246511838, -25.86813648855145 ], [ 20.889609002371738, -26.828542982695915 ], [ 21.605896030369394, -26.726533705351756 ], [ 23.312096795350186, -25.26868987396572 ], [ 24.211266717228796, -25.670215752873574 ], [ 25.664666375437719, -25.486816094669713 ], [ 25.941652052522159, -24.696373386333221 ], [ 26.485753208123299, -24.616326592713104 ], [ 28.017235955525251, -22.827753594659079 ], [ 29.839036899542972, -22.102216485281176 ], [ 31.191409132621288, -22.251509698172399 ], [ 31.930588820124253, -24.369416599222539 ], [ 31.83777794772806, -25.843331801051349 ], [ 31.044079624157149, -25.731452325139443 ], [ 30.68596194837448, -26.743845310169533 ], [ 31.282773064913329, -27.285879408478998 ], [ 31.86806033705108, -27.177927341421277 ], [ 32.071665480281069, -26.733820082304909 ], [ 32.830120477028885, -26.742191664336197 ], [ 32.462132602678452, -28.301011244420557 ], [ 31.521001417778876, -29.257386976846256 ] ], [ [ 28.978262566857243, -28.955596612261711 ], [ 28.541700066855498, -28.647501722937569 ], [ 28.074338413207784, -28.851468601193588 ], [ 26.999261915807637, -29.875953871379984 ], [ 27.749397006956485, -30.645105889612225 ], [ 28.107204624145425, -30.545732110314951 ], [ 28.848399692507741, -30.070050551068256 ], [ 29.325166456832591, -29.257386976846256 ], [ 28.978262566857243, -28.955596612261711 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ZM\", \"name\": \"Zambia\", \"type\": \"Sovereign country\", \"postal\": \"ZM\", \"admin\": \"Zambia\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 32.759375441221323, -9.23059905358906 ], [ 33.485687697083591, -10.525558770391115 ], [ 33.114289178201915, -11.607198174692314 ], [ 33.306422153463075, -12.435778090060218 ], [ 32.688165317523129, -13.712857761289277 ], [ 33.214024692525214, -13.971860039936153 ], [ 30.17948123548183, -14.796099134991529 ], [ 30.27425581230511, -15.507786960515213 ], [ 28.947463413211267, -16.04305144619444 ], [ 27.044427117630732, -17.938026218337434 ], [ 25.264225701608012, -17.736539808831417 ], [ 24.682349074001507, -17.353410739819473 ], [ 23.215048455506064, -17.523116143465984 ], [ 21.887842644953874, -16.08031015387688 ], [ 21.933886346125917, -12.898437188369359 ], [ 24.016136508894675, -12.911046237848574 ], [ 23.912215203555718, -10.926826267137514 ], [ 24.257155389103989, -10.951992689663657 ], [ 24.314516228947952, -11.26282642989927 ], [ 25.418118116973204, -11.330935967659961 ], [ 25.752309604604733, -11.784965101776358 ], [ 26.553087599399618, -11.924439792532127 ], [ 27.164419793412463, -11.608748467661075 ], [ 27.388798862423783, -12.132747491100666 ], [ 28.155108676879987, -12.272480564017897 ], [ 28.934285922976837, -13.248958428605135 ], [ 29.699613885219492, -13.257226657771831 ], [ 29.61600141777123, -12.178894545137311 ], [ 29.34154788586909, -12.360743910372413 ], [ 28.372253045370428, -11.793646742401393 ], [ 28.673681674928929, -9.605924981324932 ], [ 28.449871046672826, -9.164918308146085 ], [ 28.734866570762502, -8.526559340044578 ], [ 30.346086053190817, -8.238256524288218 ], [ 32.759375441221323, -9.23059905358906 ] ] ] } },\r\n{ \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-0 country\", \"iso_a2\": \"ZW\", \"name\": \"Zimbabwe\", \"type\": \"Sovereign country\", \"postal\": \"ZW\", \"admin\": \"Zimbabwe\", \"sales_rgn\": 3 }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 31.191409132621288, -22.251509698172399 ], [ 29.43218834810904, -22.091312758067588 ], [ 28.021370070108617, -21.485975030200585 ], [ 27.724747348753255, -20.499058526290391 ], [ 26.164790887158485, -19.293085625894939 ], [ 25.264225701608012, -17.736539808831417 ], [ 27.044427117630732, -17.938026218337434 ], [ 28.947463413211267, -16.04305144619444 ], [ 30.27425581230511, -15.507786960515213 ], [ 30.338954705534544, -15.880839125230246 ], [ 31.17306399915768, -15.860943698797874 ], [ 32.847638787575846, -16.713398125884616 ], [ 32.65974327976258, -20.304290052982317 ], [ 31.191409132621288, -22.251509698172399 ] ] ] } }\r\n]\r\n}\r\n","import './assets/css/index.less';\nimport * as TWEEN from 'tween';\nimport Global from './components/global';\nvar gl, timeout;\nconst main = function () {\n  //console.log(TWEEN);\n  gl = new Global({\n    el: 'id-test',\n    isMove: true\n  });\n  if(!gl.animate) {\n    gl.animate = () => {\n      TWEEN.update();\n      gl.render();\n    }\n    gl.load();\n  }\n  document.getElementById('id0').onclick = function() {\n    new TWEEN.Tween(gl).to({interpolatePos: 0.0}, 800).onUpdate(function() {\n      gl.geometryNeedsUpdate = true;\n    }).onComplete(function() {\n      gl.geometryNeedsUpdate = false;\n      gl.isMode = 'id0';\n    }).easing(TWEEN.Easing.Cubic.Out).start();\n  }\n  document.getElementById('id1').onclick = function() {\n    new TWEEN.Tween(gl).to({interpolatePos: 1.0}, 800).onUpdate(function() {\n      gl.geometryNeedsUpdate = true;\n    }).onComplete(function() {\n      gl.geometryNeedsUpdate = false;\n      gl.isMode = 'id1';\n    }).easing(TWEEN.Easing.Cubic.Out).start();\n  }\n  document.getElementById('id1').onclick();\n  gl.isMode = 'id1';\n  // gl.flight([{\n  //   start: {\n  //     lat: -27,\n  //     lon: 43\n  //   },\n  //   end: {\n  //     lat: 53,\n  //     lon: -98\n  //   }\n  // }, {\n  //   start: {\n  //     lat: -13,\n  //     lon: -92\n  //   },\n  //   end: {\n  //     lat: 53,\n  //     lon: -98\n  //   }\n  // }]);\n  handle();\n}\nconst handle = function() {\n  clearTimeout(timeout);\n  if(gl.isMove) {\n    if(gl.isMode == 'id1') {\n      document.getElementById('id0').onclick();\n    } else if(gl.isMode == 'id0') {\n      document.getElementById('id1').onclick();\n    }\n  }\n  timeout = setTimeout(handle, 3000);\n}\nmain();\n","import * as THREE from 'three';\r\n//import './TrackballControls';\r\nimport TrackballControls from 'three-trackballcontrols';\r\nimport Geo from './geo';\r\nexport default class Gobal {\r\n  constructor(props) {\r\n    this.Geo = Geo;\r\n    this.radius = 100;\r\n    this.interpolatePos = 0.0;\r\n    this.countries = [];\r\n    Object.assign(this, props);\r\n    this.wrap = document.getElementById(this.el);\r\n    this.el = document.createElement(\"div\");\r\n    this.el.style = \"user-select: none;width: 100%;height: 100%;\";\r\n    this.wrap.appendChild(this.el);\r\n    this.containt = document.createElement(\"div\");\r\n    this.containt.style = \"user-select: none;\";\r\n    this.wrap.appendChild(this.containt);\r\n    if(!this.point) {\r\n      this.point = new THREE.Mesh(new THREE.CubeGeometry(0.5, 0.5, 1, 1, 1, 1));\r\n    }\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      preserveDrawingBuffer: this.mode == 1 ? true : false,\r\n      antialias: false,\r\n      alpha: true\r\n    });\r\n    var w = this.el.offsetWidth || window.innerWidth,\r\n    h = this.el.offsetHeight || window.innerHeight;\r\n    this.renderer.setSize(w, h);\r\n    this.renderer.autoClear = false;\r\n    this.renderer.sortObjects = false;    \r\n    this.renderer.generateMipmaps = false;          \r\n    this.el.appendChild(this.renderer.domElement);\r\n    this.scene = new THREE.Scene();\r\n    this.scene.matrixAutoUpdate = false;\r\n    this.camera = new THREE.PerspectiveCamera(45, w / h, 1, 2000);\r\n    this.camera.position.x = 0;\r\n    this.camera.position.y = 0;\r\n    this.camera.position.z = 300;\r\n    this.scene.add(this.camera);\r\n    this.rotating = new THREE.Object3D();\r\n    //this.camera.position.x = 80;\r\n    this.scene.add(this.rotating);\r\n    this.visualizationMesh = new THREE.Object3D();\r\n    this.rotating.add(this.visualizationMesh);\r\n    this.createLight();\r\n    \r\n    // var geometry = new THREE.SphereGeometry(this.radius, 32, 32);\r\n    // //geometry.applyMatrix( new THREE.Matrix4().makeScale(1.0, 1.0, 1.5));\r\n    // //For ellipsoid testing: geometry.applyMatrix( new THREE.Matrix4().makeScale( 1.0, 1.0, 1.5 ) ); Try 6378137.0, 6356752.314140\r\n    // var material = new THREE.MeshPhongMaterial({\r\n    //   wireframe: true,\r\n    //   transparent: true\r\n    // });\r\n    // var sphere = new THREE.Mesh(geometry, material);\r\n    // this.scene.add(sphere);\r\n    \r\n    //this.test();\r\n    \r\n    //this.createGlobal();\r\n    //this.createBox();\r\n    \r\n    this.createMap();\r\n    \r\n    this.controls = new TrackballControls(this.camera, this.renderer.domElement, this);\r\n    // this.controls.rotateSpeed = 0.5;\r\n    // this.controls.zoomSpeed = 1.0;\r\n    // this.controls.panSpeed = 0.25;\r\n    // this.controls.noRotate = false;\r\n    // this.controls.noZoom = false;\r\n    // this.controls.noPan = true;\r\n    // this.controls.staticMoving = false;\r\n    // this.controls.dynamicDampingFactor = 0.2;\r\n  }\r\n  flight(data) {\r\n    if (this.fls !== undefined && this.fls.length) {\r\n      for(var i = 0; i < this.fls.length; i++) {\r\n        this.rotating.remove(this.fls[i]);\r\n        var o, ol, zobject;\r\n        if (this.fls[i] instanceof THREE.Mesh || this.fls[i] instanceof THREE.ParticleSystem) {\r\n          for (o = this.scene.__webglObjects.length - 1; o >= 0; o--) {\r\n            zobject = this.scene.__webglObjects[o].object;\r\n            if (this.fls[i] == zobject) {\r\n              this.scene.__webglObjects.splice(o, 1);\r\n            }\r\n          }\r\n        }\r\n        this.fls[i] = null;\r\n      }\r\n    }\r\n    this.fls = [];\r\n    if(!data || !data.length) {\r\n      return;\r\n    }\r\n    for(var i = 0; i < data.length; i++) {\r\n      var s_lat = parseInt(data[i].start.lat, 10);\r\n      var s_lon = parseInt(data[i].start.lon, 10);\r\n      var e_lat = parseInt(data[i].end.lat, 10);\r\n      var e_lon = parseInt(data[i].end.lon, 10);\r\n\r\n      var sv = {\r\n        lat: s_lat,\r\n        lon: s_lon,\r\n        name: data[i].start.name,\r\n        value: data[i].start.value || 0,\r\n        center: new THREE.Vector3(\r\n          -this.radius * Math.sin((90 - s_lat) * Math.PI / 180) * Math.cos((s_lon - 180) * Math.PI / 180), \r\n          this.radius * Math.cos((90 - s_lat) * Math.PI / 180), \r\n          this.radius * Math.sin((90 - s_lat) * Math.PI / 180) * Math.sin((s_lon - 180) * Math.PI / 180)\r\n        )\r\n      };\r\n\r\n      var ev = {\r\n        lat: e_lat,\r\n        lon: e_lon,\r\n        name: data[i].end.name,\r\n        value: data[i].end.value || 0,\r\n        center: new THREE.Vector3(\r\n          -this.radius * Math.sin((90 - e_lat) * Math.PI / 180) * Math.cos((e_lon - 180) * Math.PI / 180), \r\n          this.radius * Math.cos((90 - e_lat) * Math.PI / 180), \r\n          this.radius * Math.sin((90 - e_lat) * Math.PI / 180) * Math.sin((e_lon - 180) * Math.PI / 180)\r\n        )\r\n      }\r\n      var attributes = {\r\n        pos: {\r\n          type: 'f',\r\n          value: []\r\n        },\r\n        max: {\r\n          type: 'f',\r\n          value: []\r\n        }\r\n      }, \r\n      number, \r\n      linesGeo = new THREE.Geometry(), \r\n      start_lat = sv.lat, \r\n      start_lon = sv.lon, \r\n      end_lat = ev.lat, \r\n      end_lon = ev.lon, \r\n      max_height = data[i].style != undefined && data[i].style.height != undefined ? data[i].style.height : this.flightHeight, \r\n      points = [], \r\n      G = Math.random().toFixed(2) * 300 + 300;\r\n      //var points = [];\r\n      number = G;\r\n      for (var j = 0; j < G; j++) {\r\n        var arc_angle = j * 180.0 / G;\r\n        var arc_radius = this.radius + (Math.sin(arc_angle * Math.PI / 180.0)) * max_height;\r\n        var s_lat = start_lat * Math.PI / 180.0;\r\n        var s_lon = start_lon * Math.PI / 180.0;\r\n        var e_lat = end_lat * Math.PI / 180.0;\r\n        var e_lon = end_lon * Math.PI / 180.0;\r\n        var d = 2 * Math.asin(Math.sqrt(Math.pow((Math.sin((s_lat - e_lat) / 2)), 2) + Math.cos(s_lat) * Math.cos(e_lat) * Math.pow(Math.sin((s_lon - e_lon) / 2), 2)));\r\n        var A = Math.sin((1 - j / G) * d) / Math.sin(d);\r\n        var B = Math.sin(j / G * d) / Math.sin(d);\r\n        var x = A * Math.cos(s_lat) * Math.cos(s_lon) + B * Math.cos(e_lat) * Math.cos(e_lon);\r\n        var y = A * Math.cos(s_lat) * Math.sin(s_lon) + B * Math.cos(e_lat) * Math.sin(e_lon);\r\n        var z = A * Math.sin(s_lat) + B * Math.sin(e_lat);\r\n        var lat = Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))) * 180 / Math.PI;\r\n        var lon = Math.atan2(y, x) * 180 / Math.PI;\r\n        linesGeo.vertices.push(new THREE.Vector3(\r\n          -arc_radius * Math.sin((90 - lat) * Math.PI / 180) * Math.cos((lon - 180) * Math.PI / 180), \r\n          arc_radius * Math.cos((90 - lat) * Math.PI / 180), \r\n          arc_radius * Math.sin((90 - lat) * Math.PI / 180) * Math.sin((lon - 180) * Math.PI / 180)\r\n        ));\r\n        attributes.pos.value.push(j);\r\n        attributes.max.value.push(G);\r\n      }\r\n      var uniforms = {\r\n        size: {\r\n          type: \"f\",\r\n          value: parseFloat(data[i].style != undefined && data[i].style.weight != undefined ?  data[i].style.weight : this.flightWeight, 10)\r\n        },\r\n        c: {\r\n          type: \"f\",\r\n          value: 1.0\r\n        },\r\n        p: {\r\n          type: \"f\",\r\n          value: 1.4\r\n        },\r\n        glowColor: {\r\n          type: \"c\",\r\n          value: new THREE.Color(0xffffff)\r\n        },\r\n        viewVector: {\r\n          type: \"v3\",\r\n          value: this.camera.position\r\n        },\r\n        time: {\r\n          type: \"f\",\r\n          value: 0.0\r\n        },\r\n        leng: {\r\n          type: \"f\",\r\n          value: 80.0\r\n        },\r\n        color: {\r\n          type: \"c\",\r\n          value: new THREE.Color(data[i].style != undefined && data[i].style.color != undefined ? data[i].style.color : this.flightColor)\r\n        },\r\n        pColor: {\r\n          type: \"c\",\r\n          value: new THREE.Color(0xffffff)\r\n        },\r\n        /*sColor: {\r\n          type: \"c\",\r\n          value: new THREE.Color(0xC91224)\r\n        },*/\r\n        texture: {\r\n          type: \"t\",\r\n          value: 0,\r\n          texture: THREE.ImageUtils.loadTexture('images/earth/particle.png')\r\n        }\r\n      };\r\n      var shaderMaterial = new THREE.ShaderMaterial({\r\n        attributes: attributes,\r\n        uniforms: uniforms,\r\n        vertexShader: `\r\n          uniform vec3 viewVector;\r\n          uniform float c;\r\n          uniform float p;\r\n          uniform float size;\r\n          varying float intensity;\r\n          attribute float pos;\r\n          attribute float max;\r\n          varying float vMax;\r\n          varying float vPos;\r\n          varying vec3 vNormal;\r\n          uniform float leng;\r\n          uniform float time;\r\n          void main() {\r\n            vPos = pos;\r\n            vMax = max;\r\n            if(vPos >= time && vPos <= time + leng) {\r\n              //if(vPos >= time + leng - 30.0 && vPos <= time + leng) {\r\n                gl_PointSize = size;\r\n              //} else {\r\n                //gl_PointSize = 4.0;\r\n              //}\r\n            } else {\r\n              gl_PointSize = 4.0;\r\n            }\r\n            if(vPos == 15.0 || vPos == vMax - 15.0) {\r\n              gl_PointSize = 30.0;\r\n            }\r\n            vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n            gl_Position = projectionMatrix * mvPosition;\r\n          }\r\n        `,\r\n        fragmentShader: `\r\n          uniform float time;\r\n          uniform float leng;\r\n          uniform vec3 color;\r\n          varying float vPos;\r\n          varying float vMax;\r\n          varying vec3 vNormal;\r\n          uniform sampler2D texture;\r\n          uniform vec3 pColor;\r\n          uniform vec3 glowColor;\r\n          //uniform vec3 sColor;\r\n          varying float intensity;\r\n          void main() {\r\n            if(vPos >= time && vPos <= time + leng) {\r\n              //if(vPos >= time + leng - 30.0 && vPos <= time + leng) {\r\n                gl_FragColor = vec4(color * glowColor, 1.0);\r\n                gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\r\n              //}\r\n            } else {\r\n              gl_FragColor = vec4(color * glowColor, 0.22);\r\n              gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\r\n            }\r\n            if(vPos == 15.0 || vPos == vMax - 15.0) {\r\n              gl_FragColor = vec4(color * glowColor, 1.0);\r\n              gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\r\n            }\r\n          }\r\n        `,\r\n        blending: THREE.AdditiveBlending,\r\n        depthTest: true,\r\n        depthWrite: false,\r\n        transparent: true\r\n      });\r\n      var points = new THREE.ParticleSystem(linesGeo, shaderMaterial);\r\n      this.rotating.add(points);\r\n      this.fls.push(points);\r\n      var self = this;\r\n      var speed = data[i].style != undefined && data[i].style.speed != undefined ? data[i].style.speed : this.flightSpeed;\r\n      points.update = function() {\r\n        if(this.material.uniforms.time.value >= this.geometry.vertices.length) {\r\n          this.material.uniforms.time.value = 0;\r\n        } else {\r\n          this.material.uniforms.time.value += parseInt(speed, 10);\r\n        }\r\n        this.geometry.verticesNeedUpdate = true;\r\n      }\r\n    }\r\n  }\r\n  createMap() {\r\n    var base = new THREE.Geometry();\r\n    var count = 0;\r\n    for(var i = 0; i < this.Geo.features.length; i++) {\r\n      var gm = this.Geo.features[i].geometry;\r\n      var coordinates = gm.coordinates;\r\n      if(gm.type == 'Polygon') {\r\n        var path = [];\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            var v = this.createVector3('plane', coordinates[a][b][0], coordinates[a][b][1]);\r\n            path.push(v);\r\n            count++;\r\n          }\r\n        }\r\n        var shape = new THREE.Shape(path);\r\n        var geometry = new THREE.ShapeGeometry(shape);\r\n        //this.countries[i].geometry = geometry;\r\n        //base.merge(geometry);\r\n        //colors.push(new THREE.MeshBasicMaterial({color: 0x6b7e00}));\r\n        //var mbt = i % 2 == 0 ? new THREE.MeshBasicMaterial({color: 0xb3c400}) : new THREE.MeshBasicMaterial({color: 0x6b7e00});\r\n        //var mesh = new THREE.Mesh(geometry, mbt);\r\n        //this.scene.add(mesh);\r\n        this.countries.push({\r\n          properties: this.Geo.features[i].properties,\r\n          geometry: geometry,\r\n          geometry2D: geometry.clone(),\r\n          geometry3D: geometry.clone(),\r\n          color: 0x33C9FB\r\n        });\r\n        // var mesh = new THREE.Line(geometry, new THREE.MeshBasicMaterial({color: 0xb3c400}));\r\n        // this.scene.add(mesh);\r\n      } else if(gm.type == 'MultiPolygon') {\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          var path = [];\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            for(var c = 0; c < coordinates[a][b].length; c++) {\r\n              var v = this.createVector3('plane', coordinates[a][b][c][0], coordinates[a][b][c][1]);\r\n              path.push(v);\r\n              count++;\r\n            }\r\n          }\r\n          var shape = new THREE.Shape(path);\r\n          var geometry = new THREE.ShapeGeometry(shape);\r\n          //this.countries[i].geometry = geometry;\r\n          //base.merge(geometry);\r\n          //colors.push(new THREE.MeshBasicMaterial({color: 0xb3c400}));\r\n          //var mbt = i % 2 == 0 ? new THREE.MeshBasicMaterial({color: 0xb3c400}) : new THREE.MeshBasicMaterial({color: 0x6b7e00});\r\n          //var mesh = new THREE.Mesh(geometry, mbt);\r\n          //this.scene.add(mesh);\r\n          this.countries.push({\r\n            properties: this.Geo.features[i].properties,\r\n            geometry: geometry,\r\n            geometry2D: geometry.clone(),\r\n            geometry3D: geometry.clone(),\r\n            color: 0x237DB9\r\n          });\r\n          // var mesh = new THREE.Line(geometry, new THREE.MeshBasicMaterial({color: 0xb3c400}));\r\n          // this.scene.add(mesh);\r\n        }\r\n      }\r\n    }\r\n    //var mesh = new THREE.Mesh(base, new THREE.MeshBasicMaterial({color: 0xb3c400}));\r\n    //this.scene.add(mesh);\r\n    //return false;\r\n\r\n    for(var i = 0; i < this.countries.length; i++) {\r\n      for(var k = 0; k < this.countries[i].geometry.vertices.length; k++) {\r\n        var lon = this.countries[i].geometry.vertices[k].x * 90 / this.radius;\r\n        var lat = this.countries[i].geometry.vertices[k].y * 90 / this.radius;\r\n        this.countries[i].geometry3D.vertices[k].x = -this.radius * Math.sin((90 - lat) * Math.PI / 180) * Math.cos((lon - 180) * Math.PI / 180);\r\n        this.countries[i].geometry3D.vertices[k].y = this.radius * Math.cos((90 - lat) * Math.PI / 180);\r\n        this.countries[i].geometry3D.vertices[k].z = this.radius * Math.sin((90 - lat) * Math.PI / 180) * Math.sin((lon - 180) * Math.PI / 180);\r\n      }\r\n    }\r\n    this.bufferGeometry = new THREE.BufferGeometry();\r\n    var positions = new Float32Array(count * 3 * 3);\r\n    var normals = new Float32Array(count * 3 * 3);\r\n    var colors = new Float32Array(count * 3 * 3);\r\n    var color = new THREE.Color(0x237DB9);\r\n    var index = 0;\r\n    for(var i = 0; i < this.countries.length; i++) {\r\n      var vertices = this.countries[i].geometry.vertices;\r\n      for(var f = 0; f < this.countries[i].geometry.faces.length; f++) {\r\n        var face = this.countries[i].geometry.faces[f];\r\n\r\n        positions[index ] = vertices[face.a].x;\r\n        positions[index + 1] = vertices[face.a].y;\r\n        positions[index + 2] = vertices[face.a].z;\r\n\r\n        positions[index + 3] = vertices[face.b].x;\r\n        positions[index + 4] = vertices[face.b].y;\r\n        positions[index + 5] = vertices[face.b].z;\r\n\r\n        positions[index + 6] = vertices[face.c].x;\r\n        positions[index + 7] = vertices[face.c].y;\r\n        positions[index + 8] = vertices[face.c].z;\r\n\r\n        normals[index] = face.normal.x;\r\n        normals[index + 1] = face.normal.y;\r\n        normals[index + 2] = face.normal.z;\r\n\r\n        normals[index + 3] = face.normal.x;\r\n        normals[index + 4] = face.normal.y;\r\n        normals[index + 5] = face.normal.z;\r\n\r\n        normals[index + 6] = face.normal.x;\r\n        normals[index + 7] = face.normal.y;\r\n        normals[index + 8] = face.normal.z;\r\n\r\n        colors[index] = color.r;\r\n        colors[index + 1] = color.g;\r\n        colors[index + 2] = color.b;\r\n\r\n        colors[index + 3] = color.r;\r\n        colors[index + 4] = color.g;\r\n        colors[index + 5] = color.b;\r\n\r\n        colors[index + 6] = color.r;\r\n        colors[index + 7] = color.g;\r\n        colors[index + 8] = color.b;\r\n\r\n        index += 9;\r\n      }\r\n    }\r\n    this.bufferGeometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n    this.bufferGeometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n    this.bufferGeometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n    this.bufferGeometry.verticesNeedUpdate = true;\r\n    //this.bufferGeometry.computeBoundingSphere();\r\n    //this.bufferGeometry.computeVertexNormals();\r\n\r\n    var mesh = new THREE.Mesh(\r\n      this.bufferGeometry,\r\n      new THREE.MeshPhongMaterial({\r\n        //color: 0xFFFFFF,\r\n        //specular: 0xFFFFFF,\r\n        shininess: 5,\r\n        //transparent: true,\r\n        //opacity: 0.9,\r\n        side: THREE.DoubleSide,\r\n        vertexColors: THREE.VertexColors\r\n      })\r\n    );\r\n    this.scene.add(mesh);\r\n  }\r\n  updateMap() {\r\n    // for(var i = 0; i < this.countries.length; i++) {\r\n    //   for(var k = 0; k < this.countries[i].geometry.vertices.length; k++) {\r\n    //     this.countries[i].geometry.vertices[k].copy(this.countries[i].geometry2D.vertices[k]);\r\n    //     this.mix(this.countries[i].geometry.vertices[k], this.countries[i].geometry3D.vertices[k], this.interpolatePos);\r\n    //   }\r\n    //   //this.countries[i].geometry.computeBoundingSphere();\r\n    //   //if(computeFaceNormals) this.countries[i].geometry.computeFaceNormals();\r\n    // }\r\n\r\n    var positions = this.bufferGeometry.getAttribute('position').array;\r\n    var normals = this.bufferGeometry.getAttribute('normal').array;\r\n    var colors = this.bufferGeometry.getAttribute('color').array;\r\n\r\n    // var m = new THREE.Matrix4();\r\n    // var m1 = new THREE.Matrix4();\r\n    // var m2 = new THREE.Matrix4();\r\n    // m1.makeRotationY(worldMap.countriesObject3D.rotation.y);\r\n    // m2.makeScale(worldMap.countriesObject3D.scale.x, worldMap.countriesObject3D.scale.y, worldMap.countriesObject3D.scale.z);\r\n    // m.multiplyMatrices(m1, m2);\r\n\r\n    var color = new THREE.Color();\r\n    var v = new THREE.Vector3();\r\n    var index = 0;\r\n    var i, f;\r\n    for(i = 0; i < this.countries.length; i++) {\r\n      var vertices = this.countries[i].geometry.vertices;\r\n      for(var k = 0; k < vertices.length; k++) {\r\n        vertices[k].copy(this.countries[i].geometry2D.vertices[k]);\r\n        this.mix(vertices[k], this.countries[i].geometry3D.vertices[k], this.interpolatePos);\r\n      }\r\n      color.set(this.countries[i].color);\r\n      for(f = 0; f < this.countries[i].geometry.faces.length; f++) {\r\n        var face = this.countries[i].geometry.faces[f];\r\n\r\n        v.copy(vertices[face.a]);\r\n\r\n        positions[index] = v.x;\r\n        positions[index + 1] = v.y;\r\n        positions[index + 2] = v.z;\r\n\r\n        v.copy(vertices[face.b]);\r\n\r\n        positions[index + 3] = v.x;\r\n        positions[index + 4] = v.y;\r\n        positions[index + 5] = v.z;\r\n\r\n        v.copy(vertices[face.c]);\r\n        //v.applyMatrix4(m);\r\n\r\n        positions[index + 6] = v.x;\r\n        positions[index + 7] = v.y;\r\n        positions[index + 8] = v.z;\r\n\r\n        // normals\r\n        normals[index] = face.normal.x;\r\n        normals[index + 1] = face.normal.y;\r\n        normals[index + 2] = face.normal.z;\r\n\r\n        normals[index + 3] = face.normal.x;\r\n        normals[index + 4] = face.normal.y;\r\n        normals[index + 5] = face.normal.z;\r\n\r\n        normals[index + 6] = face.normal.x;\r\n        normals[index + 7] = face.normal.y;\r\n        normals[index + 8] = face.normal.z;\r\n\r\n        // colors\r\n        colors[index] = color.r;\r\n        colors[index + 1] = color.g;\r\n        colors[index + 2] = color.b;\r\n\r\n        colors[index + 3] = color.r;\r\n        colors[index + 4] = color.g;\r\n        colors[index + 5] = color.b;\r\n\r\n        colors[index + 6] = color.r;\r\n        colors[index + 7] = color.g;\r\n        colors[index + 8] = color.b;\r\n        index += 9;\r\n      }\r\n    }\r\n    this.bufferGeometry.attributes.position.needsUpdate = true;\r\n    this.bufferGeometry.attributes.normal.needsUpdate = true;\r\n    this.bufferGeometry.attributes.color.needsUpdate = true;\r\n\r\n    // worldMap.bufferGeometry.colorsNeedUpdate = true;\r\n    this.bufferGeometry.computeBoundingSphere();\r\n    // worldMap.bufferGeometry.computeVertexNormals();\r\n\r\n    // var positions = this.bufferGeometry.getAttribute('position').array;\r\n    // for(var i = 0; i < this.countries.length; i++) {\r\n    //   var vertices = this.countries[i].geometry.vertices;\r\n    //   var index = 0;\r\n    //   for(var k = 0; k < this.countries[i].geometry.vertices.length; k++) {\r\n    //     this.countries[i].geometry.vertices[k].copy(this.countries[i].geometry2D.vertices[k]);\r\n    //     this.mix(this.countries[i].geometry.vertices[k], this.countries[i].geometry3D.vertices[k], this.interpolatePos);\r\n    //     positions[3 * index] = this.countries[i].geometry.vertices[k].x;\r\n    //     positions[3 * index + 1] = this.countries[i].geometry.vertices[k].y;\r\n    //     positions[3 * index + 2] = this.countries[i].geometry.vertices[k].z;\r\n    //     index++;\r\n    //   }\r\n    // }\r\n    // this.bufferGeometry.attributes.position.needsUpdate = true;\r\n  }\r\n  createBox() {\r\n    var base = new THREE.Geometry();\r\n    for(var i = 0; i < this.Geo.features.length; i++) {\r\n      var gm = this.Geo.features[i].geometry;\r\n      var coordinates = gm.coordinates;\r\n      if(gm.type == 'Polygon') {\r\n        var path = [];\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            var v = this.createVector3('plane', coordinates[a][b][0], coordinates[a][b][1]);\r\n            path.push(v);\r\n          }\r\n        }\r\n        var shape = new THREE.Shape(path);\r\n        var geometry = new THREE.ExtrudeGeometry(shape, {\r\n          bevelEnabled: false,\r\n          amount: 5\r\n        });\r\n        base.merge(geometry);\r\n      } else if(gm.type == 'MultiPolygon') {\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          var path = [];\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            for(var c = 0; c < coordinates[a][b].length; c++) {\r\n              var v = this.createVector3('plane', coordinates[a][b][c][0], coordinates[a][b][c][1]);\r\n              path.push(v);\r\n            }\r\n          }\r\n          var shape = new THREE.Shape(path);\r\n          var geometry = new THREE.ExtrudeGeometry(shape, {\r\n            bevelEnabled: false,\r\n            steps: 1,\r\n            amount: 5\r\n          });\r\n          base.merge(geometry);\r\n        }\r\n      }\r\n    }\r\n    var mesh = new THREE.Mesh(base, new THREE.MeshBasicMaterial({color: 0xff0000}));\r\n    this.scene.add(mesh);\r\n    console.log(this.scene);\r\n  }\r\n  createGlobal() {\r\n    this.countrys = {\r\n      geometry: new THREE.Geometry(),\r\n      geometry2D: new THREE.Geometry(),\r\n      geometry3D: new THREE.Geometry()\r\n    };\r\n    var count = 0;\r\n    for(var i = 0; i < this.Geo.features.length; i++) {\r\n      var gm = this.Geo.features[i].geometry;\r\n      var coordinates = gm.coordinates;\r\n      if(gm.type == 'Polygon') {\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            this.countrys.geometry.vertices.push(this.createVector3('plane', coordinates[a][b][0], coordinates[a][b][1]));\r\n            this.countrys.geometry2D.vertices.push(this.createVector3('plane', coordinates[a][b][0], coordinates[a][b][1]));\r\n            this.countrys.geometry3D.vertices.push(this.createVector3('sphere', coordinates[a][b][0], coordinates[a][b][1]));\r\n            count++;\r\n          }\r\n        }\r\n      } else if(gm.type == 'MultiPolygon') {\r\n        for(var a = 0; a < coordinates.length; a++) {\r\n          for(var b = 0; b < coordinates[a].length; b++) {\r\n            for(var c = 0; c < coordinates[a][b].length; c++) {\r\n              this.countrys.geometry.vertices.push(this.createVector3('plane', coordinates[a][b][c][0], coordinates[a][b][c][1]));\r\n              this.countrys.geometry2D.vertices.push(this.createVector3('plane', coordinates[a][b][c][0], coordinates[a][b][c][1]));\r\n              this.countrys.geometry3D.vertices.push(this.createVector3('sphere', coordinates[a][b][c][0], coordinates[a][b][c][1]));\r\n              count++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.bufferGeometry = new THREE.BufferGeometry();\r\n    var positions = new Float32Array(count * 3);\r\n    this.bufferGeometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n    var mesh = new THREE.Line(this.bufferGeometry, new THREE.MeshBasicMaterial({\r\n      color: 'blue',\r\n      side: THREE.DoubleSide\r\n    }));\r\n    this.scene.add(mesh);\r\n  }\r\n  updateGlobal() {\r\n    var positions = this.bufferGeometry.getAttribute('position').array;\r\n    var index = 0;\r\n    for(var k = 0; k < this.countrys.geometry.vertices.length; k++) {\r\n      this.countrys.geometry.vertices[k].copy(this.countrys.geometry2D.vertices[k]);\r\n      this.mix(this.countrys.geometry.vertices[k], this.countrys.geometry3D.vertices[k], this.interpolatePos);\r\n      positions[3 * index] = this.countrys.geometry.vertices[k].x;\r\n      positions[3 * index + 1] = this.countrys.geometry.vertices[k].y;\r\n      positions[3 * index + 2] = this.countrys.geometry.vertices[k].z;\r\n      index++;\r\n    }\r\n    this.bufferGeometry.attributes.position.needsUpdate = true;\r\n  }\r\n  createLight() {\r\n    this.scene.add(new THREE.AmbientLight(0xffffff));\r\n  }\r\n  mix(v1, v2, factor) {\r\n    v1.x = v1.x + (v2.x - v1.x) * factor;\r\n    v1.y = v1.y + (v2.y - v1.y) * factor;\r\n    v1.z = v1.z + (v2.z - v1.z) * factor;\r\n  }\r\n  createVector3(type, lon, lat) {\r\n    if(type == 'sphere') {\r\n      return new THREE.Vector3(\r\n        -this.radius * Math.sin((90 - lat) * Math.PI / 180) * Math.cos((lon - 180) * Math.PI / 180),\r\n        this.radius * Math.cos((90 - lat) * Math.PI / 180),\r\n        this.radius * Math.sin((90 - lat) * Math.PI / 180) * Math.sin((lon - 180) * Math.PI / 180)\r\n      );\r\n    } else if(type == 'plane') {\r\n      return new THREE.Vector3(\r\n        (lon / 180) * this.radius * 2,\r\n        (lat / 180) * this.radius * 2\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    requestAnimationFrame(this.animate);\r\n    this.controls.update();\r\n    this.renderer.clear();\r\n    this.renderer.render(this.scene, this.camera);\r\n    if(this.geometryNeedsUpdate) {\r\n      //this.updateGlobal();\r\n      this.updateMap();\r\n    }\r\n  }\r\n  load(data, type) {\r\n    if(!this.isAnimate) {\r\n      this.animate();\r\n      this.isAnimate = true;\r\n    }\r\n  }\r\n};","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js??ref--6-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js??ref--6-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js??ref--6-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}